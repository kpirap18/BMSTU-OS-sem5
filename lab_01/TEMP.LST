            temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 1

020A:0746  E8 0070		;*		call	sub_2			; (07B9)
020A:0746  E8 70 00				db	0E8h, 70h, 00h
020A:0749  06					push	es
020A:074A  1E					push	ds
020A:074B  50					push	ax
020A:074C  52					push	dx
020A:074D  B8 0040				mov	ax,40h
020A:0750  8E D8				mov	ds,ax
020A:0752  33 C0				xor	ax,ax			; Zero register
020A:0754  8E C0				mov	es,ax
020A:0756  FF 06 006C				inc	word ptr ds:[6Ch]	; (0040:006C=88B4h)
020A:075A  75 04				jnz	loc_1			; Jump if not zero
020A:075C  FF 06 006E				inc	word ptr ds:[6Eh]	; (0040:006E=0Bh)
020A:0760			loc_1::
020A:0760  83 3E 006E 18			cmp	word ptr ds:[6Eh],18h	; (0040:006E=0Bh)
020A:0765  75 15				jne	loc_2			; Jump if not equal
020A:0767  81 3E 006C 00B0			cmp	word ptr ds:[6Ch],0B0h	; (0040:006C=88B4h)
020A:076D  75 0D				jne	loc_2			; Jump if not equal
020A:076F  A3 006E				mov	word ptr ds:[6Eh],ax	; (0040:006E=0Bh)
020A:0772  A3 006C				mov	word ptr ds:[6Ch],ax	; (0040:006C=88B4h)
020A:0775  C6 06 0070 01			mov	byte ptr ds:[70h],1	; (0040:0070=0)
020A:077A  0C 08				or	al,8
020A:077C			loc_2::
020A:077C  50					push	ax
020A:077D  FE 0E 0040				dec	byte ptr ds:[40h]	; (0040:0040=0D4h)
020A:0781  75 0B				jnz	loc_3			; Jump if not zero
020A:0783  80 26 003F F0			and	byte ptr ds:[3Fh],0F0h	; (0040:003F=0)
020A:0788  B0 0C				mov	al,0Ch
020A:078A  BA 03F2				mov	dx,3F2h
020A:078D  EE					out	dx,al			; port 3F2h, dsk0 contrl output
020A:078E			loc_3::
020A:078E  58					pop	ax
020A:078F  F7 06 0314 0004			test	word ptr ds:[314h],4	; (0040:0314=3200h)
020A:0795  75 0C				jnz	loc_4			; Jump if not zero
020A:0797  9F					lahf				; Load ah from flags
020A:0798  86 E0				xchg	ah,al
020A:079A  50					push	ax
020A:079B  26: FF 1E 0070			call	dword ptr es:[70h]	; (0000:0070=6ADh)
020A:07A0  EB 03				jmp	short loc_5		; (07A5)
020A:07A2  90					nop
020A:07A3			loc_4::
020A:07A3  CD 1C				int	1Ch			; Timer break (call each 18.2ms)
020A:07A5			loc_5::
020A:07A5  E8 0011				call	sub_2			; (07B9)
020A:07A8  B0 20				mov	al,20h			; ' '
020A:07AA  E6 20				out	20h,al			; port 20h, 8259-1 int command
										;  al = 20h, end of interrupt
020A:07AC  5A					pop	dx
020A:07AD  58					pop	ax
020A:07AE  1F					pop	ds
020A:07AF  07					pop	es
020A:07B0  E9 FE99				jmp	$-164h
020A:07B3  C4					db	0C4h
							                        ;* No entry point to code
020A:07B4  C4 0E 93E9				les	cx,dword ptr ds:[93E9h]	; (0000:93E9=3302h) Load 32 bit ptr
020A:07B8  FE					db	0FEh

           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 2

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_2		proc	near
020A:07B9  1E					push	ds
020A:07BA  50					push	ax
020A:07BB  B8 0040				mov	ax,40h
020A:07BE  8E D8				mov	ds,ax
020A:07C0  9F					lahf				; Load ah from flags
020A:07C1  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:07C7  75 0C				jnz	loc_7			; Jump if not zero
020A:07C9  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020A:07D0			loc_6::
020A:07D0  9E					sahf				; Store ah into flags
020A:07D1  58					pop	ax
020A:07D2  1F					pop	ds
020A:07D3  EB 03				jmp	short loc_8		; (07D8)
020A:07D5			loc_7::
020A:07D5  FA					cli				; Disable interrupts
020A:07D6  EB F8				jmp	short loc_6		; (07D0)
020A:07D8			loc_8::
020A:07D8  C3					retn
				sub_2		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_3		proc	near
020A:07D9  1E					push	ds
020A:07DA  50					push	ax
020A:07DB  B8 0040				mov	ax,40h
020A:07DE  8E D8				mov	ds,ax
020A:07E0  9F					lahf				; Load ah from flags
020A:07E1  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:07E7  75 14				jnz	loc_10			; Jump if not zero
020A:07E9  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:07EF  0C75			data_135	dw	0C75h
020A:07F1  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:07F8			loc_9::
020A:07F8  9E					sahf				; Store ah into flags
020A:07F9  58					pop	ax
020A:07FA  1F					pop	ds
020A:07FB  EB 03				jmp	short loc_11		; (0800)
020A:07FD			loc_10::
020A:07FD  FB					sti				; Enable interrupts
020A:07FE  EB F8				jmp	short loc_9		; (07F8)
020A:0800			loc_11::
020A:0800  C3					retn
				sub_3		endp

020A:0801  00					db	0
020A:0802  0000			data_136	dw	0
020A:0804  0000			data_137	dw	0

           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 3

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_4		proc	near
020A:0806  2E: FF 06 0804			inc	cs:data_137		; (020A:0804=0)
020A:080B  3D 13FF				cmp	ax,13FFh
020A:080E  75 5B				jne	loc_14			; Jump if not equal
020A:0810  83 F9 01				cmp	cx,1
020A:0813  74 40				je	loc_12			; Jump if equal
020A:0815  56					push	si
020A:0816  BE 00A4				mov	si,0A4h
020A:0819  2E: 2B 36 0802			sub	si,cs:data_136		; (020A:0802=0)
020A:081E  3B CE				cmp	cx,si
020A:0820  73 3E				jae	loc_13			; Jump if above or =
020A:0822  57					push	di
020A:0823  51					push	cx
020A:0824  52					push	dx
020A:0825  1E					push	ds
020A:0826  06					push	es
020A:0827  8C C2				mov	dx,es
020A:0829  8E DA				mov	ds,dx
020A:082B  BA B000				mov	dx,0B000h
020A:082E  8E C2				mov	es,dx
020A:0830  8B D1				mov	dx,cx
020A:0832  8B F7				mov	si,di
020A:0834  2E: 8B 3E 0802			mov	di,cs:data_136		; (020A:0802=0)
020A:0839  FC					cld				; Clear direction
020A:083A  D1 E9				shr	cx,1			; Shift w/zeros fill
020A:083C  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
020A:083E  80 D1 00				adc	cl,0
020A:0841  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:0843  2E: 01 16 0802			add	cs:data_136,dx		; (020A:0802=0)
020A:0848  07					pop	es
020A:0849  1F					pop	ds
020A:084A  5A					pop	dx
020A:084B  59					pop	cx
020A:084C  5F					pop	di
020A:084D  5E					pop	si
020A:084E  F9					stc				; Set carry flag
020A:084F  2E: FF 0E 0804			dec	cs:data_137		; (020A:0804=0)
020A:0854  C3					retn
020A:0855			loc_12::
020A:0855  50					push	ax
020A:0856  B4 0E				mov	ah,0Eh
020A:0858  26: 8A 05				mov	al,es:[di]
020A:085B  E8 0012				call	sub_5			; (0870)
020A:085E  58					pop	ax
020A:085F  C3					retn
020A:0860			loc_13::
020A:0860  5E					pop	si
020A:0861  2E: FF 0E 0804			dec	cs:data_137		; (020A:0804=0)
020A:0866  C4					db	0C4h
020A:0867  C4 42 F9				les	ax,dword ptr [bp+si-7]	; Load 32 bit ptr
020A:086A  C3					retn
020A:086B			loc_14::
020A:086B  80 FC 0E				cmp	ah,0Eh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 4

020A:086E  75 28				jne	loc_15			; Jump if not equal

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_5::
020A:0870  56					push	si
020A:0871  2E: 8B 36 0802			mov	si,cs:data_136		; (020A:0802=0)
020A:0876  81 FE 00A4				cmp	si,0A4h
020A:087A  73 E4				jae	loc_13			; Jump if above or =
020A:087C  1E					push	ds
020A:087D  BE B000				mov	si,0B000h
020A:0880  8E DE				mov	ds,si
020A:0882  2E: 8B 36 0802			mov	si,cs:data_136		; (020A:0802=0)
020A:0887  88 04				mov	[si],al
020A:0889  46					inc	si
020A:088A  2E: 89 36 0802			mov	cs:data_136,si		; (020A:0802=0)
020A:088F  1F					pop	ds
020A:0890  5E					pop	si
020A:0891  F9					stc				; Set carry flag
020A:0892  2E: FF 0E 0804			dec	cs:data_137		; (020A:0804=0)
020A:0897  C3					retn
020A:0898			loc_15::
020A:0898  50					push	ax
020A:0899  B8 13FE				mov	ax,13FEh
020A:089C  C4					db	0C4h
020A:089D  C4 42 58				les	ax,dword ptr [bp+si+58h]	; Load 32 bit ptr
020A:08A0  F8					clc				; Clear carry flag
020A:08A1  2E: FF 0E 0804			dec	cs:data_137		; (020A:0804=0)
020A:08A6  C3					retn
				sub_4		endp

020A:08A7  00			data_138	db	0
020A:08A8  00			data_139	db	0
020A:08A9  2E: 80 3E 08A7 02			cmp	cs:data_138,2		; (020A:08A7=0)
020A:08AF  75 05				jne	loc_16			; Jump if not equal
020A:08B1  E8 FF52				call	sub_4			; (0806)
020A:08B4  72 5F				jc	loc_22			; Jump if carry Set
020A:08B6			loc_16::
020A:08B6  2E: 80 3E 08A7 01			cmp	cs:data_138,1		; (020A:08A7=0)
020A:08BC  74 5D				je	loc_24			; Jump if equal
020A:08BE  80 FC 00				cmp	ah,0
020A:08C1  74 30				je	loc_20			; Jump if equal
020A:08C3  80 FC 1C				cmp	ah,1Ch
020A:08C6  77 0B				ja	loc_17			; Jump if above
020A:08C8  80 FC 04				cmp	ah,4
020A:08CB  74 20				je	loc_19			; Jump if equal
020A:08CD  C4					db	0C4h
020A:08CE  C4 42 EB				les	ax,dword ptr [bp+si-15h]	; Load 32 bit ptr
020A:08D1  43					inc	bx
020A:08D2  90					nop
020A:08D3			loc_17::
020A:08D3  80 FC 4F				cmp	ah,4Fh			; 'O'
020A:08D6  75 06				jne	loc_18			; Jump if not equal
020A:08D8  C4					db	0C4h
020A:08D9  C4 BE 73EB				les	di,dword ptr [bp+73EBh]	; Load 32 bit ptr
020A:08DD  90					nop
020A:08DE			loc_18::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 5

020A:08DE  80 FC F0				cmp	ah,0F0h
020A:08E1  72 35				jb	loc_23			; Jump if below
020A:08E3  80 FC F7				cmp	ah,0F7h
020A:08E6  76 05				jbe	loc_19			; Jump if below or =
020A:08E8  80 FC FA				cmp	ah,0FAh
020A:08EB  75 2B				jne	loc_23			; Jump if not equal
020A:08ED			loc_19::
020A:08ED  C4					db	0C4h
020A:08EE  C4 BE 23EB				les	di,dword ptr [bp+23EBh]	; Load 32 bit ptr
020A:08F2  90					nop
020A:08F3			loc_20::
020A:08F3  2E: C6 06 08A8 01			mov	cs:data_139,1		; (020A:08A8=0)
020A:08F9  C4					db	0C4h
020A:08FA  C4 BE 9090				les	di,dword ptr [bp-6F70h]	; Load 32 bit ptr
020A:08FE  50					push	ax
020A:08FF  25 007F				and	ax,7Fh
020A:0902  3C 03				cmp	al,3
020A:0904  76 08				jbe	loc_21			; Jump if below or =
020A:0906  3C			data_141	db	3Ch
020A:0907  07					pop	es
020A:0908  74 04				jz	loc_21			; Jump if zero
020A:090A  58					pop	ax
020A:090B  EB 0E				jmp	short loc_24		; (091B)
							                        ;* No entry point to code
020A:090D  90					nop
020A:090E			loc_21::
020A:090E  58					pop	ax
020A:090F  2E: C6 06 08A8 00			mov	cs:data_139,0		; (020A:08A8=0)
020A:0915			loc_22::
020A:0915  E9 FD34				jmp	$-2C9h
020A:0918			loc_23::
020A:0918  F9					stc				; Set carry flag
020A:0919  EB FA				jmp	short loc_22		; (0915)
020A:091B			loc_24::
020A:091B  2E: C6 06 08A8 00			mov	cs:data_139,0		; (020A:08A8=0)
020A:0921  3D 13FF				cmp	ax,13FFh
020A:0924  74 2F				je	loc_28			; Jump if equal
020A:0926  80 FC F0				cmp	ah,0F0h
020A:0929  72 0D				jb	loc_25			; Jump if below
020A:092B  80 FC F7				cmp	ah,0F7h
020A:092E  76 BD				jbe	loc_19			; Jump if below or =
020A:0930  80 FC FA				cmp	ah,0FAh
020A:0933  74 B8				je	loc_19			; Jump if equal
020A:0935  EB 19				jmp	short loc_27		; (0950)
020A:0937  90					nop
020A:0938			loc_25::
020A:0938  80 FC 04				cmp	ah,4
020A:093B  74 B0				je	loc_19			; Jump if equal
020A:093D  80 FC 00				cmp	ah,0
020A:0940  75 06				jne	loc_26			; Jump if not equal
020A:0942  C4					db	0C4h
020A:0943  C4 BE 09EB				les	di,dword ptr [bp+9EBh]	; Load 32 bit ptr
020A:0947  90					nop
020A:0948			loc_26::
020A:0948  80 FC 11				cmp	ah,11h
020A:094B  75 03				jne	loc_27			; Jump if not equal
020A:094D  C4					db	0C4h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 6

020A:094E  C4 BE 22EA				les	di,dword ptr [bp+22EAh]	; Load 32 bit ptr
020A:0952  00 00				add	[bx+si],al
020A:0954  C0					db	0C0h
020A:0955			loc_28::
020A:0955  56					push	si
020A:0956  57					push	di
020A:0957  55					push	bp

020A:0958			locloop_29::
020A:0958  BA 0046				mov	dx,46h
020A:095B  52					push	dx
020A:095C  0E					push	cs
020A:095D  BB 096C				mov	bx,96Ch
020A:0960  53					push	bx
020A:0961  BB 0007				mov	bx,7
020A:0964  B4 0E				mov	ah,0Eh
020A:0966  26: 8A 05				mov	al,es:[di]
020A:0969  47					inc	di
020A:096A  EB E4		;*		jmp	short loc_27		;*(0950)
020A:096A  EB E4				db	0EBh,0E4h
							                        ;* No entry point to code
020A:096C  E2 EA				loop	locloop_29		; Loop if cx > 0

020A:096E  5D					pop	bp
020A:096F  5F					pop	di
020A:0970  5E					pop	si
020A:0971  B8 0001				mov	ax,1
020A:0974			loc_30::
020A:0974  EB 9F				jmp	short loc_22		; (0915)
							                        ;* No entry point to code
020A:0976  2E: 80 3E 08A7 02			cmp	cs:data_138,2		; (020A:08A7=0)
020A:097C  75 05				jne	loc_31			; Jump if not equal
020A:097E  E8 FE85				call	sub_4			; (0806)
020A:0981  72 F1				jc	loc_30			; Jump if carry Set
020A:0983			loc_31::
020A:0983  2E: 80 3E 08A7 01			cmp	cs:data_138,1		; (020A:08A7=0)
020A:0989  74 06				je	loc_32			; Jump if equal
020A:098B  C4					db	0C4h
020A:098C  C4 10				les	dx,dword ptr [bx+si]	; Load 32 bit ptr
020A:098E  E9 FCBB				jmp	$-342h
020A:0991			loc_32::
020A:0991  80 FC 13				cmp	ah,13h
020A:0994  75 04				jne	loc_33			; Jump if not equal
020A:0996  3C FF				cmp	al,0FFh
020A:0998  74 BB				je	loc_28			; Jump if equal
020A:099A			loc_33::
020A:099A  EA F000:FF53		;*		jmp	far ptr loc_1999	;*(F000:FF53)
020A:099A  EA					db	0EAh
020A:099B  FF53 F000				dw	0FF53h, 0F000h
020A:099F  CD 10				int	10h			; Video display   ah=functn 00h
										;  set display mode in al
020A:09A1  C4					db	0C4h
020A:09A2  C4					db	0C4h
020A:09A3  FE C4				inc	ah
020A:09A5  C4 11				les	dx,dword ptr [bx+di]	; Load 32 bit ptr
020A:09A7  E9 FCA2				jmp	$-35Bh
020A:09AA  C4					db	0C4h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 7

							                        ;* No entry point to code
020A:09AB  C4 12				les	dx,dword ptr [bp+si]	; Load 32 bit ptr
020A:09AD  E9 FC9C				jmp	$-361h
020A:09B0  C4					db	0C4h
							                        ;* No entry point to code
020A:09B1  C4 14				les	dx,dword ptr [si]	; Load 32 bit ptr
020A:09B3  E9 FC96				jmp	$-367h
020A:09B6  87 DB				xchg	bx,bx
020A:09B8  0000			data_143	dw	0
020A:09BA  00 00				add	[bx+si],al
020A:09BC  195A			data_144	dw	195Ah
020A:09BE  00 00				add	[bx+si],al
020A:09C0  0032			data_145	dw	32h
020A:09C2  00 00				add	[bx+si],al
020A:09C4  1E					push	ds
020A:09C5  53					push	bx
020A:09C6  BB 0040				mov	bx,40h
020A:09C9  8E DB				mov	ds,bx
020A:09CB  80 FC 10				cmp	ah,10h
020A:09CE  E8 FDE8				call	sub_2			; (07B9)
020A:09D1  72 03				jc	loc_34			; Jump if carry Set
020A:09D3  E9 00E0				jmp	loc_48			; (0AB6)
020A:09D6			loc_34::
020A:09D6  0A E4				or	ah,ah			; Zero ?
020A:09D8  74 3E				jz	loc_39			; Jump if zero
020A:09DA  FE CC				dec	ah
020A:09DC  74 74				jz	loc_43			; Jump if zero
020A:09DE  FE CC				dec	ah
020A:09E0  74 11				jz	loc_36			; Jump if zero
020A:09E2  FE CC				dec	ah
020A:09E4  74 08				jz	loc_35			; Jump if zero
020A:09E6  FE CC				dec	ah
020A:09E8  74 04				jz	loc_35			; Jump if zero
020A:09EA  FE CC				dec	ah
020A:09EC  74 0A				jz	loc_37			; Jump if zero
020A:09EE			loc_35::
020A:09EE  5B					pop	bx
020A:09EF  1F					pop	ds
020A:09F0  E9 FC59				jmp	$-3A4h
020A:09F3			loc_36::
020A:09F3  A0 0017				mov	al,byte ptr data_14+1	; (020A:0017=0)
020A:09F6  EB F6				jmp	short loc_35		; (09EE)
020A:09F8			loc_37::
020A:09F8  56					push	si
020A:09F9  8B 1E 001C				mov	bx,word ptr data_18+2	; (020A:001C=148Fh)
020A:09FD  8B F3				mov	si,bx
020A:09FF  E8 01B9				call	sub_10			; (0BBB)
020A:0A02  3B 1E 001A				cmp	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A06  74			data_146	db	74h			; Data table (indexed access)
020A:0A07  0B 89 890C				or	cx,word ptr ds:[890Ch][bx+di]	; (020A:890C=5F1Fh)
020A:0A0B  1E					push	ds
020A:0A0C  1C			data_147	db	1Ch			; Data table (indexed access)
020A:0A0D  00			data_148	db	0
020A:0A0E  B0 00				mov	al,0
020A:0A10  5E					pop	si
020A:0A11  EB DB				jmp	short loc_35		; (09EE)
020A:0A13			loc_38::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 8

020A:0A13  B0 01				mov	al,1
020A:0A15  5E					pop	si
020A:0A16  EB D6				jmp	short loc_35		; (09EE)
020A:0A18			loc_39::
020A:0A18  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A1C  3B 1E 001C				cmp	bx,word ptr data_18+2	; (020A:001C=148Fh)
020A:0A20  75 13				jne	loc_41			; Jump if not equal
020A:0A22  E8 FDB4				call	sub_3			; (07D9)
020A:0A25  B8 9002				mov	ax,9002h
020A:0A28  CD 15				int	15h			; General services, ah=func 90h
										;  device busy, al=type,
										;   es:bx=ptr of request block
020A:0A2A			loc_40::
020A:0A2A  E8 FD8C				call	sub_2			; (07B9)
020A:0A2D  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A31  3B 1E 001C				cmp	bx,word ptr data_18+2	; (020A:001C=148Fh)
020A:0A35			loc_41::
020A:0A35  E8 0190				call	sub_11			; (0BC8)
020A:0A38  75 05				jnz	loc_42			; Jump if not zero
020A:0A3A  E8 00E3				call	sub_6			; (0B20)
020A:0A3D  EB EB				jmp	short loc_40		; (0A2A)
020A:0A3F			loc_42::
020A:0A3F  8B 07				mov	ax,[bx]
020A:0A41  E8 0177				call	sub_10			; (0BBB)
020A:0A44  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (020A:001A=0AE9Ch)
020A:0A48  E8 0129				call	sub_9			; (0B74)
020A:0A4B  72 DD				jc	loc_40			; Jump if carry Set
020A:0A4D  E8 00FC				call	sub_7			; (0B4C)
020A:0A50  EB 9C				jmp	short loc_35		; (09EE)
020A:0A52			loc_43::
020A:0A52  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A56  3B 1E 001C				cmp	bx,word ptr data_18+2	; (020A:001C=148Fh)
020A:0A5A  8B 07				mov	ax,[bx]
020A:0A5C  E8 0169				call	sub_11			; (0BC8)
020A:0A5F  74 2F				jz	loc_45			; Jump if zero
020A:0A61  E8 00E8				call	sub_7			; (0B4C)
020A:0A64  E8 010D				call	sub_9			; (0B74)
020A:0A67  E8 FD6F				call	sub_3			; (07D9)
020A:0A6A  73 45				jnc	loc_47			; Jump if carry=0
020A:0A6C  E8 014C				call	sub_10			; (0BBB)
020A:0A6F  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (020A:001A=0AE9Ch)
020A:0A73  EB DD				jmp	short loc_43		; (0A52)
020A:0A75			loc_44::
020A:0A75  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A79  3B 1E 001C				cmp	bx,word ptr data_18+2	; (020A:001C=148Fh)
020A:0A7D  8B 07				mov	ax,[bx]
020A:0A7F  E8 0146				call	sub_11			; (0BC8)
020A:0A82  74 0C				jz	loc_45			; Jump if zero
020A:0A84  E8 00C5				call	sub_7			; (0B4C)
020A:0A87  E8 00D1				call	sub_8			; (0B5B)
020A:0A8A  E8 FD4C				call	sub_3			; (07D9)
020A:0A8D  EB 22				jmp	short loc_47		; (0AB1)
020A:0A8F  90					nop
020A:0A90			loc_45::
020A:0A90  E8 FD46				call	sub_3			; (07D9)
020A:0A93  50					push	ax
020A:0A94  9F					lahf				; Load ah from flags
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 9

020A:0A95  50					push	ax
020A:0A96  2E: A1 09B8				mov	ax,cs:data_143		; (020A:09B8=0)
020A:0A9A  2E: 3B 06 09C0			cmp	ax,cs:data_145		; (020A:09C0=32h)
020A:0A9F  72 08				jb	loc_46			; Jump if below
020A:0AA1  B4 01				mov	ah,1
020A:0AA3  C4					db	0C4h
020A:0AA4  C4 16 06EB				les	dx,dword ptr ds:[6EBh]	; (020A:06EB=52D2h) Load 32 bit ptr
020A:0AA8  90					nop
020A:0AA9			loc_46::
020A:0AA9  2E: FF 06 09BC			inc	cs:data_144		; (020A:09BC=0AAh)
020A:0AAE  58					pop	ax
020A:0AAF  9E					sahf				; Store ah into flags
020A:0AB0  58					pop	ax
020A:0AB1			loc_47::
020A:0AB1  5B					pop	bx
020A:0AB2  1F					pop	ds
020A:0AB3  CA 0002				retf	2			; Return far
020A:0AB6			loc_48::
020A:0AB6  80 EC 10				sub	ah,10h
020A:0AB9  74 2C				jz	loc_50			; Jump if zero
020A:0ABB  FE CC				dec	ah
020A:0ABD  74 B6				jz	loc_44			; Jump if zero
020A:0ABF  FE CC				dec	ah
020A:0AC1  74 03				jz	loc_49			; Jump if zero
020A:0AC3  E9 FF28				jmp	loc_35			; (09EE)
020A:0AC6			loc_49::
020A:0AC6  A0 0018				mov	al,byte ptr data_14+2	; (020A:0018=0)
020A:0AC9  8A E0				mov	ah,al
020A:0ACB  24 04				and	al,4
020A:0ACD  51					push	cx
020A:0ACE  B1 05				mov	cl,5
020A:0AD0  D2 E0				shl	al,cl			; Shift w/zeros fill
020A:0AD2  59					pop	cx
020A:0AD3  80 E4 73				and	ah,73h			; 's'
020A:0AD6  0A C4				or	al,ah
020A:0AD8  8A 26 0096				mov	ah,byte ptr ds:[96h]	; (020A:0096=0)
020A:0ADC  80 E4 0C				and	ah,0Ch
020A:0ADF  0A E0				or	ah,al
020A:0AE1  A0 0017				mov	al,byte ptr data_14+1	; (020A:0017=0)
020A:0AE4  E9 FF07				jmp	loc_35			; (09EE)
020A:0AE7			loc_50::
020A:0AE7  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0AEB  3B 1E 001C				cmp	bx,word ptr data_18+2	; (020A:001C=148Fh)
020A:0AEF  75 13				jne	loc_52			; Jump if not equal
020A:0AF1  E8 FCE5				call	sub_3			; (07D9)
020A:0AF4  B8 9002				mov	ax,9002h
020A:0AF7  CD 15				int	15h			; General services, ah=func 90h
										;  device busy, al=type,
										;   es:bx=ptr of request block
020A:0AF9			loc_51::
020A:0AF9  E8 FCBD				call	sub_2			; (07B9)
020A:0AFC  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0B00  3B 1E 001C				cmp	bx,word ptr data_18+2	; (020A:001C=148Fh)
020A:0B04			loc_52::
020A:0B04  E8 00C1				call	sub_11			; (0BC8)
020A:0B07  75 05				jnz	loc_53			; Jump if not zero
020A:0B09  E8 0014				call	sub_6			; (0B20)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 10

020A:0B0C  EB EB				jmp	short loc_51		; (0AF9)
020A:0B0E			loc_53::
020A:0B0E  8B 07				mov	ax,[bx]
020A:0B10  E8 00A8				call	sub_10			; (0BBB)
020A:0B13  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (020A:001A=0AE9Ch)
020A:0B17  E8 0041				call	sub_8			; (0B5B)
020A:0B1A  E8 002F				call	sub_7			; (0B4C)
020A:0B1D  E9 FECE				jmp	loc_35			; (09EE)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_6		proc	near
020A:0B20  50					push	ax
020A:0B21  E8 FCB5				call	sub_3			; (07D9)
020A:0B24  B4 02				mov	ah,2
020A:0B26  C4					db	0C4h
020A:0B27  C4 16 1E8B				les	dx,data_244		; (020A:1E8B=0) Load 32 bit ptr
020A:0B2B  1A 00				sbb	al,[bx+si]
020A:0B2D  3B 1E 001C				cmp	bx,word ptr data_18+2	; (020A:001C=148Fh)
020A:0B31  75 17				jne	loc_56			; Jump if not equal
020A:0B33  2E: A1 09B8				mov	ax,cs:data_143		; (020A:09B8=0)
020A:0B37  2E: 3B 06 09C0			cmp	ax,cs:data_145		; (020A:09C0=32h)
020A:0B3C  73 07				jae	loc_55			; Jump if above or =
020A:0B3E  2E: FF 06 09BC			inc	cs:data_144		; (020A:09BC=124h)
020A:0B43  EB E4		;*		jmp	short loc_54		;*(0B29)
020A:0B43  EB E4				db	0EBh,0E4h
020A:0B45			loc_55::
020A:0B45  B4 01				mov	ah,1
020A:0B47  C4					db	0C4h
020A:0B48  C4 16 C358				les	dx,dword ptr ds:[0C358h]	; (020A:C358=21CDh) Load 32 bit ptr

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_7::
020A:0B4C  2E: C7 06 09B8 0000			mov	cs:data_143,0		; (020A:09B8=0)
020A:0B53  2E: C7 06 09BC 0000			mov	cs:data_144,0		; (020A:09BC=134h)
020A:0B5A  C3					retn
				sub_6		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_8		proc	near
020A:0B5B  53					push	bx
020A:0B5C  50					push	ax
020A:0B5D  9F					lahf				; Load ah from flags
020A:0B5E  8B D8				mov	bx,ax
020A:0B60  58					pop	ax
020A:0B61  53					push	bx
020A:0B62  3C F0				cmp	al,0F0h
020A:0B64  75 06				jne	loc_57			; Jump if not equal
020A:0B66  0A E4				or	ah,ah			; Zero ?
020A:0B68  74 02				jz	loc_57			; Jump if zero
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 11

020A:0B6A  32 C0				xor	al,al			; Zero register
020A:0B6C			loc_57::
020A:0B6C  8B D8				mov	bx,ax
020A:0B6E  58					pop	ax
020A:0B6F  9E					sahf				; Store ah into flags
020A:0B70  8B C3				mov	ax,bx
020A:0B72  5B					pop	bx
020A:0B73  C3					retn
				sub_8		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_9		proc	near
020A:0B74  53					push	bx
020A:0B75  50					push	ax
020A:0B76  9F					lahf				; Load ah from flags
020A:0B77  8B D8				mov	bx,ax
020A:0B79  58					pop	ax
020A:0B7A  53					push	bx
020A:0B7B  80 FC E0				cmp	ah,0E0h
020A:0B7E  75 0F				jne	loc_58			; Jump if not equal
020A:0B80  B4 1C				mov	ah,1Ch
020A:0B82  3C 0D				cmp	al,0Dh
020A:0B84  74 23				je	loc_60			; Jump if equal
020A:0B86  3C 0A				cmp	al,0Ah
020A:0B88  74 1F				je	loc_60			; Jump if equal
020A:0B8A  B4 35				mov	ah,35h			; '5'
020A:0B8C  EB 1B				jmp	short loc_60		; (0BA9)
020A:0B8E  90					nop
020A:0B8F			loc_58::
020A:0B8F  80 FC 84				cmp	ah,84h
020A:0B92  77 1E				ja	loc_61			; Jump if above
020A:0B94  3C F0				cmp	al,0F0h
020A:0B96  75 07				jne	loc_59			; Jump if not equal
020A:0B98  0A E4				or	ah,ah			; Zero ?
020A:0B9A  74 0D				jz	loc_60			; Jump if zero
020A:0B9C  EB 14				jmp	short loc_61		; (0BB2)
020A:0B9E  90					nop
020A:0B9F			loc_59::
020A:0B9F  3C E0				cmp	al,0E0h
020A:0BA1  75 06				jne	loc_60			; Jump if not equal
020A:0BA3  0A E4				or	ah,ah			; Zero ?
020A:0BA5  74 02				jz	loc_60			; Jump if zero
020A:0BA7  32 C0				xor	al,al			; Zero register
020A:0BA9			loc_60::
020A:0BA9  8B D8				mov	bx,ax
020A:0BAB  58					pop	ax
020A:0BAC  9E					sahf				; Store ah into flags
020A:0BAD  8B C3				mov	ax,bx
020A:0BAF  5B					pop	bx
020A:0BB0  F8					clc				; Clear carry flag
020A:0BB1  C3					retn
020A:0BB2			loc_61::
020A:0BB2  8B D8				mov	bx,ax
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 12

020A:0BB4  58					pop	ax
020A:0BB5  9E					sahf				; Store ah into flags
020A:0BB6  8B C3				mov	ax,bx
020A:0BB8  5B					pop	bx
020A:0BB9  F9					stc				; Set carry flag
020A:0BBA  C3					retn
				sub_9		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_10		proc	near
020A:0BBB  43					inc	bx
020A:0BBC  43					inc	bx
020A:0BBD  3B 1E 0082				cmp	bx,word ptr ds:[82h]	; (020A:0082=10h)
020A:0BC1  75 04				jne	loc_62			; Jump if not equal
020A:0BC3  1E8B			data_149	dw	1E8Bh
020A:0BC5  0080			data_150	dw	80h
020A:0BC7			loc_62::
020A:0BC7  53C3			data_151	dw	53C3h
020A:0BC9  5051			data_152	dw	5051h
020A:0BCB  509F			data_153	dw	509Fh
020A:0BCD  17A0			data_154	dw	17A0h
020A:0BCF  00 24				add	[si],ah
020A:0BD1  B170			data_155	dw	0B170h
020A:0BD3  D204			data_156	dw	0D204h
020A:0BD5  E8 0724				call	$+727h
020A:0BD8  8A 1E 0097				mov	bl,byte ptr data_55+1	; (020A:0097=0)
020A:0BDC  32 D8				xor	bl,al
020A:0BDE  80 E3 07				and	bl,7
020A:0BE1  74 25				jz	loc_63			; Jump if zero
020A:0BE3  F6 06 0097 40			test	byte ptr data_55+1,40h	; (020A:0097=0) '@'
020A:0BE8  75 1E				jnz	loc_63			; Jump if not zero
020A:0BEA  80 0E 0097 40			or	byte ptr data_55+1,40h	; (020A:0097=0) '@'
020A:0BEF  D2 E3				shl	bl,cl			; Shift w/zeros fill
020A:0BF1  0A C3				or	al,bl
020A:0BF3  03B4			data_160	dw	3B4h
020A:0BF5  C4C4			data_161	dw	0C4C4h
020A:0BF7  8016			data_162	dw	8016h
020A:0BF9  26					db	26h
020A:0BFA  97					xchg	di,ax
020A:0BFB  00 F8				add	al,bh
020A:0BFD  24 0F				and	al,0Fh
020A:0BFF  08 06 0097				or	byte ptr data_55+1,al	; (020A:0097=0)
020A:0C03  80 26 0097 BF			and	byte ptr data_55+1,0BFh	; (020A:0097=0)
020A:0C08			loc_63::
020A:0C08  58					pop	ax
020A:0C09  9E					sahf				; Store ah into flags
020A:0C0A  58					pop	ax
020A:0C0B  59					pop	cx
020A:0C0C  5B					pop	bx
020A:0C0D  C3					retn
				sub_10		endp

020A:0C0E  C4					db	0C4h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 13

							                        ;* No entry point to code
020A:0C0F  C4 18				les	bx,dword ptr [bx+si]	; Load 32 bit ptr
020A:0C11  E9 FA38				jmp	$-5C5h
020A:0C14  C4					db	0C4h
							                        ;* No entry point to code
020A:0C15  C4 19				les	bx,dword ptr [bx+di]	; Load 32 bit ptr
020A:0C17  E9 FA32				jmp	$-5CBh
020A:0C1A  88B4			data_164	dw	88B4h
020A:0C1C  000B			data_165	dw	0Bh
020A:0C1E  00			data_166	db	0
020A:0C1F  E8 FBB7				call	sub_3			; (07D9)
020A:0C22  80 FC 02				cmp	ah,2
020A:0C25  72 06				jb	loc_64			; Jump if below
020A:0C27  C4					db	0C4h
020A:0C28  C4 1A				les	bx,dword ptr [bp+si]	; Load 32 bit ptr
020A:0C2A  E9 FA1F				jmp	$-5DEh
020A:0C2D			loc_64::
020A:0C2D  1E					push	ds
020A:0C2E  53					push	bx
020A:0C2F  50					push	ax
020A:0C30  B8 0040				mov	ax,40h
020A:0C33  8E D8				mov	ds,ax
020A:0C35  58					pop	ax
020A:0C36  E8 FB80				call	sub_2			; (07B9)
020A:0C39  0A E4				or	ah,ah			; Zero ?
020A:0C3B  75 3F				jnz	loc_67			; Jump if not zero
020A:0C3D			loc_65::
020A:0C3D  A0 0070				mov	al,byte ptr ds:[70h]	; (0040:0070=0)
020A:0C40  8B 0E 006E				mov	cx,word ptr ds:[6Eh]	; (0040:006E=0Bh)
020A:0C44  8B 16 006C				mov	dx,word ptr ds:[6Ch]	; (0040:006C=88B7h)
020A:0C48  2E: 39 0E 0C1C			cmp	cs:data_165,cx		; (020A:0C1C=0Bh)
020A:0C4D  75 35				jne	loc_68			; Jump if not equal
020A:0C4F  2E: 8B 1E 0C1A			mov	bx,cs:data_164		; (020A:0C1A=88B4h)
020A:0C54  3B DA				cmp	bx,dx
020A:0C56  74 05				je	loc_66			; Jump if equal
020A:0C58  43					inc	bx
020A:0C59  3B DA				cmp	bx,dx
020A:0C5B  75 27				jne	loc_68			; Jump if not equal
020A:0C5D			loc_66::
020A:0C5D  2E: FE 06 0C1E			inc	cs:data_166		; (020A:0C1E=0)
020A:0C62  2E: 80 3E 0C1E 10			cmp	cs:data_166,10h		; (020A:0C1E=0)
020A:0C68  72 20				jb	loc_69			; Jump if below
020A:0C6A  E8 FB6C				call	sub_3			; (07D9)
020A:0C6D  33 C0				xor	ax,ax			; Zero register
020A:0C6F  2E: FF 0E 0C1A			dec	cs:data_164		; (020A:0C1A=88B4h)
020A:0C74  C4					db	0C4h
020A:0C75  C4 5A E8				les	bx,dword ptr [bp+si-18h]	; Load 32 bit ptr
020A:0C78  3F					aas				; Ascii adjust
020A:0C79  FB					sti				; Enable interrupts
020A:0C7A  EB C1				jmp	short loc_65		; (0C3D)
020A:0C7C			loc_67::
020A:0C7C  89 16 006C				mov	word ptr ds:[6Ch],dx	; (0040:006C=88B7h)
020A:0C80  89 0E 006E				mov	word ptr ds:[6Eh],cx	; (0040:006E=0Bh)
020A:0C84			loc_68::
020A:0C84  2E: C6 06 0C1E 00			mov	cs:data_166,0		; (020A:0C1E=0)
020A:0C8A			loc_69::
020A:0C8A  2E: 89 16 0C1A			mov	cs:data_164,dx		; (020A:0C1A=88B4h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 14

020A:0C8F  2E: 89 0E 0C1C			mov	cs:data_165,cx		; (020A:0C1C=0Bh)
020A:0C94  C6 06 0070 00			mov	byte ptr ds:[70h],0	; (0040:0070=0)
020A:0C99  5B					pop	bx
020A:0C9A  1F					pop	ds
020A:0C9B  E9 F9AE				jmp	$-64Fh
020A:0C9E  C4					db	0C4h
							                        ;* No entry point to code
020A:0C9F  C4 1E A8E9				les	bx,dword ptr data_695	; (020A:A8E9=5A5Eh) Load 32 bit ptr
020A:0CA3  F9					stc				; Set carry flag
020A:0CA4  C4					db	0C4h
020A:0CA5  C4 70 E9				les	si,dword ptr [bx+si-17h]	; Load 32 bit ptr
020A:0CA8  A2			data_167	db	0A2h
020A:0CA9  F9					stc				; Set carry flag
020A:0CAA  E8 FB2C				call	sub_3			; (07D9)
020A:0CAD  CD 4A				int	4Ah			; RTC Alarm occurred
020A:0CAF  EB 01				jmp	short $+3		; delay for I/O
020A:0CB1  90					nop
020A:0CB2  EB 01				jmp	short $+3		; delay for I/O
020A:0CB4  90					nop
020A:0CB5  EB 01				jmp	short $+3		; delay for I/O
020A:0CB7  90					nop
020A:0CB8  E8 FAFE				call	sub_2			; (07B9)
020A:0CBB  C4					db	0C4h
020A:0CBC  C4					db	0C4h
020A:0CBD  FE C4				inc	ah
020A:0CBF  C4 71 CD				les	si,dword ptr [bx+di-33h]	; Load 32 bit ptr
020A:0CC2  0A E9				or	ch,cl
020A:0CC4  86 F9				xchg	bh,cl
020A:0CC6  C4					db	0C4h
020A:0CC7			loc_70::
020A:0CC7  C4 75 CD				les	si,dword ptr [di-33h]	; Load 32 bit ptr
020A:0CCA  02 E9				add	ch,cl
020A:0CCC  7E F9				jle	loc_70			; Jump if < or =
020A:0CCE  E8 FB08				call	sub_3			; (07D9)
020A:0CD1  EB 00				jmp	short $+2		; delay for I/O
020A:0CD3  EB 00				jmp	short $+2		; delay for I/O
020A:0CD5  EB 00				jmp	short $+2		; delay for I/O
020A:0CD7  C4					db	0C4h
020A:0CD8  C4					db	0C4h
020A:0CD9  FE					db	0FEh
020A:0CDA  EB 0B				jmp	short loc_72		; (0CE7)
							                        ;* No entry point to code
020A:0CDC  3C 2F				cmp	al,2Fh			; '/'
020A:0CDE  75 06				jne	loc_71			; Jump if not equal
020A:0CE0  44					inc	sp
020A:0CE1  D9					db	0D9h
020A:0CE2  02 4E 00				add	cl,[bp]
020A:0CE5  40					inc	ax
020A:0CE6			loc_71::
020A:0CE6  F8					clc				; Clear carry flag
020A:0CE7			loc_72::
020A:0CE7  C3					retn
020A:0CE8  48					dec	ax
020A:0CE9  49					dec	cx
020A:0CEA  4D					dec	bp
020A:0CEB  45					inc	bp
020A:0CEC  4D					dec	bp
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 15

020A:0CED  20 20				and	[bx+si],ah
020A:0CEF  20 24				and	[si],ah
020A:0CF1  00 70 00		;*		add	[bx+si+0],dh
020A:0CF1  00 70 00				db	 00h, 70h, 00h
020A:0CF4  00 A0 0041				add	byte ptr ds:[41h][bx+si],ah	; (020A:0041=18h)
020A:0CF8  4C					dec	sp
020A:0CF9  00 58 4D				add	[bx+si+4Dh],bl
020A:0CFC  53					push	bx
020A:0CFD  58					pop	ax
020A:0CFE  58					pop	ax
020A:0CFF  58					pop	ax
020A:0D00  58					pop	ax
020A:0D01  30 DE				xor	dh,bl
020A:0D03  04 74				add	al,74h			; 't'
020A:0D05  00 82 FB04				add	[bp+si-4FCh],al
020A:0D09  8D 54 00				lea	dx,[si+0]		; Load effective addr
020A:0D0C  00 00				add	[bx+si],al
020A:0D0E  42					inc	dx
020A:0D0F  05 020A				add	ax,20Ah
020A:0D12  A4					movsb				; Mov [si] to es:[di]
020A:0D13  10 A7 0100				adc	byte ptr ds:[100h][bx],ah	; (020A:0100=28h)
020A:0D17  01 01				add	[bx+di],ax
020A:0D19  01 00				add	[bx+si],ax
020A:0D1B  01 00				add	[bx+si],ax
020A:0D1D  01 00				add	[bx+si],ax
020A:0D1F  01 00				add	[bx+si],ax
020A:0D21  000A[00]				db	10 dup (0)
020A:0D2B  02 01				add	al,[bx+di]
020A:0D2D  00					db	0
020A:0D2E  00 00				add	[bx+si],al
020A:0D30  00 2E 1E89				add	data_243,ch		; (020A:1E89=0)
020A:0D34  16					push	ss
020A:0D35  00 2E 068C				add	byte ptr ds:[68Ch],ch	; (020A:068C=2)
020A:0D39  18 00				sbb	[bx+si],al
020A:0D3B  CB					retf
							                        ;* No entry point to code
020A:0D3C  53					push	bx
020A:0D3D  1E					push	ds
020A:0D3E  2E: C5 1E 0016			lds	bx,dword ptr cs:[16h]	; (020A:0016=0) Load 32 bit ptr
020A:0D43  80 7F 02 10				cmp	byte ptr [bx+2],10h
020A:0D47  C7 47 03 0100			mov	word ptr [bx+3],100h
020A:0D4C  76 05				jbe	loc_73			; Jump if below or =
020A:0D4E  81 4F 03 8003			or	word ptr [bx+3],8003h
020A:0D53			loc_73::
020A:0D53  1F					pop	ds
020A:0D54  5B					pop	bx
020A:0D55  CB					retf
							                        ;* No entry point to code
020A:0D56  E8 03DB				call	sub_20			; (1134)
020A:0D59  80 FC 43				cmp	ah,43h			; 'C'
020A:0D5C  75 15				jne	loc_75			; Jump if not equal
020A:0D5E  0A C0				or	al,al			; Zero ?
020A:0D60  75 05				jnz	loc_74			; Jump if not zero
020A:0D62  B0 80				mov	al,80h
020A:0D64  E9 03F5				jmp	loc_126			; (115C)
020A:0D67			loc_74::
020A:0D67  3C 10				cmp	al,10h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 16

020A:0D69  75 08				jne	loc_75			; Jump if not equal
020A:0D6B  0E					push	cs
020A:0D6C  07					pop	es
020A:0D6D  BB 00AF				mov	bx,0AFh
020A:0D70  E9 03E9				jmp	loc_126			; (115C)
020A:0D73			loc_75::
020A:0D73  E8 039E				call	sub_19			; (1114)
020A:0D76  2E: FF 2E 0022			jmp	dword ptr cs:[22h]	; (020A:0022=0FFh)
							                        ;* No entry point to code
020A:0D7B  12 A0 0265				adc	ah,byte ptr ds:[265h][bx+si]	; (020A:0265=0)
020A:0D7F  98					cbw				; Convrt byte to word
020A:0D80  02 B2 D402				add	dh,[bp+si-2BFEh]
020A:0D84  02 F6				add	dh,dh
020A:0D86  02 30				add	dh,[bx+si]
020A:0D88  03 99 2B03				add	bx,data_284[bx+di]	; (020A:2B03=8D1Eh)
020A:0D8C  A0 A03C				mov	al,data_661		; (020A:A03C=75h)
020A:0D8F  94					xchg	sp,ax
020A:0D90  A0 A264				mov	al,data_670		; (020A:A264=80h)
020A:0D93  CF					iret				; Interrupt return
							                        ;* No entry point to code
020A:0D94  A0 A0FF				mov	al,data_665		; (020A:A0FF=7)
020A:0D97  23 A1 A159				and	sp,data_666[bx+di]	; (020A:A159=2669h)
020A:0D9B  11 A2 A216				adc	[bp+si-5DEAh],sp
020A:0D9F  EB 03				jmp	short loc_76		; (0DA4)
020A:0DA1  90					nop
020A:0DA2  90					nop
020A:0DA3  90					nop
020A:0DA4			loc_76::
020A:0DA4  51					push	cx
020A:0DA5  56					push	si
020A:0DA6  57					push	di
020A:0DA7  1E					push	ds
020A:0DA8  06					push	es
020A:0DA9  9C					pushf				; Push flags
020A:0DAA  FC					cld				; Clear direction
020A:0DAB  1E					push	ds
020A:0DAC  07					pop	es
020A:0DAD  0E					push	cs
020A:0DAE  1F					pop	ds
020A:0DAF  50					push	ax
020A:0DB0  0A E4				or	ah,ah			; Zero ?
020A:0DB2  74 31				jz	loc_79			; Jump if zero
020A:0DB4  80 FC 12				cmp	ah,12h
020A:0DB7  72 07				jb	loc_77			; Jump if below
020A:0DB9  58					pop	ax
020A:0DBA  33 C0				xor	ax,ax			; Zero register
020A:0DBC  B3 80				mov	bl,80h
020A:0DBE  EB 72				jmp	short loc_83		; (0E32)
020A:0DC0			loc_77::
020A:0DC0  9C					pushf				; Push flags
020A:0DC1  E8 0350				call	sub_19			; (1114)
020A:0DC4  83 3E 0020 00			cmp	word ptr data_20+2,0	; (020A:0020=0A3B9h)
020A:0DC9  75 05				jne	loc_78			; Jump if not equal
020A:0DCB  52					push	dx
020A:0DCC  E8 0076				call	sub_13			; (0E45)
020A:0DCF  5A					pop	dx
020A:0DD0			loc_78::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 17

020A:0DD0  0E					push	cs
020A:0DD1  FF 16 0014				call	word ptr ds:[14h]	; (020A:0014=0E0Dh)
020A:0DD5  80 3E 002C 00			cmp	byte ptr ds:[2Ch],0	; (020A:002C=39h)
020A:0DDA  74 09				je	loc_79			; Jump if equal
020A:0DDC  58					pop	ax
020A:0DDD  33 C0				xor	ax,ax			; Zero register
020A:0DDF  B3 81				mov	bl,81h
020A:0DE1  33 D2				xor	dx,dx			; Zero register
020A:0DE3  EB			data_169	db	0EBh
020A:0DE4  4D					dec	bp
020A:0DE5			loc_79::
020A:0DE5  58					pop	ax
020A:0DE6  50					push	ax
020A:0DE7  8A C4				mov	al,ah
020A:0DE9  32 E4				xor	ah,ah			; Zero register
020A:0DEB  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:0DED  8B F8				mov	di,ax
020A:0DEF  58					pop	ax
020A:0DF0  8B BD 008B				mov	di,word ptr data_50+1[di]	; (020A:008B=504Fh)
020A:0DF4  0B FF				or	di,di			; Zero ?
020A:0DF6  79 38				jns	loc_82			; Jump if not sign
020A:0DF8  80 3E 002B 00			cmp	byte ptr ds:[2Bh],0	; (020A:002B=38h)
020A:0DFD  74 12				je	loc_80			; Jump if equal
020A:0DFF  56					push	si
020A:0E00  5057			data_170	dw	5057h			; Data table (indexed access)
020A:0E02  5153			data_172	dw	5153h
020A:0E04  DFE8			data_173	dw	0DFE8h
020A:0E06  01 3D				add	[di],di
020A:0E08  01 00				add	[bx+si],ax
020A:0E0A  59					pop	cx
020A:0E0B  5B					pop	bx
020A:0E0C  58					pop	ax
020A:0E0D  5F					pop	di
020A:0E0E  5E					pop	si
020A:0E0F  75 17				jnz	loc_81			; Jump if not zero
020A:0E11			loc_80::
020A:0E11  0E E8 002A				callf	sub_12			; (0E3F)
020A:0E15  80 3E 002B 00			cmp	byte ptr ds:[2Bh],0	; (020A:002B=38h)
020A:0E1A  74 16				je	loc_83			; Jump if equal
020A:0E1C  50					push	ax
020A:0E1D  53					push	bx
020A:0E1E  E8 01FF				call	sub_16			; (1020)
020A:0E21  3D 0001				cmp	ax,1
020A:0E24  5B					pop	bx
020A:0E25  58					pop	ax
020A:0E26  74 0A				jz	loc_83			; Jump if zero
020A:0E28			loc_81::
020A:0E28  33 C0				xor	ax,ax			; Zero register
020A:0E2A  33 D2				xor	dx,dx			; Zero register
020A:0E2C  B3 82				mov	bl,82h
020A:0E2E  EB 02				jmp	short loc_83		; (0E32)
020A:0E30			loc_82::
020A:0E30  FF D7				call	di			;*
020A:0E32			loc_83::
020A:0E32  0E					push	cs
020A:0E33  FF 16 0014				call	word ptr ds:[14h]	; (020A:0014=0E0Dh)
020A:0E37  07					pop	es
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 18

020A:0E38  1F					pop	ds
020A:0E39  5F					pop	di
020A:0E3A  5E					pop	si
020A:0E3B  59					pop	cx
020A:0E3C  CB					retf				; Return far
020A:0E3D  6E					db	6Eh
020A:0E3E  FB					sti				; Enable interrupts

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_12		proc	near
020A:0E3F  FF 36 014D				push	word ptr ds:[14Dh]	; (020A:014D=5582h)
020A:0E43  57					push	di
020A:0E44  CB					retf				; Return far
				sub_12		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_13		proc	near
020A:0E45  06					push	es
020A:0E46  E8 0071				call	sub_14			; (0EBA)
020A:0E49  80 3E 002C 00			cmp	byte ptr ds:[2Ch],0	; (020A:002C=39h)
020A:0E4E  74 02				je	loc_84			; Jump if equal
020A:0E50  07					pop	es
020A:0E51  C3					retn
020A:0E52			loc_84::
020A:0E52  B8 020D				mov	ax,20Dh
020A:0E55  C4					db	0C4h
020A:0E56  C4 52 09				les	dx,dword ptr [bp+si+9]	; Load 32 bit ptr
020A:0E59  C4 36 001A				les	si,dword ptr ds:[1Ah]	; (020A:001A=0AE9Ch) Load 32 bit ptr
020A:0E5D  26: 87 04				xchg	es:[si],ax
020A:0E60  A3 001E				mov	word ptr ds:[1Eh],ax	; (020A:001E=961Fh)
020A:0E63  8C C8				mov	ax,cs
020A:0E65  26: 87 44 02				xchg	es:[si+2],ax
020A:0E69  A3 0020				mov	word ptr data_20+2,ax	; (020A:0020=0A3B9h)
020A:0E6C  8B C1				mov	ax,cx
020A:0E6E  3D 3C00				cmp	ax,3C00h
020A:0E71  72 03				jb	loc_85			; Jump if below
020A:0E73  B8 3C00				mov	ax,3C00h
020A:0E76			loc_85::
020A:0E76  2B 06 0037				sub	ax,word ptr ds:[37h]	; (020A:0037=0)
020A:0E7A  3D 0040				cmp	ax,40h
020A:0E7D  72 0C				jb	loc_86			; Jump if below
020A:0E7F  83 3E 0035 00			cmp	word ptr ds:[35h],0	; (020A:0035=80Fh)
020A:0E84  75 05				jne	loc_86			; Jump if not equal
020A:0E86  C6 06 0029 01			mov	byte ptr ds:[29h],1	; (020A:0029=14h)
020A:0E8B			loc_86::
020A:0E8B  0B C0				or	ax,ax			; Zero ?
020A:0E8D  74 20				jz	loc_89			; Jump if zero
020A:0E8F  B9 0400				mov	cx,400h
020A:0E92  33 DB				xor	bx,bx			; Zero register
020A:0E94  80 3E 0029 00			cmp	byte ptr ds:[29h],0	; (020A:0029=14h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 19

020A:0E99  74 03				je	loc_87			; Jump if equal
020A:0E9B  BB 0040				mov	bx,40h
020A:0E9E			loc_87::
020A:0E9E  3B 1E 0035				cmp	bx,word ptr ds:[35h]	; (020A:0035=80Fh)
020A:0EA2  73 04				jae	loc_88			; Jump if above or =
020A:0EA4  8B 1E 0035				mov	bx,word ptr ds:[35h]	; (020A:0035=80Fh)
020A:0EA8			loc_88::
020A:0EA8  03 CB				add	cx,bx
020A:0EAA  2B C3				sub	ax,bx
020A:0EAC  E8 01E2				call	sub_18			; (1091)
020A:0EAF			loc_89::
020A:0EAF  07					pop	es
020A:0EB0  C3					retn
				sub_13		endp

							                        ;* No entry point to code
020A:0EB1  13 00				adc	ax,[bx+si]
020A:0EB3  FF					db	0FFh
020A:0EB4  FF 56 44				call	word ptr [bp+44h]	;*
020A:0EB7  49					dec	cx
020A:0EB8  53					push	bx
020A:0EB9  4B					dec	bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_14		proc	near
020A:0EBA  06					push	es
020A:0EBB  33 C0				xor	ax,ax			; Zero register
020A:0EBD  8E C0				mov	es,ax
020A:0EBF  26: 8E 06 0066			mov	es,word ptr es:[66h]	; (0000:0066=20Ah)
020A:0EC4  BF 0012				mov	di,12h
020A:0EC7  BE 01C5				mov	si,1C5h
020A:0ECA  B9 0005				mov	cx,5
020A:0ECD  FC					cld				; Clear direction
020A:0ECE  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020A:0ED0  07					pop	es
020A:0ED1  2474			data_176	dw	2474h
020A:0ED3  10E8			data_177	dw	10E8h
020A:0ED5  01			data_178	db	1
020A:0ED6  06					push	es
020A:0ED7  2E: C4 3E 01C1			les	di,dword ptr cs:[1C1h]	; (020A:01C1=0) Load 32 bit ptr
020A:0EDC  BE 01C5				mov	si,1C5h
020A:0EDF  B9 0005				mov	cx,5
020A:0EE2  FC					cld				; Clear direction
020A:0EE3  A6F3			data_181	dw	0A6F3h
020A:0EE5  07					pop	es
020A:0EE6  9C					pushf				; Push flags
020A:0EE7  36E8			data_182	dw	36E8h
020A:0EE9  0E01			data_183	dw	0E01h
020A:0EEB  16FF			data_184	dw	16FFh
020A:0EED  14 00				adc	al,0
020A:0EEF  74			data_186	db	74h
020A:0EF0  06					push	es
020A:0EF1  C6 06 002C 00			mov	byte ptr ds:[2Ch],0	; (020A:002C=39h)
020A:0EF6  C3					retn
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 20

				sub_14		endp

020A:0EF7			loc_90::
020A:0EF7  C6 06 002C 01			mov	byte ptr ds:[2Ch],1	; (020A:002C=39h)
020A:0EFC  C3					retn
							                        ;* No entry point to code
020A:0EFD  80 FC 88				cmp	ah,88h
020A:0F00  74 0A				je	loc_91			; Jump if equal
020A:0F02  80 FC 87				cmp	ah,87h
020A:0F05  74 0C				je	loc_92			; Jump if equal
020A:0F07  2E: FF 2E 001E			jmp	dword ptr cs:[1Eh]	; (020A:001E=961Fh)
020A:0F0C			loc_91::
020A:0F0C  2E: A1 0035				mov	ax,word ptr cs:[35h]	; (020A:0035=80Fh)
020A:0F10  E9 0249				jmp	loc_126			; (115C)
020A:0F13			loc_92::
020A:0F13  E8 01FE				call	sub_19			; (1114)
020A:0F16  83 EC 04				sub	sp,4
020A:0F19  60					db	60h
020A:0F1A  E8 016C				call	sub_17			; (1089)
020A:0F1D  8B EC				mov	bp,sp
020A:0F1F  89 46 12				mov	[bp+12h],ax
020A:0F22  8B 46 18				mov	ax,[bp+18h]
020A:0F25  89 46 10				mov	[bp+10h],ax
020A:0F28  61					db	61h
020A:0F29  2E: FF 1E 001E			call	dword ptr cs:[1Eh]	; (020A:001E=961Fh)
020A:0F2E  50					push	ax
020A:0F2F  9C					pushf				; Push flags
020A:0F30  55					push	bp
020A:0F31  8B EC				mov	bp,sp
020A:0F33  8B 46 02				mov	ax,[bp+2]
020A:0F36  89 46 0C				mov	[bp+0Ch],ax
020A:0F39  83 7E 06 00				cmp	word ptr [bp+6],0
020A:0F3D  5D					pop	bp
020A:0F3E  58					pop	ax
020A:0F3F  58					pop	ax
020A:0F40  74 0B				jz	loc_93			; Jump if zero
020A:0F42  E8 01CF				call	sub_19			; (1114)
020A:0F45  60					db	60h
020A:0F46  B8 0001				mov	ax,1
020A:0F49  E8 0272				call	sub_21			; (11BE)
020A:0F4C  61					db	61h
020A:0F4D			loc_93::
020A:0F4D  83 C4 02				add	sp,2
020A:0F50  E9 0209				jmp	loc_126			; (115C)
							                        ;* No entry point to code
020A:0F53  00 00				add	[bx+si],al
020A:0F55  E8 01BC				call	sub_19			; (1114)
020A:0F58  B3 91				mov	bl,91h
020A:0F5A  3C 40				cmp	al,40h			; '@'
020A:0F5C  75 06				jne	loc_94			; Jump if not equal
020A:0F5E  3B 16 0263				cmp	dx,word ptr ds:[263h]	; (020A:0263=0)
020A:0F62  74 21				je	loc_95			; Jump if equal
020A:0F64			loc_94::
020A:0F64  80 3E 0026 01			cmp	byte ptr ds:[26h],1	; (020A:0026=3)
020A:0F69  74 1A				je	loc_95			; Jump if equal
020A:0F6B  B3 90				mov	bl,90h
020A:0F6D  80 3E 0029 00			cmp	byte ptr ds:[29h],0	; (020A:0029=14h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 21

020A:0F72  74 11				je	loc_95			; Jump if equal
020A:0F74  B3 92				mov	bl,92h
020A:0F76  3B 16 0033				cmp	dx,word ptr ds:[33h]	; (020A:0033=0Ch)
020A:0F7A  72 09				jb	loc_95			; Jump if below
020A:0F7C  B8 0001				mov	ax,1
020A:0F7F  A2 0026				mov	byte ptr ds:[26h],al	; (020A:0026=3)
020A:0F82  32 DB				xor	bl,bl			; Zero register
020A:0F84  C3					retn
020A:0F85			loc_95::
020A:0F85  33 C0				xor	ax,ax			; Zero register
020A:0F87  C3					retn
							                        ;* No entry point to code
020A:0F88  E8 0189				call	sub_19			; (1114)
020A:0F8B  A0 0026				mov	al,byte ptr ds:[26h]	; (020A:0026=3)
020A:0F8E  0A C0				or	al,al			; Zero ?
020A:0F90  74 0B				jz	loc_96			; Jump if zero
020A:0F92  C6 06 0026 00			mov	byte ptr ds:[26h],0	; (020A:0026=3)
020A:0F97  B8 0001				mov	ax,1
020A:0F9A  32 DB				xor	bl,bl			; Zero register
020A:0F9C  C3					retn
020A:0F9D			loc_96::
020A:0F9D  33 C0				xor	ax,ax			; Zero register
020A:0F9F  B3 93				mov	bl,93h
020A:0FA1  C3					retn
							                        ;* No entry point to code
020A:0FA2  E8 016F				call	sub_19			; (1114)
020A:0FA5  83 3E 0031 01			cmp	word ptr ds:[31h],1	; (020A:0031=3F3Eh)
020A:0FAA  74 0D				je	loc_97			; Jump if equal
020A:0FAC  E8 0037				call	sub_15			; (0FE6)
020A:0FAF  0B C0				or	ax,ax			; Zero ?
020A:0FB1  74 0C				jz	loc_98			; Jump if zero
020A:0FB3  C7 06 0031 0001			mov	word ptr ds:[31h],1	; (020A:0031=3F3Eh)
020A:0FB9			loc_97::
020A:0FB9  B8 0001				mov	ax,1
020A:0FBC  32 DB				xor	bl,bl			; Zero register
020A:0FBE  C3					retn
020A:0FBF			loc_98::
020A:0FBF  B3 82				mov	bl,82h
020A:0FC1  33 C0				xor	ax,ax			; Zero register
020A:0FC3  C3					retn
							                        ;* No entry point to code
020A:0FC4  E8 014D				call	sub_19			; (1114)
020A:0FC7  83 3E 0031 00			cmp	word ptr ds:[31h],0	; (020A:0031=3F3Eh)
020A:0FCC  74 0D				je	loc_99			; Jump if equal
020A:0FCE  E8 004F				call	sub_16			; (1020)
020A:0FD1  0B C0				or	ax,ax			; Zero ?
020A:0FD3  74 0C				jz	loc_100			; Jump if zero
020A:0FD5  C7 06 0031 0000			mov	word ptr ds:[31h],0	; (020A:0031=3F3Eh)
020A:0FDB			loc_99::
020A:0FDB  B8 0001				mov	ax,1
020A:0FDE  32 DB				xor	bl,bl			; Zero register
020A:0FE0  C3					retn
020A:0FE1			loc_100::
020A:0FE1  B3 82				mov	bl,82h
020A:0FE3  33			data_187	db	33h
020A:0FE4  C0					db	0C0h
020A:0FE5  C3					retn
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 22


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_15		proc	near
020A:0FE6  E8 012B				call	sub_19			; (1114)
020A:0FE9  80 3E 0027 01			cmp	byte ptr ds:[27h],1	; (020A:0027=4)
020A:0FEE  75 25				jne	loc_104			; Jump if not equal
020A:0FF0  C6 06 003B 03			mov	byte ptr ds:[3Bh],3	; (020A:003B=0)
020A:0FF5  83 3E 002F 00			cmp	word ptr ds:[2Fh],0	; (020A:002F=3D3Ch)
020A:0FFA  74 07				je	loc_102			; Jump if equal
020A:0FFC			loc_101::
020A:0FFC  E8 008A				call	sub_17			; (1089)
020A:0FFF  0B C0				or	ax,ax			; Zero ?
020A:1001  75 0E				jnz	loc_103			; Jump if not zero
020A:1003			loc_102::
020A:1003  B8 0001				mov	ax,1
020A:1006  E8 01B5				call	sub_21			; (11BE)
020A:1009  FE 0E 003B				dec	byte ptr ds:[3Bh]	; (020A:003B=0)
020A:100D  75 ED				jnz	loc_101			; Jump if not zero
020A:100F  EB 0A				jmp	short loc_105		; (101B)
020A:1011			loc_103::
020A:1011  FF 06 002F				inc	word ptr ds:[2Fh]	; (020A:002F=3D3Ch)
020A:1015			loc_104::
020A:1015  B8 0001				mov	ax,1
020A:1018  32 DB				xor	bl,bl			; Zero register
020A:101A  C3					retn
020A:101B			loc_105::
020A:101B  B3 82				mov	bl,82h
020A:101D  33 C0				xor	ax,ax			; Zero register
020A:101F  C3					retn
				sub_15		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_16		proc	near
020A:1020  E8 00F1				call	sub_19			; (1114)
020A:1023  80 3E 0027 00			cmp	byte ptr ds:[27h],0	; (020A:0027=4)
020A:1028  74 34				je	loc_110			; Jump if equal
020A:102A  83 3E 002F 00			cmp	word ptr ds:[2Fh],0	; (020A:002F=3D3Ch)
020A:102F  74 33				je	loc_111			; Jump if equal
020A:1031  C6 06 003B 03			mov	byte ptr ds:[3Bh],3	; (020A:003B=0)
020A:1036			loc_106::
020A:1036  E8 0050				call	sub_17			; (1089)
020A:1039  83 3E 002F 01			cmp	word ptr ds:[2Fh],1	; (020A:002F=3D3Ch)
020A:103E  75 08				jne	loc_107			; Jump if not equal
020A:1040  0B C0				or	ax,ax			; Zero ?
020A:1042  74 16				jz	loc_109			; Jump if zero
020A:1044  33 C0				xor	ax,ax			; Zero register
020A:1046  EB 07				jmp	short loc_108		; (104F)
020A:1048			loc_107::
020A:1048  0B C0				or	ax,ax			; Zero ?
020A:104A  75 0E				jnz	loc_109			; Jump if not zero
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 23

020A:104C  B8 0001				mov	ax,1
020A:104F			loc_108::
020A:104F  E8 016C				call	sub_21			; (11BE)
020A:1052  FE 0E 003B				dec	byte ptr ds:[3Bh]	; (020A:003B=0)
020A:1056  75 DE				jnz	loc_106			; Jump if not zero
020A:1058  EB 0A				jmp	short loc_111		; (1064)
020A:105A			loc_109::
020A:105A  FF 0E 002F				dec	word ptr ds:[2Fh]	; (020A:002F=3D3Ch)
020A:105E			loc_110::
020A:105E  B8 0001				mov	ax,1
020A:1061  32 DB				xor	bl,bl			; Zero register
020A:1063  C3					retn
020A:1064			loc_111::
020A:1064  B3 82				mov	bl,82h
020A:1066  33 C0				xor	ax,ax			; Zero register
020A:1068  C3					retn
				sub_16		endp

							                        ;* No entry point to code
020A:1069  2E: 80 3E 002B 00			cmp	byte ptr cs:[2Bh],0	; (020A:002B=38h)
020A:106F  74 04				je	loc_112			; Jump if equal
020A:1071  B8 0001				mov	ax,1
020A:1074  CB					retf				; Return far
020A:1075			loc_112::
020A:1075  E8 FF6E				call	sub_15			; (0FE6)
020A:1078  CB					retf
							                        ;* No entry point to code
020A:1079  2E: 80 3E 002B 00			cmp	byte ptr cs:[2Bh],0	; (020A:002B=38h)
020A:107F  74 04				je	loc_113			; Jump if equal
020A:1081  B8 0001				mov	ax,1
020A:1084  CB					retf				; Return far
020A:1085			loc_113::
020A:1085  E8 FF98				call	sub_16			; (1020)
020A:1088  CB					retf				; Return far

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_17		proc	near
020A:1089  2E: A0 003C				mov	al,byte ptr cs:[3Ch]	; (020A:003C=10h)
020A:108D  98					cbw				; Convrt byte to word
020A:108E  32 DB				xor	bl,bl			; Zero register
020A:1090  C3					retn
				sub_17		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_18		proc	near
020A:1091  8B D0				mov	dx,ax
020A:1093  8B F1				mov	si,cx
020A:1095  33 FF				xor	di,di			; Zero register
020A:1097  06					push	es
020A:1098  8E 06 014D				mov	es,word ptr ds:[14Dh]	; (020A:014D=5582h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 24

020A:109C  26: 8B 1E A004			mov	bx,word ptr es:[0A004h]	; (5582:A004=0FFFFh)
020A:10A1  26: 8B 0E A008			mov	cx,word ptr es:[0A008h]	; (5582:A008=0FFFFh)

020A:10A6			locloop_114::
020A:10A6  26: 80 3F 04				cmp	byte ptr es:[bx],4
020A:10AA  75 08				jne	loc_115			; Jump if not equal
020A:10AC  0B FF				or	di,di			; Zero ?
020A:10AE  75 48				jnz	loc_118			; Jump if not zero
020A:10B0  8B FB				mov	di,bx
020A:10B2  EB 44				jmp	short loc_118		; (10F8)
020A:10B4			loc_115::
020A:10B4  26: 80 3F 01				cmp	byte ptr es:[bx],1
020A:10B8  75 3E				jne	loc_118			; Jump if not equal
020A:10BA  26: 8B 47 02				mov	ax,es:[bx+2]
020A:10BE  26: 03 47 04				add	ax,es:[bx+4]
020A:10C2  3B C6				cmp	ax,si
020A:10C4  72 32				jb	loc_118			; Jump if below
020A:10C6  8B C6				mov	ax,si
020A:10C8  03 C2				add	ax,dx
020A:10CA  26: 3B 47 02				cmp	ax,es:[bx+2]
020A:10CE  72 28				jb	loc_118			; Jump if below
020A:10D0  26: 3B 77 02				cmp	si,es:[bx+2]
020A:10D4  76 08				jbe	loc_116			; Jump if below or =
020A:10D6  03 D6				add	dx,si
020A:10D8  26: 8B 77 02				mov	si,es:[bx+2]
020A:10DC  2B D6				sub	dx,si
020A:10DE			loc_116::
020A:10DE  26: 8B 47 02				mov	ax,es:[bx+2]
020A:10E2  26: 03 47 04				add	ax,es:[bx+4]
020A:10E6  2B C2				sub	ax,dx
020A:10E8  2B C6				sub	ax,si
020A:10EA  76 02				jbe	loc_117			; Jump if below or =
020A:10EC  03 D0				add	dx,ax
020A:10EE			loc_117::
020A:10EE  26: C6 07 04				mov	byte ptr es:[bx],4
020A:10F2  0B FF				or	di,di			; Zero ?
020A:10F4  75 02				jnz	loc_118			; Jump if not zero
020A:10F6  8B FB				mov	di,bx
020A:10F8			loc_118::
020A:10F8  83 C3 06				add	bx,6
020A:10FB  E2 A9				loop	locloop_114		; Loop if cx > 0

020A:10FD  0B FF				or	di,di			; Zero ?
020A:10FF  74 11				jz	loc_119			; Jump if zero
020A:1101  26: C6 45 01 00			mov	byte ptr es:[di+1],0
020A:1106  26: C6 05 01				mov	byte ptr es:[di],1
020A:110A  26: 89 75 02				mov	es:[di+2],si
020A:110E  26: 89 55 04				mov	es:[di+4],dx
020A:1112			loc_119::
020A:1112  07					pop	es
020A:1113  C3					retn
				sub_18		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 25


				sub_19		proc	near
020A:1114  1E					push	ds
020A:1115  50					push	ax
020A:1116  B8 0040				mov	ax,40h
020A:1119  8E D8				mov	ds,ax
020A:111B  9F					lahf				; Load ah from flags
020A:111C  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:1122  75 0C				jnz	loc_121			; Jump if not zero
020A:1124  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020A:112B			loc_120::
020A:112B  9E					sahf				; Store ah into flags
020A:112C  58					pop	ax
020A:112D  1F					pop	ds
020A:112E  EB 03				jmp	short loc_122		; (1133)
020A:1130			loc_121::
020A:1130  FA					cli				; Disable interrupts
020A:1131  EB F8				jmp	short loc_120		; (112B)
020A:1133			loc_122::
020A:1133  C3					retn
				sub_19		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_20		proc	near
020A:1134  1E					push	ds
020A:1135  50					push	ax
020A:1136  B8 0040				mov	ax,40h
020A:1139  8E D8				mov	ds,ax
020A:113B  9F					lahf				; Load ah from flags
020A:113C  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:1142  75 14				jnz	loc_124			; Jump if not zero
020A:1144  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:114A  75 0C				jnz	loc_124			; Jump if not zero
020A:114C  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:1153			loc_123::
020A:1153  9E					sahf				; Store ah into flags
020A:1154  58					pop	ax
020A:1155  1F					pop	ds
020A:1156  EB 03				jmp	short loc_125		; (115B)
020A:1158			loc_124::
020A:1158  FB					sti				; Enable interrupts
020A:1159  EB F8				jmp	short loc_123		; (1153)
020A:115B			loc_125::
020A:115B  C3					retn
				sub_20		endp

020A:115C			loc_126::
020A:115C  1E					push	ds
020A:115D  50					push	ax
020A:115E  B8 0040				mov	ax,40h
020A:1161  8E D8				mov	ds,ax
020A:1163  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:1169  75 4F				jnz	loc_134			; Jump if not zero
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 26

020A:116B  55					push	bp
020A:116C  8B EC				mov	bp,sp
020A:116E  8B 46 0A				mov	ax,[bp+0Ah]
020A:1171  5D					pop	bp
020A:1172  A9 0100				test	ax,100h
020A:1175  75 43				jnz	loc_134			; Jump if not zero
020A:1177  A9 0200				test	ax,200h
020A:117A  74 22				jz	loc_130			; Jump if zero
020A:117C  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:1183  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:1189  75 2F				jnz	loc_134			; Jump if not zero
020A:118B			loc_127::
020A:118B  86 E0				xchg	ah,al
020A:118D  FC					cld				; Clear direction
020A:118E  A8 04				test	al,4
020A:1190  75 25				jnz	loc_133			; Jump if not zero
020A:1192			loc_128::
020A:1192  A8 08				test	al,8
020A:1194  75 11				jnz	loc_131			; Jump if not zero
020A:1196  70 19				jo	loc_132			; Jump if overflow=1
020A:1198			loc_129::
020A:1198  9E					sahf				; Store ah into flags
020A:1199  58					pop	ax
020A:119A  1F					pop	ds
020A:119B  CA 0002				retf	2			; Return far
020A:119E			loc_130::
020A:119E  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (020A:0314=3231h)
020A:11A5  EB E4				jmp	short loc_127		; (118B)
020A:11A7			loc_131::
020A:11A7  70 EF				jo	loc_129			; Jump if overflow=1
020A:11A9  50					push	ax
020A:11AA  B0 7F				mov	al,7Fh
020A:11AC  04 02				add	al,2
020A:11AE  58					pop	ax
020A:11AF  EB E7				jmp	short loc_129		; (1198)
020A:11B1			loc_132::
020A:11B1  50					push	ax
020A:11B2  32 C0				xor	al,al			; Zero register
020A:11B4  58					pop	ax
020A:11B5  EB E1				jmp	short loc_129		; (1198)
020A:11B7			loc_133::
020A:11B7  FD					std				; Set direction flag
020A:11B8  EB D8				jmp	short loc_128		; (1192)
020A:11BA			loc_134::
020A:11BA  58					pop	ax
020A:11BB  1F					pop	ds
020A:11BC  CF					iret				; Interrupt return
020A:11BD  00 3D				add	[di],bh
020A:11BF  02 00				add	al,[bx+si]
020A:11C1  75 06				jnz	loc_135			; Jump if not zero
020A:11C3  2E: A0 003C				mov	al,byte ptr cs:[3Ch]	; (020A:003C=10h)
020A:11C7  98					cbw				; Convrt byte to word
020A:11C8  C3					retn
020A:11C9			loc_135::
020A:11C9  C4					db	0C4h
020A:11CA  C4 52 00		;*		les	dx,dword ptr [bp+si+0]	; Load 32 bit ptr
020A:11CA  C4 52 00				db	0C4h, 52h, 00h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 27

020A:11CD  C3					retn
							                        ;* No entry point to code
020A:11CE  2E: C6 46 28 03			mov	byte ptr cs:[bp+28h],3
020A:11D3  49					dec	cx
020A:11D4  00 00				add	[bx+si],al
020A:11D6  0D 002F				or	ax,2Fh
020A:11D9  00 06 0600				add	byte ptr ds:[600h],al	; (020A:0600=2)
020A:11DD  00 0F				add	[bx],cl
020A:11DF  61					db	61h
020A:11E0  FF					db	0FFh
020A:11E1  FF 06 2300				inc	data_272		; (020A:2300=0)
020A:11E5  0021[00]				db	33 dup (0)
020A:1206  00			data_190	db	0
020A:1207  00			data_191	db	0
020A:1208  00			data_192	db	0
020A:1209  00			data_193	db	0
020A:120A  00			data_194	db	0
020A:120B  00					db	0
020A:120C  00					db	0
020A:120D  00					db	0
020A:120E  00					db	0
020A:120F  00					db	0
020A:1210  00					db	0
020A:1211  00					db	0
020A:1212  00					db	0
020A:1213  00					db	0
020A:1214  00					db	0
020A:1215  00					db	0
020A:1216  00					db	0
020A:1217  00					db	0
020A:1218  00					db	0
020A:1219  00					db	0
020A:121A  00					db	0
020A:121B  00					db	0
020A:121C  00					db	0
020A:121D  00					db	0
020A:121E  00					db	0
020A:121F  00					db	0
020A:1220  00					db	0
020A:1221  00					db	0
020A:1222  00					db	0
020A:1223  00					db	0
020A:1224  00					db	0
020A:1225  00					db	0
020A:1226  00					db	0
020A:1227  00					db	0
020A:1228  00					db	0
020A:1229  00					db	0
020A:122A  00					db	0
020A:122B  00					db	0
020A:122C  00					db	0
020A:122D  00					db	0
020A:122E  00					db	0
020A:122F  00					db	0
020A:1230  00					db	0
020A:1231  00					db	0
020A:1232  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 28

020A:1233  00					db	0
020A:1234  00					db	0
020A:1235  00					db	0
020A:1236  00					db	0
020A:1237  00					db	0
020A:1238  00					db	0
020A:1239  00					db	0
020A:123A  00					db	0
020A:123B  00					db	0
020A:123C  00					db	0
020A:123D  00					db	0
020A:123E  00					db	0
020A:123F  00					db	0
020A:1240  00					db	0
020A:1241  00					db	0
020A:1242  00					db	0
020A:1243  00					db	0
020A:1244  00					db	0
020A:1245  00					db	0
020A:1246  00					db	0
020A:1247  00					db	0
020A:1248  00					db	0
020A:1249  00					db	0
020A:124A  00					db	0
020A:124B  00					db	0
020A:124C  00					db	0
020A:124D  00					db	0
020A:124E  00					db	0
020A:124F  00					db	0
020A:1250  00					db	0
020A:1251  00					db	0
020A:1252  00					db	0
020A:1253  00					db	0
020A:1254  00					db	0
020A:1255  00					db	0
020A:1256  00					db	0
020A:1257  00					db	0
020A:1258  00					db	0
020A:1259  00					db	0
020A:125A  00					db	0
020A:125B  00					db	0
020A:125C  00					db	0
020A:125D  00					db	0
020A:125E  00					db	0
020A:125F  00					db	0
020A:1260  00					db	0
020A:1261  00					db	0
020A:1262  00					db	0
020A:1263  00					db	0
020A:1264  00					db	0
020A:1265  00					db	0
020A:1266  00					db	0
020A:1267  00					db	0
020A:1268  00					db	0
020A:1269  00					db	0
020A:126A  00					db	0
020A:126B  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 29

020A:126C  00					db	0
020A:126D  00					db	0
020A:126E  00					db	0
020A:126F  00					db	0
020A:1270  00					db	0
020A:1271  00					db	0
020A:1272  00					db	0
020A:1273  00					db	0
020A:1274  00					db	0
020A:1275  00					db	0
020A:1276  00					db	0
020A:1277  00					db	0
020A:1278  00					db	0
020A:1279  00					db	0
020A:127A  00					db	0
020A:127B  00					db	0
020A:127C  00					db	0
020A:127D  00					db	0
020A:127E  00					db	0
020A:127F  00					db	0
020A:1280  00					db	0
020A:1281  00					db	0
020A:1282  00					db	0
020A:1283  00					db	0
020A:1284  00					db	0
020A:1285  00					db	0
020A:1286  00					db	0
020A:1287  00					db	0
020A:1288  00					db	0
020A:1289  00					db	0
020A:128A  00					db	0
020A:128B  00					db	0
020A:128C  00					db	0
020A:128D  00					db	0
020A:128E  00					db	0
020A:128F  00					db	0
020A:1290  00					db	0
020A:1291  00					db	0
020A:1292  00					db	0
020A:1293  00					db	0
020A:1294  00					db	0
020A:1295  00					db	0
020A:1296  00					db	0
020A:1297  00					db	0
020A:1298  00					db	0
020A:1299  00					db	0
020A:129A  00					db	0
020A:129B  00					db	0
020A:129C  00					db	0
020A:129D  00					db	0
020A:129E  00					db	0
020A:129F  00					db	0
020A:12A0  00					db	0
020A:12A1  00					db	0
020A:12A2  00					db	0
020A:12A3  00					db	0
020A:12A4  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 30

020A:12A5  00					db	0
020A:12A6  00					db	0
020A:12A7  00					db	0
020A:12A8  00					db	0
020A:12A9  00					db	0
020A:12AA  00					db	0
020A:12AB  00					db	0
020A:12AC  00					db	0
020A:12AD  00					db	0
020A:12AE  00					db	0
020A:12AF  00					db	0
020A:12B0  00					db	0
020A:12B1  00					db	0
020A:12B2  00					db	0
020A:12B3  00					db	0
020A:12B4  00					db	0
020A:12B5  00					db	0
020A:12B6  00					db	0
020A:12B7  00					db	0
020A:12B8  00					db	0
020A:12B9  00					db	0
020A:12BA  00					db	0
020A:12BB  00					db	0
020A:12BC  00					db	0
020A:12BD  00					db	0
020A:12BE  00					db	0
020A:12BF  00					db	0
020A:12C0  00					db	0
020A:12C1  00					db	0
020A:12C2  00					db	0
020A:12C3  00					db	0
020A:12C4  00					db	0
020A:12C5  00					db	0
020A:12C6  00					db	0
020A:12C7  00					db	0
020A:12C8  00					db	0
020A:12C9  00					db	0
020A:12CA  00					db	0
020A:12CB  00					db	0
020A:12CC  00					db	0
020A:12CD  00					db	0
020A:12CE  00					db	0
020A:12CF  00					db	0
020A:12D0  00					db	0
020A:12D1  00					db	0
020A:12D2  00					db	0
020A:12D3  00					db	0
020A:12D4  00					db	0
020A:12D5  00					db	0
020A:12D6  00					db	0
020A:12D7  00					db	0
020A:12D8  00					db	0
020A:12D9  00					db	0
020A:12DA  00					db	0
020A:12DB  00					db	0
020A:12DC  00					db	0
020A:12DD  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 31

020A:12DE  00					db	0
020A:12DF  00					db	0
020A:12E0  00					db	0
020A:12E1  00					db	0
020A:12E2  00					db	0
020A:12E3  00					db	0
020A:12E4  00					db	0
020A:12E5  00					db	0
020A:12E6  00					db	0
020A:12E7  00					db	0
020A:12E8  00					db	0
020A:12E9  00					db	0
020A:12EA  00					db	0
020A:12EB  00					db	0
020A:12EC  00					db	0
020A:12ED  00					db	0
020A:12EE  00					db	0
020A:12EF  00					db	0
020A:12F0  00					db	0
020A:12F1  00					db	0
020A:12F2  00					db	0
020A:12F3  00					db	0
020A:12F4  00					db	0
020A:12F5  00					db	0
020A:12F6  00					db	0
020A:12F7  00					db	0
020A:12F8  00					db	0
020A:12F9  00					db	0
020A:12FA  00					db	0
020A:12FB  00					db	0
020A:12FC  00					db	0
020A:12FD  00					db	0
020A:12FE  00					db	0
020A:12FF  00					db	0
020A:1300  00					db	0
020A:1301  00					db	0
020A:1302  00					db	0
020A:1303  00					db	0
020A:1304  00					db	0
020A:1305  00					db	0
020A:1306  00					db	0
020A:1307  00					db	0
020A:1308  00					db	0
020A:1309  00					db	0
020A:130A  00					db	0
020A:130B  00					db	0
020A:130C  00					db	0
020A:130D  00					db	0
020A:130E  00					db	0
020A:130F  00					db	0
020A:1310  00					db	0
020A:1311  00					db	0
020A:1312  00					db	0
020A:1313  00					db	0
020A:1314  00					db	0
020A:1315  00					db	0
020A:1316  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 32

020A:1317  00					db	0
020A:1318  00					db	0
020A:1319  00					db	0
020A:131A  00					db	0
020A:131B  0000			data_195	dw	0
020A:131D  0000			data_196	dw	0
020A:131F  0000			data_197	dw	0
020A:1321  0000			data_198	dw	0
020A:1323  00					db	0
020A:1324  00					db	0
020A:1325  00					db	0
020A:1326  0000			data_199	dw	0
020A:1328  00			data_200	db	0
020A:1329  00			data_201	db	0
020A:132A  00					db	0
020A:132B  00					db	0
020A:132C  00					db	0
020A:132D  00					db	0
020A:132E  00					db	0
020A:132F  00					db	0
020A:1330  00					db	0
020A:1331  00					db	0
020A:1332  00					db	0
020A:1333  00					db	0
020A:1334  00					db	0
020A:1335  00					db	0
020A:1336  00					db	0
020A:1337  00					db	0
020A:1338  00					db	0
020A:1339  00					db	0
020A:133A  00					db	0
020A:133B  00					db	0
020A:133C  00					db	0
020A:133D  00					db	0
020A:133E  00			data_202	db	0
020A:133F  00					db	0
020A:1340  00					db	0
020A:1341  00					db	0
020A:1342  00					db	0
020A:1343  00					db	0
020A:1344  00					db	0
020A:1345  0000			data_203	dw	0
020A:1347  00					db	0
020A:1348  00					db	0
020A:1349  00					db	0
020A:134A  00					db	0
020A:134B  00					db	0
020A:134C  00					db	0
020A:134D  00					db	0
020A:134E  00					db	0
020A:134F  00					db	0
020A:1350  00					db	0
020A:1351  00					db	0
020A:1352  00					db	0
020A:1353  00					db	0
020A:1354  00					db	0
020A:1355  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 33

020A:1356  00					db	0
020A:1357  00					db	0
020A:1358  00					db	0
020A:1359  00					db	0
020A:135A  00					db	0
020A:135B  00					db	0
020A:135C  00					db	0
020A:135D  00					db	0
020A:135E  00					db	0
020A:135F  00					db	0
020A:1360  00					db	0
020A:1361  00					db	0
020A:1362  00					db	0
020A:1363  00					db	0
020A:1364  00					db	0
020A:1365  00					db	0
020A:1366  00					db	0
020A:1367  00					db	0
020A:1368  00					db	0
020A:1369  00					db	0
020A:136A  00					db	0
020A:136B  00					db	0
020A:136C  00					db	0
020A:136D  00					db	0
020A:136E  00					db	0
020A:136F  00					db	0
020A:1370  00					db	0
020A:1371  00					db	0
020A:1372  00					db	0
020A:1373  00					db	0
020A:1374  00					db	0
020A:1375  00					db	0
020A:1376  00					db	0
020A:1377  00					db	0
020A:1378  00					db	0
020A:1379  00					db	0
020A:137A  00					db	0
020A:137B  00					db	0
020A:137C  00					db	0
020A:137D  00					db	0
020A:137E  00					db	0
020A:137F  00					db	0
020A:1380  00					db	0
020A:1381  00					db	0
020A:1382  00					db	0
020A:1383  00					db	0
020A:1384  00					db	0
020A:1385  00					db	0
020A:1386  00					db	0
020A:1387  00					db	0
020A:1388  00					db	0
020A:1389  00					db	0
020A:138A  00					db	0
020A:138B  00					db	0
020A:138C  00					db	0
020A:138D  00					db	0
020A:138E  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 34

020A:138F  00					db	0
020A:1390  00					db	0
020A:1391  00					db	0
020A:1392  00					db	0
020A:1393  00					db	0
020A:1394  00					db	0
020A:1395  00					db	0
020A:1396  00					db	0
020A:1397  00					db	0
020A:1398  00					db	0
020A:1399  00					db	0
020A:139A  00					db	0
020A:139B  00					db	0
020A:139C  00					db	0
020A:139D  00					db	0
020A:139E  00					db	0
020A:139F  00					db	0
020A:13A0  00					db	0
020A:13A1  00					db	0
020A:13A2  00					db	0
020A:13A3  00					db	0
020A:13A4  00					db	0
020A:13A5  00					db	0
020A:13A6  00					db	0
020A:13A7  00					db	0
020A:13A8  00					db	0
020A:13A9  00					db	0
020A:13AA  00					db	0
020A:13AB  00					db	0
020A:13AC  00					db	0
020A:13AD  00					db	0
020A:13AE  00					db	0
020A:13AF  00					db	0
020A:13B0  00					db	0
020A:13B1  00					db	0
020A:13B2  00					db	0
020A:13B3  00					db	0
020A:13B4  00					db	0
020A:13B5  00					db	0
020A:13B6  00					db	0
020A:13B7  00					db	0
020A:13B8  00					db	0
020A:13B9  00					db	0
020A:13BA  00					db	0
020A:13BB  00					db	0
020A:13BC  00					db	0
020A:13BD  00					db	0
020A:13BE  00					db	0
020A:13BF  00					db	0
020A:13C0  00					db	0
020A:13C1  00					db	0
020A:13C2  00					db	0
020A:13C3  00					db	0
020A:13C4  00					db	0
020A:13C5  00					db	0
020A:13C6  00					db	0
020A:13C7  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 35

020A:13C8  00					db	0
020A:13C9  00					db	0
020A:13CA  00					db	0
020A:13CB  00					db	0
020A:13CC  00					db	0
020A:13CD  00					db	0
020A:13CE  00					db	0
020A:13CF  00					db	0
020A:13D0  00					db	0
020A:13D1  00					db	0
020A:13D2  00					db	0
020A:13D3  00					db	0
020A:13D4  00					db	0
020A:13D5  00					db	0
020A:13D6  00					db	0
020A:13D7  00					db	0
020A:13D8  00					db	0
020A:13D9  00					db	0
020A:13DA  00					db	0
020A:13DB  00					db	0
020A:13DC  00					db	0
020A:13DD  00					db	0
020A:13DE  00					db	0
020A:13DF  00					db	0
020A:13E0  00					db	0
020A:13E1  00					db	0
020A:13E2  00					db	0
020A:13E3  00					db	0
020A:13E4  00			data_204	db	0
020A:13E5  00			data_205	db	0
020A:13E6  0000			data_206	dw	0
020A:13E8  00					db	0
020A:13E9  00					db	0
020A:13EA  00					db	0
020A:13EB  00					db	0
020A:13EC  00					db	0
020A:13ED  00					db	0
020A:13EE  00					db	0
020A:13EF  00					db	0
020A:13F0  00					db	0
020A:13F1  00					db	0
020A:13F2  00					db	0
020A:13F3  00					db	0
020A:13F4  00					db	0
020A:13F5  00					db	0
020A:13F6  00					db	0
020A:13F7  00					db	0
020A:13F8  00					db	0
020A:13F9  00					db	0
020A:13FA  00					db	0
020A:13FB  00					db	0
020A:13FC  00					db	0
020A:13FD  00					db	0
020A:13FE  00					db	0
020A:13FF  00					db	0
020A:1400  00					db	0
020A:1401  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 36

020A:1402  00					db	0
020A:1403  00					db	0
020A:1404  00					db	0
020A:1405  00					db	0
020A:1406  00					db	0
020A:1407  00					db	0
020A:1408  00					db	0
020A:1409  00					db	0
020A:140A  00					db	0
020A:140B  00					db	0
020A:140C  00					db	0
020A:140D  00					db	0
020A:140E  00					db	0
020A:140F  00					db	0
020A:1410  00					db	0
020A:1411  00					db	0
020A:1412  00					db	0
020A:1413  00					db	0
020A:1414  00					db	0
020A:1415  00					db	0
020A:1416  00					db	0
020A:1417  00					db	0
020A:1418  00					db	0
020A:1419  00					db	0
020A:141A  00					db	0
020A:141B  00					db	0
020A:141C  00					db	0
020A:141D  00					db	0
020A:141E  00					db	0
020A:141F  00					db	0
020A:1420  00					db	0
020A:1421  00					db	0
020A:1422  00					db	0
020A:1423  00					db	0
020A:1424  00					db	0
020A:1425  00					db	0
020A:1426  00					db	0
020A:1427  00					db	0
020A:1428  00					db	0
020A:1429  00					db	0
020A:142A  00					db	0
020A:142B  00					db	0
020A:142C  00					db	0
020A:142D  00					db	0
020A:142E  00					db	0
020A:142F  00					db	0
020A:1430  00					db	0
020A:1431  00					db	0
020A:1432  00					db	0
020A:1433  00					db	0
020A:1434  00					db	0
020A:1435  00					db	0
020A:1436  00					db	0
020A:1437  00					db	0
020A:1438  00					db	0
020A:1439  00					db	0
020A:143A  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 37

020A:143B  00					db	0
020A:143C  00					db	0
020A:143D  00					db	0
020A:143E  00					db	0
020A:143F  00					db	0
020A:1440  00					db	0
020A:1441  00					db	0
020A:1442  00					db	0
020A:1443  00					db	0
020A:1444  00					db	0
020A:1445  00					db	0
020A:1446  00					db	0
020A:1447  00					db	0
020A:1448  00					db	0
020A:1449  00					db	0
020A:144A  00					db	0
020A:144B  00					db	0
020A:144C  00					db	0
020A:144D  00					db	0
020A:144E  00					db	0
020A:144F  00					db	0
020A:1450  00					db	0
020A:1451  00					db	0
020A:1452  00					db	0
020A:1453  00					db	0
020A:1454  00					db	0
020A:1455  00					db	0
020A:1456  00					db	0
020A:1457  00					db	0
020A:1458  00					db	0
020A:1459  00					db	0
020A:145A  00					db	0
020A:145B  00					db	0
020A:145C  00					db	0
020A:145D  00					db	0
020A:145E  00					db	0
020A:145F  00					db	0
020A:1460  00					db	0
020A:1461  00					db	0
020A:1462  00					db	0
020A:1463  00					db	0
020A:1464  00					db	0
020A:1465  00					db	0
020A:1466  00					db	0
020A:1467  00					db	0
020A:1468  00					db	0
020A:1469  00					db	0
020A:146A  00					db	0
020A:146B  00					db	0
020A:146C  00					db	0
020A:146D  00					db	0
020A:146E  00					db	0
020A:146F  00					db	0
020A:1470  00					db	0
020A:1471  00					db	0
020A:1472  00					db	0
020A:1473  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 38

020A:1474  00					db	0
020A:1475  00					db	0
020A:1476  00					db	0
020A:1477  00					db	0
020A:1478  00					db	0
020A:1479  00					db	0
020A:147A  00					db	0
020A:147B  00					db	0
020A:147C  00					db	0
020A:147D  00					db	0
020A:147E  00					db	0
020A:147F  00					db	0
020A:1480  00					db	0
020A:1481  00					db	0
020A:1482  00					db	0
020A:1483  00					db	0
020A:1484  00					db	0
020A:1485  00					db	0
020A:1486  00					db	0
020A:1487  00					db	0
020A:1488  00					db	0
020A:1489  00					db	0
020A:148A  00					db	0
020A:148B  00					db	0
020A:148C  00					db	0
020A:148D  00					db	0
020A:148E  00					db	0
020A:148F  00					db	0
020A:1490  00					db	0
020A:1491  00					db	0
020A:1492  00					db	0
020A:1493  00					db	0
020A:1494  00					db	0
020A:1495  00					db	0
020A:1496  00					db	0
020A:1497  00					db	0
020A:1498  00					db	0
020A:1499  00					db	0
020A:149A  00					db	0
020A:149B  00					db	0
020A:149C  00					db	0
020A:149D  00					db	0
020A:149E  00					db	0
020A:149F  00					db	0
020A:14A0  00					db	0
020A:14A1  00					db	0
020A:14A2  00					db	0
020A:14A3  00					db	0
020A:14A4  00					db	0
020A:14A5  00					db	0
020A:14A6  00					db	0
020A:14A7  00					db	0
020A:14A8  00					db	0
020A:14A9  00					db	0
020A:14AA  00					db	0
020A:14AB  00					db	0
020A:14AC  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 39

020A:14AD  00					db	0
020A:14AE  00					db	0
020A:14AF  00					db	0
020A:14B0  00					db	0
020A:14B1  00					db	0
020A:14B2  00					db	0
020A:14B3  00					db	0
020A:14B4  00					db	0
020A:14B5  00					db	0
020A:14B6  00					db	0
020A:14B7  00					db	0
020A:14B8  00					db	0
020A:14B9  00					db	0
020A:14BA  00					db	0
020A:14BB  00					db	0
020A:14BC  00					db	0
020A:14BD  00					db	0
020A:14BE  00					db	0
020A:14BF  00					db	0
020A:14C0  00					db	0
020A:14C1  00					db	0
020A:14C2  00					db	0
020A:14C3  00					db	0
020A:14C4  00					db	0
020A:14C5  00					db	0
020A:14C6  00					db	0
020A:14C7  00					db	0
020A:14C8  00					db	0
020A:14C9  00					db	0
020A:14CA  00					db	0
020A:14CB  00					db	0
020A:14CC  00					db	0
020A:14CD  00					db	0
020A:14CE  00					db	0
020A:14CF  00					db	0
020A:14D0  00					db	0
020A:14D1  00					db	0
020A:14D2  00					db	0
020A:14D3  00					db	0
020A:14D4  00					db	0
020A:14D5  00					db	0
020A:14D6  00					db	0
020A:14D7  00					db	0
020A:14D8  00					db	0
020A:14D9  00					db	0
020A:14DA  00					db	0
020A:14DB  00					db	0
020A:14DC  00					db	0
020A:14DD  00					db	0
020A:14DE  00					db	0
020A:14DF  00					db	0
020A:14E0  00					db	0
020A:14E1  00					db	0
020A:14E2  00					db	0
020A:14E3  00					db	0
020A:14E4  00					db	0
020A:14E5  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 40

020A:14E6  00					db	0
020A:14E7  00					db	0
020A:14E8  00					db	0
020A:14E9  00					db	0
020A:14EA  00					db	0
020A:14EB  00					db	0
020A:14EC  00					db	0
020A:14ED  00					db	0
020A:14EE  00					db	0
020A:14EF  00					db	0
020A:14F0  00					db	0
020A:14F1  00					db	0
020A:14F2  00					db	0
020A:14F3  00					db	0
020A:14F4  00					db	0
020A:14F5  00					db	0
020A:14F6  00					db	0
020A:14F7  00					db	0
020A:14F8  00					db	0
020A:14F9  00					db	0
020A:14FA  00			data_207	db	0
020A:14FB  00					db	0
020A:14FC  00					db	0
020A:14FD  00					db	0
020A:14FE  00					db	0
020A:14FF  00					db	0
020A:1500  00					db	0
020A:1501  00					db	0
020A:1502  00					db	0
020A:1503  00					db	0
020A:1504  00			data_208	db	0
020A:1505  00					db	0
020A:1506  00					db	0
020A:1507  00					db	0
020A:1508  00					db	0
020A:1509  00					db	0
020A:150A  00					db	0
020A:150B  00					db	0
020A:150C  00					db	0
020A:150D  00					db	0
020A:150E  00					db	0
020A:150F  00					db	0
020A:1510  00					db	0
020A:1511  00					db	0
020A:1512  00					db	0
020A:1513  00					db	0
020A:1514  00					db	0
020A:1515  00					db	0
020A:1516  00					db	0
020A:1517  00					db	0
020A:1518  00					db	0
020A:1519  00					db	0
020A:151A  00					db	0
020A:151B  00					db	0
020A:151C  00					db	0
020A:151D  00					db	0
020A:151E  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 41

020A:151F  00					db	0
020A:1520  00					db	0
020A:1521  00					db	0
020A:1522  00					db	0
020A:1523  00					db	0
020A:1524  00					db	0
020A:1525  00					db	0
020A:1526  00					db	0
020A:1527  00					db	0
020A:1528  00					db	0
020A:1529  00					db	0
020A:152A  00					db	0
020A:152B  00					db	0
020A:152C  00					db	0
020A:152D  00					db	0
020A:152E  00					db	0
020A:152F  00					db	0
020A:1530  00					db	0
020A:1531  00					db	0
020A:1532  00					db	0
020A:1533  00					db	0
020A:1534  00					db	0
020A:1535  00					db	0
020A:1536  00					db	0
020A:1537  00					db	0
020A:1538  00					db	0
020A:1539  00					db	0
020A:153A  00					db	0
020A:153B  00					db	0
020A:153C  00					db	0
020A:153D  00					db	0
020A:153E  00					db	0
020A:153F  00					db	0
020A:1540  00					db	0
020A:1541  00					db	0
020A:1542  00					db	0
020A:1543  00					db	0
020A:1544  00					db	0
020A:1545  00					db	0
020A:1546  00					db	0
020A:1547  00					db	0
020A:1548  00					db	0
020A:1549  00					db	0
020A:154A  00					db	0
020A:154B  00					db	0
020A:154C  00					db	0
020A:154D  00					db	0
020A:154E  00					db	0
020A:154F  00					db	0
020A:1550  00					db	0
020A:1551  00					db	0
020A:1552  00					db	0
020A:1553  00					db	0
020A:1554  00					db	0
020A:1555  00					db	0
020A:1556  00					db	0
020A:1557  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 42

020A:1558  00					db	0
020A:1559  00					db	0
020A:155A  00					db	0
020A:155B  00					db	0
020A:155C  00					db	0
020A:155D  00					db	0
020A:155E  00					db	0
020A:155F  00					db	0
020A:1560  00					db	0
020A:1561  00					db	0
020A:1562  00					db	0
020A:1563  00					db	0
020A:1564  00					db	0
020A:1565  00					db	0
020A:1566  00					db	0
020A:1567  00					db	0
020A:1568  00					db	0
020A:1569  00					db	0
020A:156A  00					db	0
020A:156B  00					db	0
020A:156C  00					db	0
020A:156D  00					db	0
020A:156E  00					db	0
020A:156F  00					db	0
020A:1570  00					db	0
020A:1571  00					db	0
020A:1572  00					db	0
020A:1573  00					db	0
020A:1574  00					db	0
020A:1575  00					db	0
020A:1576  00					db	0
020A:1577  00					db	0
020A:1578  00					db	0
020A:1579  00					db	0
020A:157A  00					db	0
020A:157B  00					db	0
020A:157C  00					db	0
020A:157D  00					db	0
020A:157E  00					db	0
020A:157F  00					db	0
020A:1580  00					db	0
020A:1581  00					db	0
020A:1582  00					db	0
020A:1583  00					db	0
020A:1584  00					db	0
020A:1585  00					db	0
020A:1586  00					db	0
020A:1587  00					db	0
020A:1588  00					db	0
020A:1589  00					db	0
020A:158A  00					db	0
020A:158B  00					db	0
020A:158C  00					db	0
020A:158D  00					db	0
020A:158E  00					db	0
020A:158F  00					db	0
020A:1590  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 43

020A:1591  00					db	0
020A:1592  00					db	0
020A:1593  00					db	0
020A:1594  00					db	0
020A:1595  00					db	0
020A:1596  00					db	0
020A:1597  00					db	0
020A:1598  00					db	0
020A:1599  00					db	0
020A:159A  00					db	0
020A:159B  00					db	0
020A:159C  00					db	0
020A:159D  00					db	0
020A:159E  00					db	0
020A:159F  00					db	0
020A:15A0  00					db	0
020A:15A1  00					db	0
020A:15A2  00					db	0
020A:15A3  00					db	0
020A:15A4  00					db	0
020A:15A5  00					db	0
020A:15A6  00					db	0
020A:15A7  00					db	0
020A:15A8  00					db	0
020A:15A9  00					db	0
020A:15AA  00					db	0
020A:15AB  00					db	0
020A:15AC  00					db	0
020A:15AD  00					db	0
020A:15AE  00					db	0
020A:15AF  00					db	0
020A:15B0  00					db	0
020A:15B1  00					db	0
020A:15B2  00					db	0
020A:15B3  00					db	0
020A:15B4  00					db	0
020A:15B5  00					db	0
020A:15B6  00					db	0
020A:15B7  00					db	0
020A:15B8  00					db	0
020A:15B9  00					db	0
020A:15BA  00					db	0
020A:15BB  00					db	0
020A:15BC  00					db	0
020A:15BD  00					db	0
020A:15BE  00					db	0
020A:15BF  00					db	0
020A:15C0  00					db	0
020A:15C1  00					db	0
020A:15C2  00					db	0
020A:15C3  00					db	0
020A:15C4  00					db	0
020A:15C5  00					db	0
020A:15C6  00					db	0
020A:15C7  00					db	0
020A:15C8  00					db	0
020A:15C9  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 44

020A:15CA  00					db	0
020A:15CB  00					db	0
020A:15CC  00					db	0
020A:15CD  00					db	0
020A:15CE  00			data_209	db	0
020A:15CF  00			data_210	db	0
020A:15D0  00			data_211	db	0
020A:15D1  00					db	0
020A:15D2  00					db	0
020A:15D3  00					db	0
020A:15D4  00					db	0
020A:15D5  00					db	0
020A:15D6  00					db	0
020A:15D7  00					db	0
020A:15D8  00					db	0
020A:15D9  00					db	0
020A:15DA  00					db	0
020A:15DB  00					db	0
020A:15DC  00					db	0
020A:15DD  00					db	0
020A:15DE  00					db	0
020A:15DF  00					db	0
020A:15E0  00					db	0
020A:15E1  00					db	0
020A:15E2  00					db	0
020A:15E3  00					db	0
020A:15E4  00					db	0
020A:15E5  00					db	0
020A:15E6  00					db	0
020A:15E7  00					db	0
020A:15E8  00					db	0
020A:15E9  00					db	0
020A:15EA  00					db	0
020A:15EB  00					db	0
020A:15EC  00					db	0
020A:15ED  00					db	0
020A:15EE  00					db	0
020A:15EF  00					db	0
020A:15F0  00					db	0
020A:15F1  00					db	0
020A:15F2  00					db	0
020A:15F3  00					db	0
020A:15F4  00					db	0
020A:15F5  00					db	0
020A:15F6  00					db	0
020A:15F7  00					db	0
020A:15F8  00					db	0
020A:15F9  00					db	0
020A:15FA  00					db	0
020A:15FB  00					db	0
020A:15FC  00					db	0
020A:15FD  00					db	0
020A:15FE  00					db	0
020A:15FF  00					db	0
020A:1600  00					db	0
020A:1601  00					db	0
020A:1602  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 45

020A:1603  00					db	0
020A:1604  00					db	0
020A:1605  00					db	0
020A:1606  00					db	0
020A:1607  00					db	0
020A:1608  00					db	0
020A:1609  00					db	0
020A:160A  00					db	0
020A:160B  00					db	0
020A:160C  00					db	0
020A:160D  00					db	0
020A:160E  00					db	0
020A:160F  00					db	0
020A:1610  00					db	0
020A:1611  00					db	0
020A:1612  00					db	0
020A:1613  00					db	0
020A:1614  00					db	0
020A:1615  00					db	0
020A:1616  00					db	0
020A:1617  00					db	0
020A:1618  00					db	0
020A:1619  00					db	0
020A:161A  00					db	0
020A:161B  00					db	0
020A:161C  00					db	0
020A:161D  00					db	0
020A:161E  00					db	0
020A:161F  00					db	0
020A:1620  00					db	0
020A:1621  00					db	0
020A:1622  00					db	0
020A:1623  00					db	0
020A:1624  00					db	0
020A:1625  00					db	0
020A:1626  00					db	0
020A:1627  00					db	0
020A:1628  00					db	0
020A:1629  00					db	0
020A:162A  00					db	0
020A:162B  00					db	0
020A:162C  00					db	0
020A:162D  00					db	0
020A:162E  00					db	0
020A:162F  00					db	0
020A:1630  00					db	0
020A:1631  00					db	0
020A:1632  00					db	0
020A:1633  00					db	0
020A:1634  00					db	0
020A:1635  00					db	0
020A:1636  00					db	0
020A:1637  00					db	0
020A:1638  00					db	0
020A:1639  00					db	0
020A:163A  00					db	0
020A:163B  00			data_212	db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 46

020A:163C  00					db	0
020A:163D  00					db	0
020A:163E  00					db	0
020A:163F  00					db	0
020A:1640  00					db	0
020A:1641  00					db	0
020A:1642  00					db	0
020A:1643  00					db	0
020A:1644  00					db	0
020A:1645  00					db	0
020A:1646  00					db	0
020A:1647  00					db	0
020A:1648  00					db	0
020A:1649  00					db	0
020A:164A  00					db	0
020A:164B  00					db	0
020A:164C  00					db	0
020A:164D  00					db	0
020A:164E  00					db	0
020A:164F  00					db	0
020A:1650  00					db	0
020A:1651  00					db	0
020A:1652  00					db	0
020A:1653  00					db	0
020A:1654  00					db	0
020A:1655  00					db	0
020A:1656  00					db	0
020A:1657  00					db	0
020A:1658  00					db	0
020A:1659  00					db	0
020A:165A  00					db	0
020A:165B  00					db	0
020A:165C  00					db	0
020A:165D  00					db	0
020A:165E  00					db	0
020A:165F  00					db	0
020A:1660  00					db	0
020A:1661  00					db	0
020A:1662  00					db	0
020A:1663  00					db	0
020A:1664  00					db	0
020A:1665  00					db	0
020A:1666  00					db	0
020A:1667  00 00				add	[bx+si],al
020A:1669  00 0C				add	[si],cl
020A:166B  00 82 5401				add	[bp+si+5401h],al
020A:166F  03 58 72				add	bx,[bx+si+72h]
020A:1672  03 09				add	cx,[bx+di]
020A:1674  00 19				add	[bx+di],bl
020A:1676  00 00				add	[bx+si],al
020A:1678  0C 00				or	al,0
020A:167A  82 01 52				add	byte ptr [bx+di],52h	; 'R'
020A:167D  03 00				add	ax,[bx+si]
020A:167F  00 FF				add	bh,bh
020A:1681  FF					db	0FFh
020A:1682  D9					db	0D9h
020A:1683  19 04				sbb	[si],ax
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 47

020A:1685  00 00				add	[bx+si],al
020A:1687  00 41 41				add	[bx+di+41h],al
020A:168A  41					db	41h
020A:168B  41 41 41 41 41 41	data_214	db	'AAAAAAAAAAAAAA', 0
020A:1691  41 41 41 41 41 41
020A:1697  41 41 00
020A:169A  00 00				add	[bx+si],al
020A:169C  00 41 41				add	[bx+di+41h],al
020A:169F  0008[41]				db	8 dup (41h)
020A:16A7  00 00				add	[bx+si],al
020A:16A9  41 41				db	 41h, 41h
020A:16AB  41			data_217	db	41h
020A:16AC  41 41 41 41 41 41	data_218	db	'AAAAAAAAAAAAAA', 0
020A:16B2  41 41 41 41 41 41
020A:16B8  41 41 00
020A:16BB  00 00				add	[bx+si],al
020A:16BD  00 41 41				add	[bx+di+41h],al
020A:16C0  0008[41]				db	8 dup (41h)
020A:16C8  00 00				add	[bx+si],al
020A:16CA  0011[41]				db	17 dup (41h)
020A:16DB  00					db	0
020A:16DC  00 00				add	[bx+si],al
020A:16DE  00 41 41				add	[bx+di+41h],al
020A:16E1  0008[41]				db	8 dup (41h)
020A:16E9  00 00				add	[bx+si],al
020A:16EB  0011[41]				db	17 dup (41h)
020A:16FC  00					db	0
020A:16FD  00 00				add	[bx+si],al
020A:16FF  00 41 41				add	[bx+di+41h],al
020A:1702  0008[41]				db	8 dup (41h)
020A:170A  00					db	0
020A:170B  00 00				add	[bx+si],al
020A:170D  00 95 4C1C				add	data_523[di],dl		; (020A:4C1C=0)
020A:1711  7C 03				jl	loc_136			; Jump if <
020A:1713  12 00				adc	al,[bx+si]
020A:1715  00			data_224	db	0
020A:1716			loc_136::
020A:1716  52					push	dx
020A:1717  03 00				add	ax,[bx+si]
020A:1719  00 00				add	[bx+si],al
020A:171B  00 C7				add	bh,al
020A:171D  1C 00				sbb	al,0
020A:171F  00 41 3A				add	[bx+di+3Ah],al
020A:1722  5C					pop	sp
020A:1723  000F[00]				db	15 dup (0)
020A:1732  00			data_226	db	0
020A:1733  00					db	0
020A:1734  00					db	0
020A:1735  00					db	0
020A:1736  00					db	0
020A:1737  00					db	0
020A:1738  00					db	0
020A:1739  00					db	0
020A:173A  00					db	0
020A:173B  00					db	0
020A:173C  00					db	0
020A:173D  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 48

020A:173E  00					db	0
020A:173F  00					db	0
020A:1740  00					db	0
020A:1741  00					db	0
020A:1742  00					db	0
020A:1743  00					db	0
020A:1744  00					db	0
020A:1745  00					db	0
020A:1746  00					db	0
020A:1747  00					db	0
020A:1748  00					db	0
020A:1749  00					db	0
020A:174A  00					db	0
020A:174B  00					db	0
020A:174C  00					db	0
020A:174D  00					db	0
020A:174E  00					db	0
020A:174F  00					db	0
020A:1750  00					db	0
020A:1751  00					db	0
020A:1752  00					db	0
020A:1753  00					db	0
020A:1754  00					db	0
020A:1755  00					db	0
020A:1756  00					db	0
020A:1757  00					db	0
020A:1758  00					db	0
020A:1759  00					db	0
020A:175A  00					db	0
020A:175B  00					db	0
020A:175C  00					db	0
020A:175D  00					db	0
020A:175E  00					db	0
020A:175F  00					db	0
020A:1760  00					db	0
020A:1761  00 00				add	[bx+si],al
020A:1763  00 58 02				add	[bx+si+2],bl
020A:1766  00 42 3A				add	[bp+si+3Ah],al
020A:1769  5C					pop	sp
020A:176A  00					db	0
020A:176B  0040[00]				db	64 dup (0)
020A:17AB  58					pop	ax
020A:17AC  02 00				add	al,[bx+si]
020A:17AE  43					inc	bx
020A:17AF  3A 5C 00		;*		cmp	bl,[si+0]
020A:17AF  3A 5C 00				db	 3Ah, 5Ch, 00h
020A:17B2  0040[00]				db	64 dup (0)
020A:17F2  54					push	sp
020A:17F3  02 00				add	al,[bx+si]
020A:17F5  44					inc	sp
020A:17F6  3A 5C 00		;*		cmp	bl,[si+0]
020A:17F6  3A 5C 00				db	 3Ah, 5Ch, 00h
020A:17F9  0040[00]				db	64 dup (0)
020A:1839  5C					pop	sp
020A:183A  02 00				add	al,[bx+si]
020A:183C  B5 01				mov	ch,1
020A:183E  00 00				add	[bx+si],al
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 49

020A:1840  53					push	bx
020A:1841  8F 03				pop	word ptr [bp+di]
020A:1843  7E 00				jle	$+2			; delay for I/O
020A:1845  00 0C				add	[si],cl
020A:1847  00 58 00		;*		add	[bx+si+0],bl
020A:1847  00 58 00				db	 00h, 58h, 00h
020A:184A  AA					stosb				; Store al to es:[di]
020A:184B  03 00				add	ax,[bx+si]
020A:184D  00					db	0
020A:184E  00					db	0
020A:184F  00 00				add	[bx+si],al
020A:1851  00 09				add	[bx+di],cl
020A:1853  00 48 00		;*		add	[bx+si+0],cl
020A:1853  00 48 00				db	 00h, 48h, 00h
020A:1856  80 00 00				add	byte ptr [bx+si],0
020A:1859  00 C0				add	al,al
020A:185B  03 00				add	ax,[bx+si]
020A:185D  00 40 00		;*		add	[bx+si+0],al
020A:185D  00 40 00				db	 00h, 40h, 00h
020A:1860  40					inc	ax
020A:1861  00 53 FF				add	[bp+di-1],dl
020A:1864  00 F0				add	al,dh
020A:1866  E8 01CE				call	sub_23			; (1A37)
020A:1869  12 00				adc	al,[bx+si]
020A:186B  46					inc	si
020A:186C  07					pop	es
020A:186D  0A 02				or	al,[bp+si]
020A:186F  E8 01C5				call	sub_23			; (1A37)
020A:1872  1B 00				sbb	ax,[bx+si]
020A:1874  0A 04				or	al,[si]
020A:1876  0A 02				or	al,[bp+si]
020A:1878  EB 02				jmp	short loc_137		; (187C)
020A:187A  90					nop
020A:187B  00 E8				add	al,ch
020A:187D  B8 2401				mov	ax,2401h
020A:1880  00 A4 0A0C				add	data_147[si],ah		; (020A:0A0C=1Ch)
020A:1884  02 E8				add	ch,al
020A:1886  AF					scasw				; Scan es:[di] for ax
020A:1887  01 31				add	[bx+di],si
020A:1889  00 EB				add	bl,ch
020A:188B  10 FF				adc	bh,bh
020A:188D  03 0A				add	cx,[bp+si]
020A:188F  02 4B 42				add	cl,[bp+di+42h]
020A:1892  00 EB				add	bl,ch
020A:1894  0C 00				or	al,0
020A:1896  00					db	0
020A:1897  00					db	0
020A:1898  00					db	0
020A:1899  00 00				add	[bx+si],al
020A:189B  00 E8				add	al,ch
020A:189D  98					cbw				; Convrt byte to word
020A:189E  01 3C				add	[si],di
020A:18A0  00 E9				add	cl,ch
020A:18A2  32 01				xor	al,[bx+di]
020A:18A4  EB 10				jmp	short loc_138		; (18B6)
020A:18A6  FF 03				inc	word ptr [bp+di]
020A:18A8  0A 02				or	al,[bp+si]
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 50

020A:18AA  4B					dec	bx
020A:18AB  42					inc	dx
020A:18AC  00 EB				add	bl,ch
020A:18AE  0C 00				or	al,0
020A:18B0  00					db	0
020A:18B1  00					db	0
020A:18B2  00					db	0
020A:18B3  00 00				add	[bx+si],al
020A:18B5  00 E8				add	al,ch
020A:18B7  7E 01				jle	loc_139			; Jump if < or =
020A:18B9  56					push	si
020A:18BA			loc_139::
020A:18BA  00 E9				add	cl,ch
020A:18BC  18 01				sbb	[bx+di],al
020A:18BE  EB 10				jmp	short loc_140		; (18D0)
020A:18C0  FF 03				inc	word ptr [bp+di]
020A:18C2  0A 02				or	al,[bp+si]
020A:18C4  4B					dec	bx
020A:18C5  42					inc	dx
020A:18C6  00 EB				add	bl,ch
020A:18C8  0C 00				or	al,0
020A:18CA  00					db	0
020A:18CB  00					db	0
020A:18CC  00					db	0
020A:18CD  00 00				add	[bx+si],al
020A:18CF  00 E8				add	al,ch
020A:18D1  64					db	64h
020A:18D2  01 70 00		;*		add	[bx+si+0],si
020A:18D2  01 70 00				db	 01h, 70h, 00h
020A:18D5  E9 00FE				jmp	loc_153			; (19D6)
020A:18D8  EB 10				jmp	short loc_141		; (18EA)
020A:18DA  FF 03				inc	word ptr [bp+di]
020A:18DC  0A 02				or	al,[bp+si]
020A:18DE  4B					dec	bx
020A:18DF  42					inc	dx
020A:18E0  00 EB				add	bl,ch
020A:18E2  0C 00				or	al,0
020A:18E4  00					db	0
020A:18E5  00					db	0
020A:18E6  00					db	0
020A:18E7  00 00				add	[bx+si],al
020A:18E9  00 E8				add	al,ch
020A:18EB  4A					dec	dx
020A:18EC  01 8A E900				add	[bp+si-1700h],cx
020A:18F0  E4 00				in	al,0			; port 0, DMA-1 bas&add ch 0
020A:18F2  EB 10				jmp	short loc_142		; (1904)
020A:18F4  B3 07				mov	bl,7
020A:18F6  0A 02				or	al,[bp+si]
020A:18F8  4B					dec	bx
020A:18F9  42					inc	dx
020A:18FA  00 EB				add	bl,ch
020A:18FC  0C 00				or	al,0
020A:18FE  00					db	0
020A:18FF  00					db	0
020A:1900  00					db	0
020A:1901  00 00				add	[bx+si],al
020A:1903  00 E8				add	al,ch
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 51

020A:1905  30 01				xor	[bx+di],al
020A:1907  A4					movsb				; Mov [si] to es:[di]
020A:1908  00 E9				add	cl,ch
020A:190A  CA EB00				retf	0EB00h			; Return far
020A:190D  10 B4 0A06				adc	data_146[si],dh		; (020A:0A06=74h)
020A:1911  02 4B 42				add	cl,[bp+di+42h]
020A:1914  00 EB				add	bl,ch
020A:1916  0C 00				or	al,0
020A:1918  00					db	0
020A:1919  00					db	0
020A:191A  00					db	0
020A:191B  00 00				add	[bx+si],al
020A:191D  00 E8				add	al,ch
020A:191F  16					push	ss
020A:1920  01 BE E900				add	[bp-1700h],di
020A:1924  B0 00				mov	al,0
020A:1926  EB 10				jmp	short loc_143		; (1938)
020A:1928  B4 06				mov	ah,6
020A:192A  0A 02				or	al,[bp+si]
020A:192C  4B					dec	bx
020A:192D  42					inc	dx
020A:192E  00 EB				add	bl,ch
020A:1930  0C 00				or	al,0
020A:1932  00					db	0
020A:1933  00					db	0
020A:1934  00					db	0
020A:1935  00 00				add	[bx+si],al
020A:1937  00 E8				add	al,ch
020A:1939  FC					cld				; Clear direction
020A:193A  00 D8				add	al,bl
020A:193C  00 E9				add	cl,ch
020A:193E  96					xchg	si,ax
020A:193F  00 EB				add	bl,ch
020A:1941  10 B4 0A06				adc	data_146[si],dh		; (020A:0A06=74h)
020A:1945  02 4B 42				add	cl,[bp+di+42h]
020A:1948  00 EB				add	bl,ch
020A:194A  0C 00				or	al,0
020A:194C  00					db	0
020A:194D  00					db	0
020A:194E  00					db	0
020A:194F  00 00				add	[bx+si],al
020A:1951  00 E8				add	al,ch
020A:1953  E2 00				loop	locloop_144		; Loop if cx > 0


020A:1955			locloop_144::
020A:1955  F2					db	0F2h
020A:1956  00 EB				add	bl,ch
020A:1958  7D 90		;*		jge	loc_141			;*Jump if > or =
020A:1958  7D 90				db	 7Dh, 90h
020A:195A  EB 10				jmp	short loc_145		; (196C)
020A:195C  B4 06				mov	ah,6
020A:195E  0A 02				or	al,[bp+si]
020A:1960  4B					dec	bx
020A:1961  42					inc	dx
020A:1962  00 EB				add	bl,ch
020A:1964  0C 00				or	al,0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 52

020A:1966  00					db	0
020A:1967  00					db	0
020A:1968  00					db	0
020A:1969  00 00				add	[bx+si],al
020A:196B  00 E8				add	al,ch
020A:196D  C8					db	0C8h
020A:196E  00 0C				add	[si],cl
020A:1970  01 EB				add	bx,bp
020A:1972  63					db	63h
020A:1973  90					nop
020A:1974  EB 10				jmp	short loc_146		; (1986)
020A:1976  B4 06				mov	ah,6
020A:1978  0A 02				or	al,[bp+si]
020A:197A  4B					dec	bx
020A:197B  42					inc	dx
020A:197C  00 EB				add	bl,ch
020A:197E  0C 00				or	al,0
020A:1980  00					db	0
020A:1981  00					db	0
020A:1982  00					db	0
020A:1983  00 00				add	[bx+si],al
020A:1985  00 E8				add	al,ch
020A:1987  AE					scasb				; Scan es:[di] for al
020A:1988  00 26 EB01				add	byte ptr ds:[0EB01h],ah	; (020A:EB01=3Eh)
020A:198C  49					dec	cx
020A:198D  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_22		proc	near
020A:198E  1E					push	ds
020A:198F  50					push	ax
020A:1990  B8 0040				mov	ax,40h
020A:1993  8E D8				mov	ds,ax
020A:1995  9F					lahf				; Load ah from flags
020A:1996  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:199C  75 0C				jnz	loc_148			; Jump if not zero
020A:199E  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020A:19A5			loc_147::
020A:19A5  9E					sahf				; Store ah into flags
020A:19A6  58					pop	ax
020A:19A7  1F					pop	ds
020A:19A8  03EB			data_230	dw	3EBh
020A:19AA			loc_148::
020A:19AA  EBFA			data_231	dw	0EBFAh
020A:19AC  F8					clc				; Clear carry flag
020A:19AD			loc_149::
020A:19AD  C3					retn
				sub_22		endp

							                        ;* No entry point to code
020A:19AE  1E					push	ds
020A:19AF  50					push	ax
020A:19B0  B8 0040				mov	ax,40h
020A:19B3  8E D8				mov	ds,ax
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 53

020A:19B5  9F					lahf				; Load ah from flags
020A:19B6  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:19BC  75 14				jnz	loc_151			; Jump if not zero
020A:19BE  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:19C4  75 0C				jnz	loc_151			; Jump if not zero
020A:19C6  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:19CD			loc_150::
020A:19CD  9E					sahf				; Store ah into flags
020A:19CE  58					pop	ax
020A:19CF  1F					pop	ds
020A:19D0  EB 03				jmp	short loc_152		; (19D5)
020A:19D2			loc_151::
020A:19D2  FB					sti				; Enable interrupts
020A:19D3  EB F8				jmp	short loc_150		; (19CD)
020A:19D5			loc_152::
020A:19D5  C3					retn
020A:19D6			loc_153::
020A:19D6  1E					push	ds
020A:19D7  50					push	ax
020A:19D8  B8 0040				mov	ax,40h
020A:19DB  8E D8				mov	ds,ax
020A:19DD  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:19E3  75 4F				jnz	loc_161			; Jump if not zero
020A:19E5  55					push	bp
020A:19E6  8B EC				mov	bp,sp
020A:19E8  8B 46 0A				mov	ax,[bp+0Ah]
020A:19EB  5D					pop	bp
020A:19EC  A9 0100				test	ax,100h
020A:19EF  75 43				jnz	loc_161			; Jump if not zero
020A:19F1  A9 0200				test	ax,200h
020A:19F4  74 22				jz	loc_157			; Jump if zero
020A:19F6  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:19FD  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:1A03  75 2F				jnz	loc_161			; Jump if not zero
020A:1A05			loc_154::
020A:1A05  86 E0				xchg	ah,al
020A:1A07  FC					cld				; Clear direction
020A:1A08  A8 04				test	al,4
020A:1A0A  75 25				jnz	loc_160			; Jump if not zero
020A:1A0C			loc_155::
020A:1A0C  A8 08				test	al,8
020A:1A0E  75 11				jnz	loc_158			; Jump if not zero
020A:1A10  70 19				jo	loc_159			; Jump if overflow=1
020A:1A12			loc_156::
020A:1A12  9E					sahf				; Store ah into flags
020A:1A13  58					pop	ax
020A:1A14  1F					pop	ds
020A:1A15  CA 0002				retf	2			; Return far
020A:1A18			loc_157::
020A:1A18  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (020A:0314=3231h)
020A:1A1F  EB E4				jmp	short loc_154		; (1A05)
020A:1A21			loc_158::
020A:1A21  70 EF				jo	loc_156			; Jump if overflow=1
020A:1A23  50					push	ax
020A:1A24  B0 7F				mov	al,7Fh
020A:1A26  04 02				add	al,2
020A:1A28  58					pop	ax
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 54

020A:1A29  EB E7				jmp	short loc_156		; (1A12)
020A:1A2B			loc_159::
020A:1A2B  50					push	ax
020A:1A2C  32 C0				xor	al,al			; Zero register
020A:1A2E  58					pop	ax
020A:1A2F  EB E1				jmp	short loc_156		; (1A12)
020A:1A31			loc_160::
020A:1A31  FD					std				; Set direction flag
020A:1A32  EB D8				jmp	short loc_155		; (1A0C)
020A:1A34			loc_161::
020A:1A34  58					pop	ax
020A:1A35  1F					pop	ds
020A:1A36  CF					iret				; Interrupt return

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_23		proc	near
020A:1A37  50					push	ax
020A:1A38  55					push	bp
020A:1A39  06					push	es
020A:1A3A  2E: 8E 06 000A			mov	es,word ptr cs:[0Ah]	; (020A:000A=272Dh)
020A:1A3F  2E: 8B 2E 0010			mov	bp,word ptr cs:[10h]	; (020A:0010=1FBFh)
020A:1A44  B0 01				mov	al,1
020A:1A46  26: 86 46 00				xchg	es:[bp],al
020A:1A4A  3C 00				cmp	al,0
020A:1A4C  75 51				jne	loc_163			; Jump if not equal
020A:1A4E  2E: 2E83		data_232	dw	2E83h
020A:1A51  0010			data_233	dw	10h
020A:1A53  08 26 6689				or	byte ptr ds:[6689h],ah	; (020A:6689=0C6h)
020A:1A57  02 26 568C				add	ah,byte ptr ds:[568Ch]	; (020A:568C=5)
020A:1A5B  04 8B				add	al,8Bh
020A:1A5D  C5 26 6E8B				lds	sp,dword ptr ds:[6E8Bh]	; (020A:6E8B=38A3h) Load 32 bit ptr
020A:1A61  06					push	es
020A:1A62  26: 39 46 00				cmp	es:[bp],ax
020A:1A66  75 44				jne	loc_165			; Jump if not equal
020A:1A68  55					push	bp
020A:1A69  8B EC				mov	bp,sp
020A:1A6B  8B 46 08				mov	ax,[bp+8]
020A:1A6E  5D					pop	bp
020A:1A6F  06					push	es
020A:1A70  17					pop	ss
020A:1A71  8B E5				mov	sp,bp
020A:1A73  8B E8				mov	bp,ax
020A:1A75  2E: 8B 6E 00				mov	bp,cs:[bp]
020A:1A79  9C					pushf				; Push flags
020A:1A7A  2E: FF 5E 00				call	dword ptr cs:[bp]	;*
020A:1A7E  8B EC				mov	bp,sp
020A:1A80  26: 8B 6E 00				mov	bp,es:[bp]
020A:1A84  26: 8E 56 04				mov	ss,es:[bp+4]
020A:1A88  26: 8B 66 02				mov	sp,es:[bp+2]
020A:1A8C  26: C6 46 00 00			mov	byte ptr es:[bp],0
020A:1A91  2E: 89 2E 0010			mov	word ptr cs:[10h],bp	; (020A:0010=1FBFh)
020A:1A96  07					pop	es
020A:1A97  5D					pop	bp
020A:1A98  58					pop	ax
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 55

020A:1A99  83 C4 02				add	sp,2
020A:1A9C  E9 FF37				jmp	loc_153			; (19D6)
020A:1A9F			loc_163::
020A:1A9F  3C 01				cmp	al,1
020A:1AA1  74 04				je	loc_164			; Jump if equal
020A:1AA3  26: 86 46 00				xchg	es:[bp],al
020A:1AA7			loc_164::
020A:1AA7  E8 0012				call	sub_24			; (1ABC)
020A:1AAA  EB A8		;*		jmp	short loc_162		;*(1A54)
020A:1AAA  EB A8				db	0EBh,0A8h
020A:1AAC			loc_165::
020A:1AAC  2E: 3B 2E 000C			cmp	bp,word ptr cs:[0Ch]	; (020A:000C=9028h)
020A:1AB1  72 F4				jb	loc_164			; Jump if below
020A:1AB3  8B E8				mov	bp,ax
020A:1AB5  26: C6 46 00 03			mov	byte ptr es:[bp],3
020A:1ABA  EB EB				jmp	short loc_164		; (1AA7)
				sub_23		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_24		proc	near
020A:1ABC  2E: 8B 2E 000E			mov	bp,word ptr cs:[0Eh]	; (020A:000E=0A02Bh)
020A:1AC1			loc_166::
020A:1AC1  26: 80 7E 00 00			cmp	byte ptr es:[bp],0
020A:1AC6  75 12				jne	loc_168			; Jump if not equal
020A:1AC8  B0 01				mov	al,1
020A:1ACA  26: 86 46 00				xchg	es:[bp],al
020A:1ACE  3C 00				cmp	al,0
020A:1AD0  74 14				je	loc_169			; Jump if equal
020A:1AD2  3C 01				cmp	al,1
020A:1AD4  74 04				je	loc_168			; Jump if equal
020A:1AD6  26: 88 46 00				mov	es:[bp],al
020A:1ADA			loc_168::
020A:1ADA  2E: 3B 2E 000C			cmp	bp,word ptr cs:[0Ch]	; (020A:000C=9028h)
020A:1ADF  74 06				je	loc_170			; Jump if equal
020A:1AE1  83 ED 08				sub	bp,8
020A:1AE4  EB DB				jmp	short loc_166		; (1AC1)
020A:1AE6			loc_169::
020A:1AE6  C3					retn
020A:1AE7			loc_170::
020A:1AE7  E8 FEA4				call	sub_22			; (198E)

020A:1AEA			locloop_171::
020A:1AEA  B0 FF				mov	al,0FFh
020A:1AEC  E6 21				out	21h,al			; port 21h, 8259-1 int comands
020A:1AEE  E6 A1				out	0A1h,al			; port 0A1h  al = 0FFh, inhibit interr
020A:1AF0  8C CE				mov	si,cs
020A:1AF2  8E DE				mov	ds,si
020A:1AF4  BE 02CB				mov	si,2CBh
020A:1AF7  50					push	ax
020A:1AF8  1E					push	ds
020A:1AF9  B8 0070				mov	ax,70h
020A:1AFC  8E D8				mov	ds,ax
020A:1AFE  F6 06 0337 01			test	byte ptr ds:[337h],1	; (0070:0337=0)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 56

020A:1B03  1F					pop	ds
020A:1B04  58					pop	ax
020A:1B05  74 05				jz	loc_172			; Jump if zero
020A:1B07  9A 0070:0338		;*		call	far ptr sub_1		;*(0070:0338)
020A:1B07  9A					db	9Ah
020A:1B08  0338 0070				dw	338h, 70h
020A:1B0C			loc_172::
020A:1B0C  AC					lodsb				; String [si] to al
020A:1B0D  3C 24				cmp	al,24h			; '$'
020A:1B0F  74 08				je	loc_174			; Jump if equal
020A:1B11  B3 07				mov	bl,7
020A:1B13  B4 0E				mov	ah,0Eh
020A:1B15  CD 10				int	10h			; Video display   ah=functn 0Eh
										;  write char al, teletype mode
020A:1B17  EB F3				jmp	short loc_172		; (1B0C)
020A:1B19			loc_174::
020A:1B19  EB FE				jmp	short loc_174		; (1B19)
				sub_24		endp

020A:1B1B  0D 070A				or	ax,70Ah
020A:1B1E  0D 8F0A				or	ax,8F0Ah
020A:1B21  A5					movsw				; Mov [si] to es:[di]
020A:1B22  E0 A5		;*		loopnz	locloop_167		;*Loop if zf=0, cx>0

020A:1B22  E0 A5				db	0E0h,0A5h
020A:1B24  AF					scasw				; Scan es:[di] for ax
020A:1B25  AE					scasb				; Scan es:[di] for al
020A:1B26  AB					stosw				; Store ax to es:[di]
020A:1B27  AD					lodsw				; String [si] to ax
020A:1B28  A5					movsw				; Mov [si] to es:[di]
020A:1B29  AD					lodsw				; String [si] to ax
020A:1B2A  A8 A5				test	al,0A5h
020A:1B2C  20 A2 E3AD				and	[bp+si-1C53h],ah
020A:1B30  E2 E0		;*		loop	locloop_173		;*Loop if cx > 0

020A:1B30  E2 E0				db	0E2h,0E0h
020A:1B32  A5					movsw				; Mov [si] to es:[di]
020A:1B33  AD					lodsw				; String [si] to ax
020A:1B34  AD					lodsw				; String [si] to ax
020A:1B35  A5					movsw				; Mov [si] to es:[di]
020A:1B36  A3 20AE				mov	data_257,ax		; (020A:20AE=2020h)
020A:1B39  E1 E2		;*		loopz	locloop_175		;*Loop if zf=1, cx>0

020A:1B39  E1 E2				db	0E1h,0E2h
020A:1B3B  A5					movsw				; Mov [si] to es:[di]
020A:1B3C  AA					stosb				; Store al to es:[di]
020A:1B3D  A0 0A0D				mov	al,data_148		; (020A:0A0D=0)
020A:1B40  91					xchg	cx,ax
020A:1B41  A8 E1				test	al,0E1h
020A:1B43  E2 A5				loop	locloop_171		; Loop if cx > 0

020A:1B45  AC					lodsb				; String [si] to al
020A:1B46  A0 AE20				mov	al,data_710		; (020A:AE20=0E0h)
020A:1B49  E1 E2		;*		loopz	locloop_176		;*Loop if zf=1, cx>0

020A:1B49  E1 E2				db	0E1h,0E2h
020A:1B4B  A0 AEAD				mov	al,data_713		; (020A:AEAD=0DBh)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 57

020A:1B4E  A2 A5AB				mov	data_683,al		; (020A:A5AB=3Ch)
020A:1B51  AD					lodsw				; String [si] to ax
020A:1B52  A0 0A0D				mov	al,data_148		; (020A:0A0D=0)
020A:1B55  24 07				and	al,7
020A:1B57  00 09				add	[bx+di],cl
020A:1B59  69					db	69h
020A:1B5A  00 00				add	[bx+si],al
020A:1B5C  06					push	es
020A:1B5D  00 06 0000				add	byte ptr ds:[0],al	; (020A:0000=28h)
020A:1B61  00					db	0
020A:1B62  00					db	0
020A:1B63  00 00				add	[bx+si],al
020A:1B65  00 C6				add	dh,al
020A:1B67  0007[00]				db	7 dup (0)
020A:1B6E  46					inc	si
020A:1B6F  01 00				add	[bx+si],ax
020A:1B71  00					db	0
020A:1B72  00					db	0
020A:1B73  00 00				add	[bx+si],al
020A:1B75  00 C6				add	dh,al
020A:1B77  01 00				add	[bx+si],ax
020A:1B79  00					db	0
020A:1B7A  00					db	0
020A:1B7B  00 00				add	[bx+si],al
020A:1B7D  00 46 02				add	[bp+2],al
020A:1B80  00					db	0
020A:1B81  00					db	0
020A:1B82  00					db	0
020A:1B83  00 00				add	[bx+si],al
020A:1B85  00 C6				add	dh,al
020A:1B87  02 00				add	al,[bx+si]
020A:1B89  00					db	0
020A:1B8A  00					db	0
020A:1B8B  00 00				add	[bx+si],al
020A:1B8D  00 46 03				add	[bp+3],al
020A:1B90  00					db	0
020A:1B91  00					db	0
020A:1B92  00					db	0
020A:1B93  00 00				add	[bx+si],al
020A:1B95  00 C6				add	dh,al
020A:1B97  03 00				add	ax,[bx+si]
020A:1B99  00					db	0
020A:1B9A  00					db	0
020A:1B9B  00 00				add	[bx+si],al
020A:1B9D  00 46 04				add	[bp+4],al
020A:1BA0  00 00				add	[bx+si],al
020A:1BA2  06					push	es
020A:1BA3  06					push	es
020A:1BA4  FB					sti				; Enable interrupts
020A:1BA5  8D					db	8Dh
020A:1BA6  C6 04 00				mov	byte ptr [si],0
020A:1BA9  00FD[00]				db	253 dup (0)
020A:1CA6  08 00				or	[bx+si],al
020A:1CA8  0078[00]				db	120 dup (0)
020A:1D20  00			data_238	db	0
020A:1D21  00					db	0
020A:1D22  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 58

020A:1D23  00 00				add	[bx+si],al
020A:1D25  00 10				add	[bx+si],dl
020A:1D27  00					db	0
020A:1D28  007E[00]				db	126 dup (0)
020A:1DA6  18 00				sbb	[bx+si],al
020A:1DA8  0030[00]				db	48 dup (0)
020A:1DD8  00			data_241	db	0
020A:1DD9  00					db	0
020A:1DDA  00					db	0
020A:1DDB  00					db	0
020A:1DDC  00					db	0
020A:1DDD  00					db	0
020A:1DDE  00					db	0
020A:1DDF  00					db	0
020A:1DE0  00					db	0
020A:1DE1  00					db	0
020A:1DE2  00					db	0
020A:1DE3  00					db	0
020A:1DE4  00					db	0
020A:1DE5  00					db	0
020A:1DE6  00					db	0
020A:1DE7  00					db	0
020A:1DE8  00					db	0
020A:1DE9  00					db	0
020A:1DEA  00					db	0
020A:1DEB  00					db	0
020A:1DEC  00					db	0
020A:1DED  00					db	0
020A:1DEE  00					db	0
020A:1DEF  00					db	0
020A:1DF0  00					db	0
020A:1DF1  00					db	0
020A:1DF2  00					db	0
020A:1DF3  00					db	0
020A:1DF4  00					db	0
020A:1DF5  00					db	0
020A:1DF6  00					db	0
020A:1DF7  00					db	0
020A:1DF8  00					db	0
020A:1DF9  00					db	0
020A:1DFA  00					db	0
020A:1DFB  00					db	0
020A:1DFC  00					db	0
020A:1DFD  00					db	0
020A:1DFE  00					db	0
020A:1DFF  00					db	0
020A:1E00  00					db	0
020A:1E01  00					db	0
020A:1E02  00					db	0
020A:1E03  00					db	0
020A:1E04  00					db	0
020A:1E05  00					db	0
020A:1E06  00					db	0
020A:1E07  00					db	0
020A:1E08  00					db	0
020A:1E09  00					db	0
020A:1E0A  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 59

020A:1E0B  00					db	0
020A:1E0C  00					db	0
020A:1E0D  00					db	0
020A:1E0E  00					db	0
020A:1E0F  00					db	0
020A:1E10  00					db	0
020A:1E11  00					db	0
020A:1E12  00					db	0
020A:1E13  00					db	0
020A:1E14  00					db	0
020A:1E15  00					db	0
020A:1E16  00					db	0
020A:1E17  00					db	0
020A:1E18  00					db	0
020A:1E19  00					db	0
020A:1E1A  00					db	0
020A:1E1B  00					db	0
020A:1E1C  00					db	0
020A:1E1D  00					db	0
020A:1E1E  00					db	0
020A:1E1F  00					db	0
020A:1E20  00					db	0
020A:1E21  00					db	0
020A:1E22  00					db	0
020A:1E23  00 00				add	[bx+si],al
020A:1E25  00 20				add	[bx+si],ah
020A:1E27  00					db	0
020A:1E28  0061[00]				db	97 dup (0)
020A:1E89  00			data_243	db	0
020A:1E8A  00					db	0
020A:1E8B  0000 0000		data_244	dd	00000h
020A:1E8F  00					db	0
020A:1E90  00					db	0
020A:1E91  00					db	0
020A:1E92  00					db	0
020A:1E93  00					db	0
020A:1E94  00					db	0
020A:1E95  00					db	0
020A:1E96  00					db	0
020A:1E97  00					db	0
020A:1E98  00					db	0
020A:1E99  00					db	0
020A:1E9A  00					db	0
020A:1E9B  00					db	0
020A:1E9C  00					db	0
020A:1E9D  00					db	0
020A:1E9E  00					db	0
020A:1E9F  00					db	0
020A:1EA0  00					db	0
020A:1EA1  00					db	0
020A:1EA2  00					db	0
020A:1EA3  00 00				add	[bx+si],al
020A:1EA5  00 28				add	[bx+si],ch
020A:1EA7  00					db	0
020A:1EA8  0046[00]				db	70 dup (0)
020A:1EEE  0000 0000		data_246	dd	00000h			; Data table (indexed access)
020A:1EF2  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 60

020A:1EF3  00					db	0
020A:1EF4  00					db	0
020A:1EF5  00					db	0
020A:1EF6  00					db	0
020A:1EF7  00					db	0
020A:1EF8  00					db	0
020A:1EF9  00					db	0
020A:1EFA  00					db	0
020A:1EFB  00					db	0
020A:1EFC  00					db	0
020A:1EFD  00					db	0
020A:1EFE  00					db	0
020A:1EFF  00					db	0
020A:1F00  00					db	0
020A:1F01  00					db	0
020A:1F02  00					db	0
020A:1F03  00					db	0
020A:1F04  00					db	0
020A:1F05  00					db	0
020A:1F06  00					db	0
020A:1F07  00					db	0
020A:1F08  00					db	0
020A:1F09  00					db	0
020A:1F0A  00					db	0
020A:1F0B  00					db	0
020A:1F0C  00					db	0
020A:1F0D  00					db	0
020A:1F0E  00					db	0
020A:1F0F  00					db	0
020A:1F10  00					db	0
020A:1F11  00					db	0
020A:1F12  00					db	0
020A:1F13  00					db	0
020A:1F14  00					db	0
020A:1F15  00					db	0
020A:1F16  00					db	0
020A:1F17  00					db	0
020A:1F18  00					db	0
020A:1F19  00					db	0
020A:1F1A  00					db	0
020A:1F1B  00					db	0
020A:1F1C  00					db	0
020A:1F1D  00					db	0
020A:1F1E  00					db	0
020A:1F1F  00					db	0
020A:1F20  00					db	0
020A:1F21  00					db	0
020A:1F22  00					db	0
020A:1F23  00 00				add	[bx+si],al
020A:1F25  00 30				add	[bx+si],dh
020A:1F27  00					db	0
020A:1F28  007E[00]				db	126 dup (0)
020A:1FA6  38 00				cmp	[bx+si],al
020A:1FA8  006C[00]				db	108 dup (0)
020A:2014  01 91 9101				add	data_632[bx+di],dx	; (020A:9101=309Eh)
020A:2018  FB					sti				; Enable interrupts
020A:2019  8D					db	8Dh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 61

020A:201A  F3					db	0F3h
020A:201B  03 B7 FB00				add	si,word ptr ds:[0FB00h][bx]	; (020A:FB00=453Ah)
020A:201F  8D 2E 8F02				lea	bp,cs:[8F02h]		; Load effective addr
020A:2023  03 46 30				add	ax,[bp+30h]
020A:2026  40					inc	ax
020A:2027  00 04				add	[si],al
020A:2029  00 C3				add	bl,al
020A:202B  3C 00				cmp	al,0
020A:202D  00 06 4D00				add	byte ptr data_527+50h,al	; (020A:4D00='2')
020A:2031  0E					push	cs
020A:2032  04 B5				add	al,0B5h
020A:2034  00 00				add	[bx+si],al
020A:2036  06					push	es
020A:2037  00 43 4F				add	[bp+di+4Fh],al
020A:203A  4D					dec	bp
020A:203B  4D					dec	bp
020A:203C  41					inc	cx
020A:203D  4E					dec	si
020A:203E  44					inc	sp
020A:203F  00 CD				add	ch,cl
020A:2041  20 FF				and	bh,bh
020A:2043  9F					lahf				; Load ah from flags
020A:2044  00 9A FEF0				add	[bp+si-110h],bl
020A:2048  1D 7FF0				sbb	ax,7FF0h
020A:204B  01 0E 4B04				add	data_518,cx		; (020A:4B04=9B66h)
020A:204F  01 0E 5604				add	data_576,cx		; (020A:5604=6C6h)
020A:2053  01 0E 0E04				add	data_173,cx		; (020A:0E04=0DFE8h)
020A:2057  04 01				add	al,1
020A:2059  01 01				add	[bx+di],ax
020A:205B  00 02				add	[bp+si],al
020A:205D  000F[FF]				db	15 dup (0FFh)
020A:206C  CC					int	3			; Debug breakpoint
020A:206D  04 FA				add	al,0FAh
020A:206F  05 040E				add	ax,40Eh
020A:2072  14 00				adc	al,0
020A:2074  18 00				sbb	[bx+si],al
020A:2076  0E					push	cs
020A:2077  04 FF				add	al,0FFh
020A:2079  FF					db	0FFh
020A:207A  FF					db	0FFh
020A:207B  FF 00				inc	word ptr [bx+si]
020A:207D  00 00				add	[bx+si],al
020A:207F  00 05				add	[di],al
020A:2081  000F[00]				db	15 dup (0)
020A:2090  CD 21				int	21h			; ??INT Non-standard interrupt
020A:2092  CB					retf				; Return far
020A:2093  000A[00]				db	10 dup (0)
020A:209D  20 20 20				db	 20h, 20h, 20h
020A:20A0  20			data_254	db	20h			; Data table (indexed access)
020A:20A1  20 20				and	[bx+si],ah
020A:20A3  20 20				and	[bx+si],ah
020A:20A5  2020			data_255	dw	2020h			; Data table (indexed access)
020A:20A7  20 00				and	[bx+si],al
020A:20A9  00					db	0
020A:20AA  00 00				add	[bx+si],al
020A:20AC  00 20				add	[bx+si],ah
020A:20AE  2020			data_257	dw	2020h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 62

020A:20B0  0008[20]				db	8 dup (20h)
020A:20B8  0009[00]				db	9 dup (0)
020A:20C1  0D 2020				or	ax,2020h
020A:20C4  20 53 45				and	[bp+di+45h],dl
020A:20C7  54					push	sp
020A:20C8  20 42 4C				and	[bp+si+4Ch],al
020A:20CB  41					inc	cx
020A:20CC  53					push	bx
020A:20CD  54					push	sp
020A:20CE  45					inc	bp
020A:20CF  52					push	dx
020A:20D0  3D 3041				cmp	ax,3041h
020A:20D3  0D A8AD				or	ax,0A8ADh
020A:20D6  A5					movsw				; Mov [si] to es:[di]
020A:20D7  20 A4 EFAB				and	byte ptr ds:[0EFABh][si],ah	; (020A:EFAB=45h)
020A:20DB  20 A1 A7A2				and	data_687[bx+di],ah	; (020A:A7A2=26h)
020A:20DF  AE					scasb				; Scan es:[di] for al
020A:20E0  A2 A3AE				mov	data_674,al		; (020A:A3AE=0D3h)
020A:20E3  AE					scasb				; Scan es:[di] for al
020A:20E4  20 AF E0AE				and	byte ptr ds:[0E0AEh][bx],ch	; (020A:E0AE=0BEh)
020A:20E8  E2 A0		;*		loop	locloop_177		;*Loop if cx > 0

020A:20E8  E2 A0				db	0E2h,0A0h
020A:20EA  20 A2 AEA2				and	[bp+si-515Eh],ah
020A:20EE  A4					movsb				; Mov [si] to es:[di]
020A:20EF  A0			data_260	db	0A0h
020A:20F0  2D EBA2				sub	ax,0EBA2h
020A:20F3  A2 A4AE				mov	byte ptr data_681,al	; (020A:A4AE=0Dh)
020A:20F6  A0 5320				mov	al,data_572		; (020A:5320=74h)
020A:20F9  42					inc	dx
020A:20FA  2C 20				sub	al,20h			; ' '
020A:20FC  AD					lodsw				; String [si] to ax
020A:20FD  A0 E0AF				mov	al,byte ptr ds:[0E0AFh]	; (020A:E0AF=0D6h)
020A:2100  A8 AC				test	al,0ACh
020A:2102  A5					movsw				; Mov [si] to es:[di]
020A:2103  E0 3A				loopnz	locloop_181		; Loop if zf=0, cx>0

020A:2105  0D 0DEC				or	ax,0DECh
020A:2108  E0 EB		;*		loopnz	locloop_180		;*Loop if zf=0, cx>0

020A:2108  E0 EB				db	0E0h,0EBh
020A:210A  A5					movsw				; Mov [si] to es:[di]
020A:210B  0D 0000				or	ax,0
020A:210E  0032[00]				db	50 dup (0)
020A:2140  E9 174D				jmp	loc_385			; (3890)
020A:2143  00 17				add	[bx],dl
020A:2145  64					db	64h
020A:2146  FF					db	0FFh
020A:2147  FF 37				push	word ptr [bx]
020A:2149  5E					pop	si
020A:214A  FF					db	0FFh
020A:214B  FF F5		;*		push	bp
020A:214B  FF F5				db	0FFh,0F5h
020A:214D  5C					pop	sp
020A:214E  FF					db	0FFh
020A:214F  FF 24				jmp	word ptr [si]		;*
020A:2151  61					db	61h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 63

020A:2152  FF					db	0FFh
020A:2153  FF					db	0FFh
020A:2154  E9 FF5C		;*		jmp	loc_179			;*(20B3)
020A:2154  E9 5C FF				db	0E9h, 5Ch,0FFh
							                        ;* No entry point to code
020A:2157  FF 63 5F				jmp	word ptr [bp+di+5Fh]	;*
020A:215A  FF					db	0FFh
							                        ;* No entry point to code
020A:215B  FF 01				inc	word ptr [bx+di]
020A:215D  61					db	61h
020A:215E  FF					db	0FFh
020A:215F  FF 6E 5E				jmp	dword ptr [bp+5Eh]	;*
020A:2162  FF					db	0FFh
							                        ;* No entry point to code
020A:2163  FF 5A 64				call	dword ptr [bp+si+64h]	;*
020A:2166  FF					db	0FFh
020A:2167  FF 82 FF5F				inc	word ptr [bp+si-0A1h]
020A:216B  FF D3				call	bx			;*
020A:216D  64					db	64h
020A:216E  FF					db	0FFh
020A:216F  FF AF D900				jmp	dword ptr ds:[0D900h][bx]	;*(020A:D900=3C83h)
							                        ;* No entry point to code
020A:2173  02 01				add	al,[bx+di]
020A:2175  FB					sti				; Enable interrupts
020A:2176  E8 0064				call	sub_25			; (21DD)
020A:2179  1E					push	ds
020A:217A  0E					push	cs
020A:217B  2E: FF 2E 0104			jmp	dword ptr cs:[104h]	; (020A:0104=908h)
							                        ;* No entry point to code
020A:2180  FB					sti				; Enable interrupts
020A:2181  E8 0059				call	sub_25			; (21DD)
020A:2184  1E					push	ds
020A:2185  0E					push	cs
020A:2186  2E: FF 2E 0108			jmp	dword ptr cs:[108h]	; (020A:0108=0A302h)
							                        ;* No entry point to code
020A:218B  FB					sti				; Enable interrupts
020A:218C  E8 004E				call	sub_25			; (21DD)
020A:218F  1E					push	ds
020A:2190  0E					push	cs
020A:2191  2E: FF 2E 010C			jmp	dword ptr cs:[10Ch]	; (020A:010C=9028h)
							                        ;* No entry point to code
020A:2196  FB					sti				; Enable interrupts
020A:2197  E8 0043				call	sub_25			; (21DD)
020A:219A  1E					push	ds
020A:219B  0E					push	cs
020A:219C  2E: FF 2E 0110			jmp	dword ptr cs:[110h]	; (020A:0110=1FBFh)
020A:21A1			loc_182::
020A:21A1  E8 0039				call	sub_25			; (21DD)
020A:21A4  1E					push	ds
020A:21A5  0E					push	cs
020A:21A6  2E: FF 2E 0114			jmp	dword ptr cs:[114h]	; (020A:0114=0C0Bh)
							                        ;* No entry point to code
020A:21AB  E8 002F				call	sub_25			; (21DD)
020A:21AE  1E					push	ds
020A:21AF  0E					push	cs
020A:21B0  2E: FF 2E 0118			jmp	dword ptr cs:[118h]	; (020A:0118=0)
							                        ;* No entry point to code
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 64

020A:21B5  E8 0025				call	sub_25			; (21DD)
020A:21B8  1E					push	ds
020A:21B9  0E					push	cs
020A:21BA  2E: FF 2E 011C			jmp	dword ptr cs:[11Ch]	; (020A:011C=145Dh)
020A:21BF			loc_183::
020A:21BF  E8 001B				call	sub_25			; (21DD)
020A:21C2  1E					push	ds
020A:21C3  0E					push	cs
020A:21C4  2E: FF 2E 0120			jmp	dword ptr cs:[120h]	; (020A:0120=0A3BAh)
							                        ;* No entry point to code
020A:21C9  E8 0011				call	sub_25			; (21DD)
020A:21CC  1E					push	ds
020A:21CD  0E					push	cs
020A:21CE  2E: FF 2E 0124			jmp	dword ptr cs:[124h]	; (020A:0124=201h)
							                        ;* No entry point to code
020A:21D3  E8 0007				call	sub_25			; (21DD)
020A:21D6  1E					push	ds
020A:21D7  0E					push	cs
020A:21D8  2E: FF 2E 0128			jmp	dword ptr cs:[128h]	; (020A:0128=1405h)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_25		proc	near
020A:21DD  9C					pushf				; Push flags
020A:21DE  50					push	ax
020A:21DF  2E: 80 3E 0134 00			cmp	byte ptr cs:[134h],0	; (020A:0134=0)
020A:21E5  74 08				je	loc_184			; Jump if equal
020A:21E7  E8 000D				call	sub_26			; (21F7)
020A:21EA  73 03				jnc	loc_184			; Jump if carry=0
020A:21EC  E8 001B				call	sub_27			; (220A)
020A:21EF			loc_184::
020A:21EF  58					pop	ax
020A:21F0  9D					popf				; Pop flags
020A:21F1  C3					retn
				sub_25		endp

020A:21F2  EA 040E:0135		;*		jmp	far ptr loc_1994	;*(040E:0135)
020A:21F2  EA					db	0EAh
020A:21F3  0135 040E				dw	135h, 40Eh

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_26		proc	near
020A:21F7  53					push	bx
020A:21F8  50					push	ax
020A:21F9  B4 07				mov	ah,7
020A:21FB  2E: FF 1E 0130			call	dword ptr cs:[130h]	; (020A:0130=3E3Dh)
020A:2200  0B C0				or	ax,ax			; Zero ?
020A:2202  58					pop	ax
020A:2203  5B					pop	bx
020A:2204  75 02				jnz	loc_185			; Jump if not zero
020A:2206  F9					stc				; Set carry flag
020A:2207  C3					retn
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 65

020A:2208			loc_185::
020A:2208  F8					clc				; Clear carry flag
020A:2209  C3					retn
				sub_26		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_27		proc	near
020A:220A  53					push	bx
020A:220B  50					push	ax
020A:220C  B4 05				mov	ah,5
020A:220E  2E: FF 1E 0130			call	dword ptr cs:[130h]	; (020A:0130=3E3Dh)
020A:2213  0B C0				or	ax,ax			; Zero ?
020A:2215  74 03				jz	loc_186			; Jump if zero
020A:2217  58					pop	ax
020A:2218  5B					pop	bx
020A:2219  C3					retn
020A:221A			loc_186::
020A:221A  EB FE				jmp	short loc_186		; (221A)
				sub_27		endp

							                        ;* No entry point to code
020A:221C  CD 21				int	21h			; DOS Services  ah=function 1Dh
										;  obsolete CP/M function
020A:221E  FA					cli				; Disable interrupts
020A:221F  0E					push	cs
020A:2220  17					pop	ss
020A:2221  BC 0612				mov	sp,612h
020A:2224  FB					sti				; Enable interrupts
020A:2225  0E					push	cs
020A:2226  1F					pop	ds
020A:2227  9C					pushf				; Push flags
020A:2228  50					push	ax
020A:2229  2E: A0 0614				mov	al,byte ptr cs:[614h]	; (020A:0614=2Eh)
020A:222D  A8 80				test	al,80h
020A:222F  74 07				jz	loc_187			; Jump if zero
020A:2231  24 7F				and	al,7Fh
020A:2233  2E: FF 1E 012C			call	dword ptr cs:[12Ch]	; (020A:012C=3A39h)
020A:2238			loc_187::
020A:2238  2E: 80 26 0614 7F			and	byte ptr cs:[614h],7Fh	; (020A:0614=2Eh)
020A:223E  58					pop	ax
020A:223F  9D					popf				; Pop flags
020A:2240  E9 FF5E				jmp	loc_182			; (21A1)
							                        ;* No entry point to code
020A:2243  02 00				add	al,[bx+si]
020A:2245  00 01				add	[bx+di],al
020A:2247  09 02				or	[bp+si],ax
020A:2249  41					inc	cx
020A:224A  02 00				add	al,[bx+si]
020A:224C  00 02				add	[bp+si],al
020A:224E  10 02				adc	[bp+si],al
020A:2250  0009[00]				db	9 dup (0)
020A:2259  02 22				add	ah,[bp+si]
020A:225B  02 03				add	al,[bp+di]
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 66

020A:225D  30 02				xor	[bp+si],al
020A:225F  03 2E 0002				add	bp,word ptr ds:[2]	; (020A:0002=10h)
020A:2263  0010[00]				db	16 dup (0)
020A:2273  01 09				add	[bx+di],cx
020A:2275  02 02				add	al,[bp+si]
020A:2277  5A					pop	dx
020A:2278  02 01				add	al,[bx+di]
020A:227A  3C 02				cmp	al,2
020A:227C  43					inc	bx
020A:227D  02 7C 04				add	bh,[si+4]
020A:2280  000A[00]				db	10 dup (0)
020A:228A  00			data_265	db	0
020A:228B  0E					push	cs
020A:228C  04 7F				add	al,7Fh
020A:228E  01 0E 0004				add	word ptr ds:[4],cx	; (020A:0004=808h)
020A:2292  00					db	0
020A:2293  00					db	0
020A:2294  00					db	0
020A:2295  00 00				add	[bx+si],al
020A:2297  00 43 3A				add	[bp+di+3Ah],al
020A:229A  5C					pop	sp
020A:229B  57					push	di
020A:229C  49					dec	cx
020A:229D  4E					dec	si
020A:229E  44					inc	sp
020A:229F  4F					dec	di
020A:22A0  57					push	di
020A:22A1  53					push	bx
020A:22A2  5C					pop	sp
020A:22A3  53					push	bx
020A:22A4  59					pop	cx
020A:22A5  53					push	bx
020A:22A6  54					push	sp
020A:22A7  45					inc	bp
020A:22A8  4D					dec	bp
020A:22A9  33 32				xor	si,[bp+si]
020A:22AB  5C					pop	sp
020A:22AC  43					inc	bx
020A:22AD  4D4F			data_266	dw	4D4Fh
020A:22AF  4D					dec	bp
020A:22B0  41					inc	cx
020A:22B1  444E			data_267	dw	444Eh
020A:22B3  432E			data_268	dw	432Eh
020A:22B5  4F					dec	di
020A:22B6  4D					dec	bp
020A:22B7  00 00 00 00 00 00			db	0, 0, 0, 0, 0, 0
020A:22BD  0000			data_270	dw	0
020A:22BF  00					db	0
020A:22C0  00					db	0
020A:22C1  00					db	0
020A:22C2  00					db	0
020A:22C3  00					db	0
020A:22C4  00					db	0
020A:22C5  00					db	0
020A:22C6  00					db	0
020A:22C7  00					db	0
020A:22C8  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 67

020A:22C9  00					db	0
020A:22CA  00					db	0
020A:22CB  00					db	0
020A:22CC  00					db	0
020A:22CD  00					db	0
020A:22CE  00					db	0
020A:22CF  00					db	0
020A:22D0  00					db	0
020A:22D1  00					db	0
020A:22D2  00					db	0
020A:22D3  00					db	0
020A:22D4  00					db	0
020A:22D5  00 00				add	[bx+si],al
020A:22D7  00 77 02				add	[bx+2],dh
020A:22DA  2C 01				sub	al,1
020A:22DC			loc_188::
020A:22DC  B4 95				mov	ah,95h
020A:22DE  01 00				add	[bx+si],ax
020A:22E0  00 03				add	[bp+di],al
020A:22E2  FF 9F 1EEE				call	data_246[bx]		;*(020A:1EEE=0)
020A:22E6  01 00				add	[bx+si],ax
020A:22E8  03 00				add	ax,[bx+si]
020A:22EA  01 00				add	[bx+si],ax
020A:22EC  01 01				add	[bx+di],ax
020A:22EE  01 00				add	[bx+si],ax
020A:22F0  01 00				add	[bx+si],ax
020A:22F2  00 00				add	[bx+si],al
020A:22F4  FF					db	0FFh
020A:22F5  FF 00				inc	word ptr [bx+si]
020A:22F7  0009[00]				db	9 dup (0)
020A:2300  0000			data_272	dw	0
020A:2302  04 31				add	al,31h			; '1'
020A:2304  0B A7 0000				or	sp,word ptr ds:[0][bx]	; (020A:0000=1828h)
						nop	                        ;*ASM fixup - sign extn byte
020A:2308  00 00				add	[bx+si],al
020A:230A  00 E7				add	bh,ah
020A:230C  0C A7				or	al,0A7h
020A:230E  0058[00]				db	88 dup (0)
020A:2366  01 00				add	[bx+si],ax
020A:2368  00 00				add	[bx+si],al
020A:236A  01 00				add	[bx+si],ax
020A:236C  0007[00]				db	7 dup (0)
020A:2373  1E					push	ds
020A:2374  06					push	es
020A:2375  0E					push	cs
020A:2376  1F					pop	ds
020A:2377  8B 16 22BD				mov	dx,data_270		; (020A:22BD=0)
020A:237B  A1 22B1				mov	ax,data_267		; (020A:22B1=444Eh)
020A:237E  8B 1E 22AD				mov	bx,data_266		; (020A:22AD=4D4Fh)
020A:2382  8B 0E 22B3				mov	cx,data_268		; (020A:22B3=432Eh)
020A:2386  50					push	ax
020A:2387  53					push	bx
020A:2388  51					push	cx
020A:2389  8C DB				mov	bx,ds
020A:238B  8E C3				mov	es,bx
020A:238D  8B 1E 0593				mov	bx,word ptr ds:[593h]	; (020A:0593=3)
020A:2391  B4 4A				mov	ah,4Ah
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 68

020A:2393  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change memory allocation
										;   bx=bytes/16, es=mem segment
020A:2395  80 3E 02B0 01			cmp	byte ptr ds:[2B0h],1	; (020A:02B0=1Dh)
020A:239A  75 33				jne	loc_189			; Jump if not equal
020A:239C  83 3E 0256 00			cmp	word ptr ds:[256h],0	; (020A:0256=0)
020A:23A1  74 2C				je	loc_189			; Jump if equal
020A:23A3  BB 0007				mov	bx,7
020A:23A6  B4 48				mov	ah,48h
020A:23A8  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:23AA  72 23				jc	loc_189			; Jump if carry Set
020A:23AC  8E C0				mov	es,ax
020A:23AE  33 FF				xor	di,di			; Zero register
020A:23B0  33 F6				xor	si,si			; Zero register
020A:23B2  1E					push	ds
020A:23B3  8E 1E 0256				mov	ds,word ptr ds:[256h]	; (020A:0256=0)
020A:23B7  B9 0021				mov	cx,21h
020A:23BA  83 C1 40				add	cx,40h
020A:23BD  FC					cld				; Clear direction
020A:23BE  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:23C0  1F					pop	ds
020A:23C1  8C C1				mov	cx,es
020A:23C3  8E 06 0256				mov	es,word ptr ds:[256h]	; (020A:0256=0)
020A:23C7  B4 49				mov	ah,49h
020A:23C9  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:23CB  89 0E 0256				mov	word ptr ds:[256h],cx	; (020A:0256=0)
020A:23CF			loc_189::
020A:23CF  59					pop	cx
020A:23D0  5B					pop	bx
020A:23D1  5D					pop	bp
020A:23D2  B4 48				mov	ah,48h
020A:23D4  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:23D6  72 41				jc	loc_190			; Jump if carry Set
020A:23D8  A3 0458				mov	word ptr ds:[458h],ax	; (020A:0458=0C40Eh)
020A:23DB  A3 002C				mov	word ptr ds:[2Ch],ax	; (020A:002C=3A39h)
020A:23DE  8E C0				mov	es,ax
020A:23E0  80 3E 02B0 01			cmp	byte ptr ds:[2B0h],1	; (020A:02B0=1Dh)
020A:23E5  75 34				jne	loc_191			; Jump if not equal
020A:23E7  53					push	bx
020A:23E8  BB 0000				mov	bx,0
020A:23EB  C4					db	0C4h
020A:23EC  C4 54 0F				les	dx,dword ptr [si+0Fh]	; Load 32 bit ptr
020A:23EF  8B C3				mov	ax,bx
020A:23F1  5B					pop	bx
020A:23F2  3D 0000				cmp	ax,0
020A:23F5  74 24				je	loc_191			; Jump if equal
020A:23F7  03 D8				add	bx,ax
020A:23F9  B4 49				mov	ah,49h
020A:23FB  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:23FD  B4 48				mov	ah,48h
020A:23FF  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:2401  72 75				jc	loc_194			; Jump if carry Set
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 69

020A:2403  A3 0458				mov	word ptr ds:[458h],ax	; (020A:0458=0C40Eh)
020A:2406  A3 002C				mov	word ptr ds:[2Ch],ax	; (020A:002C=3A39h)
020A:2409  8E			data_275	db	8Eh
020A:240A  C0					db	0C0h
020A:240B  89 1E 22AD				mov	data_266,bx		; (020A:22AD=4D4Fh)
020A:240F  53					push	bx
020A:2410  C4					db	0C4h
020A:2411  C4 54 0F				les	dx,dword ptr [si+0Fh]	; Load 32 bit ptr
020A:2414  58					pop	ax
020A:2415  3B D8				cmp	bx,ax
020A:2417  76 0D				jbe	loc_192			; Jump if below or =
020A:2419			loc_190::
020A:2419  EB 5D				jmp	short loc_194		; (2478)
020A:241B			loc_191::
020A:241B  1E					push	ds
020A:241C  8E DD				mov	ds,bp
020A:241E  33 F6				xor	si,si			; Zero register
020A:2420  8B FE				mov	di,si
020A:2422  FC					cld				; Clear direction
020A:2423  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:2425  1F					pop	ds
020A:2426			loc_192::
020A:2426  80 3E 228A 00			cmp	data_265,0		; (020A:228A=0)
020A:242B  75 06				jne	loc_193			; Jump if not equal
020A:242D  8E C5				mov	es,bp
020A:242F  B4 49				mov	ah,49h
020A:2431  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:2433			loc_193::
020A:2433  C6 06 029E 01			mov	byte ptr ds:[29Eh],1	; (020A:029E=0)
020A:2438  06					push	es
020A:2439  BE 2760				mov	si,2760h
020A:243C  BF 0000				mov	di,0
020A:243F  B9 A4AD				mov	cx,0A4ADh
020A:2442  BB FFFF				mov	bx,0FFFFh
020A:2445  B4 48				mov	ah,48h
020A:2447  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:2449  3B DA				cmp	bx,dx
020A:244B  72 2B				jb	loc_194			; Jump if below
020A:244D  B4 48				mov	ah,48h
020A:244F  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:2451  72 25				jc	loc_194			; Jump if carry Set
020A:2453  50					push	ax
020A:2454  03 C3				add	ax,bx
020A:2456  2B C2				sub	ax,dx
020A:2458  A3 029C				mov	word ptr ds:[29Ch],ax	; (020A:029C=0)
020A:245B  8E C0				mov	es,ax
020A:245D  58					pop	ax
020A:245E  03 F1				add	si,cx
020A:2460  4E					dec	si
020A:2461  03 F9				add	di,cx
020A:2463  4F					dec	di
020A:2464  FD					std				; Set direction flag
020A:2465  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:2467  FC					cld				; Clear direction
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 70

020A:2468  8E C0				mov	es,ax
020A:246A  B4 49				mov	ah,49h
020A:246C  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:246E  C6 06 0330 00			mov	byte ptr ds:[330h],0	; (020A:0330=61h)
020A:2473  07					pop	es
020A:2474  1F					pop	ds
020A:2475  E9 FD47				jmp	loc_183			; (21BF)
020A:2478			loc_194::
020A:2478  E9 1DC0				jmp	loc_545			; (423B)
020A:247B  0019[00]				db	25 dup (0)
020A:2494  33 03				xor	ax,[bp+di]
020A:2496  82 03 CC				add	byte ptr [bp+di],0CCh
020A:2499  04 80				add	al,80h
020A:249B  00 0E 5C04				add	data_592,cl		; (020A:5C04=0Bh)
020A:249F  00 0E 6C04				add	data_603,cl		; (020A:6C04=41h)
020A:24A3  00 0E 9304				add	data_634,cl		; (020A:9304=43h)
020A:24A7  01 0E 0004				add	word ptr ds:[4],cx	; (020A:0004=808h)
020A:24AB  10 2F				adc	[bx],ch
020A:24AD  5C					pop	sp
020A:24AE  DC					db	0DCh
020A:24AF  01 0E 6B04				add	data_602,cx		; (020A:6B04=25E1h)
020A:24B3  01 0E 0004				add	word ptr ds:[4],cx	; (020A:0004=808h)
020A:24B7  00 C5				add	ch,al
020A:24B9  06					push	es
020A:24BA  00 00				add	[bx+si],al
020A:24BC  5A					pop	dx
020A:24BD  3A 5C 53				cmp	bl,[si+53h]
020A:24C0  52					push	dx
020A:24C1  2E					db	2Eh
020A:24C2  45					inc	bp
020A:24C3  58					pop	ax
020A:24C4  45					inc	bp
020A:24C5  00 5C 73				add	[si+73h],bl
020A:24C8  79 73				jns	loc_196			; Jump if not sign
020A:24CA  74 65				jz	loc_195			; Jump if zero
020A:24CC  6D					db	6Dh
020A:24CD  33 32				xor	si,[bp+si]
020A:24CF  5C					pop	sp
020A:24D0  44					inc	sp
020A:24D1  4F					dec	di
020A:24D2  53					push	bx
020A:24D3  58					pop	ax
020A:24D4  2E					db	2Eh
020A:24D5  45					inc	bp
020A:24D6  58					pop	ax
020A:24D7  45					inc	bp
020A:24D8  00 00				add	[bx+si],al
020A:24DA  58					pop	ax
020A:24DB  45					inc	bp
020A:24DC  00F1[00]				db	241 dup (0)
020A:25CD  66					db	66h
020A:25CE  00 D9				add	cl,bl
020A:25D0  02 46 0B				add	al,[bp+0Bh]
020A:25D3  B5 00				mov	ch,0
020A:25D5  0042[00]				db	66 dup (0)
020A:2617  63					db	63h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 71

020A:2618  0D 0094				or	ax,94h
020A:261B  00 00				add	[bx+si],al
020A:261D  00 E7				add	bh,ah
020A:261F  0C C5				or	al,0C5h
020A:2621  22 0C				and	cl,[si]
020A:2623  94					xchg	sp,ax
020A:2624  EA 0F22:EA22		;*		jmp	far ptr loc_1995	;*(0F22:EA22)
020A:2624  EA					db	0EAh
020A:2625  EA22 0F22				dw	0EA22h, 0F22h
							                        ;* No entry point to code
020A:2629  07					pop	es
020A:262A  00 07				add	[bx],al
020A:262C  D9					db	0D9h
020A:262D  02 01				add	al,[bx+di]
020A:262F  00 D9				add	cl,bl
020A:2631  02 47 01				add	al,[bx+1]
020A:2634  D9					db	0D9h

020A:2635			locloop_198::
020A:2635  02 24				add	ah,[si]
020A:2637  25 95B4				and	ax,95B4h
020A:263A  00 3E 993A				add	byte ptr data_638,bh	; (020A:993A=53h)
020A:263E  0E					push	cs
020A:263F  04 00				add	al,0
020A:2641  00 00				add	[bx+si],al
020A:2643  01 00				add	[bx+si],ax
020A:2645  01 81 0E00				add	data_170[bx+di],ax	; (020A:0E00=5057h)
020A:2649  04 0E				add	al,0Eh
020A:264B  04 DE				add	al,0DEh
020A:264D  01 0E 4604				add	data_508,cx		; (020A:4604=8018h)
020A:2651  32 00				xor	al,[bx+si]
020A:2653  00 00				add	[bx+si],al
020A:2655  41					inc	cx
020A:2656  52					push	dx
020A:2657  49					dec	cx
020A:2658  46					inc	si
020A:2659  59					pop	cx
020A:265A  4E					dec	si
020A:265B  0C 41				or	al,41h			; 'A'
020A:265D  62					db	62h
020A:265E  6F					db	6Fh
020A:265F  72 74				jc	loc_210			; Jump if carry Set
020A:2661  20 28				and	[bx+si],ch
020A:2663  E1 E2		;*		loopz	locloop_200		;*Loop if zf=1, cx>0

020A:2663  E1 E2				db	0E1h,0E2h
020A:2665  AE					scasb				; Scan es:[di] for al
020A:2666  AF					scasw				; Scan es:[di] for ax
020A:2667  29 10				sub	[bx+si],dx
020A:2669  2C 20				sub	al,20h			; ' '
020A:266B			loc_201::
020A:266B  52					push	dx
020A:266C  65					db	65h
020A:266D  74 72				jz	loc_211			; Jump if zero
020A:266F  79 20				jns	loc_204			; Jump if not sign
020A:2671  28 AF A2AE				sub	data_672[bx],ch		; (020A:A2AE=5)
020A:2675  E2 AE		;*		loop	locloop_197		;*Loop if cx > 0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 72


020A:2675  E2 AE				db	0E2h,0AEh
020A:2677  E0 29				loopnz	locloop_206		; Loop if zf=0, cx>0

020A:2679  12 2C				adc	ch,[si]
020A:267B  20 49 67				and	[bx+di+67h],cl
020A:267E  6E					db	6Eh
020A:267F  6F					db	6Fh
020A:2680  6572 2820		data_279	dw	6572h, 2820h
020A:2684  AF					scasw				; Scan es:[di] for ax
020A:2685  E0 AE				loopnz	locloop_198		; Loop if zf=0, cx>0

020A:2687  AF					scasw				; Scan es:[di] for ax
020A:2688  E3 E1				jcxz	loc_201			; Jump if cx=0
020A:268A  AA					stosb				; Store al to es:[di]
020A:268B  29 0E 202C				sub	word ptr ds:[202Ch],cx	; (020A:202C=0)
020A:268F  46					inc	si
020A:2690  61					db	61h
020A:2691			loc_204::
020A:2691  69					db	69h
020A:2692  6C					db	6Ch
020A:2693  20 28				and	[bx+si],ch
020A:2695  E1 A1		;*		loopz	locloop_199		;*Loop if zf=1, cx>0

020A:2695  E1 A1				db	0E1h,0A1h
020A:2697  E0 AE		;*		loopnz	locloop_200		;*Loop if zf=0, cx>0

020A:2697  E0 AE				db	0E0h,0AEh
020A:2699  E1 29				loopz	locloop_209		; Loop if zf=1, cx>0

020A:269B  01 3F				add	[bx],di
020A:269D  07					pop	es
020A:269E  E7 E2				out	0E2h,ax			; port 0E2h ??I/O Non-standard
020A:26A0  A5					movsw				; Mov [si] to es:[di]
020A:26A1  AD					lodsw				; String [si] to ax

020A:26A2			locloop_206::
020A:26A2  A8 A5				test	al,0A5h

020A:26A4			locloop_208::
020A:26A4  00 07				add	[bx],al
020A:26A6  A7					cmpsw				; Cmp [si] to es:[di]
020A:26A7  A0 A8AF				mov	al,data_693		; (020A:A8AF=78h)
020A:26AA  E1 EC		;*		loopz	locloop_205		;*Loop if zf=1, cx>0

020A:26AA  E1 EC				db	0E1h,0ECh
020A:26AC  00 0D				add	[di],cl
020A:26AE  20 25				and	[di],ah
020A:26B0  31 20				xor	[bx+si],sp
020A:26B2  A4					movsb				; Mov [si] to es:[di]
020A:26B3  A8 E1				test	al,0E1h
020A:26B5  AA					stosb				; Store al to es:[di]
020A:26B6  20 25				and	[di],ah
020A:26B8  32 0D				xor	cl,[di]
020A:26BA  0A 13				or	dl,[bp+di]
020A:26BC  20 25				and	[di],ah
020A:26BE  31 20				xor	[bx+si],sp
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 73

020A:26C0  E3 E1		;*		jcxz	loc_207			;*Jump if cx=0
020A:26C0  E3 E1				db	0E3h,0E1h
020A:26C2  E2 E0				loop	locloop_208		; Loop if cx > 0


020A:26C4			locloop_209::
020A:26C4  AE					scasb				; Scan es:[di] for al
020A:26C5  A9 E2E1				test	ax,0E2E1h
020A:26C8  A2 20AE				mov	byte ptr data_257,al	; (020A:20AE=20h)
020A:26CB  25 0D32				and	ax,0D32h
020A:26CE  0A 27				or	ah,[bx]
020A:26D0  82 E1 E2				and	cl,0E2h
020A:26D3  A0 ECA2				mov	al,byte ptr ds:[0ECA2h]	; (020A:ECA2=7Ah)
020A:26D6  E2 A5		;*		loop	locloop_202		;*Loop if cx > 0

020A:26D6  E2 A5				db	0E2h,0A5h
020A:26D8  20 E2				and	dl,ah
020A:26DA  AE					scasb				; Scan es:[di] for al
020A:26DB  AC					lodsb				; String [si] to al
020A:26DC  20 25				and	[di],ah
020A:26DE  31 2C				xor	[si],bp
020A:26E0  20 E1				and	cl,ah
020A:26E2  A5					movsw				; Mov [si] to es:[di]
020A:26E3  E0 A8		;*		loopnz	locloop_203		;*Loop if zf=0, cx>0

020A:26E3  E0 A8				db	0E0h,0A8h

020A:26E5			locloop_212::
020A:26E5  A9 EBAD				test	ax,0EBADh
020A:26E8  A9 AD20				test	ax,0AD20h
020A:26EB  AE					scasb				; Scan es:[di] for al
020A:26EC  AC					lodsb				; String [si] to al
020A:26ED  A5					movsw				; Mov [si] to es:[di]
020A:26EE  E0 20				loopnz	locloop_214		; Loop if zf=0, cx>0

020A:26F0  25 2D32				and	ax,2D32h
020A:26F3  25 0D33				and	ax,0D33h
020A:26F6  0A 37				or	dh,[bx]

020A:26F8			locloop_213::
020A:26F8  88 E1				mov	cl,ah
020A:26FA  AF					scasw				; Scan es:[di] for ax
020A:26FB  AE					scasb				; Scan es:[di] for al
020A:26FC  E0 E7				loopnz	locloop_212		; Loop if zf=0, cx>0

020A:26FE  A5					movsw				; Mov [si] to es:[di]
020A:26FF  AD					lodsw				; String [si] to ax
020A:2700  A0 E220				mov	al,byte ptr ds:[0E220h]	; (020A:E220=0)
020A:2703  A0 ABA1				mov	al,data_700		; (020A:ABA1=26h)
020A:2706  A8 E6				test	al,0E6h
020A:2708  A0 E020				mov	al,byte ptr ds:[0E020h]	; (020A:E020=5Eh)
020A:270B  A0 ACA7				mov	al,data_704		; (020A:ACA7=40h)
020A:270E  A5					movsw				; Mov [si] to es:[di]
020A:270F  E9 ADA5				jmp	$-5258h
							                        ;* No entry point to code
020A:2712  A8 EF				test	al,0EFh
020A:2714  20 E4				and	ah,ah
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 74

020A:2716  A0 ABA9				mov	al,data_702		; (020A:ABA9=6)
020A:2719  AE					scasb				; Scan es:[di] for al
020A:271A  A2 2820				mov	data_281,al		; (020A:2820=0ADh)
020A:271D  46					inc	si
020A:271E  41					inc	cx
020A:271F  54					push	sp
020A:2720  29 20				sub	[bx+si],sp
020A:2722  AD					lodsw				; String [si] to ax
020A:2723  A0 A420				mov	al,data_676		; (020A:A420=83h)
020A:2726  A8 E1				test	al,0E1h
020A:2728  AA					stosb				; Store al to es:[di]
020A:2729  A5					movsw				; Mov [si] to es:[di]
020A:272A  20 25				and	[di],ah
020A:272C  31 0D				xor	[di],cx
020A:272E  0A 1A				or	bl,[bp+si]
020A:2730  8D A5 E0AF				lea	sp,cs:[0E0AFh][di]	; Load effective addr
020A:2734  A0 A8A2				mov	al,data_689		; (020A:A8A2=0A3h)
020A:2737  AB					stosw				; Store ax to es:[di]
020A:2738  EC					in	al,dx			; port 5404h ??I/O Non-standard
020A:2739  AD					lodsw				; String [si] to ax
020A:273A  EB A9				jmp	short locloop_212	; (26E5)
020A:273C  20 43 4F				and	[bp+di+4Fh],al
020A:273F  4D					dec	bp
020A:2740  4D					dec	bp
020A:2741  41					inc	cx
020A:2742  4E					dec	si
020A:2743  44					inc	sp
020A:2744  2E					db	2Eh
020A:2745  43					inc	bx
020A:2746  4F					dec	di
020A:2747  4D					dec	bp
020A:2748  0D 220A				or	ax,220Ah
020A:274B  82 E1 E2				and	cl,0E2h
020A:274E  A0 ECA2				mov	al,byte ptr ds:[0ECA2h]	; (020A:ECA2=7Ah)
020A:2751  E2 A5				loop	locloop_213		; Loop if cx > 0

020A:2753  20 A4 E1A8				and	byte ptr ds:[0E1A8h][si],ah	; (020A:E1A8=2Eh)
020A:2757  AA					stosb				; Store al to es:[di]
020A:2758  20 E1				and	cl,ah
020A:275A  20 25				and	[di],ah
020A:275C  31 20				xor	[bx+si],sp
020A:275E  A2 A420				mov	data_676,al		; (020A:A420=83h)
020A:2761  A8 E1				test	al,0E1h
020A:2763  AA					stosb				; Store al to es:[di]
020A:2764  AE					scasb				; Scan es:[di] for al
020A:2765  A2 A4AE				mov	byte ptr data_681,al	; (020A:A4AE=0Dh)
020A:2768  20 25				and	[di],ah
020A:276A  32 0D				xor	cl,[di]
020A:276C			loc_220::
020A:276C  0A 1A				or	bl,[bp+si]
020A:276E  8D A0 ACA6				lea	sp,cs:[0ACA6h][bx+si]	; Load effective addr
020A:2772  A8 E2				test	al,0E2h
020A:2774  A5					movsw				; Mov [si] to es:[di]
020A:2775  20 AB A1EE				and	[bp+di-5E12h],ch
020A:2779  E3 EE		;*		jcxz	loc_219			;*Jump if cx=0
020A:2779  E3 EE				db	0E3h,0EEh
020A:277B  20 AA A0AB				and	[bp+si-5F55h],ch
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 75

020A:277F  A2 E8A8				mov	byte ptr ds:[0E8A8h],al	; (020A:E8A8=80h)
020A:2782  E3 2E				jcxz	loc_223			; Jump if cx=0
020A:2784  2E					db	2Eh
020A:2785  2E					db	2Eh
020A:2786  0D 390A				or	ax,390Ah
020A:2789  0D 8F0A				or	ax,8F0Ah
020A:278C  E0 A5		;*		loopnz	locloop_216		;*Loop if zf=0, cx>0

020A:278C  E0 A5				db	0E0h,0A5h
020A:278E  AA					stosb				; Store al to es:[di]
020A:278F  E0 A0		;*		loopnz	locloop_215		;*Loop if zf=0, cx>0

020A:278F  E0 A0				db	0E0h,0A0h
020A:2791  E2 A8		;*		loop	locloop_217		;*Loop if cx > 0

020A:2791  E2 A8				db	0E2h,0A8h
020A:2793  E2 EC		;*		loop	locloop_221		;*Loop if cx > 0

020A:2793  E2 EC				db	0E2h,0ECh
020A:2795  20 A2 AFEB				and	[bp+si-5015h],ah
020A:2799  AE					scasb				; Scan es:[di] for al
020A:279A  AB					stosw				; Store ax to es:[di]
020A:279B  AD					lodsw				; String [si] to ax
020A:279C  A5					movsw				; Mov [si] to es:[di]
020A:279D  AD					lodsw				; String [si] to ax
020A:279E  A8 A5				test	al,0A5h
020A:27A0  20 AF AAA0				and	data_698[bx],ch		; (020A:AAA0=4Eh)
020A:27A4  A5					movsw				; Mov [si] to es:[di]
020A:27A5  E2 AD		;*		loop	locloop_218		;*Loop if cx > 0

020A:27A5  E2 AD				db	0E2h,0ADh
020A:27A7  AE					scasb				; Scan es:[di] for al
020A:27A8  A3 20AE				mov	data_257,ax		; (020A:20AE=2020h)
020A:27AB  A7					cmpsw				; Cmp [si] to es:[di]
020A:27AC  A0 A0A4				mov	al,data_662		; (020A:A0A4=0)
020A:27AF  AD					lodsw				; String [si] to ax
020A:27B0  A8 EF				test	al,0EFh
020A:27B2			loc_223::
020A:27B2  20 5B 59				and	[bp+di+59h],bl
020A:27B5  28 A4 29A0				sub	data_283[si],ah		; (020A:29A0=0AAh)

020A:27B9			locloop_224::
020A:27B9  2F					das				; Decimal adjust
020A:27BA  4E					dec	si
020A:27BB  28 AD E2A5				sub	byte ptr ds:[0E2A5h][di],ch	; (020A:E2A5=0)
020A:27BF  29 5D 3F				sub	[di+3Fh],bx
020A:27C2  19 8D 20A5				sbb	data_255[di],cx		; (020A:20A5=2020h)
020A:27C6  E3 A4				jcxz	loc_220			; Jump if cx=0
020A:27C8  A0 E2A5				mov	al,byte ptr ds:[0E2A5h]	; (020A:E2A5=0)
020A:27CB  E1 EF		;*		loopz	locloop_225		;*Loop if zf=1, cx>0

020A:27CB  E1 EF				db	0E1h,0EFh
020A:27CD  20 A2 AFEB				and	[bp+si-5015h],ah
020A:27D1  AE					scasb				; Scan es:[di] for al

020A:27D2			locloop_227::
020A:27D2  AB					stosw				; Store ax to es:[di]
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 76

020A:27D3  AD					lodsw				; String [si] to ax
020A:27D4  A8 E2				test	al,0E2h
020A:27D6  EC					in	al,dx			; port 5404h ??I/O Non-standard
020A:27D7  20 25				and	[di],ah
020A:27D9  31 0D				xor	[di],cx

020A:27DB			locloop_228::
020A:27DB  0A 14				or	dl,[si]

020A:27DD			locloop_229::
020A:27DD  8E					db	8Eh
020A:27DE  E8 A1A8				call	$-5E55h
020A:27E1  AA					stosb				; Store al to es:[di]
020A:27E2  A0 A220				mov	al,data_667		; (020A:A220=74h)
020A:27E5  20 45 58				and	[di+58h],al

020A:27E8			locloop_230::
020A:27E8  45					inc	bp
020A:27E9  2D A0E4				sub	ax,0A0E4h
020A:27EC  A9 A5AB				test	ax,0A5ABh
020A:27EF  0D 210A				or	ax,210Ah
020A:27F2  8F					db	8Fh
020A:27F3  E0 AE		;*		loopnz	locloop_222		;*Loop if zf=0, cx>0

020A:27F3  E0 AE				db	0E0h,0AEh
020A:27F5  A3 A0E0				mov	data_664,ax		; (020A:A0E0=2475h)
020A:27F8  AC					lodsb				; String [si] to al
020A:27F9  AC					lodsb				; String [si] to al
020A:27FA  A0 AD20				mov	al,data_707		; (020A:AD20=83h)
020A:27FD  A5					movsw				; Mov [si] to es:[di]
020A:27FE  20 E3				and	bl,ah
020A:2800  AC					lodsb				; String [si] to al
020A:2801  A5					movsw				; Mov [si] to es:[di]
020A:2802  E9 A5A0				jmp	$-5A5Dh
020A:2805  E2 E1				loop	locloop_230		; Loop if cx > 0

020A:2807  EF					out	dx,ax			; port 5416h ??I/O Non-standard
020A:2808			loc_231::
020A:2808  20 A2 AF20				and	[bp+si-50E0h],ah
020A:280C  A0 EFAC				mov	al,byte ptr ds:[0EFACh]	; (020A:EFAC=0E2h)
020A:280F  E2 A8				loop	locloop_224		; Loop if cx > 0

020A:2811  0D 230A				or	ax,230Ah
020A:2814  0D 8D0A				or	ax,8D0Ah
020A:2817  A5					movsw				; Mov [si] to es:[di]
020A:2818  E2 20				loop	locloop_236		; Loop if cx > 0

020A:281A  E1 A2		;*		loopz	locloop_226		;*Loop if zf=1, cx>0

020A:281A  E1 A2				db	0E1h,0A2h
020A:281C  AE					scasb				; Scan es:[di] for al
020A:281D  A1 A4AE				mov	ax,data_681		; (020A:A4AE=40Dh)
020A:2820  AD			data_281	db	0ADh
020A:2821  EB E5				jmp	short loc_231		; (2808)
							                        ;* No entry point to code
020A:2823  20 A4 E1A5				and	byte ptr ds:[0E1A5h][si],ah	; (020A:E1A5=0E9h)
020A:2827  AA					stosb				; Store al to es:[di]
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 77

020A:2828  E0 A8				loopnz	locloop_227		; Loop if zf=0, cx>0

020A:282A  AF					scasw				; Scan es:[di] for ax
020A:282B  E2 AE				loop	locloop_228		; Loop if cx > 0

020A:282D  E0 AE				loopnz	locloop_229		; Loop if zf=0, cx>0


020A:282F			locloop_234::
020A:282F  A2 E420				mov	byte ptr ds:[0E420h],al	; (020A:E420=8Dh)
020A:2832  A0 ABA9				mov	al,data_702		; (020A:ABA9=6)
020A:2835  AE					scasb				; Scan es:[di] for al
020A:2836  A2 AD24				mov	data_708,al		; (020A:AD24=0)
020A:2839  A5					movsw				; Mov [si] to es:[di]

020A:283A			locloop_236::
020A:283A  AF					scasw				; Scan es:[di] for ax
020A:283B  E0 A0				loopnz	locloop_229		; Loop if zf=0, cx>0

020A:283D  A2 ABA8				mov	data_701,al		; (020A:ABA8=0C6h)
020A:2840  EC					in	al,dx			; port 5416h ??I/O Non-standard
020A:2841  AD					lodsw				; String [si] to ax
020A:2842  A0 20EF				mov	al,data_260		; (020A:20EF=0A0h)
020A:2845  AA					stosb				; Store al to es:[di]
020A:2846  AE					scasb				; Scan es:[di] for al

020A:2847			locloop_237::
020A:2847  AC					lodsb				; String [si] to al
020A:2848  A0 A4AD				mov	al,data_680		; (020A:A4AD=0E9h)
020A:284B  A0 A820				mov	al,data_688		; (020A:A820=0EBh)
020A:284E  AB					stosw				; Store ax to es:[di]
020A:284F  A8 20				test	al,20h			; ' '
020A:2851  A8 AC				test	al,0ACh
020A:2853  EF					out	dx,ax			; port 5416h ??I/O Non-standard
020A:2854  20 E4				and	ah,ah

020A:2856			locloop_238::
020A:2856  A0 ABA9				mov	al,data_702		; (020A:ABA9=6)
020A:2859  A0 0A0D				mov	al,data_148		; (020A:0A0D=0)
020A:285C  0C 8D				or	al,8Dh
020A:285E  A5					movsw				; Mov [si] to es:[di]
020A:285F  E2 20				loop	locloop_241		; Loop if cx > 0

020A:2861  A4					movsb				; Mov [si] to es:[di]
020A:2862  AE					scasb				; Scan es:[di] for al
020A:2863  E1 E2				loopz	locloop_237		; Loop if zf=1, cx>0

020A:2865  E3 AF		;*		jcxz	loc_232			;*Jump if cx=0
020A:2865  E3 AF				db	0E3h,0AFh
020A:2867  A0 1D20				mov	al,data_238		; (020A:1D20=0)
020A:286A  0D 8E0A				or	ax,8E0Ah
020A:286D  E8 A1A8				call	$-5E55h
020A:2870  AA					stosb				; Store al to es:[di]
020A:2871  A0 AF20				mov	al,data_715		; (020A:AF20=58h)
020A:2874  E0 A8		;*		loopnz	locloop_233		;*Loop if zf=0, cx>0

020A:2874  E0 A8				db	0E0h,0A8h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 78

020A:2876  20 A2 A4EB				and	[bp+si-5B15h],ah
020A:287A  A5					movsw				; Mov [si] to es:[di]
020A:287B  AB					stosw				; Store ax to es:[di]
020A:287C  A5					movsw				; Mov [si] to es:[di]

020A:287D			locloop_239::
020A:287D  AD					lodsw				; String [si] to ax

020A:287E			locloop_240::
020A:287E  A8 A8				test	al,0A8h
020A:2880  20 AF ACA0				and	data_703[bx],ch		; (020A:ACA0=6Ch)
020A:2884  EF					out	dx,ax			; port 5416h ??I/O Non-standard
020A:2885  E2 A8				loop	locloop_234		; Loop if cx > 0

020A:2887  39 0D				cmp	[di],cx
020A:2889  0A 8D 20A5				or	cl,byte ptr data_255[di]	; (020A:20A5=20h)
020A:288D  E3 A4		;*		jcxz	loc_235			;*Jump if cx=0
020A:288D  E3 A4				db	0E3h,0A4h
020A:288F  A0 E2A5				mov	al,byte ptr ds:[0E2A5h]	; (020A:E2A5=0)

020A:2892			locloop_243::
020A:2892  E1 EF		;*		loopz	locloop_242		;*Loop if zf=1, cx>0

020A:2892  E1 EF				db	0E1h,0EFh
020A:2894  20 A7 A3A0				and	data_673[bx],ah		; (020A:A3A0=0)
020A:2898  E0 E3				loopnz	locloop_239		; Loop if zf=0, cx>0

020A:289A  A7					cmpsw				; Cmp [si] to es:[di]
020A:289B  A8 E2				test	al,0E2h
020A:289D  EC					in	al,dx			; port 5416h ??I/O Non-standard
020A:289E  20 43 4F				and	[bp+di+4Fh],al
020A:28A1  4D					dec	bp
020A:28A2  4D					dec	bp

020A:28A3			locloop_245::
020A:28A3  41					inc	cx

020A:28A4			locloop_246::
020A:28A4  4E					dec	si
020A:28A5  44					inc	sp
020A:28A6  2E					db	2Eh
020A:28A7  43					inc	bx
020A:28A8  4F					dec	di
020A:28A9  4D					dec	bp
020A:28AA  2C 20				sub	al,20h			; ' '
020A:28AC  E1 A8				loopz	locloop_238		; Loop if zf=1, cx>0

020A:28AE  E1 E2				loopz	locloop_243		; Loop if zf=1, cx>0

020A:28B0  A5					movsw				; Mov [si] to es:[di]
020A:28B1  AC					lodsb				; String [si] to al
020A:28B2  A0 AE20				mov	al,data_710		; (020A:AE20=0E0h)

020A:28B5			locloop_247::
020A:28B5  E1 E2		;*		loopz	locloop_244		;*Loop if zf=1, cx>0

020A:28B5  E1 E2				db	0E1h,0E2h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 79

020A:28B7  A0 AEAD				mov	al,data_713		; (020A:AEAD=0DBh)
020A:28BA  A2 A5AB				mov	data_683,al		; (020A:A5AB=3Ch)

020A:28BD			locloop_248::
020A:28BD  AD					lodsw				; String [si] to ax
020A:28BE  A0 0A0D				mov	al,data_148		; (020A:0A0D=0)
020A:28C1  37					aaa				; Ascii adjust
020A:28C2  0D 8D0A				or	ax,8D0Ah
020A:28C5  A5					movsw				; Mov [si] to es:[di]
020A:28C6  20 E3				and	bl,ah
020A:28C8  A4					movsb				; Mov [si] to es:[di]
020A:28C9  A0 E2A5				mov	al,byte ptr ds:[0E2A5h]	; (020A:E2A5=0)
020A:28CC  E1 EF				loopz	locloop_248		; Loop if zf=1, cx>0


020A:28CE			locloop_250::
020A:28CE  20 A7 AFA0				and	data_716[bx],ah		; (020A:AFA0=39h)
020A:28D2  E3 E1				jcxz	locloop_247		; Jump if cx=0

020A:28D4			locloop_251::
020A:28D4  E2 A8				loop	locloop_240		; Loop if cx > 0

020A:28D6  E2 EC		;*		loop	locloop_249		;*Loop if cx > 0

020A:28D6  E2 EC				db	0E2h,0ECh
020A:28D8  20 43 4F				and	[bp+di+4Fh],al
020A:28DB  4D					dec	bp
020A:28DC  4D					dec	bp
020A:28DD  41					inc	cx
020A:28DE  4E					dec	si
020A:28DF  44					inc	sp
020A:28E0  2E					db	2Eh
020A:28E1  43					inc	bx

020A:28E2			locloop_252::
020A:28E2  4F					dec	di
020A:28E3  4D					dec	bp
020A:28E4  2C 20				sub	al,20h			; ' '
020A:28E6  A7					cmpsw				; Cmp [si] to es:[di]
020A:28E7  A0 A5A2				mov	al,data_682		; (020A:A5A2=26h)
020A:28EA  E0 E8				loopnz	locloop_251		; Loop if zf=0, cx>0


020A:28EC			locloop_253::
020A:28EC  A5					movsw				; Mov [si] to es:[di]
020A:28ED  AD					lodsw				; String [si] to ax
020A:28EE  A8 A5				test	al,0A5h
020A:28F0  20 E0				and	al,ah
020A:28F2  A0 AEA1				mov	al,data_711		; (020A:AEA1=8)
020A:28F5  E2 EB				loop	locloop_252		; Loop if cx > 0

020A:28F7			loc_254::
020A:28F7  0D 3B0A				or	ax,3B0Ah
020A:28FA  0D 8F0A				or	ax,8F0Ah
020A:28FD  E0 A5				loopnz	locloop_246		; Loop if zf=0, cx>0

020A:28FF  E0 A2				loopnz	locloop_245		; Loop if zf=0, cx>0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 80


020A:2901  A0 20AD				mov	al,byte ptr ds:[20ADh]	; (020A:20AD=20h)
020A:2904  AF					scasw				; Scan es:[di] for ax
020A:2905  E0 AE				loopnz	locloop_247		; Loop if zf=0, cx>0

020A:2907  E6 A5				out	0A5h,al			; port 0A5h ??I/O Non-standard
020A:2909  E1 E1				loopz	locloop_253		; Loop if zf=1, cx>0

020A:290B  20 A2 E0A5				and	[bp+si-1F5Bh],ah
020A:290F  E5 AD				in	ax,0ADh			; port 0ADh ??I/O Non-standard
020A:2911  A5					movsw				; Mov [si] to es:[di]
020A:2912  A3 20AE				mov	data_257,ax		; (020A:20AE=2020h)
020A:2915  E3 E0				jcxz	loc_254			; Jump if cx=0
020A:2917  AE					scasb				; Scan es:[di] for al
020A:2918  A2 EFAD				mov	byte ptr ds:[0EFADh],al	; (020A:EFAD=0F6h)
020A:291B  2C 20				sub	al,20h			; ' '
020A:291D  AF					scasw				; Scan es:[di] for ax
020A:291E  E0 AE				loopnz	locloop_250		; Loop if zf=0, cx>0

020A:2920  A4					movsb				; Mov [si] to es:[di]
020A:2921  AE					scasb				; Scan es:[di] for al
020A:2922  AB					stosw				; Store ax to es:[di]
020A:2923  A6					cmpsb				; Cmp [si] to es:[di]
020A:2924  A5					movsw				; Mov [si] to es:[di]

020A:2925			locloop_256::
020A:2925  AD					lodsw				; String [si] to ax
020A:2926  A8 A5				test	al,0A5h
020A:2928  20 AD A2A5				and	data_671[di],ch		; (020A:A2A5=16h)
020A:292C  AE					scasb				; Scan es:[di] for al
020A:292D  A7					cmpsw				; Cmp [si] to es:[di]
020A:292E  AC					lodsb				; String [si] to al
020A:292F  AE					scasb				; Scan es:[di] for al
020A:2930  A6					cmpsb				; Cmp [si] to es:[di]
020A:2931  AD					lodsw				; String [si] to ax
020A:2932  AE					scasb				; Scan es:[di] for al
020A:2933  0D 020A				or	ax,20Ah
020A:2936  0D 580A				or	ax,580Ah
020A:2939  0F			;*		pop	cs			; Dangerous-8088 only
020A:2939  0F					db	0Fh
020A:293A  01 00				add	[bx+si],ax
020A:293C  87 0C				xchg	[si],cx
020A:293E  01 00				add	[bx+si],ax
020A:2940  58					pop	ax
020A:2941			loc_257::
020A:2941  0F			;*		pop	cs			; Dangerous-8088 only
020A:2941  0F					db	0Fh
020A:2942  01 00				add	[bx+si],ax
020A:2944  00					db	0

020A:2945			locloop_258::
020A:2945  00 00				add	[bx+si],al
020A:2947  00 89 0E01				add	byte ptr data_170+1[bx+di],cl	; (020A:0E01=50h)
020A:294B  04 17				add	al,17h
020A:294D  8E					db	8Eh
020A:294E  E8 A1A8				call	$-5E55h
020A:2951  AA					stosb				; Store al to es:[di]
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 81

020A:2952  A0 A720				mov	al,data_686		; (020A:A720=3Eh)

020A:2955			locloop_260::
020A:2955  A0 A8E9				mov	al,byte ptr data_695	; (020A:A8E9=5Eh)
020A:2958  E2 EB				loop	locloop_258		; Loop if cx > 0

020A:295A  20 AE 20E2				and	[bp+20E2h],ch
020A:295E  A7					cmpsw				; Cmp [si] to es:[di]
020A:295F  A0 A8AF				mov	al,data_693		; (020A:A8AF=78h)

020A:2962			locloop_262::
020A:2962  E1 A8		;*		loopz	locloop_255		;*Loop if zf=1, cx>0

020A:2962  E1 A8				db	0E1h,0A8h
020A:2964  17					pop	ss
020A:2965  8D A5 E0AF				lea	sp,cs:[0E0AFh][di]	; Load effective addr
020A:2969  A0 A8A2				mov	al,data_689		; (020A:A8A2=0A3h)

020A:296C			locloop_263::
020A:296C  AB					stosw				; Store ax to es:[di]
020A:296D  EC					in	al,dx			; port 5416h ??I/O Non-standard
020A:296E			loc_264::
020A:296E  AD					lodsw				; String [si] to ax
020A:296F  AE					scasb				; Scan es:[di] for al
020A:2970  A5					movsw				; Mov [si] to es:[di]
020A:2971  20 E3				and	bl,ah
020A:2973  E1 E2		;*		loopz	locloop_261		;*Loop if zf=1, cx>0

020A:2973  E1 E2				db	0E1h,0E2h
020A:2975  E0 AE				loopnz	locloop_256		; Loop if zf=0, cx>0

020A:2977  A9 E2E1				test	ax,0E2E1h
020A:297A  A2 0EAE				mov	byte ptr ds:[0EAEh],al	; (020A:0EAE=1)
020A:297D  8D A5 20E2				lea	sp,cs:[20E2h][di]	; Load effective addr
020A:2981  A3 E2AE				mov	word ptr ds:[0E2AEh],ax	; (020A:E2AE=9E06h)
020A:2984  AE					scasb				; Scan es:[di] for al
020A:2985  A2 AEAD				mov	data_713,al		; (020A:AEAD=0DBh)
020A:2988  E1 E2				loopz	locloop_263		; Loop if zf=1, cx>0

020A:298A  A8 20				test	al,20h			; ' '
020A:298C  8D A5 E0AF				lea	sp,cs:[0E0AFh][di]	; Load effective addr
020A:2990  A0 A8A2				mov	al,data_689		; (020A:A8A2=0A3h)
020A:2993  AB					stosw				; Store ax to es:[di]
020A:2994  EC					in	al,dx			; port 5416h ??I/O Non-standard
020A:2995  AD					lodsw				; String [si] to ax
020A:2996  EB A9				jmp	short loc_257		; (2941)
020A:2998  20 A7 AFA0				and	data_716[bx],ah		; (020A:AFA0=39h)

020A:299C			locloop_268::
020A:299C  E0 AE		;*		loopnz	locloop_259		;*Loop if zf=0, cx>0

020A:299C  E0 AE				db	0E0h,0AEh
020A:299E  E1 20				loopz	locloop_272		; Loop if zf=1, cx>0

020A:29A0  AA			data_283	db	0AAh			; Data table (indexed access)
020A:29A1			loc_269::
020A:29A1  20 E3				and	bl,ah
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 82

020A:29A3  E1 E2		;*		loopz	locloop_266		;*Loop if zf=1, cx>0

020A:29A3  E1 E2				db	0E1h,0E2h
020A:29A5  E0 AE				loopnz	locloop_260		; Loop if zf=0, cx>0

020A:29A7  A9 E2E1				test	ax,0E2E1h
020A:29AA  A2 0FE3				mov	data_187,al		; (020A:0FE3=33h)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_28		proc	near
020A:29AD  8E					db	8Eh
020A:29AE  E8 A1A8				call	$-5E55h
020A:29B1  AA					stosb				; Store al to es:[di]
020A:29B2  A0 A220				mov	al,data_667		; (020A:A220=74h)
020A:29B5  20 A4 ADA0				and	data_709[si],ah		; (020A:ADA0=1Dh)
020A:29B9  AD					lodsw				; String [si] to ax
020A:29BA  EB E5				jmp	short loc_269		; (29A1)
				sub_28		endp

020A:29BC  2B 8D AFA5				sub	cx,data_717[di]		; (020A:AFA5=2C58h)

020A:29C0			locloop_272::
020A:29C0  E0 A0				loopnz	locloop_262		; Loop if zf=0, cx>0

020A:29C2  A2 ABA8				mov	data_701,al		; (020A:ABA8=0C6h)
020A:29C5  EC					in	al,dx			; port 8DB9h ??I/O Non-standard
020A:29C6  AD					lodsw				; String [si] to ax
020A:29C7  EB A5				jmp	short loc_264		; (296E)
							                        ;* No entry point to code
020A:29C9  20 A0 A3E0				and	data_675[bx+si],ah	; (020A:A3E0=4Eh)
020A:29CD  E3 AC		;*		jcxz	locloop_265		;*Jump if cx=0
020A:29CD  E3 AC				db	0E3h,0ACh

020A:29CF			locloop_275::
020A:29CF  A5					movsw				; Mov [si] to es:[di]
020A:29D0  AD					lodsw				; String [si] to ax

020A:29D1			locloop_276::
020A:29D1  E2 EB		;*		loop	locloop_271		;*Loop if cx > 0

020A:29D1  E2 EB				db	0E2h,0EBh
020A:29D3  20 A7 AFA0				and	data_716[bx],ah		; (020A:AFA0=39h)
020A:29D7  E0 AE		;*		loopnz	locloop_266		;*Loop if zf=0, cx>0

020A:29D7  E0 AE				db	0E0h,0AEh
020A:29D9  E1 A0		;*		loopz	locloop_265		;*Loop if zf=1, cx>0

020A:29D9  E1 A0				db	0E1h,0A0h
020A:29DB  20 AA E320				and	[bp+si-1CE0h],ch
020A:29DF  E1 E2		;*		loopz	locloop_273		;*Loop if zf=1, cx>0

020A:29DF  E1 E2				db	0E1h,0E2h
020A:29E1  E0 AE		;*		loopnz	locloop_267		;*Loop if zf=0, cx>0

           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 83

020A:29E1  E0 AE				db	0E0h,0AEh
020A:29E3  A9 E2E1				test	ax,0E2E1h
020A:29E6  A2 0DE3				mov	data_169,al		; (020A:0DE3=0EBh)
020A:29E9  8E					db	8Eh
020A:29EA  E8 A1A8				call	$-5E55h
020A:29ED  AA					stosb				; Store al to es:[di]
020A:29EE  A0 AF20				mov	al,data_715		; (020A:AF20=58h)
020A:29F1  AE					scasb				; Scan es:[di] for al
020A:29F2  A8 E1				test	al,0E1h
020A:29F4  AA					stosb				; Store al to es:[di]
020A:29F5  A0 8D19				mov	al,data_624		; (020A:8D19=2)
020A:29F8  A5					movsw				; Mov [si] to es:[di]
020A:29F9  AF					scasw				; Scan es:[di] for ax
020A:29FA  E0 A0				loopnz	locloop_268		; Loop if zf=0, cx>0


020A:29FC			locloop_277::
020A:29FC  A2 ABA8				mov	data_701,al		; (020A:ABA8=0C6h)
020A:29FF  EC					in	al,dx			; port 8DB9h ??I/O Non-standard
020A:2A00  AD					lodsw				; String [si] to ax
020A:2A01  EB A9		;*		jmp	short loc_270		;*(29AC)
020A:2A01  EB A9				db	0EBh,0A9h
							                        ;* No entry point to code
020A:2A03  20 E2				and	dl,ah
020A:2A05  A8 AF				test	al,0AFh
020A:2A07  20 AD E1AE				and	byte ptr ds:[0E1AEh][di],ch	; (020A:E1AE=2Eh)
020A:2A0B  A8 E2				test	al,0E2h
020A:2A0D  A5					movsw				; Mov [si] to es:[di]
020A:2A0E  AB					stosw				; Store ax to es:[di]
020A:2A0F  EF					out	dx,ax			; port 8D00h ??I/O Non-standard
020A:2A10  10 91 AAA5				adc	data_699[bx+di],dl	; (020A:AAA5=80h)
020A:2A14  E2 AE		;*		loop	locloop_274		;*Loop if cx > 0

020A:2A14  E2 AE				db	0E2h,0AEh
020A:2A16  E0 20				loopnz	locloop_280		; Loop if zf=0, cx>0

020A:2A18  AD					lodsw				; String [si] to ax
020A:2A19  A5					movsw				; Mov [si] to es:[di]
020A:2A1A  20 AD A9A0				and	data_696[di],ch		; (020A:A9A0=2)
020A:2A1E  A4					movsb				; Mov [si] to es:[di]
020A:2A1F  A5					movsw				; Mov [si] to es:[di]
020A:2A20  AD					lodsw				; String [si] to ax
020A:2A21  15 2082				adc	ax,2082h
020A:2A24  AF					scasw				; Scan es:[di] for ax
020A:2A25  E0 A8				loopnz	locloop_275		; Loop if zf=0, cx>0

020A:2A27  AD					lodsw				; String [si] to ax
020A:2A28  E2 A5				loop	locloop_275		; Loop if cx > 0

020A:2A2A  E0 A5				loopnz	locloop_276		; Loop if zf=0, cx>0

020A:2A2C  20 AD E2A5				and	byte ptr ds:[0E2A5h][di],ch	; (020A:E2A5=0)
020A:2A30  20 A1 ACE3				and	data_705[bx+di],ah	; (020A:ACE3=0E8h)
020A:2A34  A0 A8A3				mov	al,data_690		; (020A:A8A3=7Ch)
020A:2A37  11 8E A8E8				adc	[bp-5718h],cx
020A:2A3B  A1 A0AA				mov	ax,data_663		; (020A:A0AA=0)
020A:2A3E  20 AF A8E0				and	data_694[bx],ch		; (020A:A8E0=96h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 84

020A:2A42  20 A7 AFA0				and	data_716[bx],ah		; (020A:AFA0=39h)
020A:2A46  A8 E1				test	al,0E1h
020A:2A48  A8 11				test	al,11h
020A:2A4A  8E					db	8Eh
020A:2A4B  E8 A1A8				call	$-5E55h

020A:2A4E			locloop_282::
020A:2A4E  AA					stosb				; Store al to es:[di]
020A:2A4F  A0 AF20				mov	al,data_715		; (020A:AF20=58h)
020A:2A52  E0 A8				loopnz	locloop_277		; Loop if zf=0, cx>0

020A:2A54  20 E7				and	bh,ah
020A:2A56  E2 A5		;*		loop	locloop_278		;*Loop if cx > 0

020A:2A56  E2 A5				db	0E2h,0A5h
020A:2A58  AD					lodsw				; String [si] to ax
020A:2A59  A8 A8				test	al,0A8h
020A:2A5B  12 8E E9A1				adc	cl,[bp-165Fh]
020A:2A5F  A8 A9				test	al,0A9h
020A:2A61  20 E1				and	cl,ah
020A:2A63  A1 A9AE				mov	ax,data_697		; (020A:A9AE=0C60Ah)
020A:2A66  20 E1				and	cl,ah
020A:2A68  A8 E1				test	al,0E1h
020A:2A6A  E2 A5		;*		loop	locloop_279		;*Loop if cx > 0

020A:2A6A  E2 A5				db	0E2h,0A5h
020A:2A6C  AC					lodsb				; String [si] to al
020A:2A6D  EB 24				jmp	short loc_288		; (2A93)
020A:2A6F  8D A0 E3E0				lea	sp,cs:[0E3E0h][bx+si]	; Load effective addr
020A:2A73  E8 ADA5				call	$-5258h
020A:2A76  A8 A5				test	al,0A5h
020A:2A78  20 E0				and	al,ah
020A:2A7A  A5					movsw				; Mov [si] to es:[di]

020A:2A7B			locloop_287::
020A:2A7B  A6					cmpsb				; Cmp [si] to es:[di]
020A:2A7C  A8 AC				test	al,0ACh
020A:2A7E  A0 E120				mov	al,byte ptr ds:[0E120h]	; (020A:E120=96h)
020A:2A81  AE					scasb				; Scan es:[di] for al
020A:2A82  A2 A5AC				mov	data_684,al		; (020A:A5AC=0F0h)
020A:2A85  E1 E2		;*		loopz	locloop_284		;*Loop if zf=1, cx>0

020A:2A85  E1 E2				db	0E1h,0E2h
020A:2A87  AD					lodsw				; String [si] to ax
020A:2A88  AE					scasb				; Scan es:[di] for al
020A:2A89  A3 20AE				mov	data_257,ax		; (020A:20AE=2020h)
020A:2A8C  A4					movsb				; Mov [si] to es:[di]
020A:2A8D  AE					scasb				; Scan es:[di] for al
020A:2A8E  E1 E2		;*		loopz	locloop_285		;*Loop if zf=1, cx>0

020A:2A8E  E1 E2				db	0E1h,0E2h
020A:2A90  E3 AF		;*		jcxz	loc_281			;*Jump if cx=0
020A:2A90  E3 AF				db	0E3h,0AFh
020A:2A92  A0 8D14				mov	al,data_623		; (020A:8D14=0C0h)
020A:2A95  A0 E3E0				mov	al,byte ptr ds:[0E3E0h]	; (020A:E3E0=1)
020A:2A98  E8 ADA5				call	$-5258h
020A:2A9B  A8 A5				test	al,0A5h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 85

020A:2A9D  20 A1 AEAB				and	byte ptr data_712[bx+di],ah	; (020A:AEAB=0E8h)
020A:2AA1  AA					stosb				; Store al to es:[di]
020A:2AA2  A8 E0				test	al,0E0h
020A:2AA4  AE					scasb				; Scan es:[di] for al
020A:2AA5  A2 A8AA				mov	data_691,al		; (020A:A8AA=34h)
020A:2AA8  18 8D AFA5				sbb	byte ptr data_717[di],cl	; (020A:AFA5=58h)
020A:2AAC  E0 A0				loopnz	locloop_282		; Loop if zf=0, cx>0

020A:2AAE  A2 ABA8				mov	data_701,al		; (020A:ABA8=0C6h)
020A:2AB1  EC					in	al,dx			; port 8D00h ??I/O Non-standard

020A:2AB2			locloop_293::
020A:2AB2  AD					lodsw				; String [si] to ax
020A:2AB3  A0 20EF				mov	al,data_260		; (020A:20EF=0A0h)

020A:2AB6			locloop_294::
020A:2AB6  E1 AC		;*		loopz	locloop_283		;*Loop if zf=1, cx>0

020A:2AB6  E1 AC				db	0E1h,0ACh
020A:2AB8  A5					movsw				; Mov [si] to es:[di]
020A:2AB9  AD					lodsw				; String [si] to ax
020A:2ABA  A0 A420				mov	al,data_676		; (020A:A420=83h)
020A:2ABD  A8 E1				test	al,0E1h
020A:2ABF  AA					stosb				; Store al to es:[di]
020A:2AC0  A0 8D27				mov	al,data_628		; (020A:8D27=0Ah)
020A:2AC3  A5					movsw				; Mov [si] to es:[di]
020A:2AC4  A4					movsb				; Mov [si] to es:[di]
020A:2AC5  AE					scasb				; Scan es:[di] for al
020A:2AC6  E1 E2		;*		loopz	locloop_290		;*Loop if zf=1, cx>0

020A:2AC6  E1 E2				db	0E1h,0E2h
020A:2AC8  E3 AF		;*		jcxz	loc_286			;*Jump if cx=0
020A:2AC8  E3 AF				db	0E3h,0AFh
020A:2ACA  A5					movsw				; Mov [si] to es:[di]
020A:2ACB  AD					lodsw				; String [si] to ax
020A:2ACC  20 46 43				and	[bp+43h],al
020A:2ACF  42					inc	dx
020A:2AD0  20 28				and	[bx+si],ch
020A:2AD2  A1 AEAB				mov	ax,data_712		; (020A:AEAB=0D1E8h)
020A:2AD5  AA					stosb				; Store al to es:[di]
020A:2AD6  20 E3				and	bl,ah

020A:2AD8			locloop_296::
020A:2AD8  AF					scasw				; Scan es:[di] for ax
020A:2AD9  E0 A0				loopnz	locloop_287		; Loop if zf=0, cx>0

020A:2ADB  A2 A5AB				mov	data_683,al		; (020A:A5AB=3Ch)
020A:2ADE  AD					lodsw				; String [si] to ax
020A:2ADF  A8 EF				test	al,0EFh
020A:2AE1  20 E4				and	ah,ah
020A:2AE3  A0 ABA9				mov	al,data_702		; (020A:ABA9=6)
020A:2AE6  AE					scasb				; Scan es:[di] for al
020A:2AE7  AC					lodsb				; String [si] to al
020A:2AE8  29 19				sub	[bx+di],bx
020A:2AEA  90					nop
020A:2AEB  A5					movsw				; Mov [si] to es:[di]
020A:2AEC  E1 E3		;*		loopz	locloop_295		;*Loop if zf=1, cx>0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 86


020A:2AEC  E1 E3				db	0E1h,0E3h
020A:2AEE  E0 E1		;*		loopnz	locloop_295		;*Loop if zf=0, cx>0

020A:2AEE  E0 E1				db	0E0h,0E1h
020A:2AF0  EB 20				jmp	short loc_301		; (2B12)
020A:2AF2  E1 A8		;*		loopz	locloop_289		;*Loop if zf=1, cx>0

020A:2AF2  E1 A8				db	0E1h,0A8h
020A:2AF4  E1 E2				loopz	locloop_296		; Loop if zf=1, cx>0

020A:2AF6  A5					movsw				; Mov [si] to es:[di]
020A:2AF7  AC					lodsb				; String [si] to al
020A:2AF8  EB 20				jmp	short loc_302		; (2B1A)
020A:2AFA  A8 E1				test	al,0E1h
020A:2AFC  E7 A5				out	0A5h,ax			; port 0A5h ??I/O Non-standard

020A:2AFE			locloop_299::
020A:2AFE  E0 AF		;*		loopnz	locloop_292		;*Loop if zf=0, cx>0

020A:2AFE  E0 AF				db	0E0h,0AFh
020A:2B00  A0 EBAD				mov	al,byte ptr ds:[0EBADh]	; (020A:EBAD=0)
020A:2B03  8D1E			data_284	dw	8D1Eh			; Data table (indexed access)
020A:2B05  A5					movsw				; Mov [si] to es:[di]
020A:2B06  E1 AE				loopz	locloop_294		; Loop if zf=1, cx>0

020A:2B08  AE					scasb				; Scan es:[di] for al
020A:2B09  E2 A2		;*		loop	locloop_291		;*Loop if cx > 0

020A:2B09  E2 A2				db	0E2h,0A2h

020A:2B0B			locloop_300::
020A:2B0B  A5					movsw				; Mov [si] to es:[di]
020A:2B0C  E2 E1		;*		loop	locloop_297		;*Loop if cx > 0

020A:2B0C  E2 E1				db	0E2h,0E1h
020A:2B0E  E2 A2				loop	locloop_293		; Loop if cx > 0

020A:2B10  A8 A5				test	al,0A5h
020A:2B12			loc_301::
020A:2B12  20 AA A4AE				and	[bp+si-5B52h],ch
020A:2B16  AE					scasb				; Scan es:[di] for al
020A:2B17  A2 E5EB				mov	byte ptr ds:[0E5EBh],al	; (020A:E5EB=0E8h)
020A:2B1A			loc_302::
020A:2B1A  20 E1				and	cl,ah
020A:2B1C  E2 E0				loop	locloop_299		; Loop if cx > 0

020A:2B1E			loc_303::
020A:2B1E  A0 A8AD				mov	al,data_692		; (020A:A8AD=40h)
020A:2B21  E6 1D				out	1Dh,al			; port 1Dh ??I/O Non-standard
020A:2B23  8D A5 AEA4				lea	sp,cs:[0AEA4h][di]	; Load effective addr
020A:2B27  E1 E2				loopz	locloop_300		; Loop if zf=1, cx>0


020A:2B29			locloop_305::
020A:2B29  A0 AEE2				mov	al,data_714		; (020A:AEE2=2Dh)
020A:2B2C  E7 AD				out	0ADh,ax			; port 0ADh ??I/O Non-standard
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 87

020A:2B2E  AE					scasb				; Scan es:[di] for al
020A:2B2F  20 A2 A5A2				and	[bp+si-5A5Eh],ah
020A:2B33  A4					movsb				; Mov [si] to es:[di]
020A:2B34  A5					movsw				; Mov [si] to es:[di]
020A:2B35  AD					lodsw				; String [si] to ax
020A:2B36  AD			data_285	db	0ADh
020A:2B37  EB			data_286	db	0EBh
020A:2B38  E5			data_287	db	0E5h
020A:2B39  A420			data_288	dw	0A420h
020A:2B3B  A0			data_289	db	0A0h
020A:2B3C  AD			data_290	db	0ADh
020A:2B3D  EBAD			data_291	dw	0EBADh
020A:2B3F  E5 1B				in	ax,1Bh			; port 1Bh ??I/O Non-standard
020A:2B41  8D			data_293	db	8Dh
020A:2B42  A4A5			data_294	dw	0A4A5h
020A:2B44  AE			data_295	db	0AEh
020A:2B45  E1			data_296	db	0E1h
020A:2B46  E2 A0				loop	$-5Eh			; Loop if cx > 0

020A:2B48  E2 AE				loop	$-50h			; Loop if cx > 0

020A:2B4A  E7 AD				out	0ADh,ax			; port 0ADh ??I/O Non-standard
020A:2B4C  AE					scasb				; Scan es:[di] for al
020A:2B4D  20 AC E1A5				and	byte ptr ds:[0E1A5h][si],ch	; (020A:E1A5=0E9h)
020A:2B51  E2 A0		;*		loop	locloop_298		;*Loop if cx > 0

020A:2B51  E2 A0				db	0E2h,0A0h
020A:2B53  20 AD 20A0				and	data_254[di],ch		; (020A:20A0=20h)
020A:2B57  A4					movsb				; Mov [si] to es:[di]
020A:2B58  A8 E1				test	al,0E1h
020A:2B5A  AA					stosb				; Store al to es:[di]
020A:2B5B  A5					movsw				; Mov [si] to es:[di]
020A:2B5C  0C 09				or	al,9
020A:2B5E  24 09				and	al,9
020A:2B60  3C 09				cmp	al,9
020A:2B62  4B					dec	bx
020A:2B63  09 6C 09				or	[si+9],bp
020A:2B66  7C 09				jl	loc_306			; Jump if <
020A:2B68  A8 09				test	al,9
020A:2B6A  B6 09				mov	dh,9
020A:2B6C  D0 09				ror	byte ptr [bx+di],1	; Rotate
020A:2B6E  E1 09				loopz	locloop_307		; Loop if zf=1, cx>0

020A:2B70  F7					db	0F7h
020A:2B71			loc_306::
020A:2B71  09 09				or	[bx+di],cx
020A:2B73  0A 1B				or	bl,[bp+di]
020A:2B75  0A 2E 530A				or	ch,data_571		; (020A:530A=9Ah)

020A:2B79			locloop_307::
020A:2B79  0A 68 0A				or	ch,[bx+si+0Ah]
020A:2B7C  81 0A 0AA9				or	word ptr [bp+si],0AA9h
020A:2B80  C3					retn
							                        ;* No entry point to code
020A:2B81  0A E2				or	ah,dl
020A:2B83  0A 00				or	al,[bx+si]
020A:2B85  0B 18				or	bx,[bx+si]
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 88

020A:2B87  91					xchg	cx,ax
020A:2B88  AB					stosw				; Store ax to es:[di]
020A:2B89  A8 E8				test	al,0E8h
020A:2B8B  AA					stosb				; Store al to es:[di]
020A:2B8C  AE					scasb				; Scan es:[di] for al
020A:2B8D  AC					lodsb				; String [si] to al
020A:2B8E  20 AC 004D				and	byte ptr ds:[4Dh][si],ch	; (020A:004D=82h)
020A:2B92  00 07				add	[bx],al
020A:2B94  00 AF E0A0				add	byte ptr ds:[0E0A0h][bx],ch	; (020A:E0A0=8Bh)
020A:2B98  A0 A5AC				mov	al,data_684		; (020A:A5AC=0F0h)
020A:2B9B  E2 E0		;*		loop	locloop_308		;*Loop if cx > 0

020A:2B9B  E2 E0				db	0E2h,0E0h
020A:2B9D  AE					scasb				; Scan es:[di] for al
020A:2B9E  A2 0021				mov	byte ptr data_20+3,al	; (020A:0021=0A3h)
020A:2BA1  01 00				add	[bx+si],ax

020A:2BA3			locloop_309::
020A:2BA3  00					db	0
020A:2BA4  00					db	0
020A:2BA5  00 00				add	[bx+si],al
020A:2BA7  00 C4				add	ah,al
020A:2BA9  0C 00				or	al,0
020A:2BAB  00 FF				add	bh,bh
020A:2BAD  0013[FF]				db	19 dup (0FFh)
020A:2BC0  43					inc	bx
020A:2BC1  3A 5C 57				cmp	bl,[si+57h]
020A:2BC4  49					dec	cx
020A:2BC5  4E					dec	si
020A:2BC6  44					inc	sp
020A:2BC7  4F					dec	di
020A:2BC8  57					push	di
020A:2BC9  53					push	bx
020A:2BCA  5C					pop	sp
020A:2BCB  54					push	sp
020A:2BCC  45					inc	bp
020A:2BCD  4D					dec	bp
020A:2BCE  50					push	ax
020A:2BCF  5C					pop	sp
020A:2BD0  73 63				jnc	loc_313			; Jump if carry=0
020A:2BD2  73 43				jnc	loc_312			; Jump if carry=0
020A:2BD4  2E					db	2Eh
020A:2BD5  74 6D				jz	loc_315			; Jump if zero
020A:2BD7  70 00				jo	$+2			; delay for I/O
020A:2BD9  0008[00]				db	8 dup (0)
020A:2BE1  00			data_299	db	0
020A:2BE2  0000			data_300	dw	0
020A:2BE4  0000			data_301	dw	0
020A:2BE6  00			data_302	db	0

020A:2BE7			locloop_310::
020A:2BE7  0000			data_303	dw	0			; Data table (indexed access)
020A:2BE9  0000			data_304	dw	0			; Data table (indexed access)
020A:2BEB  0000			data_305	dw	0			; Data table (indexed access)
020A:2BED  0000			data_306	dw	0			; Data table (indexed access)
020A:2BEF  00					db	0
020A:2BF0  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 89

020A:2BF1			loc_311::
020A:2BF1  00					db	0
020A:2BF2  00					db	0
020A:2BF3  00					db	0
020A:2BF4  00					db	0
020A:2BF5  00					db	0
020A:2BF6  00					db	0
020A:2BF7  00					db	0
020A:2BF8  00					db	0
020A:2BF9  00					db	0
020A:2BFA  00					db	0
020A:2BFB  00					db	0
020A:2BFC  00					db	0
020A:2BFD  00					db	0
020A:2BFE  00 00				add	[bx+si],al
020A:2C00  00 E0				add	al,ah
020A:2C02  A0 A5AC				mov	al,data_684		; (020A:A5AC=0F0h)
020A:2C05  E2 E0				loop	locloop_310		; Loop if cx > 0

020A:2C07  A0 A220				mov	al,data_667		; (020A:A220=74h)
020A:2C0A  EB E5				jmp	short loc_311		; (2BF1)
020A:2C0C  AE					scasb				; Scan es:[di] for al
020A:2C0D  A4					movsb				; Mov [si] to es:[di]
020A:2C0E  A8 E2				test	al,0E2h
020A:2C10  4D					dec	bp
020A:2C11  040E			data_308	dw	40Eh
020A:2C13  43					inc	bx
020A:2C14  00 E0				add	al,ah
020A:2C16  A5					movsw				; Mov [si] to es:[di]
020A:2C17			loc_312::
020A:2C17  A4					movsb				; Mov [si] to es:[di]
020A:2C18  A5					movsw				; Mov [si] to es:[di]
020A:2C19  AB					stosw				; Store ax to es:[di]
020A:2C1A  EB 20				jmp	short loc_314		; (2C3C)
020A:2C1C  A4					movsb				; Mov [si] to es:[di]
020A:2C1D  AE					scasb				; Scan es:[di] for al
020A:2C1E  AF					scasw				; Scan es:[di] for ax
020A:2C1F  E3 43				jcxz	loc_316			; Jump if cx=0
020A:2C21  4F 4D 53 50 45 43			db	'OMSPEC=C:\WINDOWS\SYSTEM32\COMMA'
020A:2C27  3D 43 3A 5C 57 49
020A:2C2D  4E 44 4F 57 53 5C
020A:2C33  53 59 53 54 45 4D
020A:2C39  33 32 5C 43 4F 4D
020A:2C3F  4D 41
020A:2C41  4E 44 2E 43 4F 4D			db	'ND.COM', 0
020A:2C47  00
020A:2C48  41 4C 4C 55 53 45			db	'ALLUSERSPROFILE=C:\DOCUME~1\ALLU'
020A:2C4E  52 53 50 52 4F 46
020A:2C54  49 4C 45 3D 43 3A
020A:2C5A  5C 44 4F 43 55 4D
020A:2C60  45 7E 31 5C 41 4C
020A:2C66  4C 55
020A:2C68  53 45 7E 31 00			db	'SE~1', 0
020A:2C6D  41 50 50 44 41 54			db	'APPDATA=C:\DOCUME~1\irina\APPLIC'
020A:2C73  41 3D 43 3A 5C 44
020A:2C79  4F 43 55 4D 45 7E
020A:2C7F  31 5C 69 72 69 6E
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 90

020A:2C85  61 5C 41 50 50 4C
020A:2C8B  49 43
020A:2C8D  7E 31 00				db	'~1', 0
020A:2C90  43 4C 49 45 4E 54			db	'CLIENTNAME=Console', 0
020A:2C96  4E 41 4D 45 3D 43
020A:2C9C  6F 6E 73 6F 6C 65
020A:2CA2  00
020A:2CA3  43 4F 4D 4D 4F 4E			db	'COMMONPROGRAMFILES=C:\PROGRA~1\C'
020A:2CA9  50 52 4F 47 52 41
020A:2CAF  4D 46 49 4C 45 53
020A:2CB5  3D 43 3A 5C 50 52
020A:2CBB  4F 47 52 41 7E 31
020A:2CC1  5C 43
020A:2CC3  4F 4D 4D				db	'OMM'
020A:2CC6  4E4F			data_310	dw	4E4Fh
020A:2CC8  317E			data_311	dw	317Eh
020A:2CCA  4300			data_312	dw	4300h
020A:2CCC  4F					dec	di
020A:2CCD  4D					dec	bp
020A:2CCE  50					push	ax
020A:2CCF  55					push	bp
020A:2CD0  54					push	sp
020A:2CD1  45					inc	bp
020A:2CD2  52					push	dx
020A:2CD3  4E					dec	si
020A:2CD4  41					inc	cx
020A:2CD5  4D					dec	bp
020A:2CD6  45					inc	bp
020A:2CD7  3D 5249				cmp	ax,5249h
020A:2CDA  49					dec	cx
020A:2CDB  4E					dec	si
020A:2CDC  41					inc	cx
020A:2CDD  2D 4333				sub	ax,4333h
020A:2CE0  38 33				cmp	[bp+di],dh
020A:2CE2  43					inc	bx
020A:2CE3  44					inc	sp
020A:2CE4  32 36 0046				xor	dh,byte ptr ds:[46h]	; (020A:0046=3)
020A:2CE8  46					inc	si
020A:2CE9  50					push	ax
020A:2CEA  5F					pop	di
020A:2CEB  4E					dec	si
020A:2CEC  4F					dec	di
020A:2CED  5F					pop	di
020A:2CEE  48					dec	ax
020A:2CEF  4F					dec	di
020A:2CF0  53					push	bx
020A:2CF1  54					push	sp
020A:2CF2  5F					pop	di
020A:2CF3  43					inc	bx
020A:2CF4  48					dec	ax
020A:2CF5  45					inc	bp
020A:2CF6  43					inc	bx
020A:2CF7  4B					dec	bx
020A:2CF8  3D 4F4E				cmp	ax,4F4Eh
020A:2CFB  00 48 4F				add	[bx+si+4Fh],cl
020A:2CFE  4D					dec	bp
020A:2CFF  45					inc	bp
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 91

020A:2D00  44					inc	sp
020A:2D01  52					push	dx
020A:2D02  49					dec	cx
020A:2D03  56					push	si
020A:2D04  45					inc	bp
020A:2D05  3D 3A43				cmp	ax,3A43h
020A:2D08  00 48 4F				add	[bx+si+4Fh],cl
020A:2D0B  4D					dec	bp
020A:2D0C  45					inc	bp
020A:2D0D  50					push	ax
020A:2D0E  41					inc	cx
020A:2D0F  54					push	sp
020A:2D10  48					dec	ax
020A:2D11  3D 445C				cmp	ax,445Ch
020A:2D14  6F					db	6Fh
020A:2D15  63					db	63h
020A:2D16  75 6D				jnz	$+6Fh			; Jump if not zero
020A:2D18  65					db	65h
020A:2D19  6E					db	6Eh
020A:2D1A  74 73				jz	$+75h			; Jump if zero
020A:2D1C  20 61 6E				and	[bx+di+6Eh],ah
020A:2D1F  64					db	64h
020A:2D20  20 53 65				and	[bp+di+65h],dl
020A:2D23  74 74				jz	$+76h			; Jump if zero
020A:2D25  69 6E 67 73 5C 69	data_313	db	'ings\irina', 0
020A:2D2B  72 69 6E 61 00
020A:2D30  4C					dec	sp
020A:2D31  4F					dec	di
020A:2D32  47					inc	di
020A:2D33  4F					dec	di
020A:2D34  4E					dec	si
020A:2D35  53					push	bx
020A:2D36  45					inc	bp
020A:2D37  52					push	dx
020A:2D38  56					push	si
020A:2D39  45					inc	bp
020A:2D3A  52 3D 5C 5C 49 52	data_314	db	'R=\\IRINA-3C83CD26F', 0
020A:2D40  49 4E 41 2D 33 43
020A:2D46  38 33 43 44 32 36
020A:2D4C  46 00
020A:2D4E  4E					dec	si
020A:2D4F  55					push	bp
020A:2D50  4D					dec	bp
020A:2D51  42					inc	dx
020A:2D52  45					inc	bp
020A:2D53  52					push	dx
020A:2D54  5F					pop	di
020A:2D55  4F					dec	di
020A:2D56  46					inc	si
020A:2D57  5F					pop	di
020A:2D58  50					push	ax
020A:2D59  52					push	dx
020A:2D5A  4F					dec	di
020A:2D5B  43			data_315	db	43h
020A:2D5C  5345			data_316	dw	5345h
020A:2D5E  53					push	bx
020A:2D5F  4F					dec	di
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 92

020A:2D60  52					push	dx
020A:2D61  53					push	bx
020A:2D62  3D 0032				cmp	ax,32h
020A:2D65  4F					dec	di
020A:2D66  53					push	bx
020A:2D67  3D 6957				cmp	ax,6957h
020A:2D6A  6E					db	6Eh
020A:2D6B  64					db	64h
020A:2D6C  6F					db	6Fh
020A:2D6D  77 73				ja	$+75h			; Jump if above
020A:2D6F  5F					pop	di
020A:2D70  4E					dec	si
020A:2D71  54					push	sp
020A:2D72  00 50 41				add	[bx+si+41h],dl
020A:2D75  54					push	sp
020A:2D76  48					dec	ax
020A:2D77  3D 3A43				cmp	ax,3A43h
020A:2D7A  5C					pop	sp
020A:2D7B  57					push	di
020A:2D7C  49					dec	cx
020A:2D7D  4E					dec	si
020A:2D7E  44					inc	sp
020A:2D7F  4F					dec	di
020A:2D80  57					push	di
020A:2D81  53					push	bx
020A:2D82  5C					pop	sp
020A:2D83  73 79				jnc	$+7Bh			; Jump if carry=0
020A:2D85  73 74				jnc	$+76h			; Jump if carry=0
020A:2D87  65					db	65h
020A:2D88  6D					db	6Dh
020A:2D89  33 32				xor	si,[bp+si]
020A:2D8B  3B 43 3A				cmp	ax,[bp+di+3Ah]
020A:2D8E  5C					pop	sp
020A:2D8F  57					push	di
020A:2D90  49					dec	cx
020A:2D91  4E					dec	si
020A:2D92  44					inc	sp
020A:2D93  4F					dec	di
020A:2D94  57					push	di
020A:2D95  53					push	bx
020A:2D96  3B 43 3A				cmp	ax,[bp+di+3Ah]
020A:2D99  5C					pop	sp
020A:2D9A  57					push	di
020A:2D9B  49					dec	cx
020A:2D9C  4E					dec	si
020A:2D9D  44					inc	sp
020A:2D9E  4F					dec	di
020A:2D9F  57					push	di
020A:2DA0  53					push	bx
020A:2DA1  5C					pop	sp
020A:2DA2  53					push	bx
020A:2DA3  79 73				jns	$+75h			; Jump if not sign
020A:2DA5  74 65				jz	$+67h			; Jump if zero
020A:2DA7  6D					db	6Dh
020A:2DA8  33 32				xor	si,[bp+si]
020A:2DAA  5C					pop	sp
020A:2DAB  6257			data_317	dw	6257h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 93

020A:2DAD  65			data_318	db	65h
020A:2DAE  6D					db	6Dh
020A:2DAF  00 50 41				add	[bx+si+41h],dl
020A:2DB2  54					push	sp
020A:2DB3  48					dec	ax
020A:2DB4  45					inc	bp
020A:2DB5  58					pop	ax
020A:2DB6  54					push	sp
020A:2DB7  3D 432E				cmp	ax,432Eh
020A:2DBA  4F					dec	di
020A:2DBB  4D					dec	bp
020A:2DBC  3B 2E 5845				cmp	bp,word ptr ds:[5845h]	; (020A:5845=2AB4h)
020A:2DC0  45					inc	bp
020A:2DC1  3B 2E 4142				cmp	bp,word ptr ds:[4142h]	; (020A:4142=140Eh)
020A:2DC5  54					push	sp
020A:2DC6  3B 2E 4D43				cmp	bp,word ptr ds:[4D43h]	; (020A:4D43=0)
020A:2DCA  44					inc	sp
020A:2DCB  3B 2E 4256				cmp	bp,word ptr ds:[4256h]	; (020A:4256=0EB06h)
020A:2DCF  53					push	bx
020A:2DD0  3B 2E 4256				cmp	bp,word ptr ds:[4256h]	; (020A:4256=0EB06h)
020A:2DD4  45					inc	bp
020A:2DD5  3B 2E 534A				cmp	bp,word ptr ds:[534Ah]	; (020A:534A=2)
020A:2DD9  3B 2E 534A				cmp	bp,word ptr ds:[534Ah]	; (020A:534A=2)
020A:2DDD  45					inc	bp
020A:2DDE  3B 2E 5357				cmp	bp,word ptr ds:[5357h]	; (020A:5357=2600h)
020A:2DE2  46					inc	si
020A:2DE3  3B 2E 5357				cmp	bp,word ptr ds:[5357h]	; (020A:5357=2600h)
020A:2DE7  48					dec	ax
020A:2DE8  00 50 52				add	[bx+si+52h],dl
020A:2DEB  4F					dec	di
020A:2DEC  43					inc	bx
020A:2DED  45					inc	bp
020A:2DEE  53					push	bx
020A:2DEF  53					push	bx
020A:2DF0  4F					dec	di
020A:2DF1  52					push	dx
020A:2DF2  5F					pop	di
020A:2DF3  41					inc	cx
020A:2DF4  52					push	dx
020A:2DF5  43					inc	bx
020A:2DF6  48					dec	ax
020A:2DF7  49					dec	cx
020A:2DF8  54					push	sp
020A:2DF9  45					inc	bp
020A:2DFA  43					inc	bx
020A:2DFB  54					push	sp
020A:2DFC  55					push	bp
020A:2DFD  52					push	dx
020A:2DFE  45					inc	bp
020A:2DFF  3D 3878				cmp	ax,3878h
020A:2E02  36: 00 50 52				add	ss:[bx+si+52h],dl
020A:2E06  4F					dec	di
020A:2E07  43					inc	bx
020A:2E08  45					inc	bp
020A:2E09  53					push	bx
020A:2E0A  53					push	bx
020A:2E0B  4F					dec	di
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 94

020A:2E0C  52					push	dx
020A:2E0D  5F					pop	di
020A:2E0E  49					dec	cx
020A:2E0F  44					inc	sp
020A:2E10  45					inc	bp
020A:2E11  4E					dec	si
020A:2E12  54					push	sp
020A:2E13  49					dec	cx
020A:2E14  46					inc	si
020A:2E15  49					dec	cx
020A:2E16  45					inc	bp
020A:2E17  52					push	dx
020A:2E18  3D 3878				cmp	ax,3878h
020A:2E1B  36					db	36h
020A:2E1C  20 46 61				and	[bp+61h],al
020A:2E1F  6D					db	6Dh
020A:2E20  69					db	69h
020A:2E21  6C					db	6Ch
020A:2E22  79 20				jns	$+22h			; Jump if not sign
020A:2E24  36: 20 4D 6F				and	ss:[di+6Fh],cl
020A:2E28  64					db	64h
020A:2E29  65					db	65h
020A:2E2A  6C					db	6Ch
020A:2E2B  20 31				and	[bx+di],dh
020A:2E2D  34 30				xor	al,30h			; '0'
020A:2E2F  20 53 74				and	[bp+di+74h],dl
020A:2E32  65					db	65h
020A:2E33  70 70				jo	$+72h			; Jump if overflow=1
020A:2E35  69					db	69h
020A:2E36  6E					db	6Eh
020A:2E37  67					db	67h
020A:2E38  20 31				and	[bx+di],dh
020A:2E3A  2C 20				sub	al,20h			; ' '
020A:2E3C  47					inc	di
020A:2E3D  65					db	65h
020A:2E3E  6E					db	6Eh
020A:2E3F  75 69				jnz	$+6Bh			; Jump if not zero
020A:2E41  6E					db	6Eh
020A:2E42  65					db	65h
020A:2E43  49					dec	cx
020A:2E44  6E					db	6Eh
020A:2E45  74 65				jz	$+67h			; Jump if zero
020A:2E47  6C					db	6Ch
020A:2E48  00 50 52				add	[bx+si+52h],dl
020A:2E4B  4F					dec	di
020A:2E4C  43					inc	bx
020A:2E4D  45					inc	bp
020A:2E4E  53					push	bx
020A:2E4F  53					push	bx
020A:2E50  4F					dec	di
020A:2E51  52					push	dx
020A:2E52  5F					pop	di
020A:2E53  4C					dec	sp
020A:2E54  45					inc	bp
020A:2E55  56					push	si
020A:2E56  45					inc	bp
020A:2E57  4C					dec	sp
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 95

020A:2E58  3D 0036				cmp	ax,36h
020A:2E5B  50					push	ax
020A:2E5C  52					push	dx
020A:2E5D  4F					dec	di
020A:2E5E  43					inc	bx
020A:2E5F  45					inc	bp
020A:2E60  53					push	bx
020A:2E61  53					push	bx
020A:2E62  4F					dec	di
020A:2E63  52					push	dx
020A:2E64  5F					pop	di
020A:2E65  52					push	dx
020A:2E66  45					inc	bp
020A:2E67  56					push	si
020A:2E68  49					dec	cx
020A:2E69  53					push	bx
020A:2E6A  49					dec	cx
020A:2E6B  4F					dec	di
020A:2E6C  4E					dec	si
020A:2E6D  3D 6338				cmp	ax,6338h
020A:2E70  30 31				xor	[bx+di],dh
020A:2E72  00 50 52				add	[bx+si+52h],dl
020A:2E75  4F					dec	di
020A:2E76  47					inc	di
020A:2E77  52					push	dx
020A:2E78  41					inc	cx
020A:2E79  4D					dec	bp
020A:2E7A  46					inc	si
020A:2E7B  49					dec	cx
020A:2E7C  4C					dec	sp
020A:2E7D  45					inc	bp
020A:2E7E  53					push	bx
020A:2E7F  3D 3A43				cmp	ax,3A43h
020A:2E82  5C					pop	sp
020A:2E83  50					push	ax
020A:2E84  52					push	dx
020A:2E85  4F					dec	di
020A:2E86  47					inc	di
020A:2E87  52					push	dx
020A:2E88  41					inc	cx
020A:2E89  7E 31				jle	$+33h			; Jump if < or =
020A:2E8B  00 50 52				add	[bx+si+52h],dl
020A:2E8E  4F					dec	di
020A:2E8F  4D					dec	bp
020A:2E90  50					push	ax
020A:2E91  54					push	sp
020A:2E92  3D 5024				cmp	ax,5024h
020A:2E95  24 47				and	al,47h			; 'G'
020A:2E97  00 53 45				add	[bp+di+45h],dl
020A:2E9A  53					push	bx
020A:2E9B  53					push	bx
020A:2E9C  49					dec	cx
020A:2E9D  4F					dec	di
020A:2E9E  4E					dec	si
020A:2E9F  4E					dec	si
020A:2EA0  41					inc	cx
020A:2EA1  4D					dec	bp
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 96

020A:2EA2  45					inc	bp
020A:2EA3  3D 6F43				cmp	ax,6F43h
020A:2EA6  6E					db	6Eh
020A:2EA7  73 6F				jnc	$+71h			; Jump if carry=0
020A:2EA9  6C					db	6Ch
020A:2EAA  65					db	65h
020A:2EAB  00 53 59				add	[bp+di+59h],dl
020A:2EAE  53					push	bx
020A:2EAF  54					push	sp
020A:2EB0  45					inc	bp
020A:2EB1  4D					dec	bp
020A:2EB2  44					inc	sp
020A:2EB3  52					push	dx
020A:2EB4  49					dec	cx
020A:2EB5  56					push	si
020A:2EB6  45					inc	bp
020A:2EB7  3D 3A43				cmp	ax,3A43h
020A:2EBA  00 53 59				add	[bp+di+59h],dl
020A:2EBD  53					push	bx
020A:2EBE  54					push	sp
020A:2EBF  45					inc	bp
020A:2EC0  4D					dec	bp
020A:2EC1  52					push	dx
020A:2EC2  4F					dec	di
020A:2EC3  4F					dec	di
020A:2EC4  54					push	sp
020A:2EC5  3D 3A43				cmp	ax,3A43h
020A:2EC8  5C					pop	sp
020A:2EC9  57					push	di
020A:2ECA  49					dec	cx
020A:2ECB  4E					dec	si
020A:2ECC  44					inc	sp
020A:2ECD  4F					dec	di
020A:2ECE  57					push	di
020A:2ECF  53					push	bx
020A:2ED0  00 54 45				add	[si+45h],dl
020A:2ED3  4D					dec	bp
020A:2ED4  50					push	ax
020A:2ED5  3D 3A43				cmp	ax,3A43h
020A:2ED8  5C					pop	sp
020A:2ED9  57					push	di
020A:2EDA  49					dec	cx
020A:2EDB  4E					dec	si
020A:2EDC  44					inc	sp
020A:2EDD  4F					dec	di
020A:2EDE  57					push	di
020A:2EDF  53					push	bx
020A:2EE0  5C					pop	sp
020A:2EE1  54					push	sp
020A:2EE2  45					inc	bp
020A:2EE3  4D					dec	bp
020A:2EE4  50					push	ax
020A:2EE5  00 54 4D				add	[si+4Dh],dl
020A:2EE8  50					push	ax
020A:2EE9  3D 3A43				cmp	ax,3A43h
020A:2EEC  5C					pop	sp
020A:2EED  57					push	di
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 97

020A:2EEE  49					dec	cx
020A:2EEF  4E					dec	si
020A:2EF0  44					inc	sp
020A:2EF1  4F					dec	di
020A:2EF2  57					push	di
020A:2EF3  53					push	bx
020A:2EF4  5C					pop	sp
020A:2EF5  54					push	sp
020A:2EF6  45					inc	bp
020A:2EF7  4D					dec	bp
020A:2EF8  50					push	ax
020A:2EF9  00 55 53				add	[di+53h],dl
020A:2EFC  45					inc	bp
020A:2EFD  52					push	dx
020A:2EFE  44					inc	sp
020A:2EFF  4F					dec	di
020A:2F00  4D					dec	bp
020A:2F01  41					inc	cx
020A:2F02  49					dec	cx
020A:2F03  4E					dec	si
020A:2F04  3D 5249				cmp	ax,5249h

020A:2F07			locloop_317::
020A:2F07  49					dec	cx
020A:2F08  4E					dec	si
020A:2F09  41					inc	cx
020A:2F0A  2D 4333				sub	ax,4333h
020A:2F0D  38 33				cmp	[bp+di],dh
020A:2F0F  43					inc	bx
020A:2F10  44					inc	sp
020A:2F11  32 36 0046				xor	dh,byte ptr ds:[46h]	; (020A:0046=3)
020A:2F15  55					push	bp
020A:2F16  53					push	bx
020A:2F17  45					inc	bp
020A:2F18  52					push	dx
020A:2F19  4E					dec	si
020A:2F1A  41					inc	cx
020A:2F1B  4D					dec	bp
020A:2F1C  45					inc	bp
020A:2F1D  3D 7269				cmp	ax,7269h
020A:2F20  69					db	69h
020A:2F21			loc_318::
020A:2F21  6E					db	6Eh
020A:2F22  61					db	61h
020A:2F23  00 55 53				add	[di+53h],dl
020A:2F26  45					inc	bp
020A:2F27  52					push	dx
020A:2F28  50					push	ax
020A:2F29  52					push	dx
020A:2F2A  4F					dec	di
020A:2F2B  46					inc	si
020A:2F2C  49					dec	cx

020A:2F2D			locloop_319::
020A:2F2D  4C					dec	sp
020A:2F2E  45					inc	bp
020A:2F2F  3D 3A43				cmp	ax,3A43h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 98

020A:2F32  5C					pop	sp
020A:2F33  44					inc	sp
020A:2F34  4F					dec	di
020A:2F35  43					inc	bx
020A:2F36  55					push	bp
020A:2F37  4D					dec	bp
020A:2F38  45					inc	bp
020A:2F39  7E 31				jle	$+33h			; Jump if < or =
020A:2F3B  5C					pop	sp
020A:2F3C  69					db	69h
020A:2F3D  72 69				jc	$+6Bh			; Jump if carry Set
020A:2F3F  6E					db	6Eh
020A:2F40  61					db	61h
020A:2F41  00 42 4C				add	[bp+si+4Ch],al
020A:2F44  41					inc	cx
020A:2F45  53					push	bx
020A:2F46  54					push	sp
020A:2F47  45					inc	bp
020A:2F48  52					push	dx
020A:2F49  3D 3241				cmp	ax,3241h
020A:2F4C  32 30				xor	dh,[bx+si]
020A:2F4E  20 49 35				and	[bx+di+35h],cl
020A:2F51  20 44 31				and	[si+31h],al
020A:2F54  20 50 33				and	[bx+si+33h],dl

020A:2F57			locloop_320::
020A:2F57  33 30				xor	si,[bx+si]

020A:2F59			locloop_321::
020A:2F59  20 54 33				and	[si+33h],dl
020A:2F5C  00 00				add	[bx+si],al
020A:2F5E  A5					movsw				; Mov [si] to es:[di]
020A:2F5F  E0 A6				loopnz	locloop_317		; Loop if zf=0, cx>0

020A:2F61  A8 A2				test	al,0A2h
020A:2F63  A0 E2A5				mov	al,byte ptr ds:[0E2A5h]	; (020A:E2A5=0)
020A:2F66  E1 EF				loopz	locloop_320		; Loop if zf=1, cx>0

020A:2F68  20 E1				and	cl,ah
020A:2F6A  A5					movsw				; Mov [si] to es:[di]
020A:2F6B  E2 EC				loop	locloop_321		; Loop if cx > 0

020A:2F6D  EE					out	dx,al			; port 0E201h ??I/O Non-standard
020A:2F6E  29 92 A5E0				sub	[bp+si-5A20h],dx
020A:2F72  A1 A5E3				mov	ax,data_685		; (020A:A5E3=26C0h)
020A:2F75  AC					lodsb				; String [si] to al
020A:2F76  EB A9				jmp	short loc_318		; (2F21)
							                        ;* No entry point to code
020A:2F78  20 AA ACAE				and	[bp+si-5352h],ch
020A:2F7C  AF					scasw				; Scan es:[di] for ax
020A:2F7D  AE					scasb				; Scan es:[di] for al
020A:2F7E  AD					lodsw				; String [si] to ax
020A:2F7F  A5					movsw				; Mov [si] to es:[di]
020A:2F80  AD					lodsw				; String [si] to ax
020A:2F81  E2 20				loop	locloop_324		; Loop if cx > 0

020A:2F83  E1 A8				loopz	locloop_319		; Loop if zf=1, cx>0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 99


020A:2F85  E1 E2		;*		loopz	locloop_322		;*Loop if zf=1, cx>0

020A:2F85  E1 E2				db	0E1h,0E2h
020A:2F87  A5					movsw				; Mov [si] to es:[di]
020A:2F88  AC					lodsb				; String [si] to al
020A:2F89  EB 20				jmp	short loc_325		; (2FAB)
							                        ;* No entry point to code
020A:2F8B  AD					lodsw				; String [si] to ax
020A:2F8C  A5					movsw				; Mov [si] to es:[di]
020A:2F8D  20 E3				and	bl,ah
020A:2F8F  E1 E2		;*		loopz	locloop_323		;*Loop if zf=1, cx>0

020A:2F8F  E1 E2				db	0E1h,0E2h
020A:2F91  A0 AEAD				mov	al,data_713		; (020A:AEAD=0DBh)
020A:2F94  A2 A5AB				mov	data_683,al		; (020A:A5AB=3Ch)
020A:2F97  AD					lodsw				; String [si] to ax
020A:2F98  9D					popf				; Pop flags
020A:2F99  0C B2				or	al,0B2h
020A:2F9B  0C C1				or	al,0C1h
020A:2F9D  0C D0				or	al,0D0h
020A:2F9F  0C ED				or	al,0EDh
020A:2FA1  0C FA				or	al,0FAh

020A:2FA3			locloop_324::
020A:2FA3  0C 12				or	al,12h
020A:2FA5  0D 0D35				or	ax,0D35h
020A:2FA8  49					dec	cx
020A:2FA9  0D 0D69				or	ax,0D69h
020A:2FAC  91					xchg	cx,ax
020A:2FAD  0D 0DA5				or	ax,0DA5h
020A:2FB0  C3					retn
020A:2FB1  0D 0000				or	ax,0
020A:2FB4  D7					xlat				; al=[al+[bx]] table
020A:2FB5  0D 0DEE				or	ax,0DEEh
020A:2FB8  0E					push	cs
020A:2FB9  0E					push	cs
020A:2FBA  20 0E 090C				and	byte ptr ds:[90Ch],cl	; (020A:090C=0Eh)
020A:2FBE  24 09				and	al,9
020A:2FC0  3C 09				cmp	al,9
020A:2FC2  4B					dec	bx
020A:2FC3  09 6C 09				or	[si+9],bp
020A:2FC6  7C 09				jl	loc_326			; Jump if <
020A:2FC8  A8 09				test	al,9
020A:2FCA  B6 09				mov	dh,9
020A:2FCC  D0 09				ror	byte ptr [bx+di],1	; Rotate
020A:2FCE  E1 09				loopz	locloop_327		; Loop if zf=1, cx>0

020A:2FD0  F7					db	0F7h
020A:2FD1			loc_326::
020A:2FD1  09 09				or	[bx+di],cx
020A:2FD3  0A 1B				or	bl,[bp+di]
020A:2FD5  0A 2E 530A				or	ch,data_571		; (020A:530A=9Ah)

020A:2FD9			locloop_327::
020A:2FD9  0A 68 0A				or	ch,[bx+si+0Ah]
020A:2FDC  81 0A 0AA9				or	word ptr [bp+si],0AA9h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 100

020A:2FE0  C3					retn
							                        ;* No entry point to code
020A:2FE1  0A E2				or	ah,dl
020A:2FE3  0A 00				or	al,[bx+si]
020A:2FE5  0B 00				or	ax,[bx+si]
020A:2FE7  0042[00]				db	66 dup (0)
020A:3029  0000			data_320	dw	0
020A:302B  0000			data_321	dw	0
020A:302D  0000			data_322	dw	0
020A:302F  00					db	0
020A:3030  00			data_323	db	0
020A:3031  00			data_324	db	0
020A:3032  00			data_325	db	0
020A:3033  0000			data_326	dw	0
020A:3035  3200			data_327	dw	3200h
020A:3037  000E			data_328	dw	0Eh
020A:3039  4200			data_329	dw	4200h
020A:303B  0E			data_330	db	0Eh
020A:303C  0E66			data_331	dw	0E66h
020A:303E  8F			data_332	db	8Fh
020A:303F  0E			data_333	db	0Eh
020A:3040  B3			data_334	db	0B3h
020A:3041  0E					push	cs
020A:3042  CF			data_335	db	0CFh
020A:3043  0E					push	cs
020A:3044  E3 0E				jcxz	loc_328			; Jump if cx=0
020A:3046  F9			data_336	db	0F9h
020A:3047  0E					push	cs
020A:3048  0E					push	cs
020A:3049  0F			;*		pop	cs			; Dangerous-8088 only
020A:3049  0F					db	0Fh
020A:304A  2E			data_337	db	2Eh
020A:304B  0F			;*		pop	cs			; Dangerous-8088 only
020A:304B  0F					db	0Fh
020A:304C  0000			data_338	dw	0
020A:304E  0000			data_339	dw	0
020A:3050  C54D			data_340	dw	0C54Dh
020A:3052  3506			data_341	dw	3506h
020A:3054			loc_328::
020A:3054  7400			data_342	dw	7400h
020A:3056  BB1B			data_343	dw	0BB1Bh
020A:3058  07B1			data_344	dw	7B1h
020A:305A  083C			data_345	dw	83Ch
020A:305C  74 14				jz	loc_329			; Jump if zero
020A:305E  BB 439C				mov	bx,439Ch
020A:3061  4F 4D 53				db	'OMS'
020A:3064  4550			data_347	dw	4550h
020A:3066  3D43			data_348	dw	3D43h
020A:3068  43					inc	bx
020A:3069  3A 5C 57				cmp	bl,[si+57h]
020A:306C  49					dec	cx
020A:306D  4E					dec	si
020A:306E  44					inc	sp
020A:306F  4F 57 53 5C 53 59	data_349	db	'OWS\SYSTEM32\COMMAND.'
020A:3075  53 54 45 4D 33 32
020A:307B  5C 43 4F 4D 4D 41
020A:3081  4E 44 2E
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 101

020A:3084  4F43			data_350	dw	4F43h
020A:3086  004D			data_351	dw	4Dh
020A:3088  4C41			data_352	dw	4C41h
020A:308A  554C			data_353	dw	554Ch
020A:308C  4553			data_354	dw	4553h
020A:308E  5352			data_355	dw	5352h
020A:3090  5250			data_356	dw	5250h
020A:3092  464F			data_357	dw	464Fh
020A:3094  4C49			data_358	dw	4C49h
020A:3096  3D45			data_359	dw	3D45h
020A:3098  3A43			data_360	dw	3A43h
020A:309A  445C			data_361	dw	445Ch
020A:309C  4F					dec	di
020A:309D  43					inc	bx
020A:309E  55			data_362	db	55h
020A:309F  4D					dec	bp
020A:30A0  45			data_363	db	45h
020A:30A1  7E 31 5C 41 4C 4C	data_364	db	'~1\ALLUSE~1', 0
020A:30A7  55 53 45 7E 31 00
020A:30AD  41					inc	cx
020A:30AE  50					push	ax
020A:30AF  50					push	ax
020A:30B0  44			data_365	db	44h
020A:30B1  41					inc	cx
020A:30B2  54 41 3D 43 3A 5C	data_366	db	'TA=C:\DOCU'
020A:30B8  44 4F 43 55
020A:30BC  454D			data_367	dw	454Dh
020A:30BE  317E			data_368	dw	317Eh
020A:30C0  5C					pop	sp
020A:30C1  69					db	69h
020A:30C2  72 69				jc	$+6Bh			; Jump if carry Set
020A:30C4  6E					db	6Eh
020A:30C5  61					db	61h
020A:30C6  5C					pop	sp
020A:30C7  41					inc	cx
020A:30C8  50					push	ax
020A:30C9  4C50			data_369	dw	4C50h
020A:30CB  4349			data_370	dw	4349h
020A:30CD  7E			data_371	db	7Eh
020A:30CE  31			data_372	db	31h
020A:30CF  00 43 4C				add	[bp+di+4Ch],al
020A:30D2  49					dec	cx
020A:30D3  45					inc	bp
020A:30D4  4E					dec	si
020A:30D5  54					push	sp
020A:30D6  4E					dec	si
020A:30D7  41					inc	cx
020A:30D8  4D					dec	bp
020A:30D9  45					inc	bp
020A:30DA  3D 6F43				cmp	ax,6F43h
020A:30DD  6E					db	6Eh
020A:30DE  73 6F				jnc	$+71h			; Jump if carry=0
020A:30E0  6C					db	6Ch
020A:30E1  65					db	65h
020A:30E2  00 43 4F				add	[bp+di+4Fh],al
020A:30E5  4D					dec	bp
020A:30E6  4D					dec	bp
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 102

020A:30E7  4F					dec	di
020A:30E8  4E					dec	si
020A:30E9  50					push	ax
020A:30EA  52					push	dx
020A:30EB  4F					dec	di
020A:30EC  47					inc	di
020A:30ED  52					push	dx
020A:30EE  41					inc	cx
020A:30EF  4D					dec	bp
020A:30F0  46					inc	si
020A:30F1  49					dec	cx
020A:30F2  4C					dec	sp
020A:30F3  45					inc	bp
020A:30F4  53					push	bx
020A:30F5  3D 3A43				cmp	ax,3A43h
020A:30F8  5C					pop	sp
020A:30F9  50					push	ax
020A:30FA  52					push	dx
020A:30FB  4F					dec	di
020A:30FC  47					inc	di
020A:30FD  52					push	dx
020A:30FE  41					inc	cx
020A:30FF  7E 31				jle	$+33h			; Jump if < or =
020A:3101  5C					pop	sp
020A:3102  43					inc	bx
020A:3103  4F					dec	di
020A:3104  4D					dec	bp
020A:3105  4D					dec	bp
020A:3106  4F					dec	di
020A:3107  4E					dec	si
020A:3108  7E 31				jle	$+33h			; Jump if < or =
020A:310A  00 43 4F				add	[bp+di+4Fh],al
020A:310D  4D					dec	bp
020A:310E  50					push	ax
020A:310F  55					push	bp
020A:3110  54					push	sp
020A:3111  45					inc	bp
020A:3112  52					push	dx
020A:3113  4E					dec	si
020A:3114  41					inc	cx
020A:3115  4D					dec	bp
020A:3116  45					inc	bp
020A:3117  3D 5249				cmp	ax,5249h
020A:311A  49					dec	cx
020A:311B  4E					dec	si
020A:311C  41					inc	cx
020A:311D  2D 4333				sub	ax,4333h
020A:3120  38 33				cmp	[bp+di],dh
020A:3122  43					inc	bx
020A:3123  44					inc	sp
020A:3124  32 36 0046				xor	dh,byte ptr ds:[46h]	; (020A:0046=3)
020A:3128  46					inc	si
020A:3129  50					push	ax
020A:312A  5F					pop	di
020A:312B  4E					dec	si
020A:312C  4F					dec	di
020A:312D  5F					pop	di
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 103

020A:312E  48					dec	ax
020A:312F  4F					dec	di
020A:3130  53					push	bx
020A:3131  54					push	sp
020A:3132  5F					pop	di
020A:3133  43					inc	bx
020A:3134  48					dec	ax
020A:3135  45					inc	bp
020A:3136  43					inc	bx
020A:3137  4B					dec	bx
020A:3138  3D 4F4E				cmp	ax,4F4Eh
020A:313B  00 48 4F				add	[bx+si+4Fh],cl
020A:313E  4D					dec	bp
020A:313F  45					inc	bp
020A:3140  44					inc	sp
020A:3141  52					push	dx
020A:3142  49					dec	cx
020A:3143  56					push	si
020A:3144  45					inc	bp
020A:3145  3D 3A43				cmp	ax,3A43h
020A:3148  00 48 4F				add	[bx+si+4Fh],cl
020A:314B  4D					dec	bp
020A:314C  45					inc	bp
020A:314D  50					push	ax
020A:314E  41					inc	cx
020A:314F  54					push	sp
020A:3150  48					dec	ax
020A:3151  3D 445C				cmp	ax,445Ch
020A:3154  6F					db	6Fh
020A:3155  63					db	63h
020A:3156  75 6D				jnz	$+6Fh			; Jump if not zero
020A:3158  65					db	65h
020A:3159  6E					db	6Eh
020A:315A  74 73				jz	$+75h			; Jump if zero
020A:315C  20 61 6E				and	[bx+di+6Eh],ah
020A:315F  64					db	64h
020A:3160  20 53 65				and	[bp+di+65h],dl
020A:3163  74 74				jz	$+76h			; Jump if zero
020A:3165  69					db	69h
020A:3166  6E					db	6Eh
020A:3167  67					db	67h
020A:3168  73 5C				jnc	$+5Eh			; Jump if carry=0
020A:316A  69					db	69h
020A:316B  72 69				jc	$+6Bh			; Jump if carry Set
020A:316D  6E					db	6Eh
020A:316E  61					db	61h
020A:316F  00 4C 4F				add	[si+4Fh],cl
020A:3172  47					inc	di
020A:3173  4F					dec	di
020A:3174  4E					dec	si
020A:3175  53					push	bx
020A:3176  45					inc	bp
020A:3177  52					push	dx
020A:3178  56					push	si
020A:3179  45					inc	bp
020A:317A  52					push	dx
020A:317B  3D 5C5C				cmp	ax,5C5Ch
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 104

020A:317E  49					dec	cx
020A:317F  52					push	dx
020A:3180  49					dec	cx
020A:3181  4E					dec	si
020A:3182  41					inc	cx
020A:3183  2D 4333				sub	ax,4333h
020A:3186  38 33				cmp	[bp+di],dh
020A:3188  43					inc	bx
020A:3189  44					inc	sp
020A:318A  32 36 0046				xor	dh,byte ptr ds:[46h]	; (020A:0046=3)
020A:318E  4E					dec	si
020A:318F  55					push	bp
020A:3190  4D					dec	bp
020A:3191  42					inc	dx
020A:3192  45					inc	bp
020A:3193  52					push	dx
020A:3194  5F					pop	di
020A:3195  4F					dec	di
020A:3196  46					inc	si
020A:3197  5F					pop	di
020A:3198  50					push	ax
020A:3199  52					push	dx
020A:319A  4F					dec	di
020A:319B  43					inc	bx
020A:319C  45					inc	bp
020A:319D  53					push	bx
020A:319E  53					push	bx
020A:319F  4F					dec	di
020A:31A0  52					push	dx
020A:31A1  53					push	bx
020A:31A2  3D 0032				cmp	ax,32h
020A:31A5  4F					dec	di
020A:31A6  53					push	bx
020A:31A7  3D 6957				cmp	ax,6957h
020A:31AA  6E					db	6Eh
020A:31AB  64					db	64h
020A:31AC  6F					db	6Fh
020A:31AD  77 73				ja	$+75h			; Jump if above
020A:31AF  5F					pop	di
020A:31B0  4E					dec	si
020A:31B1  54					push	sp
020A:31B2  00 50 41				add	[bx+si+41h],dl
020A:31B5  54					push	sp
020A:31B6  48					dec	ax
020A:31B7  3D 3A43				cmp	ax,3A43h
020A:31BA  5C					pop	sp
020A:31BB  57					push	di
020A:31BC  49					dec	cx
020A:31BD  4E					dec	si
020A:31BE  44					inc	sp
020A:31BF  4F					dec	di
020A:31C0  57					push	di
020A:31C1  53					push	bx
020A:31C2  5C					pop	sp
020A:31C3  73 79				jnc	$+7Bh			; Jump if carry=0
020A:31C5  73 74				jnc	$+76h			; Jump if carry=0
020A:31C7  65					db	65h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 105

020A:31C8  6D					db	6Dh
020A:31C9  33 32				xor	si,[bp+si]
020A:31CB  3B 43 3A				cmp	ax,[bp+di+3Ah]
020A:31CE  5C					pop	sp
020A:31CF  57					push	di
020A:31D0  49					dec	cx
020A:31D1  4E					dec	si
020A:31D2  44					inc	sp
020A:31D3  4F					dec	di
020A:31D4  57					push	di
020A:31D5  53					push	bx
020A:31D6  3B 43 3A				cmp	ax,[bp+di+3Ah]
020A:31D9  5C					pop	sp
020A:31DA  57					push	di
020A:31DB  49					dec	cx
020A:31DC  4E					dec	si
020A:31DD  44					inc	sp
020A:31DE  4F					dec	di
020A:31DF  57					push	di
020A:31E0  53					push	bx
020A:31E1  5C					pop	sp
020A:31E2  53					push	bx
020A:31E3  79 73				jns	$+75h			; Jump if not sign
020A:31E5  74 65				jz	$+67h			; Jump if zero
020A:31E7  6D					db	6Dh
020A:31E8  33 32				xor	si,[bp+si]
020A:31EA  5C					pop	sp
020A:31EB  57					push	di
020A:31EC  62					db	62h
020A:31ED  65					db	65h
020A:31EE  6D					db	6Dh
020A:31EF  00 50 41				add	[bx+si+41h],dl
020A:31F2  54					push	sp
020A:31F3  48					dec	ax
020A:31F4  45					inc	bp
020A:31F5  58					pop	ax
020A:31F6  54					push	sp
020A:31F7  3D 432E				cmp	ax,432Eh
020A:31FA  4F					dec	di
020A:31FB  4D					dec	bp
020A:31FC  3B 2E 5845				cmp	bp,word ptr ds:[5845h]	; (020A:5845=2AB4h)
020A:3200  45					inc	bp
020A:3201  3B 2E 4142				cmp	bp,word ptr ds:[4142h]	; (020A:4142=140Eh)
020A:3205  54					push	sp
020A:3206  3B 2E 4D43				cmp	bp,word ptr ds:[4D43h]	; (020A:4D43=0)
020A:320A  44					inc	sp
020A:320B  3B 2E 4256				cmp	bp,word ptr ds:[4256h]	; (020A:4256=0EB06h)
020A:320F  53					push	bx
020A:3210  3B 2E 4256				cmp	bp,word ptr ds:[4256h]	; (020A:4256=0EB06h)
020A:3214  45					inc	bp
020A:3215  3B 2E 534A				cmp	bp,word ptr ds:[534Ah]	; (020A:534A=2)
020A:3219  3B 2E 534A				cmp	bp,word ptr ds:[534Ah]	; (020A:534A=2)
020A:321D  45					inc	bp
020A:321E  3B 2E 5357				cmp	bp,word ptr ds:[5357h]	; (020A:5357=2600h)
020A:3222  46					inc	si
020A:3223  3B 2E 5357				cmp	bp,word ptr ds:[5357h]	; (020A:5357=2600h)
020A:3227  48					dec	ax
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 106

020A:3228  00 50 52				add	[bx+si+52h],dl
020A:322B  4F					dec	di
020A:322C  43					inc	bx
020A:322D  45					inc	bp
020A:322E  53					push	bx
020A:322F  53					push	bx
020A:3230  4F					dec	di
020A:3231  52			data_374	db	52h
020A:3232  5F					pop	di
020A:3233  41			data_375	db	41h
020A:3234  52 43 48 49 54 45	data_376	db	'RCHITECTURE=x86', 0
020A:323A  43 54 55 52 45 3D
020A:3240  78 38 36 00
020A:3244  50					push	ax
020A:3245  52					push	dx
020A:3246  4F					dec	di
020A:3247  43					inc	bx
020A:3248  45					inc	bp
020A:3249  53					push	bx
020A:324A  53					push	bx
020A:324B  4F					dec	di
020A:324C  52					push	dx
020A:324D  5F					pop	di
020A:324E  49					dec	cx
020A:324F  44					inc	sp
020A:3250  45					inc	bp
020A:3251  4E					dec	si
020A:3252  54					push	sp
020A:3253  49					dec	cx
020A:3254  46					inc	si
020A:3255  49					dec	cx
020A:3256  45					inc	bp
020A:3257  52					push	dx
020A:3258  3D 3878				cmp	ax,3878h
020A:325B  36					db	36h
020A:325C  20 46 61				and	[bp+61h],al
020A:325F  6D					db	6Dh
020A:3260  69					db	69h
020A:3261  6C					db	6Ch
020A:3262  79 20				jns	$+22h			; Jump if not sign
020A:3264  36: 20 4D 6F				and	ss:[di+6Fh],cl
020A:3268  64					db	64h
020A:3269  65					db	65h
020A:326A  6C					db	6Ch
020A:326B  20 31				and	[bx+di],dh
020A:326D  34 30				xor	al,30h			; '0'
020A:326F  20 53 74				and	[bp+di+74h],dl
020A:3272  65					db	65h
020A:3273  70 70				jo	$+72h			; Jump if overflow=1
020A:3275  69					db	69h
020A:3276  6E					db	6Eh
020A:3277  2067			data_377	dw	2067h
020A:3279  31 2C				xor	[si],bp
020A:327B  20 47 65				and	[bx+65h],al
020A:327E  6E			data_379	db	6Eh
020A:327F  75 69 6E 65 49 6E	data_380	db	'uineIntel', 0
020A:3285  74 65 6C 00
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 107

020A:3289  50					push	ax
020A:328A  52					push	dx
020A:328B  4F					dec	di
020A:328C  43					inc	bx
020A:328D  45					inc	bp
020A:328E  53					push	bx
020A:328F  53					push	bx
020A:3290  4F					dec	di
020A:3291  52					push	dx
020A:3292  5F					pop	di
020A:3293  4C					dec	sp
020A:3294  45					inc	bp
020A:3295  56					push	si
020A:3296  45					inc	bp
020A:3297  4C					dec	sp
020A:3298  3D 0036				cmp	ax,36h
020A:329B  50					push	ax
020A:329C  52					push	dx
020A:329D  4F					dec	di
020A:329E  43					inc	bx
020A:329F  45					inc	bp
020A:32A0  53					push	bx
020A:32A1  53					push	bx
020A:32A2  4F					dec	di
020A:32A3  52					push	dx
020A:32A4  5F					pop	di
020A:32A5  52					push	dx
020A:32A6  45					inc	bp
020A:32A7  56					push	si
020A:32A8  49					dec	cx
020A:32A9  53					push	bx
020A:32AA  49					dec	cx
020A:32AB  4F					dec	di
020A:32AC  4E					dec	si
020A:32AD  3D 6338				cmp	ax,6338h
020A:32B0  30 31				xor	[bx+di],dh
020A:32B2  00 50 52				add	[bx+si+52h],dl
020A:32B5  4F					dec	di
020A:32B6  47					inc	di
020A:32B7  52					push	dx
020A:32B8  41					inc	cx
020A:32B9  4D					dec	bp
020A:32BA  46					inc	si
020A:32BB  49					dec	cx
020A:32BC  4C					dec	sp
020A:32BD  45					inc	bp
020A:32BE  53					push	bx
020A:32BF  3D 3A43				cmp	ax,3A43h
020A:32C2  5C					pop	sp
020A:32C3  50					push	ax
020A:32C4  52					push	dx
020A:32C5  4F					dec	di
020A:32C6  47					inc	di
020A:32C7  52					push	dx
020A:32C8  41					inc	cx
020A:32C9  7E 31				jle	$+33h			; Jump if < or =
020A:32CB  00 50 52				add	[bx+si+52h],dl
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 108

020A:32CE  4F					dec	di
020A:32CF  4D					dec	bp
020A:32D0  50					push	ax
020A:32D1  54					push	sp
020A:32D2  3D 5024				cmp	ax,5024h
020A:32D5  24 47				and	al,47h			; 'G'
020A:32D7  00 53 45				add	[bp+di+45h],dl
020A:32DA  53					push	bx
020A:32DB  53					push	bx
020A:32DC  49					dec	cx
020A:32DD  4F					dec	di
020A:32DE  4E					dec	si
020A:32DF  4E					dec	si
020A:32E0  41					inc	cx
020A:32E1  4D					dec	bp
020A:32E2  45					inc	bp
020A:32E3  3D 6F43				cmp	ax,6F43h
020A:32E6  6E					db	6Eh
020A:32E7  73 6F				jnc	$+71h			; Jump if carry=0
020A:32E9  6C					db	6Ch
020A:32EA  65					db	65h
020A:32EB  00 53 59				add	[bp+di+59h],dl
020A:32EE  53					push	bx
020A:32EF  54					push	sp
020A:32F0  45					inc	bp
020A:32F1  4D					dec	bp
020A:32F2  44					inc	sp
020A:32F3  52					push	dx
020A:32F4  49					dec	cx
020A:32F5  56					push	si
020A:32F6  45					inc	bp
020A:32F7  3D 3A43				cmp	ax,3A43h
020A:32FA  00 53 59				add	[bp+di+59h],dl
020A:32FD  53					push	bx
020A:32FE  54					push	sp
020A:32FF  45					inc	bp
020A:3300  4D					dec	bp
020A:3301  52					push	dx
020A:3302  4F					dec	di
020A:3303  4F					dec	di
020A:3304  54					push	sp
020A:3305  3D 3A43				cmp	ax,3A43h
020A:3308  5C					pop	sp
020A:3309  57					push	di
020A:330A  49					dec	cx
020A:330B  4E					dec	si
020A:330C  44					inc	sp
020A:330D  4F					dec	di
020A:330E  57					push	di
020A:330F  53					push	bx
020A:3310  00 54 45				add	[si+45h],dl
020A:3313  4D					dec	bp
020A:3314  50					push	ax
020A:3315  3D 3A43				cmp	ax,3A43h
020A:3318  5C					pop	sp
020A:3319  57					push	di
020A:331A  49					dec	cx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 109

020A:331B  4E					dec	si
020A:331C  44					inc	sp
020A:331D  4F					dec	di
020A:331E  57					push	di
020A:331F  53					push	bx
020A:3320  5C					pop	sp
020A:3321  54					push	sp
020A:3322  45					inc	bp
020A:3323  4D					dec	bp
020A:3324  50					push	ax
020A:3325  00 54 4D				add	[si+4Dh],dl
020A:3328  50					push	ax
020A:3329  3D 3A43				cmp	ax,3A43h
020A:332C  5C					pop	sp
020A:332D  57					push	di
020A:332E  49					dec	cx
020A:332F  4E					dec	si
020A:3330  44					inc	sp
020A:3331  4F					dec	di
020A:3332  57					push	di
020A:3333  53					push	bx
020A:3334  5C					pop	sp
020A:3335  54					push	sp
020A:3336  45					inc	bp
020A:3337  4D					dec	bp
020A:3338  50					push	ax
020A:3339  00 55 53				add	[di+53h],dl
020A:333C  45					inc	bp
020A:333D  52					push	dx
020A:333E  44					inc	sp
020A:333F  4F					dec	di
020A:3340  4D					dec	bp
020A:3341  41					inc	cx
020A:3342  49					dec	cx
020A:3343  4E					dec	si
020A:3344  3D 5249				cmp	ax,5249h
020A:3347  49					dec	cx
020A:3348  4E					dec	si
020A:3349  41					inc	cx
020A:334A  2D 4333				sub	ax,4333h
020A:334D  38 33				cmp	[bp+di],dh
020A:334F  43					inc	bx
020A:3350  44					inc	sp
020A:3351  32 36 0046				xor	dh,byte ptr ds:[46h]	; (020A:0046=3)
020A:3355  55					push	bp
020A:3356  53					push	bx
020A:3357  45					inc	bp
020A:3358  52					push	dx
020A:3359  4E					dec	si
020A:335A  41					inc	cx
020A:335B  4D					dec	bp
020A:335C  45					inc	bp
020A:335D  3D 7269				cmp	ax,7269h
020A:3360  69					db	69h
020A:3361  6E					db	6Eh
020A:3362  61					db	61h
020A:3363  00 55 53				add	[di+53h],dl
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 110

020A:3366  45					inc	bp
020A:3367  52					push	dx
020A:3368  50					push	ax
020A:3369  52					push	dx
020A:336A  4F					dec	di
020A:336B  46					inc	si
020A:336C  49					dec	cx
020A:336D  4C					dec	sp
020A:336E  45					inc	bp
020A:336F  3D 3A43				cmp	ax,3A43h
020A:3372  5C					pop	sp
020A:3373  44					inc	sp
020A:3374  4F					dec	di
020A:3375  43					inc	bx
020A:3376  55					push	bp
020A:3377  4D					dec	bp
020A:3378  45					inc	bp
020A:3379  7E 31				jle	$+33h			; Jump if < or =
020A:337B  5C					pop	sp
020A:337C  69					db	69h
020A:337D  72 69				jc	$+6Bh			; Jump if carry Set
020A:337F  6E					db	6Eh
020A:3380  61					db	61h
020A:3381  00 42 4C				add	[bp+si+4Ch],al
020A:3384  41					inc	cx
020A:3385  53					push	bx
020A:3386  54					push	sp
020A:3387  45					inc	bp
020A:3388  52					push	dx
020A:3389  3D 3241				cmp	ax,3241h
020A:338C  32 30				xor	dh,[bx+si]
020A:338E  20 49 35				and	[bx+di+35h],cl
020A:3391  20 44 31				and	[si+31h],al
020A:3394  20 50 33				and	[bx+si+33h],dl
020A:3397  33 30				xor	si,[bx+si]
020A:3399  20 54 33				and	[si+33h],dl
020A:339C  00 00				add	[bx+si],al
020A:339E  01 00				add	[bx+si],ax
020A:33A0  5A					pop	dx
020A:33A1  3A 5C 53				cmp	bl,[si+53h]
020A:33A4  52					push	dx
020A:33A5  2E					db	2Eh
020A:33A6  45					inc	bp
020A:33A7  58					pop	ax
020A:33A8  45					inc	bp
020A:33A9  00 5C 73				add	[si+73h],bl
020A:33AC  79 73				jns	loc_331			; Jump if not sign
020A:33AE  74 65				jz	loc_330			; Jump if zero
020A:33B0  4D					dec	bp
020A:33B1  00					db	0
020A:33B2  00 00				add	[bx+si],al
020A:33B4  00 42 31				add	[bp+si+31h],al
020A:33B7  36					db	36h
020A:33B8  2E					db	2Eh
020A:33B9  43					inc	bx
020A:33BA  4F					dec	di
020A:33BB  4D					dec	bp
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 111

020A:33BC  00 58 5B				add	[bx+si+5Bh],bl
020A:33BF  1F					pop	ds
020A:33C0  4D					dec	bp
020A:33C1  47					inc	di
020A:33C2  05 017D				add	ax,17Dh
020A:33C5  97					xchg	di,ax
020A:33C6  FD					std				; Set direction flag
020A:33C7  A0 424B				mov	al,byte ptr ds:[424Bh]	; (000B:424B=2)
020A:33CA  31 36 7500				xor	word ptr ds:[7500h],si	; (000B:7500=2416h)
020A:33CE  F2					db	0F2h
020A:33CF  81 CD C420				or	bp,0C420h
020A:33D3  06					push	es
020A:33D4  00 9A FEF0				add	[bp+si-110h],bl
020A:33D8  1D 25F0				sbb	ax,25F0h
020A:33DB  06					push	es
020A:33DC  B4 95				mov	ah,95h
020A:33DE  4B					dec	bx
020A:33DF  01 0E 5604				add	word ptr ds:[5604h],cx	; (000B:5604=245h)
020A:33E3  01 0E 0E04				add	word ptr ds:[0E04h],cx	; (000B:0E04=0)
020A:33E7  04 01				add	al,1
020A:33E9  0013[FF]				db	19 dup (0FFh)
020A:33FC  0510			data_382	dw	510h
020A:33FE  E6 FF				out	0FFh,al			; port 0FFh ??I/O Non-standard
020A:3400  47					inc	di
020A:3401  05 0014				add	ax,14h
020A:3404  18 00				sbb	[bx+si],al
020A:3406  47					inc	di
020A:3407  05 FFFF				add	ax,0FFFFh
020A:340A  FF					db	0FFh
020A:340B  FF 00				inc	word ptr [bx+si]
020A:340D  00 00				add	[bx+si],al
020A:340F  00 05				add	[di],al
020A:3411  000D[00]				db	13 dup (0)
020A:341E  0000			data_384	dw	0
020A:3420  21CD			data_385	dw	21CDh
020A:3422  00CB			data_386	dw	0CBh
020A:3424  0008[00]				db	8 dup (0)
020A:342C  8B			data_388	db	8Bh			; Data table (indexed access)
020A:342D  05 020A				add	ax,20Ah
020A:3430  0E					push	cs
020A:3431  0C 0A				or	al,0Ah
020A:3433  02 14				add	dl,[si]
020A:3435  0C 0A				or	al,0Ah
020A:3437  02 00				add	al,[bx+si]
020A:3439  00 00				add	[bx+si],al
020A:343B  00 AD 0A06				add	byte ptr ds:[0A06h][di],ch	; (000B:0A06=4)
020A:343F  02 AD 0A06				add	ch,byte ptr ds:[0A06h][di]	; (000B:0A06=4)
020A:3443  02 53 FF				add	dl,[bp+di-1]
020A:3446  00 F0				add	al,dh
020A:3448  00 00				db	0, 0
020A:344A  0000			data_390	dw	0
020A:344C  0000			data_391	dw	0
020A:344E  0000			data_392	dw	0
020A:3450  28 20		data_393	db	'( '
020A:3452  7572			data_394	dw	7572h
020A:3454  382C			data_395	dw	382Ch
020A:3456  3636			data_396	dw	3636h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 112

020A:3458  2C			data_397	db	2Ch
020A:3459  43			data_398	db	43h
020A:345A  3A 5C 57				cmp	bl,[si+57h]
020A:345D  49			data_400	db	49h
020A:345E  444E			data_401	dw	444Eh
020A:3460  4F					dec	di
020A:3461  57					push	di
020A:3462  53					push	bx
020A:3463  5C					pop	sp
020A:3464  73 79				jnc	$+7Bh			; Jump if carry=0
020A:3466  7473			data_403	dw	7473h
020A:3468  6D65			data_404	dw	6D65h
020A:346A  3233			data_405	dw	3233h
020A:346C  4B5C			data_406	dw	4B5Ch
020A:346E  5945			data_407	dw	5945h
020A:3470  4F42			data_408	dw	4F42h
020A:3472  5241			data_409	dw	5241h
020A:3474  2E44			data_410	dw	2E44h
020A:3476  5953			data_411	dw	5953h
020A:3478  0D53			data_412	dw	0D53h
020A:347A  00 00		data_413	db	0, 0
020A:347C  0000			data_414	dw	0
020A:347E  0000			data_415	dw	0
020A:3480  0000			data_416	dw	0
020A:3482  00					db	0
020A:3483  00					db	0
020A:3484  0000			data_417	dw	0
020A:3486  00					db	0
020A:3487  00					db	0
020A:3488  00					db	0
020A:3489  00					db	0
020A:348A  00					db	0
020A:348B  00					db	0
020A:348C  0000			data_418	dw	0
020A:348E  00			data_419	db	0
020A:348F  00					db	0
020A:3490  00					db	0
020A:3491  00					db	0
020A:3492  00					db	0
020A:3493  00					db	0
020A:3494  00					db	0
020A:3495  00					db	0
020A:3496  00					db	0
020A:3497  00					db	0
020A:3498  00					db	0
020A:3499  00					db	0
020A:349A  00					db	0
020A:349B  00					db	0
020A:349C  00			data_420	db	0
020A:349D  00					db	0
020A:349E  00					db	0
020A:349F  00					db	0
020A:34A0  00					db	0
020A:34A1  00					db	0
020A:34A2  00					db	0
020A:34A3  00					db	0
020A:34A4  00					db	0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 113

020A:34A5  00					db	0
020A:34A6  00					db	0
020A:34A7  00					db	0
020A:34A8  00					db	0
020A:34A9  00					db	0
020A:34AA  00					db	0
020A:34AB  00					db	0
020A:34AC  00					db	0
020A:34AD  00					db	0
020A:34AE  00					db	0
020A:34AF  00					db	0
020A:34B0  00					db	0
020A:34B1  00					db	0
020A:34B2  00					db	0
020A:34B3  00					db	0
020A:34B4  00					db	0
020A:34B5  00					db	0
020A:34B6  00					db	0
020A:34B7  00					db	0
020A:34B8  00					db	0
020A:34B9  00					db	0
020A:34BA  00					db	0
020A:34BB  00					db	0
020A:34BC  00					db	0
020A:34BD  00					db	0
020A:34BE  00					db	0
020A:34BF  00					db	0
020A:34C0  00					db	0
020A:34C1  00					db	0
020A:34C2  00					db	0
020A:34C3  00					db	0
020A:34C4  00					db	0
020A:34C5  00					db	0
020A:34C6  00					db	0
020A:34C7  00					db	0
020A:34C8  00					db	0
020A:34C9  00					db	0
020A:34CA  00					db	0
020A:34CB  00					db	0
020A:34CC  00					db	0
020A:34CD  00 00				add	[bx+si],al
020A:34CF  00 E9				add	cl,ch
020A:34D1  10 22				adc	[bp+si],ah
020A:34D3  000C[00]				db	12 dup (0)
020A:34DF  0000 0000		data_422	dd	00000h
020A:34E3  00 10				add	[bx+si],dl
020A:34E5  00					db	0
020A:34E6  00					db	0
020A:34E7  00 00				add	[bx+si],al
020A:34E9  00 80 0017				add	byte ptr ds:[17h][bx+si],al	; (000B:0017=0F0h)
020A:34ED  18 00				sbb	[bx+si],al
020A:34EF  97					xchg	di,ax
020A:34F0  00 96 0000				add	[bp+0],dl
						nop	                        ;*ASM fixup - sign extn byte
020A:34F4  00 01				add	[bx+di],al
020A:34F6  01 01				add	[bx+di],ax
020A:34F8  00 5A 02				add	[bp+si+2],bl
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 114

020A:34FB  56					push	si
020A:34FC  04 98				add	al,98h
020A:34FE  02 C9				add	cl,cl
020A:3500  02 DE				add	bl,dh
020A:3502  02 B2 8903				add	dh,[bp+si-76FDh]
020A:3506  04 17				add	al,17h
020A:3508  02 EC				add	ch,ah
020A:350A  01 1E 0C04				add	word ptr ds:[0C04h],bx	; (000B:0C04=0)
020A:350E  04 D4				add	al,0D4h
020A:3510  03 F0				add	si,ax
020A:3512  03 E9				add	bp,cx
020A:3514  01 E9				add	cx,bp
020A:3516  01 E9				add	cx,bp
020A:3518  01 2E 06F6				add	word ptr ds:[6F6h],bp	; (000B:06F6=0A8C0h)
020A:351C  D5 0E		;*		aad	0Eh			; undocumented inst
020A:351C  D5 0E				db	0D5h, 0Eh
020A:351E  01 75 02				add	[di+2],si
020A:3521  F8					clc				; Clear carry flag
020A:3522  C3					retn
							                        ;* No entry point to code
020A:3523  1E					push	ds
020A:3524  06					push	es
020A:3525  50					push	ax
020A:3526  53					push	bx
020A:3527  0E					push	cs
020A:3528  1F					pop	ds
020A:3529  BB 0040				mov	bx,40h
020A:352C  8E C3				mov	es,bx
020A:352E  80 3E 06EF FF			cmp	byte ptr ds:[6EFh],0FFh	; (020A:06EF=0CDh)
020A:3533  74 03				je	loc_332			; Jump if equal
020A:3535  E9 00EC				jmp	loc_347			; (3624)
020A:3538			loc_332::
020A:3538  26: F6 06 0017 03			test	byte ptr es:[17h],3	; (0040:0017=0)
020A:353E  75 07				jnz	loc_333			; Jump if not zero
020A:3540  80 26 0115 7F			and	byte ptr data_67+1,7Fh	; (020A:0115=0Ch)
020A:3545  EB 05				jmp	short loc_334		; (354C)
020A:3547			loc_333::
020A:3547  80 0E 0115 80			or	byte ptr data_67+1,80h	; (020A:0115=0Ch)
020A:354C			loc_334::
020A:354C  26: F6 06 0017 04			test	byte ptr es:[17h],4	; (0040:0017=0)
020A:3552  75 0F				jnz	loc_335			; Jump if not zero
020A:3554  26: F6 06 0096 04			test	byte ptr es:[96h],4	; (0040:0096=10h)
020A:355A  75 07				jnz	loc_335			; Jump if not zero
020A:355C  80 26 0115 BF			and	byte ptr data_67+1,0BFh	; (020A:0115=0Ch)
020A:3561  EB 05				jmp	short loc_336		; (3568)
020A:3563			loc_335::
020A:3563  80 0E 0115 40			or	byte ptr data_67+1,40h	; (020A:0115=0Ch) '@'
020A:3568			loc_336::
020A:3568  26: F6 06 0017 08			test	byte ptr es:[17h],8	; (0040:0017=0)
020A:356E  75 0F				jnz	loc_337			; Jump if not zero
020A:3570  26: F6 06 0096 08			test	byte ptr es:[96h],8	; (0040:0096=10h)
020A:3576  75 07				jnz	loc_337			; Jump if not zero
020A:3578  80 26 0115 DF			and	byte ptr data_67+1,0DFh	; (020A:0115=0Ch)
020A:357D  EB 05				jmp	short loc_338		; (3584)
020A:357F			loc_337::
020A:357F  80 0E 0115 20			or	byte ptr data_67+1,20h	; (020A:0115=0Ch) ' '
020A:3584			loc_338::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 115

020A:3584  B9 0004				mov	cx,4
020A:3587  33 F6				xor	si,si			; Zero register
020A:3589  33 FF				xor	di,di			; Zero register

020A:358B			locloop_339::
020A:358B  8B 9C 011B				mov	bx,word ptr data_71+3[si]	; (020A:011B=5DA5h)
020A:358F  26: 8A 07				mov	al,es:[bx]
020A:3592  88 85 0111				mov	byte ptr data_65+1[di],al	; (020A:0111=1Fh)
020A:3596  47					inc	di
020A:3597  46					inc	si
020A:3598  46					inc	si
020A:3599  E2 F0				loop	locloop_339		; Loop if cx > 0

020A:359B  C6 06 011A 00			mov	byte ptr data_71+2,0	; (020A:011A=83h)
020A:35A0  8B			data_423	db	8Bh
020A:35A1  E736			data_424	dw	0E736h
020A:35A3  0E					push	cs
020A:35A4  8D 74 04				lea	si,[si+4]		; Load effective addr
020A:35A7			loc_340::
020A:35A7  32 FF				xor	bh,bh			; Zero register
020A:35A9  8A 1C				mov	bl,[si]
020A:35AB  D0 EB				shr	bl,1			; Shift w/zeros fill
020A:35AD  D0 EB				shr	bl,1			; Shift w/zeros fill
020A:35AF  D0 EB				shr	bl,1			; Shift w/zeros fill
020A:35B1  D0 EB				shr	bl,1			; Shift w/zeros fill
020A:35B3  D0 E3				shl	bl,1			; Shift w/zeros fill
020A:35B5  FF A7 0129				jmp	word ptr data_81+1[bx]	;*(020A:0129=714h)
020A:35B9  E9 030C				jmp	loc_389			; (38C8)
							                        ;* No entry point to code
020A:35BC  A0 0125				mov	al,byte ptr data_77+1	; (020A:0125=2)
020A:35BF  3A 06 0126				cmp	al,byte ptr data_77+2	; (020A:0126=3)
020A:35C3  75 19				jne	loc_342			; Jump if not equal
020A:35C5  8B 44 01				mov	ax,[si+1]
020A:35C8  85 06 0ED1				test	ax,data_176		; (020A:0ED1=2474h)
020A:35CC  75 07				jnz	loc_341			; Jump if not zero
020A:35CE  C6 06 0127 01			mov	byte ptr data_77+3,1	; (020A:0127=4)
020A:35D3  EB			data_425	db	0EBh
020A:35D4  09			data_426	db	9
020A:35D5			loc_341::
020A:35D5  06FE			data_427	dw	6FEh
020A:35D7  0126			data_428	dw	126h
020A:35D9  06C6			data_429	dw	6C6h
020A:35DB  0127			data_430	dw	127h
020A:35DD  00			data_431	db	0
020A:35DE			loc_342::
020A:35DE  FE			data_432	db	0FEh
020A:35DF  06			data_433	db	6
020A:35E0  25 4601				and	ax,4601h
020A:35E3  46			data_435	db	46h
020A:35E4  46			data_436	db	46h
020A:35E5  EB C0				jmp	short loc_340		; (35A7)
							                        ;* No entry point to code
020A:35E7  A0 0125				mov	al,byte ptr data_77+1	; (020A:0125=2)
020A:35EA  3A 06 0126				cmp	al,byte ptr data_77+2	; (020A:0126=3)
020A:35EE  75			data_442	db	75h
020A:35EF  16					push	ss
020A:35F0  8B			data_443	db	8Bh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 116

020A:35F1  3E					db	3Eh
020A:35F2  E1 0E				loopz	$+10h			; Loop if zf=1, cx>0

020A:35F4  448A			data_444	dw	448Ah
020A:35F6  E801			data_445	dw	0E801h
020A:35F8  10 00				adc	[bx+si],al
020A:35FA  0A72			data_446	dw	0A72h
020A:35FC  8B 3E 0EE9				mov	di,data_183		; (020A:0EE9=0E01h)
020A:3600  8A 44 01				mov	al,[si+1]
020A:3603  E8 0004				call	sub_31			; (360A)
020A:3606			loc_343::
020A:3606  4646			data_449	dw	4646h
020A:3608  9DEB			data_450	dw	9DEBh

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_31		proc	near
020A:360A  8DF8			data_451	dw	8DF8h
020A:360C  7D 04				jge	$+6			; Jump if > or =
020A:360E			loc_344::
020A:360E  3D83			data_452	dw	3D83h
020A:3610  00 74 10				add	[si+10h],dh
020A:3613  3A 45 02				cmp	al,[di+2]
020A:3616  74 04				je	loc_345			; Jump if equal
020A:3618  3D03			data_454	dw	3D03h
020A:361A  F2EB			data_455	dw	0F2EBh
020A:361C			loc_345::
020A:361C  458B			data_456	dw	458Bh
020A:361E  E805			data_457	dw	0E805h
020A:3620  0A57			data_458	dw	0A57h
020A:3622  F9					stc				; Set carry flag
020A:3623			loc_346::
020A:3623  C3					retn
				sub_31		endp

020A:3624			loc_347::
020A:3624  F8					clc				; Clear carry flag
020A:3625  5B					pop	bx
020A:3626  58					pop	ax
020A:3627  07					pop	es
020A:3628  1F					pop	ds
020A:3629  C3					retn
020A:362A  A0 0125				mov	al,byte ptr data_77+1	; (020A:0125=2)
020A:362D  3A 06 0126				cmp	al,byte ptr data_77+2	; (020A:0126=3)
020A:3631  75 2C				jne	loc_351			; Jump if not equal
020A:3633  8A			data_461	db	8Ah
020A:3634  1C 80				sbb	al,80h
020A:3636  E3 07				jcxz	$+9			; Jump if cx=0
020A:3638  32 FF				xor	bh,bh			; Zero register
020A:363A  8A 87 0111				mov	al,byte ptr data_65+1[bx]	; (020A:0111=1Fh)
020A:363E  F6 04 08				test	byte ptr [si],8
020A:3641  75 07				jnz	loc_348			; Jump if not zero
020A:3643  84 44 01				test	al,[si+1]
020A:3646  75 0E				jnz	loc_350			; Jump if not zero
020A:3648  74 05				jz	loc_349			; Jump if zero
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 117

020A:364A			loc_348::
020A:364A  84 44 01				test	al,[si+1]
020A:364D  74 07				jz	loc_350			; Jump if zero
020A:364F			loc_349::
020A:364F  C6 06 0127 01			mov	byte ptr data_77+3,1	; (020A:0127=4)
020A:3654  EB 09				jmp	short loc_351		; (365F)
020A:3656			loc_350::
020A:3656  FE 06 0126				inc	byte ptr data_77+2	; (020A:0126=3)
020A:365A  C6 06 0127 00			mov	byte ptr data_77+3,0	; (020A:0127=4)
020A:365F			loc_351::
020A:365F  FE 06 0125				inc	byte ptr data_77+1	; (020A:0125=2)
020A:3663  46					inc	si
020A:3664  46					inc	si
020A:3665  E9 FF3F				jmp	loc_340			; (35A7)
							                        ;* No entry point to code
020A:3668  A0 0126				mov	al,byte ptr data_77+2	; (020A:0126=3)
020A:366B  3A 06 0125				cmp	al,byte ptr data_77+1	; (020A:0125=2)
020A:366F  75 06				jne	loc_352			; Jump if not equal
020A:3671  FE 0E 0126				dec	byte ptr data_77+2	; (020A:0126=3)
020A:3675  EB 1E				jmp	short loc_354		; (3695)
020A:3677			loc_352::
020A:3677  80 3E 0127 01			cmp	byte ptr data_77+3,1	; (020A:0127=4)
020A:367C  75 17				jne	loc_354			; Jump if not equal
020A:367E  FE 0E 0125				dec	byte ptr data_77+1	; (020A:0125=2)
020A:3682  3A 06 0125				cmp	al,byte ptr data_77+1	; (020A:0125=2)
020A:3686  75 09				jne	loc_353			; Jump if not equal
020A:3688  FE 06 0126				inc	byte ptr data_77+2	; (020A:0126=3)
020A:368C  C6 06 0127 00			mov	byte ptr data_77+3,0	; (020A:0127=4)
020A:3691			loc_353::
020A:3691  FE 06 0125				inc	byte ptr data_77+1	; (020A:0125=2)
020A:3695			loc_354::
020A:3695  46					inc	si
020A:3696  E9 FF0E				jmp	loc_340			; (35A7)
							                        ;* No entry point to code
020A:3699  A0 0126				mov	al,byte ptr data_77+2	; (020A:0126=3)
020A:369C  3A 06 0125				cmp	al,byte ptr data_77+1	; (020A:0125=2)
020A:36A0  75 04				jne	loc_355			; Jump if not equal
020A:36A2  FE 0E 0126				dec	byte ptr data_77+2	; (020A:0126=3)
020A:36A6			loc_355::
020A:36A6  FE 0E 0125				dec	byte ptr data_77+1	; (020A:0125=2)
020A:36AA  46					inc	si
020A:36AB  E9 FEF9				jmp	loc_340			; (35A7)
							                        ;* No entry point to code
020A:36AE  A0 0126				mov	al,byte ptr data_77+2	; (020A:0126=3)
020A:36B1  3A 06 0125				cmp	al,byte ptr data_77+1	; (020A:0125=2)
020A:36B5  75 27				jne	loc_357			; Jump if not equal
020A:36B7  8B 3E 0EE1				mov	di,word ptr ds:[0EE1h]	; (020A:0EE1=0FC00h)
020A:36BB  8A 44 01				mov	al,[si+1]
020A:36BE  E8 0022				call	sub_32			; (36E3)
020A:36C1  72 0C				jc	loc_356			; Jump if carry Set
020A:36C3  8B 3E 0EE9				mov	di,data_183		; (020A:0EE9=0E01h)
020A:36C7  8A 44 01				mov	al,[si+1]
020A:36CA  E8 0016				call	sub_32			; (36E3)
020A:36CD  73 0F				jnc	loc_357			; Jump if carry=0
020A:36CF			loc_356::
020A:36CF  80 0E 0115 08			or	byte ptr data_67+1,8	; (020A:0115=0Ch)
020A:36D4  F6 06 011A 80			test	byte ptr data_71+2,80h	; (020A:011A=83h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 118

020A:36D9  74 03				jz	loc_357			; Jump if zero
020A:36DB  E9 01EC				jmp	loc_390			; (38CA)
020A:36DE			loc_357::
020A:36DE  46					inc	si
020A:36DF  46					inc	si
020A:36E0  E9 FEC4				jmp	loc_340			; (35A7)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_32		proc	near
020A:36E3  F8					clc				; Clear carry flag
020A:36E4  8D 7D 04				lea	di,[di+4]		; Load effective addr
020A:36E7			loc_358::
020A:36E7  83 3D 00				cmp	word ptr [di],0
020A:36EA  74 1C				je	loc_361			; Jump if equal
020A:36EC  3A 45 02				cmp	al,[di+2]
020A:36EF  74 04				je	loc_359			; Jump if equal
020A:36F1  03 3D				add	di,[di]
020A:36F3  EB F2				jmp	short loc_358		; (36E7)
020A:36F5			loc_359::
020A:36F5  80 26 0115 F7			and	byte ptr data_67+1,0F7h	; (020A:0115=0Ch)
020A:36FA  56					push	si
020A:36FB  8D 75 07				lea	si,[di+7]		; Load effective addr
020A:36FE  89 36 0123				mov	word ptr data_75+3,si	; (020A:0123=100h)
020A:3702  A0 06EB				mov	al,byte ptr ds:[6EBh]	; (020A:06EB=0D2h)
020A:3705  EB 02				jmp	short loc_362		; (3709)
020A:3707			loc_360::
020A:3707  5E					pop	si
020A:3708			loc_361::
020A:3708  C3					retn
020A:3709			loc_362::
020A:3709  8B 36 0123				mov	si,word ptr data_75+3	; (020A:0123=100h)
020A:370D  83 3C 00				cmp	word ptr [si],0
020A:3710  75 02				jne	loc_363			; Jump if not equal
020A:3712  EB F3				jmp	short loc_360		; (3707)
020A:3714			loc_363::
020A:3714  8A 54 02				mov	dl,[si+2]
020A:3717  8B 1C				mov	bx,[si]
020A:3719  03 DE				add	bx,si
020A:371B  89 1E 0123				mov	word ptr data_75+3,bx	; (020A:0123=100h)
020A:371F  F6 C2 40				test	dl,40h			; '@'
020A:3722  74 2C				jz	loc_366			; Jump if zero
020A:3724  32 ED				xor	ch,ch			; Zero register
020A:3726  8A 4C 03				mov	cl,[si+3]
020A:3729  BB 0003				mov	bx,3
020A:372C  F6 C2 A0				test	dl,0A0h
020A:372F  74 03				jz	locloop_364		; Jump if zero
020A:3731  BB 0002				mov	bx,2

020A:3734			locloop_364::
020A:3734  E3 D3				jcxz	loc_362			; Jump if cx=0
020A:3736  3A 44 04				cmp	al,[si+4]
020A:3739  74 06				je	loc_365			; Jump if equal
020A:373B  03 F3				add	si,bx
020A:373D  E2 F5				loop	locloop_364		; Loop if cx > 0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 119


020A:373F  EB C8				jmp	short loc_362		; (3709)
020A:3741			loc_365::
020A:3741  8A E0				mov	ah,al
020A:3743  8A 44 05				mov	al,[si+5]
020A:3746  F6 C2 A0				test	dl,0A0h
020A:3749  75 2A				jnz	loc_368			; Jump if not zero
020A:374B  8A 64 06				mov	ah,[si+6]
020A:374E  EB 25				jmp	short loc_368		; (3775)
020A:3750			loc_366::
020A:3750  3A 44 03				cmp	al,[si+3]
020A:3753  72 B4				jb	loc_362			; Jump if below
020A:3755  3A 44 04				cmp	al,[si+4]
020A:3758  77 AF				ja	loc_362			; Jump if above
020A:375A  2A 44 03				sub	al,[si+3]
020A:375D  F6 C2 A0				test	dl,0A0h
020A:3760  74 0A				jz	loc_367			; Jump if zero
020A:3762  8D 5C 05				lea	bx,[si+5]		; Load effective addr
020A:3765  D7					xlat				; al=[al+[bx]] table
020A:3766  8A 26 06EB				mov	ah,byte ptr ds:[6EBh]	; (020A:06EB=0D2h)
020A:376A  EB 09				jmp	short loc_368		; (3775)
020A:376C			loc_367::
020A:376C  B3 02				mov	bl,2
020A:376E  F6 E3				mul	bl			; ax = reg * al
020A:3770  8B D8				mov	bx,ax
020A:3772  8B 40 05				mov	ax,[bx+si+5]
020A:3775			loc_368::
020A:3775  F6 C2 20				test	dl,20h			; ' '
020A:3778  74 02				jz	loc_369			; Jump if zero
020A:377A  32 E4				xor	ah,ah			; Zero register
020A:377C			loc_369::
020A:377C  E8 08FA				call	sub_35			; (4079)
020A:377F  F9					stc				; Set carry flag
020A:3780  EB 85				jmp	short loc_360		; (3707)
				sub_32		endp

							                        ;* No entry point to code
020A:3782  A0 0126				mov	al,byte ptr data_77+2	; (020A:0126=3)
020A:3785  3A 06 0125				cmp	al,byte ptr data_77+1	; (020A:0125=2)
020A:3789  75 14				jne	loc_371			; Jump if not equal
020A:378B  8A 44 01				mov	al,[si+1]
020A:378E  F6 04 08				test	byte ptr [si],8
020A:3791  75 06				jnz	loc_370			; Jump if not zero
020A:3793  08 06 011A				or	byte ptr data_71+2,al	; (020A:011A=83h)
020A:3797  EB 06				jmp	short loc_371		; (379F)
020A:3799			loc_370::
020A:3799  F6 D0				not	al
020A:379B  20 06 011A				and	byte ptr data_71+2,al	; (020A:011A=83h)
020A:379F			loc_371::
020A:379F  46					inc	si
020A:37A0  46					inc	si
020A:37A1  E9 FE03				jmp	loc_340			; (35A7)
							                        ;* No entry point to code
020A:37A4  A0 0125				mov	al,byte ptr data_77+1	; (020A:0125=2)
020A:37A7  3A 06 0126				cmp	al,byte ptr data_77+2	; (020A:0126=3)
020A:37AB  75 0F				jne	loc_372			; Jump if not equal
020A:37AD  C6 06 0116 00			mov	byte ptr data_67+2,0	; (020A:0116=0)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 120

020A:37B2  C6 06 0117 00			mov	byte ptr data_67+3,0	; (020A:0117=0)
020A:37B7  C6 06 06EE 00			mov	byte ptr data_125+3,0	; (020A:06EE=2)
020A:37BC			loc_372::
020A:37BC  46					inc	si
020A:37BD  E9 FDE7				jmp	loc_340			; (35A7)
							                        ;* No entry point to code
020A:37C0  A0 0125				mov	al,byte ptr data_77+1	; (020A:0125=2)
020A:37C3  3A 06 0126				cmp	al,byte ptr data_77+2	; (020A:0126=3)
020A:37C7  75 0F				jne	loc_373			; Jump if not equal
020A:37C9  C6 06 0116 01			mov	byte ptr data_67+2,1	; (020A:0116=0)
020A:37CE  C6 06 0117 00			mov	byte ptr data_67+3,0	; (020A:0117=0)
020A:37D3  C6 06 06EE 01			mov	byte ptr data_125+3,1	; (020A:06EE=2)
020A:37D8			loc_373::
020A:37D8  46					inc	si
020A:37D9  E9 FDCB				jmp	loc_340			; (35A7)
							                        ;* No entry point to code
020A:37DC  A0 0125				mov	al,byte ptr data_77+1	; (020A:0125=2)
020A:37DF  3A 06 0126				cmp	al,byte ptr data_77+2	; (020A:0126=3)
020A:37E3  75 05				jne	loc_374			; Jump if not equal
020A:37E5  C6 06 06EA 01			mov	byte ptr ds:[6EAh],1	; (020A:06EA=32h)
020A:37EA			loc_374::
020A:37EA  46					inc	si
020A:37EB  E9 FDB9				jmp	loc_340			; (35A7)
							                        ;* No entry point to code
020A:37EE  A0 0125				mov	al,byte ptr data_77+1	; (020A:0125=2)
020A:37F1  3A 06 0126				cmp	al,byte ptr data_77+2	; (020A:0126=3)
020A:37F5  75 29				jne	loc_378			; Jump if not equal
020A:37F7  8A 1C				mov	bl,[si]
020A:37F9  80 E3 0F				and	bl,0Fh
020A:37FC  0A DB				or	bl,bl			; Zero ?
020A:37FE  74 13				jz	loc_377			; Jump if zero
020A:3800  80 FB 01				cmp	bl,1
020A:3803  75 03				jne	loc_375			; Jump if not equal
020A:3805  E9 00C2				jmp	loc_390			; (38CA)
020A:3808			loc_375::
020A:3808  80 FB 02				cmp	bl,2
020A:380B  75 03				jne	loc_376			; Jump if not equal
020A:380D  E9 FE14				jmp	loc_347			; (3624)
020A:3810			loc_376::
020A:3810  E9 00B5				jmp	loc_389			; (38C8)
020A:3813			loc_377::
020A:3813  03 74 01				add	si,[si+1]
020A:3816  C6 06 0126 00			mov	byte ptr data_77+2,0	; (020A:0126=3)
020A:381B  C6 06 0125 00			mov	byte ptr data_77+1,0	; (020A:0125=2)
020A:3820			loc_378::
020A:3820  83 C6 03				add	si,3
020A:3823  E9 FD81				jmp	loc_340			; (35A7)
							                        ;* No entry point to code
020A:3826  A0 0125				mov	al,byte ptr data_77+1	; (020A:0125=2)
020A:3829  3A 06 0126				cmp	al,byte ptr data_77+2	; (020A:0126=3)
020A:382D  75 25				jne	loc_381			; Jump if not equal
020A:382F  8A 1C				mov	bl,[si]
020A:3831  80 E3 07				and	bl,7
020A:3834  32 FF				xor	bh,bh			; Zero register
020A:3836  8A 87 0111				mov	al,byte ptr data_65+1[bx]	; (020A:0111=1Fh)
020A:383A  F6 04 08				test	byte ptr [si],8
020A:383D  75 07				jnz	loc_379			; Jump if not zero
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 121

020A:383F  84 44 01				test	al,[si+1]
020A:3842  75 10				jnz	loc_381			; Jump if not zero
020A:3844  74 05				jz	loc_380			; Jump if zero
020A:3846			loc_379::
020A:3846  84 44 01				test	al,[si+1]
020A:3849  74 09				jz	loc_381			; Jump if zero
020A:384B			loc_380::
020A:384B  C6 06 0127 01			mov	byte ptr data_77+3,1	; (020A:0127=4)
020A:3850  FE 0E 0126				dec	byte ptr data_77+2	; (020A:0126=3)
020A:3854			loc_381::
020A:3854  46					inc	si
020A:3855  46					inc	si
020A:3856  E9 FD4E				jmp	loc_340			; (35A7)
							                        ;* No entry point to code
020A:3859  A0 0125				mov	al,byte ptr data_77+1	; (020A:0125=2)
020A:385C  3A 06 0126				cmp	al,byte ptr data_77+2	; (020A:0126=3)
020A:3860  75 61				jne	loc_388			; Jump if not equal
020A:3862  8B 3E 0EE9				mov	di,data_183		; (020A:0EE9=0E01h)
020A:3866  8A 44 01				mov	al,[si+1]
020A:3869  8D 7D 04				lea	di,[di+4]		; Load effective addr
020A:386C			loc_382::
020A:386C  83 3D 00				cmp	word ptr [di],0
020A:386F  74 52				je	loc_388			; Jump if equal
020A:3871  3A 45 02				cmp	al,[di+2]
020A:3874  74 04				je	loc_383			; Jump if equal
020A:3876  03 3D				add	di,[di]
020A:3878  EB F2				jmp	short loc_382		; (386C)
020A:387A			loc_383::
020A:387A  80 26 0115 F7			and	byte ptr data_67+1,0F7h	; (020A:0115=0Ch)
020A:387F  56					push	si
020A:3880  8D 75 07				lea	si,[di+7]		; Load effective addr
020A:3883  A0 06EB				mov	al,byte ptr ds:[6EBh]	; (020A:06EB=0D2h)
020A:3886  8B 0C				mov	cx,[si]
020A:3888  E3 38				jcxz	loc_387			; Jump if cx=0
020A:388A  46					inc	si
020A:388B  46					inc	si

020A:388C			locloop_384::
020A:388C  3A 04				cmp	al,[si]
020A:388E  74 07				je	loc_386			; Jump if equal
020A:3890			loc_385::
020A:3890  83 C6 03				add	si,3
020A:3893  E2 F7				loop	locloop_384		; Loop if cx > 0

020A:3895  EB 2B				jmp	short loc_387		; (38C2)
020A:3897			loc_386::
020A:3897  C6 06 0116 00			mov	byte ptr data_67+2,0	; (020A:0116=0)
020A:389C  C6 06 0117 00			mov	byte ptr data_67+3,0	; (020A:0117=0)
020A:38A1  5C8A			data_463	dw	5C8Ah
020A:38A3  3201			data_464	dw	3201h
020A:38A5  8AFF			data_465	dw	8AFFh
020A:38A7  0244			data_466	dw	244h
020A:38A9  8708			data_467	dw	8708h
020A:38AB  0111			data_468	dw	111h
020A:38AD  0E80			data_469	dw	0E80h
020A:38AF  0115			data_470	dw	115h
020A:38B1  A008			data_471	dw	0A008h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 122

020A:38B3  0116			data_472	dw	116h
020A:38B5  EEA2			data_473	dw	0EEA2h
020A:38B7  F606			data_474	dw	0F606h
020A:38B9  1A06			data_475	dw	1A06h
020A:38BB  01 80 0374				add	word ptr ds:[374h][bx+si],ax	; (020A:0374=2928h)
020A:38BF  5E					pop	si
020A:38C0  EB 08				jmp	short loc_390		; (38CA)
020A:38C2			loc_387::
020A:38C2  5E					pop	si
020A:38C3			loc_388::
020A:38C3  46					inc	si
020A:38C4  46					inc	si
020A:38C5  E9 FCDF				jmp	loc_340			; (35A7)
020A:38C8			loc_389::
020A:38C8  EB 00				jmp	short loc_390		; (38CA)
020A:38CA			loc_390::
020A:38CA  C6 06 0128 00			mov	byte ptr ds:[128h],0	; (020A:0128=5)
020A:38CF  F9					stc				; Set carry flag
020A:38D0  5B					pop	bx
020A:38D1  58					pop	ax
020A:38D2  07					pop	es
020A:38D3  1F					pop	ds
020A:38D4  C3					retn
020A:38D5  000B[00]				db	11 dup (0)
020A:38E0  52					push	dx
020A:38E1  3A 45 46				cmp	al,[di+46h]
020A:38E4  38 1D				cmp	[di],bl
020A:38E6  2A 36 4080				sub	dh,data_487		; (020A:4080=1Eh)
020A:38EA  20 10				and	[bx+si],dl
020A:38EC  08 04				or	[si],al
020A:38EE  02 01				add	al,[bx+di]
020A:38F0  52					push	dx
020A:38F1  4F					dec	di
020A:38F2  50					push	ax
020A:38F3  51					push	cx
020A:38F4  4B					dec	bx
020A:38F5  4C					dec	sp
020A:38F6  4D					dec	bp
020A:38F7			loc_392::
020A:38F7  47					inc	di
020A:38F8  48					dec	ax
020A:38F9  49					dec	cx
020A:38FA  10 11				adc	[bx+di],dl
020A:38FC  12 13				adc	dl,[bp+di]
020A:38FE  14 15				adc	al,15h
020A:3900  16					push	ss
020A:3901  17					pop	ss
020A:3902  18 19				sbb	[bx+di],bl
020A:3904  1E					push	ds
020A:3905  1F					pop	ds
020A:3906  20 21				and	[bx+di],ah
020A:3908  22 23				and	ah,[bp+di]
020A:390A  24 25				and	al,25h			; '%'

020A:390C			locloop_393::
020A:390C  26					db	26h
020A:390D  2C 2D				sub	al,2Dh			; '-'
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 123

020A:390F  2E					db	2Eh
020A:3910  2F					das				; Decimal adjust
020A:3911  30 31				xor	[bx+di],dh
020A:3913  32 FF				xor	bh,bh			; Zero register
020A:3915  FF					db	0FFh
020A:3916  FF					db	0FFh
020A:3917  FF 8B FF8C				dec	word ptr [bp+di-74h]
020A:391B  EB DA				jmp	short loc_392		; (38F7)
020A:391D  DB					db	0DBh
020A:391E			loc_394::
020A:391E  DC					db	0DCh
020A:391F  FF					db	0FFh
020A:3920  FF					db	0FFh
020A:3921			loc_395::
020A:3921  FF					db	0FFh
020A:3922  FF					db	0FFh
020A:3923  FF					db	0FFh
020A:3924			loc_396::
020A:3924  DD					db	0DDh
020A:3925  DE					db	0DEh
020A:3926  DF					db	0DFh
020A:3927  E2 E3				loop	locloop_393		; Loop if cx > 0

020A:3929  E4 E5				in	al,0E5h			; port 0E5h ??I/O Non-standard
020A:392B  E6 E7				out	0E7h,al			; port 0E7h ??I/O Non-standard
020A:392D  FF F3		;*		push	bx
020A:392D  FF F3				db	0FFh,0F3h
020A:392F  0008[FF]				db	8 dup (0FFh)
020A:3937  FD					std				; Set direction flag
020A:3938  0008[FF]				db	8 dup (0FFh)
020A:3940  1B FF				sbb	di,di
020A:3942  00 FF				add	bh,bh
020A:3944  FF					db	0FFh
020A:3945  FF 1E FFFF				call	dword ptr ds:[0FFFFh]	; (020A:FFFF)
020A:3949  FF					db	0FFh
020A:394A  FF 1F				call	dword ptr [bx]		;*
020A:394C  FF					db	0FFh
020A:394D  7F 94		;*		jg	loc_391			;*Jump if >
020A:394D  7F 94				db	 7Fh, 94h
020A:394F  11 17				adc	[bx],dx
020A:3951  05 1412				add	ax,1412h
020A:3954  19 15				sbb	[di],dx
020A:3956  09 0F				or	[bx],cx
020A:3958  10 1B				adc	[bp+di],bl
020A:395A  1D FF0A				sbb	ax,0FF0Ah
020A:395D  01 13				add	[bp+di],dx
020A:395F  04 06				add	al,6
020A:3961  07					pop	es
020A:3962  08 0A				or	[bp+si],cl
020A:3964  0B 0C				or	cx,[si]
020A:3966  FF					db	0FFh
020A:3967  FF					db	0FFh
020A:3968  FF					db	0FFh
020A:3969  FF 1C				call	dword ptr [si]		;*
020A:396B  1A 18				sbb	bl,[bx+si]
020A:396D  03 16 0E02				add	dx,data_172		; (020A:0E02=5153h)
020A:3971  0D FFFF				or	ax,0FFFFh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 124

020A:3974  FF					db	0FFh
020A:3975  FF 96 20FF				call	word ptr [bp+20FFh]	;*
020A:3979  FF 5E 5F				call	dword ptr [bp+5Fh]	;*
020A:397C  60					db	60h
020A:397D  61					db	61h
020A:397E  62					db	62h
020A:397F  63					db	63h
020A:3980  64					db	64h
020A:3981  65					db	65h
020A:3982  66					db	66h
020A:3983  67					db	67h
020A:3984  FF					db	0FFh
020A:3985  FF 77 8D				push	word ptr [bx-73h]
020A:3988  84 8E 8F73				test	cl,[bp-708Dh]
020A:398C  74 90				jz	loc_394			; Jump if zero
020A:398E  75 91				jnz	loc_395			; Jump if not zero
020A:3990  76 92				jbe	loc_396			; Jump if below or =
020A:3992  93					xchg	bx,ax
020A:3993  FF					db	0FFh
020A:3994  FF					db	0FFh
020A:3995  FF 89 FF8A				dec	word ptr ds:[0FF8Ah][bx+di]	; (020A:FF8A=0D93Bh)
020A:3999  EA FFD0:CFCE		;*		jmp	far ptr loc_2000	;*(FFD0:CFCE)
020A:3999  EA					db	0EAh
020A:399A  CFCE FFD0				dw	0CFCEh, 0FFD0h
020A:399E  FF					db	0FFh
020A:399F  FF					db	0FFh
020A:39A0  FF					db	0FFh
							                        ;* No entry point to code
020A:39A1  FF D1				call	cx			;*
020A:39A3  D2 D3				rcl	bl,cl			; Rotate thru carry
020A:39A5  D4 D5		;*		aam	0D5h			; undocumented inst
020A:39A5  D4 D5				db	0D4h,0D5h
020A:39A7  D6					db	0D6h
020A:39A8  D7					xlat				; al=[al+[bx]] table
020A:39A9  D8					db	0D8h
020A:39AA  D9					db	0D9h
020A:39AB  FF F2		;*		push	dx
020A:39AB  FF F2				db	0FFh,0F2h
020A:39AD  0008[FF]				db	8 dup (0FFh)
020A:39B5  FC					cld				; Clear direction
020A:39B6  0008[FF]				db	8 dup (0FFh)
020A:39BE  1B 31				sbb	si,[bx+di]
020A:39C0  32 33				xor	dh,[bp+di]
020A:39C2  34 35				xor	al,35h			; '5'
020A:39C4  36					db	36h
020A:39C5  37					aaa				; Ascii adjust
020A:39C6  38 39				cmp	[bx+di],bh
020A:39C8  30 2D				xor	[di],ch
020A:39CA  3D 0908				cmp	ax,908h
020A:39CD  71 77				jno	loc_400			; Jump if not overflw
020A:39CF  65					db	65h
020A:39D0  72 74				jc	loc_400			; Jump if carry Set
020A:39D2  79 75				jns	loc_401			; Jump if not sign
020A:39D4  69					db	69h
020A:39D5  6F					db	6Fh
020A:39D6  70 5B				jo	loc_398			; Jump if overflow=1
020A:39D8  5D					pop	bp
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 125

020A:39D9  0D 61FF				or	ax,61FFh
020A:39DC  73 64				jnc	loc_399			; Jump if carry=0
020A:39DE  66					db	66h
020A:39DF  67					db	67h
020A:39E0  68					db	68h
020A:39E1  6A					db	6Ah
020A:39E2  6B					db	6Bh
020A:39E3  6C					db	6Ch
020A:39E4  3B 27				cmp	sp,[bx]
020A:39E6  60					db	60h
020A:39E7  FF 5C 7A				call	dword ptr [si+7Ah]	;*
020A:39EA  78 63				js	loc_402			; Jump if sign=1
020A:39EC  76 62				jbe	loc_403			; Jump if below or =
020A:39EE  6E					db	6Eh
020A:39EF  6D					db	6Dh
020A:39F0  2C 2E				sub	al,2Eh			; '.'
020A:39F2  2F					das				; Decimal adjust
020A:39F3  FF 2A				jmp	dword ptr [bp+si]	;*
020A:39F5  FF 20				jmp	word ptr [bx+si]	;*
020A:39F7  5C					pop	sp
020A:39F8  3B 3C				cmp	di,[si]
020A:39FA  3D 3F3E				cmp	ax,3F3Eh
020A:39FD  40					inc	ax
020A:39FE  41					inc	cx
020A:39FF  42					inc	dx
020A:3A00  43					inc	bx
020A:3A01  44					inc	sp
020A:3A02  FF					db	0FFh
020A:3A03  FF 47 48				inc	word ptr [bx+48h]
020A:3A06  49					dec	cx
020A:3A07  FF 4B FF				dec	word ptr [bp+di-1]
020A:3A0A  4D					dec	bp
020A:3A0B  FF 4F 50				dec	word ptr [bx+50h]
020A:3A0E  51					push	cx
020A:3A0F  52					push	dx
020A:3A10  53					push	bx
020A:3A11  FF					db	0FFh
020A:3A12  FF 5C 85				call	dword ptr [si-7Bh]	;*
020A:3A15  86 FF				xchg	bh,bh
020A:3A17  E8 B7B6				call	$-4847h
020A:3A1A			loc_397::
020A:3A1A  B8 FFFF				mov	ax,0FFFFh
020A:3A1D  FF					db	0FFh
020A:3A1E  FF					db	0FFh
020A:3A1F  FF					db	0FFh
020A:3A20  B9 BBBA				mov	cx,0BBBAh
020A:3A23  BC BEBD				mov	sp,0BEBDh
020A:3A26  BF C1C0				mov	di,0C1C0h
020A:3A29  FF F0		;*		push	ax
020A:3A29  FF F0				db	0FFh,0F0h
020A:3A2B  0008[FF]				db	8 dup (0FFh)
020A:3A33			loc_398::
020A:3A33  FB					sti				; Enable interrupts
020A:3A34  0008[FF]				db	8 dup (0FFh)
020A:3A3C  1B 21				sbb	sp,[bx+di]
020A:3A3E  40					inc	ax
020A:3A3F  23 24				and	sp,[si]
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 126

020A:3A41  25 265E				and	ax,265Eh
020A:3A44  2A 28				sub	ch,[bx+si]
020A:3A46			loc_400::
020A:3A46  29 5F 2B				sub	[bx+2Bh],bx
020A:3A49			loc_401::
020A:3A49  08 00				or	[bx+si],al
020A:3A4B  51					push	cx
020A:3A4C  57					push	di
020A:3A4D  45					inc	bp
020A:3A4E  52					push	dx
020A:3A4F			loc_402::
020A:3A4F  54					push	sp
020A:3A50			loc_403::
020A:3A50  59					pop	cx
020A:3A51  55					push	bp
020A:3A52  49					dec	cx
020A:3A53  4F					dec	di
020A:3A54  50					push	ax
020A:3A55  7B 7D				jnp	loc_408			; Jump if not parity
020A:3A57  0D 41FF				or	ax,41FFh
020A:3A5A  53					push	bx
020A:3A5B  44					inc	sp
020A:3A5C  46					inc	si
020A:3A5D  47					inc	di
020A:3A5E  48					dec	ax
020A:3A5F  4A					dec	dx
020A:3A60  4B					dec	bx
020A:3A61  4C					dec	sp
020A:3A62  3A 22				cmp	ah,[bp+si]
020A:3A64  7E					db	7Eh
020A:3A65			loc_404::
020A:3A65  FF					db	0FFh
020A:3A66  7C 5A				jl	loc_406			; Jump if <
020A:3A68  58					pop	ax
020A:3A69  43					inc	bx
020A:3A6A  56					push	si
020A:3A6B  42					inc	dx
020A:3A6C  4E					dec	si
020A:3A6D  4D					dec	bp
020A:3A6E  3C 3E				cmp	al,3Eh			; '>'
020A:3A70  3F					aas				; Ascii adjust
020A:3A71  FF 2A				jmp	dword ptr [bp+si]	;*
							                        ;* No entry point to code
020A:3A73  FF 20				jmp	word ptr [bx+si]	;*
							                        ;* No entry point to code
020A:3A75  7C 54				jl	loc_407			; Jump if <
020A:3A77  55					push	bp
020A:3A78  56					push	si
020A:3A79  57					push	di
020A:3A7A  58					pop	ax
020A:3A7B  59					pop	cx
020A:3A7C  5A					pop	dx
020A:3A7D  5B					pop	bx
020A:3A7E  5C					pop	sp
020A:3A7F  5D					pop	bp
020A:3A80  FF					db	0FFh
020A:3A81  FF 37				push	word ptr [bx]
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 127

020A:3A83  38 39				cmp	[bx+di],bh
020A:3A85  2D 3534				sub	ax,3534h
020A:3A88  36: 2B 31				sub	si,ss:[bx+di]
020A:3A8B  32 33				xor	dh,[bp+di]
020A:3A8D  30 2E FFFF				xor	byte ptr ds:[0FFFFh],ch	; (020A:FFFF=10h)
020A:3A91  7C 87				jl	loc_397			; Jump if <
020A:3A93  88 FF				mov	bh,bh
020A:3A95  E9 C3C2				jmp	$-3C3Bh
020A:3A98  C4					db	0C4h
020A:3A99  FF					db	0FFh
020A:3A9A  FF					db	0FFh
020A:3A9B  FF					db	0FFh
020A:3A9C  FF					db	0FFh
							                        ;* No entry point to code
020A:3A9D  FF C5				inc	bp
020A:3A9F  C6 C7 C8				mov	bh,0C8h
						nop	                        ;*ASM fixup - short reg form
020A:3AA2  C9					db	0C9h
020A:3AA3  CA CCCB				retf	0CCCBh			; Return far
020A:3AA6  CD FF				int	0FFh			; ??INT Non-standard interrupt
020A:3AA8  F1					db	0F1h
020A:3AA9  0008[FF]				db	8 dup (0FFh)
020A:3AB1  FB					sti				; Enable interrupts
020A:3AB2  0008[FF]				db	8 dup (0FFh)
020A:3ABA  00 95 02EB				add	byte ptr ds:[2EBh][di],dl	; (020A:02EB=0Eh)
020A:3ABE  00 FF				add	bh,bh
020A:3AC0			loc_405::
020A:3AC0  55					push	bp
020A:3AC1  50					push	ax
020A:3AC2			loc_406::
020A:3AC2  53					push	bx
020A:3AC3  51					push	cx
020A:3AC4  52					push	dx
020A:3AC5  56					push	si
020A:3AC6  57					push	di
020A:3AC7  1E					push	ds
020A:3AC8  06					push	es
020A:3AC9  FC					cld				; Clear direction
020A:3ACA  BB 0040				mov	bx,40h
020A:3ACD  8E DB				mov	ds,bx
020A:3ACF  2E: 8B 2E 0ED3			mov	bp,cs:data_177		; (020A:0ED3=10E8h)
020A:3AD4			loc_408::
020A:3AD4  B4 01				mov	ah,1
020A:3AD6  C4					db	0C4h
020A:3AD7  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3AD9  90					nop
020A:3ADA  90					nop
020A:3ADB  E4 60				in	al,60h			; port 60h, keybd scan or sw1
020A:3ADD  B4 4F				mov	ah,4Fh			; 'O'
020A:3ADF  F9					stc				; Set carry flag
020A:3AE0  CD 15				int	15h			; General services, ah=func 4Fh
										;  keybd intercept, al=scan code
020A:3AE2  72 03				jc	loc_409			; Jump if carry Set
020A:3AE4  E9 028B				jmp	loc_452			; (3D72)
020A:3AE7			loc_409::
020A:3AE7  3C FE				cmp	al,0FEh
020A:3AE9  74 0C				je	loc_410			; Jump if equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 128

020A:3AEB  3C FA				cmp	al,0FAh
020A:3AED  75 10				jne	loc_411			; Jump if not equal
020A:3AEF  80 0E 0097 10			or	byte ptr ds:[97h],10h	; (0040:0097=0)
020A:3AF4  E9 027B				jmp	loc_452			; (3D72)
020A:3AF7			loc_410::
020A:3AF7  80 0E 0097 20			or	byte ptr ds:[97h],20h	; (0040:0097=0) ' '
020A:3AFC  E9 0273				jmp	loc_452			; (3D72)
020A:3AFF			loc_411::
020A:3AFF  50					push	ax
020A:3B00  E8 05FF				call	sub_40			; (4102)
020A:3B03  8A 1E 0097				mov	bl,byte ptr ds:[97h]	; (0040:0097=0)
020A:3B07  32 D8				xor	bl,al
020A:3B09  80 E3 07				and	bl,7
020A:3B0C  74 03				jz	loc_412			; Jump if zero
020A:3B0E  E8 05CE				call	sub_39			; (40DF)
020A:3B11			loc_412::
020A:3B11  58					pop	ax
020A:3B12  8A E0				mov	ah,al
020A:3B14  2E: A2 06EB				mov	byte ptr cs:[6EBh],al	; (020A:06EB=0D2h)
020A:3B18  3C FF				cmp	al,0FFh
020A:3B1A  75 09				jne	loc_413			; Jump if not equal
020A:3B1C  2E: C6 06 06EA 01			mov	byte ptr cs:[6EAh],1	; (020A:06EA=32h)
020A:3B22  E9 024D				jmp	loc_452			; (3D72)
020A:3B25			loc_413::
020A:3B25  0E					push	cs
020A:3B26  07					pop	es
020A:3B27  8A 3E 0096				mov	bh,byte ptr ds:[96h]	; (0040:0096=10h)
020A:3B2B  F6 C7 C0				test	bh,0C0h
020A:3B2E  74 40				jz	loc_418			; Jump if zero
020A:3B30  79 10				jns	loc_415			; Jump if not sign
020A:3B32  3C AB				cmp	al,0ABh
020A:3B34  75 05				jne	loc_414			; Jump if not equal
020A:3B36  80 0E 0096 40			or	byte ptr ds:[96h],40h	; (0040:0096=10h) '@'
020A:3B3B			loc_414::
020A:3B3B  80 26 0096 7F			and	byte ptr ds:[96h],7Fh	; (0040:0096=10h)
020A:3B40  EB 2B				jmp	short loc_417		; (3B6D)
020A:3B42			loc_415::
020A:3B42  80 26 0096 BF			and	byte ptr ds:[96h],0BFh	; (0040:0096=10h)
020A:3B47  80 0E 0096 10			or	byte ptr ds:[96h],10h	; (0040:0096=10h)
020A:3B4C  3C 41				cmp	al,41h			; 'A'
020A:3B4E  74 10				je	loc_416			; Jump if equal
020A:3B50  3C 83				cmp	al,83h
020A:3B52  74 0C				je	loc_416			; Jump if equal
020A:3B54  3C 86				cmp	al,86h
020A:3B56  74 08				je	loc_416			; Jump if equal
020A:3B58  3C 90				cmp	al,90h
020A:3B5A  74 04				je	loc_416			; Jump if equal
020A:3B5C  3C 92				cmp	al,92h
020A:3B5E  75 0D				jne	loc_417			; Jump if not equal
020A:3B60			loc_416::
020A:3B60  F6 C7 20				test	bh,20h			; ' '
020A:3B63  74 08				jz	loc_417			; Jump if zero
020A:3B65  80 0E 0017 20			or	byte ptr ds:[17h],20h	; (0040:0017=0) ' '
020A:3B6A  E8 0572				call	sub_39			; (40DF)
020A:3B6D			loc_417::
020A:3B6D  E9 0202				jmp	loc_452			; (3D72)
020A:3B70			loc_418::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 129

020A:3B70  3C E0				cmp	al,0E0h
020A:3B72  75 07				jne	loc_419			; Jump if not equal
020A:3B74  80 0E 0096 12			or	byte ptr ds:[96h],12h	; (0040:0096=10h)
020A:3B79  EB 09				jmp	short loc_420		; (3B84)
020A:3B7B			loc_419::
020A:3B7B  3C E1				cmp	al,0E1h
020A:3B7D  75 08				jne	loc_421			; Jump if not equal
020A:3B7F  80 0E 0096 11			or	byte ptr ds:[96h],11h	; (0040:0096=10h)
020A:3B84			loc_420::
020A:3B84  E9 01F0				jmp	loc_453			; (3D77)
020A:3B87			loc_421::
020A:3B87  24 7F				and	al,7Fh
020A:3B89  F6 C7 02				test	bh,2
020A:3B8C  74 0C				jz	loc_422			; Jump if zero
020A:3B8E  B9 0002				mov	cx,2
020A:3B91  BF 0516				mov	di,516h
020A:3B94  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3B96  75 5B				jnz	loc_426			; Jump if not zero
020A:3B98  EB 44				jmp	short loc_424		; (3BDE)
020A:3B9A			loc_422::
020A:3B9A  F6 C7 01				test	bh,1
020A:3B9D  74 1D				jz	loc_423			; Jump if zero
020A:3B9F  B9 0004				mov	cx,4
020A:3BA2  BF 0514				mov	di,514h
020A:3BA5  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3BA7  74 DB				jz	loc_420			; Jump if zero
020A:3BA9  3C 45				cmp	al,45h			; 'E'
020A:3BAB  75 31				jne	loc_424			; Jump if not equal
020A:3BAD  F6 C4 80				test	ah,80h
020A:3BB0  75 2C				jnz	loc_424			; Jump if not zero
020A:3BB2  F6 06 0018 08			test	byte ptr ds:[18h],8	; (0040:0018=0)
020A:3BB7  75 25				jnz	loc_424			; Jump if not zero
020A:3BB9  E9 0351				jmp	loc_480			; (3F0D)
020A:3BBC			loc_423::
020A:3BBC  3C 54				cmp	al,54h			; 'T'
020A:3BBE  75 33				jne	loc_426			; Jump if not equal
020A:3BC0  F6 C4 80				test	ah,80h
020A:3BC3  75 1C				jnz	loc_425			; Jump if not zero
020A:3BC5  F6 06 0018 04			test	byte ptr ds:[18h],4	; (0040:0018=0)
020A:3BCA  75 12				jnz	loc_424			; Jump if not zero
020A:3BCC  80 0E 0018 04			or	byte ptr ds:[18h],4	; (0040:0018=0)
020A:3BD1  B4 03				mov	ah,3
020A:3BD3  C4					db	0C4h
020A:3BD4  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3BD6  B8 8500				mov	ax,8500h
020A:3BD9  CD 15				int	15h			; General services, ah=func 85h
										;  SysReq key, al=0 make, =1 brk
020A:3BDB  E9 01B4				jmp	loc_454			; (3D92)
020A:3BDE			loc_424::
020A:3BDE  E9 0191				jmp	loc_452			; (3D72)
020A:3BE1			loc_425::
020A:3BE1  80 26 0018 FB			and	byte ptr ds:[18h],0FBh	; (0040:0018=0)
020A:3BE6  B4 03				mov	ah,3
020A:3BE8  C4					db	0C4h
020A:3BE9  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3BEB  B8 8501				mov	ax,8501h
020A:3BEE  CD 15				int	15h			; General services, ah=func 85h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 130

										;  SysReq key, al=0 make, =1 brk
020A:3BF0  E9 019F				jmp	loc_454			; (3D92)
020A:3BF3			loc_426::
020A:3BF3  8A 1E 0017				mov	bl,byte ptr ds:[17h]	; (0040:0017=0)
020A:3BF7  BF 0510				mov	di,510h
020A:3BFA  B9 0008				mov	cx,8
020A:3BFD  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3BFF  8A C4				mov	al,ah
020A:3C01  74 03				jz	loc_427			; Jump if zero
020A:3C03  E9 0158				jmp	loc_451			; (3D5E)
020A:3C06			loc_427::
020A:3C06  81 EF 0511				sub	di,511h
020A:3C0A  2E: 8A A5 0518			mov	ah,byte ptr cs:[518h][di]	; (020A:0518=0F6h)
020A:3C0F  B1 02				mov	cl,2
020A:3C11  A8 80				test	al,80h
020A:3C13  74 03				jz	loc_428			; Jump if zero
020A:3C15  E9 00EA				jmp	loc_445			; (3D02)
020A:3C18			loc_428::
020A:3C18  80 FC 10				cmp	ah,10h
020A:3C1B  73 6F				jae	loc_435			; Jump if above or =
020A:3C1D  2E: 80 3E 06EF FF			cmp	byte ptr cs:[6EFh],0FFh	; (020A:06EF=0CDh)
020A:3C23  75 04				jne	loc_429			; Jump if not equal
020A:3C25  3C 38				cmp	al,38h			; '8'
020A:3C27  75 00				jne	loc_429			; Jump if not equal
020A:3C29			loc_429::
020A:3C29  08 26 0017				or	byte ptr ds:[17h],ah	; (0040:0017=0)
020A:3C2D  F6 C4 0C				test	ah,0Ch
020A:3C30  74 13				jz	loc_431			; Jump if zero
020A:3C32  F6 C7 02				test	bh,2
020A:3C35  74 06				jz	loc_430			; Jump if zero
020A:3C37  08 26 0096				or	byte ptr ds:[96h],ah	; (0040:0096=10h)
020A:3C3B  EB 2C				jmp	short loc_433		; (3C69)
020A:3C3D			loc_430::
020A:3C3D  D2 EC				shr	ah,cl			; Shift w/zeros fill
020A:3C3F  08 26 0018				or	byte ptr ds:[18h],ah	; (0040:0018=0)
020A:3C43  EB 24				jmp	short loc_433		; (3C69)
020A:3C45			loc_431::
020A:3C45  2E: F7 06 0EEB 8000			test	cs:data_184,8000h	; (020A:0EEB=16FFh)
020A:3C4C  74 1B				jz	loc_433			; Jump if zero
020A:3C4E  2E: 80 3E 06EF FF			cmp	byte ptr cs:[6EFh],0FFh	; (020A:06EF=0CDh)
020A:3C54  75 13				jne	loc_433			; Jump if not equal
020A:3C56  F7 C5 0200				test	bp,200h
020A:3C5A  75 05				jnz	loc_432			; Jump if not zero
020A:3C5C  F6 C7 10				test	bh,10h
020A:3C5F  74 08				jz	loc_433			; Jump if zero
020A:3C61			loc_432::
020A:3C61  80 26 0017 BF			and	byte ptr ds:[17h],0BFh	; (0040:0017=0)
020A:3C66  E8 0476				call	sub_39			; (40DF)
020A:3C69			loc_433::
020A:3C69  2E: 80 3E 06EF FF			cmp	byte ptr cs:[6EFh],0FFh	; (020A:06EF=0CDh)
020A:3C6F  75 18				jne	loc_434			; Jump if not equal
020A:3C71  2E: F7 06 0EEB 2000			test	cs:data_184,2000h	; (020A:0EEB=16FFh)
020A:3C78  74 0F				jz	loc_434			; Jump if zero
020A:3C7A  2E: 80 0E 0115 04			or	byte ptr cs:data_67+1,4	; (020A:0115=0Ch)
020A:3C80  E8 F896		;*		call	sub_30			;*(3519)
020A:3C80  E8 96 F8				db	0E8h, 96h,0F8h
020A:3C83  2E: 80 26 0115 FB			and	byte ptr cs:data_67+1,0FBh	; (020A:0115=0Ch)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 131

020A:3C89			loc_434::
020A:3C89  E9 00E6				jmp	loc_452			; (3D72)
020A:3C8C			loc_435::
020A:3C8C  F6 C3 04				test	bl,4
020A:3C8F  74 03				jz	loc_436			; Jump if zero
020A:3C91  E9 00CA				jmp	loc_451			; (3D5E)
020A:3C94			loc_436::
020A:3C94  3C 52				cmp	al,52h			; 'R'
020A:3C96  75 21				jne	loc_440			; Jump if not equal
020A:3C98  F6 C3 08				test	bl,8
020A:3C9B  74 03				jz	loc_437			; Jump if zero
020A:3C9D  E9 00BE				jmp	loc_451			; (3D5E)
020A:3CA0			loc_437::
020A:3CA0  F6 C7 02				test	bh,2
020A:3CA3  75 14				jnz	loc_440			; Jump if not zero
020A:3CA5  F6 C3 20				test	bl,20h			; ' '
020A:3CA8  75 0A				jnz	loc_439			; Jump if not zero
020A:3CAA  F6 C3 03				test	bl,3
020A:3CAD  74 0A				jz	loc_440			; Jump if zero
020A:3CAF			loc_438::
020A:3CAF  8A E0				mov	ah,al
020A:3CB1  E9 00AA				jmp	loc_451			; (3D5E)
020A:3CB4			loc_439::
020A:3CB4  F6 C3 03				test	bl,3
020A:3CB7  74 F6				jz	loc_438			; Jump if zero
020A:3CB9			loc_440::
020A:3CB9  84 26 0018				test	ah,byte ptr ds:[18h]	; (0040:0018=0)
020A:3CBD  74 03				jz	loc_441			; Jump if zero
020A:3CBF  E9 00B0				jmp	loc_452			; (3D72)
020A:3CC2			loc_441::
020A:3CC2  08 26 0018				or	byte ptr ds:[18h],ah	; (0040:0018=0)
020A:3CC6  30 26 0017				xor	byte ptr ds:[17h],ah	; (0040:0017=0)
020A:3CCA  2E: F7 06 0EEB 8000			test	cs:data_184,8000h	; (020A:0EEB=16FFh)
020A:3CD1  74 1C				jz	loc_443			; Jump if zero
020A:3CD3  F7 C5 0200				test	bp,200h
020A:3CD7  75 05				jnz	loc_442			; Jump if not zero
020A:3CD9  F6 C7 10				test	bh,10h
020A:3CDC  74 11				jz	loc_443			; Jump if zero
020A:3CDE			loc_442::
020A:3CDE  2E: 80 3E 06EF FF			cmp	byte ptr cs:[6EFh],0FFh	; (020A:06EF=0CDh)
020A:3CE4  75 09				jne	loc_443			; Jump if not equal
020A:3CE6  F6 C4 40				test	ah,40h			; '@'
020A:3CE9  74 04				jz	loc_443			; Jump if zero
020A:3CEB  08 26 0017				or	byte ptr ds:[17h],ah	; (0040:0017=0)
020A:3CEF			loc_443::
020A:3CEF  F6 C4 70				test	ah,70h			; 'p'
020A:3CF2  74 05				jz	loc_444			; Jump if zero
020A:3CF4  50					push	ax
020A:3CF5  E8 03E7				call	sub_39			; (40DF)
020A:3CF8  58					pop	ax
020A:3CF9			loc_444::
020A:3CF9  3C 52				cmp	al,52h			; 'R'
020A:3CFB  75 75				jne	loc_452			; Jump if not equal
020A:3CFD  8A E0				mov	ah,al
020A:3CFF  E9 009C				jmp	loc_455			; (3D9E)
020A:3D02			loc_445::
020A:3D02  80 FC 10				cmp	ah,10h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 132

020A:3D05  F6 D4				not	ah
020A:3D07  73 4F				jnc	loc_450			; Jump if carry=0
020A:3D09  20 26 0017				and	byte ptr ds:[17h],ah	; (0040:0017=0)
020A:3D0D  80 FC FB				cmp	ah,0FBh
020A:3D10  77 30				ja	loc_449			; Jump if above
020A:3D12  F6 C7 02				test	bh,2
020A:3D15  74 06				jz	loc_446			; Jump if zero
020A:3D17  20 26 0096				and	byte ptr ds:[96h],ah	; (0040:0096=10h)
020A:3D1B  EB 06				jmp	short loc_447		; (3D23)
020A:3D1D			loc_446::
020A:3D1D  D2 FC				sar	ah,cl			; Shift w/sign fill
020A:3D1F  20 26 0018				and	byte ptr ds:[18h],ah	; (0040:0018=0)
020A:3D23			loc_447::
020A:3D23  8A E0				mov	ah,al
020A:3D25  A0 0096				mov	al,byte ptr ds:[96h]	; (0040:0096=10h)
020A:3D28  2E: 80 3E 06EF FF			cmp	byte ptr cs:[6EFh],0FFh	; (020A:06EF=0CDh)
020A:3D2E  75 02				jne	loc_448			; Jump if not equal
020A:3D30  24 F7				and	al,0F7h
020A:3D32			loc_448::
020A:3D32  D2 E8				shr	al,cl			; Shift w/zeros fill
020A:3D34  0A 06 0018				or	al,byte ptr ds:[18h]	; (0040:0018=0)
020A:3D38  D2 E0				shl	al,cl			; Shift w/zeros fill
020A:3D3A  24 0C				and	al,0Ch
020A:3D3C  08 06 0017				or	byte ptr ds:[17h],al	; (0040:0017=0)
020A:3D40  8A C4				mov	al,ah
020A:3D42			loc_449::
020A:3D42  3C B8				cmp	al,0B8h
020A:3D44  75 2C				jne	loc_452			; Jump if not equal
020A:3D46  A0 0019				mov	al,byte ptr ds:[19h]	; (0040:0019=0)
020A:3D49  32 E4				xor	ah,ah			; Zero register
020A:3D4B  88 26 0019				mov	byte ptr ds:[19h],ah	; (0040:0019=0)
020A:3D4F  0A C0				or	al,al			; Zero ?
020A:3D51  74 1F				jz	loc_452			; Jump if zero
020A:3D53  E8 0328				call	sub_36			; (407E)
020A:3D56  EB 1A				jmp	short loc_452		; (3D72)
020A:3D58			loc_450::
020A:3D58  20 26 0018				and	byte ptr ds:[18h],ah	; (0040:0018=0)
020A:3D5C  EB 14				jmp	short loc_452		; (3D72)
020A:3D5E			loc_451::
020A:3D5E  3C 80				cmp	al,80h
020A:3D60  73 10				jae	loc_452			; Jump if above or =
020A:3D62  F6 06 0018 08			test	byte ptr ds:[18h],8	; (0040:0018=0)
020A:3D67  74 35				jz	loc_455			; Jump if zero
020A:3D69  3C 45				cmp	al,45h			; 'E'
020A:3D6B  74 05				je	loc_452			; Jump if equal
020A:3D6D  80 26 0018 F7			and	byte ptr ds:[18h],0F7h	; (0040:0018=0)
020A:3D72			loc_452::
020A:3D72  80 26 0096 FC			and	byte ptr ds:[96h],0FCh	; (0040:0096=10h)
020A:3D77			loc_453::
020A:3D77  B4 02				mov	ah,2
020A:3D79  2E: 8A 3E 06EA			mov	bh,byte ptr cs:[6EAh]	; (020A:06EA=32h)
020A:3D7E  2E: 8A 1E 0CA8			mov	bl,cs:data_167		; (020A:0CA8=0A2h)
020A:3D83  2E: C6 06 0CA8 00			mov	cs:data_167,0		; (020A:0CA8=0A2h)
020A:3D89  2E: C6 06 06EA 00			mov	byte ptr cs:[6EAh],0	; (020A:06EA=32h)
020A:3D8F  C4					db	0C4h
020A:3D90  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3D92			loc_454::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 133

020A:3D92  07					pop	es
020A:3D93  1F					pop	ds
020A:3D94  5F					pop	di
020A:3D95  5E					pop	si
020A:3D96  5A					pop	dx
020A:3D97  59					pop	cx
020A:3D98  5B					pop	bx
020A:3D99  58					pop	ax
020A:3D9A  5D					pop	bp
020A:3D9B  E9 03D2				jmp	loc_528			; (4170)
020A:3D9E			loc_455::
020A:3D9E  3C 7E				cmp	al,7Eh			; '~'
020A:3DA0  77 D0				ja	loc_452			; Jump if above
020A:3DA2  F7 C5 4000				test	bp,4000h
020A:3DA6  75 04				jnz	loc_456			; Jump if not zero
020A:3DA8  3C 7E				cmp	al,7Eh			; '~'
020A:3DAA  77 C6				ja	loc_452			; Jump if above
020A:3DAC			loc_456::
020A:3DAC  F6 C3 08				test	bl,8
020A:3DAF  74 15				jz	loc_457			; Jump if zero
020A:3DB1  F6 C7 10				test	bh,10h
020A:3DB4  74 13				jz	loc_458			; Jump if zero
020A:3DB6  F6 06 0018 04			test	byte ptr data_14+2,4	; (020A:0018=0)
020A:3DBB  74 0C				jz	loc_458			; Jump if zero
020A:3DBD  F6 C4 02				test	ah,2
020A:3DC0  74 04				jz	loc_457			; Jump if zero
020A:3DC2  A8 08				test	al,8
020A:3DC4  75 03				jnz	loc_458			; Jump if not zero
020A:3DC6			loc_457::
020A:3DC6  E9 0100				jmp	loc_476			; (3EC9)
020A:3DC9			loc_458::
020A:3DC9  F6 C3 04				test	bl,4
020A:3DCC  74 14				jz	loc_459			; Jump if zero
020A:3DCE  3C 53				cmp	al,53h			; 'S'
020A:3DD0  75 39				jne	loc_463			; Jump if not equal
020A:3DD2  C7 06 0072 1234			mov	word ptr data_44+2,1234h	; (020A:0072=0C3Fh)
020A:3DD8  83 26 0096 10			and	word ptr ds:[96h],10h	; (020A:0096=0)
020A:3DDD  EA FFFF:0000		;*		jmp	far ptr loc_2001	;*(FFFF:0000)
020A:3DDD  EA					db	0EAh
020A:3DDE  0000 FFFF				dw	0, 0FFFFh
020A:3DE2			loc_459::
020A:3DE2  E8 F734		;*		call	sub_30			;*(3519)
020A:3DE2  E8 34 F7				db	0E8h, 34h,0F7h
020A:3DE5  72 8B				jc	loc_452			; Jump if carry Set
020A:3DE7  3C 39				cmp	al,39h			; '9'
020A:3DE9  75 05				jne	loc_460			; Jump if not equal
020A:3DEB  B0 20				mov	al,20h			; ' '
020A:3DED  E9 0282				jmp	loc_512			; (4072)
020A:3DF0			loc_460::
020A:3DF0  F7 C5 8000				test	bp,8000h
020A:3DF4  74 42				jz	loc_466			; Jump if zero
020A:3DF6  3C 0F				cmp	al,0Fh
020A:3DF8  75 06				jne	loc_461			; Jump if not equal
020A:3DFA  B8 A500				mov	ax,0A500h
020A:3DFD  E9 0272				jmp	loc_512			; (4072)
020A:3E00			loc_461::
020A:3E00  3C 4A				cmp	al,4Ah			; 'J'
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 134

020A:3E02  74 04				je	loc_462			; Jump if equal
020A:3E04  3C 4E				cmp	al,4Eh			; 'N'
020A:3E06  75 30				jne	loc_466			; Jump if not equal
020A:3E08			loc_462::
020A:3E08  E9 00A7				jmp	loc_474			; (3EB2)
020A:3E0B			loc_463::
020A:3E0B  2E: 3A 06 0EEE			cmp	al,byte ptr cs:[0EEEh]	; (020A:0EEE=0)
020A:3E10  75 09				jne	loc_464			; Jump if not equal
020A:3E12  2E: C6 06 06EF 00			mov	byte ptr cs:[6EFh],0	; (020A:06EF=0CDh)
020A:3E18  E9 FF57				jmp	loc_452			; (3D72)
020A:3E1B			loc_464::
020A:3E1B  2E: 3A 06 0EEF			cmp	al,cs:data_186		; (020A:0EEF=74h)
020A:3E20  75 09				jne	loc_465			; Jump if not equal
020A:3E22  2E: C6 06 06EF FF			mov	byte ptr cs:[6EFh],0FFh	; (020A:06EF=0CDh)
020A:3E28  E9 FF47				jmp	loc_452			; (3D72)
020A:3E2B			loc_465::
020A:3E2B  2E: 80 3E 06EF FF			cmp	byte ptr cs:[6EFh],0FFh	; (020A:06EF=0CDh)
020A:3E31  75 05				jne	loc_466			; Jump if not equal
020A:3E33  E8 F6E3		;*		call	sub_30			;*(3519)
020A:3E33  E8 E3 F6				db	0E8h,0E3h,0F6h
020A:3E36  72 1F				jc	loc_467			; Jump if carry Set
020A:3E38			loc_466::
020A:3E38  BF 0520				mov	di,520h
020A:3E3B  B9 000A				mov	cx,0Ah
020A:3E3E  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3E40  75 18				jnz	loc_468			; Jump if not zero
020A:3E42  F6 C7 02				test	bh,2
020A:3E45  75 76				jnz	loc_475			; Jump if not zero
020A:3E47  81 EF 0521				sub	di,521h
020A:3E4B  A0 0019				mov	al,byte ptr data_14+3	; (020A:0019=0)
020A:3E4E  B4 0A				mov	ah,0Ah
020A:3E50  F6 E4				mul	ah			; ax = reg * al
020A:3E52  03 C7				add	ax,di
020A:3E54  A2 0019				mov	byte ptr data_14+3,al	; (020A:0019=0)
020A:3E57			loc_467::
020A:3E57  E9 FF18				jmp	loc_452			; (3D72)
020A:3E5A			loc_468::
020A:3E5A  C6 06 0019 00			mov	byte ptr data_14+3,0	; (020A:0019=0)
020A:3E5F  B9 001A				mov	cx,1Ah
020A:3E62  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3E64  74			data_486	db	74h
020A:3E65  47					inc	di
020A:3E66  3C 02				cmp	al,2
020A:3E68  72 48				jb	loc_474			; Jump if below
020A:3E6A  3C 0D				cmp	al,0Dh
020A:3E6C  77 05				ja	loc_469			; Jump if above
020A:3E6E  80 C4 76				add	ah,76h			; 'v'
020A:3E71  EB 3A				jmp	short loc_473		; (3EAD)
020A:3E73			loc_469::
020A:3E73  3C 57				cmp	al,57h			; 'W'
020A:3E75  72 08				jb	loc_470			; Jump if below
020A:3E77  2C 52				sub	al,52h			; 'R'
020A:3E79  BB 0544				mov	bx,544h
020A:3E7C  E9 01DC				jmp	loc_511			; (405B)
020A:3E7F			loc_470::
020A:3E7F  F6 C7 02				test	bh,2
020A:3E82  74 1E				jz	loc_472			; Jump if zero
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 135

020A:3E84  F7 C5 8000				test	bp,8000h
020A:3E88  74 18				jz	loc_472			; Jump if zero
020A:3E8A  3C 1C				cmp	al,1Ch
020A:3E8C  75 06				jne	loc_471			; Jump if not equal
020A:3E8E  B8 A600				mov	ax,0A600h
020A:3E91  E9 01DE				jmp	loc_512			; (4072)
020A:3E94			loc_471::
020A:3E94  3C 53				cmp	al,53h			; 'S'
020A:3E96  74 25				je	loc_475			; Jump if equal
020A:3E98  3C 35				cmp	al,35h			; '5'
020A:3E9A  75 BB				jne	loc_467			; Jump if not equal
020A:3E9C  B8 A400				mov	ax,0A400h
020A:3E9F  E9 01D0				jmp	loc_512			; (4072)
020A:3EA2			loc_472::
020A:3EA2  3C 3B				cmp	al,3Bh			; ';'
020A:3EA4  72 0C				jb	loc_474			; Jump if below
020A:3EA6  3C 44				cmp	al,44h			; 'D'
020A:3EA8  77 AD				ja	loc_467			; Jump if above
020A:3EAA  80 C4 2D				add	ah,2Dh			; '-'
020A:3EAD			loc_473::
020A:3EAD  32 C0				xor	al,al			; Zero register
020A:3EAF  E9 01C0				jmp	loc_512			; (4072)
020A:3EB2			loc_474::
020A:3EB2  F7 C5 8000				test	bp,8000h
020A:3EB6  74 9F				jz	loc_467			; Jump if zero
020A:3EB8  B0 F0				mov	al,0F0h
020A:3EBA  E9 01B5				jmp	loc_512			; (4072)
020A:3EBD			loc_475::
020A:3EBD  F7 C5 8000				test	bp,8000h
020A:3EC1  74 EA				jz	loc_473			; Jump if zero
020A:3EC3  04 50				add	al,50h			; 'P'
020A:3EC5  8A E0				mov	ah,al
020A:3EC7  EB E4				jmp	short loc_473		; (3EAD)
020A:3EC9			loc_476::
020A:3EC9  F6 C3 04				test	bl,4
020A:3ECC  75 03				jnz	loc_477			; Jump if not zero
020A:3ECE  E9 00B2				jmp	loc_489			; (3F83)
020A:3ED1			loc_477::
020A:3ED1  3C 46				cmp	al,46h			; 'F'
020A:3ED3  75 29				jne	loc_479			; Jump if not equal
020A:3ED5  F7 C5 0200				test	bp,200h
020A:3ED9  75 0A				jnz	loc_478			; Jump if not zero
020A:3EDB  F6 C7 10				test	bh,10h
020A:3EDE  74 05				jz	loc_478			; Jump if zero
020A:3EE0  F6 C7 02				test	bh,2
020A:3EE3  74 19				jz	loc_479			; Jump if zero
020A:3EE5			loc_478::
020A:3EE5  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:3EE9  89 1E 001C				mov	word ptr data_18+2,bx	; (020A:001C=148Fh)
020A:3EED  C6 06 0071 80			mov	byte ptr data_44+1,80h	; (020A:0071=3Eh)
020A:3EF2  B4 04				mov	ah,4
020A:3EF4  C4					db	0C4h
020A:3EF5  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3EF7  CD 1B				int	1Bh			; Keyboard break (cntrl-break)
020A:3EF9  2B C0				sub	ax,ax
020A:3EFB  E9 0174				jmp	loc_512			; (4072)
020A:3EFE			loc_479::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 136

020A:3EFE  3C 45				cmp	al,45h			; 'E'
020A:3F00  75 3B				jne	loc_483			; Jump if not equal
020A:3F02  F6 C7 10				test	bh,10h
020A:3F05  74 06				jz	loc_480			; Jump if zero
020A:3F07  F7 C5 0200				test	bp,200h
020A:3F0B  74 30				jz	loc_483			; Jump if zero
020A:3F0D			loc_480::
020A:3F0D  80 0E 0018 08			or	byte ptr data_14+2,8	; (020A:0018=0)
020A:3F12  B0 AE				mov	al,0AEh
020A:3F14  E8 01C5				call	sub_38			; (40DC)
020A:3F17  B4 03				mov	ah,3
020A:3F19  C4					db	0C4h
020A:3F1A  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3F1C  E8 0209				call	sub_41			; (4128)
020A:3F1F			loc_481::
020A:3F1F  B9 0010				mov	cx,10h
020A:3F22  33 C0				xor	ax,ax			; Zero register
020A:3F24  C4					db	0C4h
020A:3F25  C4 5A F6				les	bx,dword ptr [bp+si-0Ah]	; Load 32 bit ptr
020A:3F28  06					push	es
020A:3F29  18 00				sbb	[bx+si],al
020A:3F2B  08 74 04				or	[si+4],dh
020A:3F2E  E1 F7		;*		loopz	locloop_482		;*Loop if zf=1, cx>0

020A:3F2E  E1 F7				db	0E1h,0F7h
020A:3F30  75 ED				jnz	loc_481			; Jump if not zero
020A:3F32  E8 021B				call	sub_42			; (4150)
020A:3F35  80 26 0018 F7			and	byte ptr data_14+2,0F7h	; (020A:0018=0)
020A:3F3A  E9 FE55				jmp	loc_454			; (3D92)
020A:3F3D			loc_483::
020A:3F3D  3C 37				cmp	al,37h			; '7'
020A:3F3F  75 1D				jne	loc_486			; Jump if not equal
020A:3F41  F7 C5 0200				test	bp,200h
020A:3F45  74 07				jz	loc_484			; Jump if zero
020A:3F47  F6 C7 02				test	bh,2
020A:3F4A  74 0C				jz	loc_485			; Jump if zero
020A:3F4C  EB 2F				jmp	short loc_488		; (3F7D)
020A:3F4E			loc_484::
020A:3F4E  F6 C7 10				test	bh,10h
020A:3F51  74 05				jz	loc_485			; Jump if zero
020A:3F53  F6 C7 02				test	bh,2
020A:3F56  74 25				jz	loc_488			; Jump if zero
020A:3F58			loc_485::
020A:3F58  B8 7200				mov	ax,7200h
020A:3F5B  E9 0114				jmp	loc_512			; (4072)
020A:3F5E			loc_486::
020A:3F5E  E8 F5B8		;*		call	sub_30			;*(3519)
020A:3F5E  E8 B8 F5				db	0E8h,0B8h,0F5h
020A:3F61  72 58				jc	loc_493			; Jump if carry Set
020A:3F63  3C 0F				cmp	al,0Fh
020A:3F65  74 16				je	loc_488			; Jump if equal
020A:3F67  3C 35				cmp	al,35h			; '5'
020A:3F69  75 0B				jne	loc_487			; Jump if not equal
020A:3F6B  F6 C7 02				test	bh,2
020A:3F6E  74 06				jz	loc_487			; Jump if zero
020A:3F70  B8 9500				mov	ax,9500h
020A:3F73  E9 00FC				jmp	loc_512			; (4072)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 137

020A:3F76			loc_487::
020A:3F76  BB 0570				mov	bx,570h
020A:3F79  3C 3B				cmp	al,3Bh			; ';'
020A:3F7B  72 74				jb	loc_500			; Jump if below
020A:3F7D			loc_488::
020A:3F7D  BB 0570				mov	bx,570h
020A:3F80  E9 00D8				jmp	loc_511			; (405B)
020A:3F83			loc_489::
020A:3F83  E8 F593		;*		call	sub_30			;*(3519)
020A:3F83  E8 93 F5				db	0E8h, 93h,0F5h
020A:3F86  72 33				jc	loc_493			; Jump if carry Set
020A:3F88  3C 37				cmp	al,37h			; '7'
020A:3F8A  75 32				jne	loc_494			; Jump if not equal
020A:3F8C  F7 C5 0200				test	bp,200h
020A:3F90  74 07				jz	loc_490			; Jump if zero
020A:3F92  F6 C7 02				test	bh,2
020A:3F95  74 0E				jz	loc_491			; Jump if zero
020A:3F97  EB 4B				jmp	short loc_497		; (3FE4)
020A:3F99			loc_490::
020A:3F99  F6 C7 10				test	bh,10h
020A:3F9C  74 07				jz	loc_491			; Jump if zero
020A:3F9E  F6 C7 02				test	bh,2
020A:3FA1  75 07				jnz	loc_492			; Jump if not zero
020A:3FA3  EB 3F				jmp	short loc_497		; (3FE4)
020A:3FA5			loc_491::
020A:3FA5  F6 C3 03				test	bl,3
020A:3FA8  74 3A				jz	loc_497			; Jump if zero
020A:3FAA			loc_492::
020A:3FAA  80 26 0096 FC			and	byte ptr ds:[96h],0FCh	; (020A:0096=0)
020A:3FAF  B4 03				mov	ah,3
020A:3FB1  C4					db	0C4h
020A:3FB2  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
020A:3FB4  55					push	bp
020A:3FB5  CD 05				int	5			; Print screen (status at 50:0h)
020A:3FB7  5D					pop	bp
020A:3FB8  E9 FDD7				jmp	loc_454			; (3D92)
020A:3FBB			loc_493::
020A:3FBB  E9 FDB4				jmp	loc_452			; (3D72)
020A:3FBE			loc_494::
020A:3FBE  3C 3A				cmp	al,3Ah			; ':'
020A:3FC0  77 31				ja	loc_501			; Jump if above
020A:3FC2  F6 C7 08				test	bh,8
020A:3FC5  75 F4				jnz	loc_493			; Jump if not zero
020A:3FC7  3C 35				cmp	al,35h			; '5'
020A:3FC9  75 05				jne	loc_495			; Jump if not equal
020A:3FCB  F6 C7 02				test	bh,2
020A:3FCE  75 14				jnz	loc_497			; Jump if not zero
020A:3FD0			loc_495::
020A:3FD0  B9 001A				mov	cx,1Ah
020A:3FD3  BF 052A				mov	di,52Ah
020A:3FD6  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3FD8  75 05				jnz	loc_496			; Jump if not zero
020A:3FDA  F6 C3 40				test	bl,40h			; '@'
020A:3FDD  75 0A				jnz	loc_498			; Jump if not zero
020A:3FDF			loc_496::
020A:3FDF  F6 C3 03				test	bl,3
020A:3FE2  75 0A				jnz	loc_499			; Jump if not zero
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 138

020A:3FE4			loc_497::
020A:3FE4  BB 05EE				mov	bx,5EEh
020A:3FE7  EB 5D				jmp	short loc_510		; (4046)
020A:3FE9			loc_498::
020A:3FE9  F6 C3 03				test	bl,3
020A:3FEC  75 F6				jnz	loc_497			; Jump if not zero
020A:3FEE			loc_499::
020A:3FEE  BB 066C				mov	bx,66Ch
020A:3FF1			loc_500::
020A:3FF1  EB 53				jmp	short loc_510		; (4046)
020A:3FF3			loc_501::
020A:3FF3  3C 44				cmp	al,44h			; 'D'
020A:3FF5  77 02				ja	loc_502			; Jump if above
020A:3FF7  EB 43				jmp	short loc_509		; (403C)
020A:3FF9			loc_502::
020A:3FF9  3C 53				cmp	al,53h			; 'S'
020A:3FFB  77 31				ja	loc_507			; Jump if above
020A:3FFD  3C 4A				cmp	al,4Ah			; 'J'
020A:3FFF  74 ED				je	loc_499			; Jump if equal
020A:4001  3C 4E				cmp	al,4Eh			; 'N'
020A:4003  74 E9				je	loc_499			; Jump if equal
020A:4005  F6 C7 02				test	bh,2
020A:4008  75 0A				jnz	loc_503			; Jump if not zero
020A:400A  F6 C3 20				test	bl,20h			; ' '
020A:400D  75 18				jnz	loc_505			; Jump if not zero
020A:400F  F6 C3 03				test	bl,3
020A:4012  75 18				jnz	loc_506			; Jump if not zero
020A:4014			loc_503::
020A:4014  3C 4C				cmp	al,4Ch			; 'L'
020A:4016  75 0A				jne	loc_504			; Jump if not equal
020A:4018  F7 C5 8000				test	bp,8000h
020A:401C  74 57				jz	loc_513			; Jump if zero
020A:401E  B0 F0				mov	al,0F0h
020A:4020  EB 50				jmp	short loc_512		; (4072)
020A:4022			loc_504::
020A:4022  BB 05EE				mov	bx,5EEh
020A:4025  EB 34				jmp	short loc_511		; (405B)
020A:4027			loc_505::
020A:4027  F6 C3 03				test	bl,3
020A:402A  75 E8				jnz	loc_503			; Jump if not zero
020A:402C			loc_506::
020A:402C  EB C0				jmp	short loc_499		; (3FEE)
020A:402E			loc_507::
020A:402E  3C 56				cmp	al,56h			; 'V'
020A:4030  75 04				jne	loc_508			; Jump if not equal
020A:4032  B0 3A				mov	al,3Ah			; ':'
020A:4034  EB 88				jmp	short loc_494		; (3FBE)
020A:4036			loc_508::
020A:4036  F7 C5 8000				test	bp,8000h
020A:403A  74 39				jz	loc_513			; Jump if zero
020A:403C			loc_509::
020A:403C  F6 C3 03				test	bl,3
020A:403F  74 D3				jz	loc_503			; Jump if zero
020A:4041  BB 066C				mov	bx,66Ch
020A:4044  EB 15				jmp	short loc_511		; (405B)
020A:4046			loc_510::
020A:4046  FE C8				dec	al
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 139

020A:4048  2E: D7				xlat	cs:[bx]			; al=[al+[bx]] table
020A:404A  F6 06 0096 02			test	byte ptr ds:[96h],2	; (020A:0096=0)
020A:404F  74 21				jz	loc_512			; Jump if zero
020A:4051  F7 C5 8000				test	bp,8000h
020A:4055  74 1B				jz	loc_512			; Jump if zero
020A:4057  B4 E0				mov	ah,0E0h
020A:4059  EB 17				jmp	short loc_512		; (4072)
020A:405B			loc_511::
020A:405B  FE C8				dec	al
020A:405D  2E: D7				xlat	cs:[bx]			; al=[al+[bx]] table
020A:405F  8A E0				mov	ah,al
020A:4061  32 C0				xor	al,al			; Zero register
020A:4063  F6 06 0096 02			test	byte ptr ds:[96h],2	; (020A:0096=0)
020A:4068  74 08				jz	loc_512			; Jump if zero
020A:406A  F7 C5 8000				test	bp,8000h
020A:406E  74 02				jz	loc_512			; Jump if zero
020A:4070  B0 E0				mov	al,0E0h
020A:4072			loc_512::
020A:4072  E8 0004				call	sub_35			; (4079)
020A:4075			loc_513::
020A:4075  E9 FCFA				jmp	loc_452			; (3D72)
020A:4078  00 80 FFFC				add	byte ptr ds:[0FFFCh][bx+si],al	; (020A:FFFC=0F6h)
020A:407C  74 48				jz	loc_518			; Jump if zero

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_36		proc	near
020A:407E  56					push	si
020A:407F  53					push	bx
020A:4080  1E			data_487	db	1Eh
020A:4081  BB 0040				mov	bx,40h
020A:4084  8E DB				mov	ds,bx
020A:4086  8B 1E 001C				mov	bx,word ptr ds:[1Ch]	; (0040:001C=34h)
020A:408A  8B F3				mov	si,bx
020A:408C  43					inc	bx
020A:408D  43					inc	bx
020A:408E  F7 C5 0800				test	bp,800h
020A:4092  75 0B				jnz	loc_514			; Jump if not zero
020A:4094  81 FB 003E				cmp	bx,3Eh
020A:4098  75 0F				jne	loc_515			; Jump if not equal
020A:409A  BB 001E				mov	bx,1Eh
020A:409D  EB 0A				jmp	short loc_515		; (40A9)
020A:409F			loc_514::
020A:409F  3B 1E 0082				cmp	bx,word ptr ds:[82h]	; (0040:0082=3Eh)
020A:40A3  75 04				jne	loc_515			; Jump if not equal
020A:40A5  8B 1E 0080				mov	bx,word ptr ds:[80h]	; (0040:0080=1Eh)
020A:40A9			loc_515::
020A:40A9  3B 1E 001A				cmp	bx,word ptr ds:[1Ah]	; (0040:001A=34h)
020A:40AD  74 0E				je	loc_516			; Jump if equal
020A:40AF  89 04				mov	[si],ax
020A:40B1  89 1E 001C				mov	word ptr ds:[1Ch],bx	; (0040:001C=34h)
020A:40B5  2E: C6 06 0CA8 01			mov	cs:data_167,1		; (020A:0CA8=0A2h)
020A:40BB  EB 06				jmp	short loc_517		; (40C3)
020A:40BD			loc_516::
020A:40BD  2E: C6 06 06EA 01			mov	byte ptr cs:[6EAh],1	; (020A:06EA=32h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 140

020A:40C3			loc_517::
020A:40C3  1F					pop	ds
020A:40C4  5B					pop	bx
020A:40C5  5E					pop	si
020A:40C6			loc_518::
020A:40C6  C3					retn
				sub_36		endp

							                        ;* No entry point to code
020A:40C7  2E: 80 3E 06EA 01			cmp	byte ptr cs:[6EAh],1	; (020A:06EA=32h)
020A:40CD  75 0C				jne	loc_519			; Jump if not equal
020A:40CF  2E: C6 06 06EA 00			mov	byte ptr cs:[6EAh],0	; (020A:06EA=32h)
020A:40D5  B4 0E				mov	ah,0Eh
020A:40D7  B0 07				mov	al,7
020A:40D9  CD 10				int	10h			; Video display   ah=functn 0Eh
										;  write char al, teletype mode
020A:40DB			loc_519::
020A:40DB  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_38		proc	near
020A:40DC  E6 64				out	64h,al			; port 64h, kybd cntrlr functn
										;  al = 0AEh, enable keyboard
020A:40DE  C3					retn
				sub_38		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_39		proc	near
020A:40DF  F6 06 0097 40			test	byte ptr ds:[97h],40h	; (0040:0097=0) '@'
020A:40E4  75 1B				jnz	loc_520			; Jump if not zero
020A:40E6  80 0E 0097 40			or	byte ptr ds:[97h],40h	; (0040:0097=0) '@'
020A:40EB  E8 0014				call	sub_40			; (4102)
020A:40EE  80 26 0097 F8			and	byte ptr ds:[97h],0F8h	; (0040:0097=0)
020A:40F3  08 06 0097				or	byte ptr ds:[97h],al	; (0040:0097=0)
020A:40F7  03B4			data_490	dw	3B4h
020A:40F9  C4C4			data_491	dw	0C4C4h
020A:40FB  8016			data_492	dw	8016h
020A:40FD  9726			data_493	dw	9726h
020A:40FF  00 3F				add	[bx],bh
020A:4101			loc_520::
020A:4101  C3					retn
				sub_39		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_40		proc	near
020A:4102  51					push	cx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 141

020A:4103  A0			data_494	db	0A0h
020A:4104  17					pop	ss
020A:4105  00 24				add	[si],ah
020A:4107  70 B1				jo	$-4Dh			; Jump if overflow=1
020A:4109  04 D2				add	al,0D2h
020A:410B  C0					db	0C0h
020A:410C  24 07				and	al,7
020A:410E  59					pop	cx
020A:410F  C3					retn
				sub_40		endp

020A:4110  50					push	ax
020A:4111  51					push	cx
020A:4112  B9 03E3				mov	cx,3E3h

020A:4115			locloop_521::
020A:4115  E4 61				in	al,61h			; port 61h, 8255 port B, read
020A:4117  24 10				and	al,10h
020A:4119  3A C4				cmp	al,ah
020A:411B  74 F8				je	locloop_521		; Jump if equal
020A:411D  8A E0				mov	ah,al
020A:411F  E4 64				in	al,64h			; port 64h, keyboard status
020A:4121  A8 02				test	al,2
020A:4123  E0 F0				loopnz	locloop_521		; Loop if zf=0, cx>0

020A:4125  59					pop	cx
020A:4126  58					pop	ax
020A:4127  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_41		proc	near
020A:4128  1E					push	ds
020A:4129  50					push	ax
020A:412A  B8 0040				mov	ax,40h
020A:412D  8E D8				mov	ds,ax
020A:412F  9F					lahf				; Load ah from flags
020A:4130  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:4136  75 14				jnz	loc_523			; Jump if not zero
020A:4138  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:413E  75 0C				jnz	loc_523			; Jump if not zero
020A:4140  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:4147			loc_522::
020A:4147  9E					sahf				; Store ah into flags
020A:4148  58					pop	ax
020A:4149  1F					pop	ds
020A:414A  EB 03				jmp	short loc_524		; (414F)
020A:414C			loc_523::
020A:414C  FB					sti				; Enable interrupts
020A:414D  EB F8				jmp	short loc_522		; (4147)
020A:414F			loc_524::
020A:414F  C3					retn
				sub_41		endp


           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 142

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_42		proc	near
020A:4150  501E			data_495	dw	501Eh
020A:4152  40B8			data_496	dw	40B8h
020A:4154  00 8E 9FD8				add	[bp-6028h],cl
020A:4158  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (020A:0314=3231h)
020A:415E  75 0C				jnz	loc_526			; Jump if not zero
020A:4160  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (020A:0314=3231h)
020A:4167			loc_525::
020A:4167  9E					sahf				; Store ah into flags
020A:4168  58					pop	ax
020A:4169  1F					pop	ds
020A:416A  EB 03				jmp	short loc_527		; (416F)
020A:416C			loc_526::
020A:416C  FA					cli				; Disable interrupts
020A:416D  EB F8				jmp	short loc_525		; (4167)
020A:416F			loc_527::
020A:416F  C3					retn
				sub_42		endp

020A:4170			loc_528::
020A:4170  1E					push	ds
020A:4171  50					push	ax
020A:4172  B8 0040				mov	ax,40h
020A:4175  8E D8				mov	ds,ax
020A:4177  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:417D  75 4F				jnz	loc_536			; Jump if not zero
020A:417F  55					push	bp
020A:4180  8B EC				mov	bp,sp
020A:4182  8B 46 0A				mov	ax,[bp+0Ah]
020A:4185  5D					pop	bp
020A:4186  A9 0100				test	ax,100h
020A:4189  75 43				jnz	loc_536			; Jump if not zero
020A:418B  A9 0200				test	ax,200h
020A:418E  74 22				jz	loc_532			; Jump if zero
020A:4190  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:4197  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:419D  75 2F				jnz	loc_536			; Jump if not zero
020A:419F			loc_529::
020A:419F  86 E0				xchg	ah,al
020A:41A1  FC					cld				; Clear direction
020A:41A2  A8 04				test	al,4
020A:41A4  75 25				jnz	loc_535			; Jump if not zero
020A:41A6			loc_530::
020A:41A6  A8 08				test	al,8
020A:41A8  75 11				jnz	loc_533			; Jump if not zero
020A:41AA  70 19				jo	loc_534			; Jump if overflow=1
020A:41AC			loc_531::
020A:41AC  9E					sahf				; Store ah into flags
020A:41AD  58					pop	ax
020A:41AE  1F					pop	ds
020A:41AF  CA 0002				retf	2			; Return far
020A:41B2			loc_532::
020A:41B2  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (020A:0314=3231h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 143

020A:41B9  EB E4				jmp	short loc_529		; (419F)
020A:41BB			loc_533::
020A:41BB  70 EF				jo	loc_531			; Jump if overflow=1
020A:41BD  50					push	ax
020A:41BE  B0 7F				mov	al,7Fh
020A:41C0  04 02				add	al,2
020A:41C2  58					pop	ax
020A:41C3  EB E7				jmp	short loc_531		; (41AC)
020A:41C5			loc_534::
020A:41C5  50					push	ax
020A:41C6  32 C0				xor	al,al			; Zero register
020A:41C8  58					pop	ax
020A:41C9  EB E1				jmp	short loc_531		; (41AC)
020A:41CB			loc_535::
020A:41CB  FD					std				; Set direction flag
020A:41CC  EB D8				jmp	short loc_530		; (41A6)
020A:41CE			loc_536::
020A:41CE  58					pop	ax
020A:41CF  1F					pop	ds
020A:41D0  CF					iret				; Interrupt return
020A:41D1  000F[00]				db	15 dup (0)
020A:41E0  80 FC AD				cmp	ah,0ADh
020A:41E3  74 05				je	loc_538			; Jump if equal
020A:41E5			loc_537::
020A:41E5  2E: FF 2E 0EC9			jmp	dword ptr cs:[0EC9h]	; (020A:0EC9=0B901h)
020A:41EA			loc_538::
020A:41EA  55					push	bp
020A:41EB  8B EC				mov	bp,sp
020A:41ED  83 66 06 FE				and	word ptr [bp+6],0FFFEh
020A:41F1  E8 0003				call	sub_44			; (41F7)
020A:41F4  5D					pop	bp
020A:41F5  EB EE				jmp	short loc_537		; (41E5)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_44		proc	near
020A:41F7  3C 80				cmp	al,80h
020A:41F9  75 0C				jne	loc_539			; Jump if not equal
020A:41FB  B8 FFFF				mov	ax,0FFFFh
020A:41FE  BB 0100				mov	bx,100h
020A:4201  BF 0EC5				mov	di,0EC5h
020A:4204  0E					push	cs
020A:4205  07					pop	es
020A:4206  C3					retn
020A:4207			loc_539::
020A:4207  3C 81				cmp	al,81h
020A:4209  75 28				jne	loc_544			; Jump if not equal
020A:420B  2E: 8B 36 0EE3			mov	si,cs:data_181		; (020A:0EE3=0A6F3h)
020A:4210			loc_540::
020A:4210  83 FE FF				cmp	si,0FFFFh
020A:4213  74 16				je	loc_542			; Jump if equal
020A:4215  2E: 3B 5C 02				cmp	bx,cs:[si+2]
020A:4219  75 0B				jne	loc_541			; Jump if not equal
020A:421B  2E: 89 36 0EE1			mov	word ptr cs:[0EE1h],si	; (020A:0EE1=0FC00h)
020A:4220  2E: 89 1E 0EDD			mov	word ptr cs:[0EDDh],bx	; (020A:0EDD=1C5h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 144

020A:4225  C3					retn
020A:4226			loc_541::
020A:4226  2E: 8B 34				mov	si,cs:[si]
020A:4229  EB E5				jmp	short loc_540		; (4210)
020A:422B			loc_542::
020A:422B  B8 0001				mov	ax,1
020A:422E			loc_543::
020A:422E  83 4E 06 01				or	word ptr [bp+6],1
020A:4232  C3					retn
020A:4233			loc_544::
020A:4233  3C 82				cmp	al,82h
020A:4235  75 46				jne	loc_549			; Jump if not equal
020A:4237  FE C3				inc	bl
020A:4239  80 FB 02				cmp	bl,2
020A:423C  FE CB				dec	bl
020A:423E  73 EE				jnc	loc_543			; Jump if carry=0
020A:4240  2E: 88 1E 06EF			mov	byte ptr cs:[6EFh],bl	; (020A:06EF=0CDh)
020A:4245  EB 36				jmp	short loc_549		; (427D)
020A:4247			loc_546::
020A:4247  3C 83				cmp	al,83h
020A:4249  75 1A				jne	loc_548			; Jump if not equal
020A:424B  33			data_499	db	33h
020A:424C  C0					db	0C0h
020A:424D  2E: 0A 06 06EF			or	al,byte ptr cs:[6EFh]	; (020A:06EF=0CDh)
020A:4252  74 10				jz	loc_547			; Jump if zero
020A:4254  2E: F7 06 0EEB 1000			test	cs:data_184,1000h	; (020A:0EEB=16FFh)
020A:425B  74 07				jz	loc_547			; Jump if zero
020A:425D  2E: A0 0116				mov	al,byte ptr cs:data_67+2	; (020A:0116=0)
020A:4261  24 01				and	al,1
020A:4263  40					inc	ax
020A:4264			loc_547::
020A:4264  C3					retn
020A:4265			loc_548::
020A:4265  3C 84				cmp	al,84h
020A:4267  75 14				jne	loc_549			; Jump if not equal
020A:4269  2E: 8A 3E 0116			mov	bh,byte ptr cs:data_67+2	; (020A:0116=0)
020A:426E  F6 C3 FE				test	bl,0FEh
020A:4271  75 D4				jnz	loc_546			; Jump if not zero
020A:4273  80 E7 FE				and	bh,0FEh
020A:4276  0A FB				or	bh,bl
020A:4278  2E: 88 3E 0116			mov	byte ptr cs:data_67+2,bh	; (020A:0116=0)
020A:427D			loc_549::
020A:427D  C3					retn
				sub_44		endp

							                        ;* No entry point to code
020A:427E  00 00				add	[bx+si],al
020A:4280  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:4282  26: C6 06 0ED5 01			mov	es:data_178,1		; (020A:0ED5=1)
020A:4288  CD 21				int	21h			; DOS Services  ah=function 00h
										;  terminate, cs=progm seg prefx
020A:428A  53					push	bx
020A:428B  48					dec	ax
020A:428C  41					inc	cx
020A:428D  52					push	dx
020A:428E  45					inc	bp
020A:428F  44					inc	sp
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 145

020A:4290  20 44 41				and	[si+41h],al
020A:4293  54					push	sp
020A:4294  41					inc	cx
020A:4295  0A 04				or	al,[si]
020A:4297  0A 02				or	al,[bp+si]
020A:4299  50					push	ax
020A:429A  09 AD 00D3				or	word ptr ds:[0D3h][di],bp	; (020A:00D3=40h)
020A:429E  00					db	0
020A:429F  00 00				add	[bx+si],al
020A:42A1  00 10				add	[bx+si],dl
020A:42A3  40					inc	ax
020A:42A4  80 01 00				add	byte ptr [bx+di],0
020A:42A7  00					db	0
020A:42A8  00 00				add	[bx+si],al
020A:42AA  00 52 55				add	[bp+si+55h],dl
020A:42AD  62					db	62h
020A:42AE  03 00				add	ax,[bx+si]
020A:42B0  00 62 0F				add	[bp+si+0Fh],ah
020A:42B3  62					db	62h
020A:42B4  0F			;*		pop	cs			; Dangerous-8088 only
020A:42B4  0F					db	0Fh
020A:42B5  C5 17				lds	dx,dword ptr [bx]	; Load 32 bit ptr
020A:42B7  F4					hlt				; Halt processor
020A:42B8  0E					push	cs
020A:42B9  48					dec	ax
020A:42BA  0F			;*		pop	cs			; Dangerous-8088 only
020A:42BA  0F					db	0Fh
020A:42BB  00 30				add	[bx+si],dh
020A:42BD  00 3B				add	[bp+di],bh
020A:42BF  3C 00				cmp	al,0
020A:42C1  00 00				add	[bx+si],al
020A:42C3  00 54 00		;*		add	[si+0],dl
020A:42C3  00 54 00				db	 00h, 54h, 00h
020A:42C6  00 30				add	[bx+si],dh
020A:42C8  50					push	ax
020A:42C9  80 04 04				add	byte ptr [si],4
020A:42CC  0C 20				or	al,20h			; ' '
020A:42CE  14 40				adc	al,40h			; '@'
020A:42D0  00 02				add	[bp+si],al
020A:42D2  A0 30B0				mov	al,byte ptr ds:[30B0h]	; (0010:30B0=55h)
020A:42D5  00 01				add	[bx+di],al
020A:42D7  A0 8F60				mov	al,byte ptr ds:[8F60h]	; (0010:8F60=47h)
020A:42DA  30 30				xor	[bx+si],dh
020A:42DC  92					xchg	dx,ax
020A:42DD  00 00				add	[bx+si],al
020A:42DF  30 0C				xor	[si],cl
020A:42E1  40					inc	ax
020A:42E2  0C 20				or	al,20h			; ' '
020A:42E4  05 1B01				add	ax,1B01h
020A:42E7  02 04				add	al,[si]
020A:42E9  80 40 06 00				add	byte ptr [bx+si+6],0
020A:42ED  40					inc	ax
020A:42EE  40					inc	ax
020A:42EF  03 20				add	sp,[bx+si]
020A:42F1  40					inc	ax
020A:42F2  04 30				add	al,30h			; '0'
020A:42F4  20 40 05				and	[bx+si+5],al
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 146

020A:42F7  00 40 40				add	[bx+si+40h],al
020A:42FA  04 20				add	al,20h			; ' '
020A:42FC  40					inc	ax
020A:42FD  03 30				add	si,[bx+si]
020A:42FF  30 30				xor	[bx+si],dh
020A:4301  20 80 6000				and	byte ptr ds:[6000h][bx+si],al	; (0010:6000=0E0h)
020A:4305  04 80				add	al,80h
020A:4307  40					inc	ax
020A:4308  07					pop	es
020A:4309  30 20				xor	[bx+si],ah
020A:430B  03 08				add	cx,[bx+si]
020A:430D  1C 80				sbb	al,80h
020A:430F  40					inc	ax
020A:4310  07					pop	es
020A:4311  30 30				xor	[bx+si],dh
020A:4313  30 30				xor	[bx+si],dh
020A:4315  92					xchg	dx,ax
020A:4316  00 00				add	[bx+si],al
020A:4318  FF					db	0FFh
020A:4319  FF					db	0FFh
020A:431A  FF					db	0FFh
020A:431B  FF 14				call	word ptr [si]		;*
020A:431D  00 8F FFFF				add	byte ptr ds:[0FFFFh][bx],cl	; (0010:FFFF=0E8h)
020A:4321  FF					db	0FFh
020A:4322  FF 03				inc	word ptr [bp+di]
020A:4324  00 2A				add	[bp+si],ch
020A:4326  05 3600				add	ax,3600h
020A:4329  05 1D01				add	ax,1D01h
020A:432C  05 0001				add	ax,1
020A:432F  00 00				add	[bx+si],al
020A:4331  00 48 0F				add	[bx+si+0Fh],cl
020A:4334  62					db	62h
020A:4335  03 0F				add	cx,[bx]
020A:4337  00 05				add	[di],al
020A:4339  FF					db	0FFh
020A:433A  FF					db	0FFh
020A:433B  FF					db	0FFh
020A:433C  FF 06 C000				inc	word ptr ds:[0C000h]	; (0010:C000=63Bh)
020A:4340  01 35				add	[di],si
020A:4342  2E: 00 00				add	cs:[bx+si],al
020A:4345  1B 00				sbb	ax,[bx+si]
020A:4347  06					push	es
020A:4348  FF					db	0FFh
020A:4349  FF					db	0FFh
020A:434A  FF					db	0FFh
020A:434B  FF 12				call	word ptr [bp+si]	;*
020A:434D  00 C0				add	al,al
020A:434F  07					pop	es
020A:4350  03 22				add	sp,[bp+si]
020A:4352  04 FC				add	al,0FCh
020A:4354  05 073B				add	ax,73Bh
020A:4357  3A 08				cmp	cl,[bx+si]
020A:4359  3F					aas				; Ascii adjust
020A:435A  2B 2F				sub	bp,[bx]
020A:435C  35 002C				xor	ax,2Ch
020A:435F  00 25				add	[di],ah
020A:4361  00 07				add	[bx],al
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 147

020A:4363  FF					db	0FFh
020A:4364  FF					db	0FFh
020A:4365  FF					db	0FFh
020A:4366  FF 1C				call	dword ptr [si]		;*
020A:4368  00 C0				add	al,al
020A:436A  0C 03				or	al,3
020A:436C  40					inc	ax
020A:436D  04 23				add	al,23h			; '#'
020A:436F  05 07FD				add	ax,7FDh
020A:4372  5E					pop	si
020A:4373  08 26 2409				or	byte ptr ds:[2409h],ah	; (0010:2409=5)
020A:4377  1A 5B 1B				sbb	bl,[bp+di+1Bh]
020A:437A  5D					pop	bp
020A:437B  2B 7C 33				sub	di,[si+33h]
020A:437E  3C 34				cmp	al,34h			; '4'
020A:4380  3E					db	3Eh
020A:4381  35 002F				xor	ax,2Fh
020A:4384  00 43 00		;*		add	[bp+di+0],al
020A:4384  00 43 00				db	 00h, 43h, 00h
020A:4387  03 FF				add	di,di
020A:4389  FF					db	0FFh
020A:438A  FF					db	0FFh
020A:438B  FF 11				call	word ptr [bx+di]	;*
020A:438D  00 80 1B10				add	byte ptr ds:[1B10h][bx+si],al	; (0010:1B10=10h)
020A:4391  A9 E3E6				test	ax,0E3E6h
020A:4394  AA			data_502	db	0AAh
020A:4395  ADA5			data_503	dw	0ADA5h
020A:4397  E8A3			data_504	dw	0E8A3h
020A:4399  A7E9			data_505	dw	0A7E9h
020A:439B  EAE5			data_506	dw	0EAE5h
020A:439D  0A 00				or	al,[bx+si]
020A:439F  80 1E E422 EB			sbb	byte ptr ds:[0E422h],0EBh	; (0010:E422=2Eh)
020A:43A4  A2 AFA0				mov	byte ptr ds:[0AFA0h],al	; (0010:AFA0=80h)
020A:43A7  0B 00				or	ax,[bx+si]
020A:43A9  80 24 29				and	byte ptr [si],29h	; ')'
020A:43AC  AE					scasb				; Scan es:[di] for al
020A:43AD  AB					stosw				; Store ax to es:[di]
020A:43AE  A4					movsb				; Mov [si] to es:[di]
020A:43AF  A6					cmpsb				; Cmp [si] to es:[di]
020A:43B0  ED					in	ax,dx			; port 3380h ??I/O Non-standard
020A:43B1  F1					db	0F1h
020A:43B2  0E					push	cs
020A:43B3  00 80 342C				add	byte ptr ds:[342Ch][bx+si],al	; (0010:342C=0)
020A:43B7  EF					out	dx,ax			; port 3380h ??I/O Non-standard
020A:43B8  E7 E1				out	0E1h,ax			; port 0E1h, Memory encode reg1
020A:43BA  AC					lodsb				; String [si] to al
020A:43BB  A8 E2				test	al,0E2h
020A:43BD  EC					in	al,dx			; port 3380h ??I/O Non-standard
020A:43BE  A1 06EE				mov	ax,word ptr ds:[6EEh]	; (0010:06EE=15C0h)
020A:43C1  00 60 01				add	[bx+si+1],ah
020A:43C4  23 E0				and	sp,ax
020A:43C6  00 00				add	[bx+si],al
020A:43C8  3E					db	3Eh
020A:43C9  00 04				add	[si],al
020A:43CB  FF					db	0FFh
020A:43CC  FF					db	0FFh
020A:43CD  FF					db	0FFh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 148

020A:43CE  FF 11				call	word ptr [bx+di]	;*
020A:43D0  00 80 1B10				add	byte ptr ds:[1B10h][bx+si],al	; (0010:1B10=10h)
020A:43D4  89 96 8A93				mov	[bp-756Dh],dx
020A:43D8  85 8D 9883				test	cx,word ptr ds:[9883h][di]	; (0010:9883=4B75h)
020A:43DC  99					cwd				; Word to double word
020A:43DD  87 95 109A				xchg	word ptr ds:[109Ah][di],dx	; (0010:109A=0)
020A:43E1  00 80 281E				add	byte ptr ds:[281Eh][bx+si],al	; (0010:281E=0)
020A:43E5  94					xchg	sp,ax
020A:43E6  9B					db	9Bh
020A:43E7  82 80 908F 8E			add	byte ptr ds:[908Fh][bx+si],8Eh	; (0010:908F=8Ah)
020A:43EC  8B 84 9D86				mov	ax,word ptr ds:[9D86h][si]	; (0010:9D86=474h)
020A:43F0  0E					push	cs
020A:43F1  00 80 342C				add	byte ptr ds:[342Ch][bx+si],al	; (0010:342C=0)
020A:43F5  9F					lahf				; Load ah from flags
020A:43F6  97					xchg	di,ax
020A:43F7  91					xchg	cx,ax
020A:43F8  8C 88 9C92				mov	word ptr ds:[9C92h][bx+si],cs	; (0010:9C92=6D06h)
020A:43FC  81 9E 0006 0160			sbb	word ptr [bp+6],160h
020A:4402  29 F0				sub	ax,si
020A:4404  00					db	0
020A:4405  00 00				add	[bx+si],al
020A:4407  00 15				add	[di],dl
020A:4409  B4 59				mov	ah,59h			; 'Y'
020A:440B  33 DB				xor	bx,bx			; Zero register
020A:440D  CD 21				int	21h			; DOS Services  ah=function 59h
										;  get extended error info bx=0
										;   ax=code, bh=class, bl=action
										;   ch=error locus
020A:440F  3D 000D				cmp	ax,0Dh
020A:4412  75 05				jne	loc_550			; Jump if not equal
020A:4414  BA 8DAD				mov	dx,8DADh
020A:4417  EB 18				jmp	short loc_552		; (4431)
020A:4419			loc_550::
020A:4419  BA 8F8E				mov	dx,8F8Eh
020A:441C  EB 13				jmp	short loc_552		; (4431)
							                        ;* No entry point to code
020A:441E  B4 59				mov	ah,59h			; 'Y'
020A:4420  33 DB				xor	bx,bx			; Zero register
020A:4422  CD 21				int	21h			; DOS Services  ah=function 59h
										;  get extended error info bx=0
										;   ax=code, bh=class, bl=action
										;   ch=error locus
020A:4424  3D 0041				cmp	ax,41h
020A:4427  75 05				jne	loc_551			; Jump if not equal
020A:4429  BA 8D8E				mov	dx,8D8Eh
020A:442C  EB 03				jmp	short loc_552		; (4431)
020A:442E			loc_551::
020A:442E  BA 8D80				mov	dx,8D80h
020A:4431			loc_552::
020A:4431  E9 08E0				jmp	loc_672			; (4D14)
							                        ;* No entry point to code
020A:4434  B4 66				mov	ah,66h			; 'f'
020A:4436  B0 01				mov	al,1
020A:4438  CD 21				int	21h			; DOS Services  ah=function 66h
										;  get code page in bx & dx,al=1
020A:443A  89 1E 9AC7				mov	word ptr ds:[9AC7h],bx	; (0010:9AC7=725Bh)
020A:443E  BA 8D9C				mov	dx,8D9Ch
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 149

020A:4441  E8 2E9D				call	sub_100			; (72E1)
020A:4444  C3					retn
							                        ;* No entry point to code
020A:4445  1E					push	ds
020A:4446  07					pop	es
020A:4447  BE 0081				mov	si,81h
020A:444A  BF 930F				mov	di,930Fh
020A:444D  33 C9				xor	cx,cx			; Zero register
020A:444F  33 D2				xor	dx,dx			; Zero register
020A:4451  E8 00E2				call	sub_46			; (4536)
020A:4454  BF 95D8				mov	di,95D8h
020A:4457  3D FFFF				cmp	ax,0FFFFh
020A:445A  74 0E				je	loc_553			; Jump if equal
020A:445C  3D 0000				cmp	ax,0
020A:445F  75 36				jne	loc_558			; Jump if not equal
020A:4461  80 3E A48D 06			cmp	byte ptr data_677,6	; (020A:A48D=80h)
020A:4466  74 09				je	loc_554			; Jump if equal
020A:4468  EB 19				jmp	short loc_555		; (4483)
020A:446A			loc_553::
020A:446A  B4 00				mov	ah,0
020A:446C  B0 2E				mov	al,2Eh			; '.'
020A:446E  AB					stosw				; Store ax to es:[di]
020A:446F  EB 29				jmp	short loc_559		; (449A)
020A:4471			loc_554::
020A:4471  56					push	si
020A:4472  BE A491				mov	si,0A491h
020A:4475  AC					lodsb				; String [si] to al
020A:4476  04 40				add	al,40h			; '@'
020A:4478  AA					stosb				; Store al to es:[di]
020A:4479  B8 2E3A				mov	ax,2E3Ah
020A:447C  AB					stosw				; Store ax to es:[di]
020A:447D  B0 00				mov	al,0
020A:447F  AA					stosb				; Store al to es:[di]
020A:4480  5E					pop	si
020A:4481  EB 0C				jmp	short loc_557		; (448F)
020A:4483			loc_555::
020A:4483  56					push	si
020A:4484  C5 36 A491				lds	si,dword ptr data_678	; (020A:A491=7501h) Load 32 bit ptr
020A:4488			loc_556::
020A:4488  AC					lodsb				; String [si] to al
020A:4489  AA					stosb				; Store al to es:[di]
020A:448A  3C 00				cmp	al,0
020A:448C  75 FA				jne	loc_556			; Jump if not equal
020A:448E  5E					pop	si
020A:448F			loc_557::
020A:448F  BF 930F				mov	di,930Fh
020A:4492  E8 008A				call	sub_45			; (451F)
020A:4495  74 03				jz	loc_559			; Jump if zero
020A:4497			loc_558::
020A:4497  E9 087A				jmp	loc_672			; (4D14)
020A:449A			loc_559::
020A:449A  BE 95D8				mov	si,95D8h
020A:449D  BF 970B				mov	di,970Bh
020A:44A0  B4 60				mov	ah,60h
020A:44A2  CD 21				int	21h			; DOS Services  ah=function 60h
										;  resolve path ds:si to es:di
										;*  undocumented function
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 150

020A:44A4  73 11				jnc	loc_560			; Jump if carry=0
020A:44A6  E8 FB9A		;*		call	sub_33			;*(4043)
020A:44A6  E8 9A FB				db	0E8h, 9Ah,0FBh
020A:44A9  C7 06 9B4D 95D8			mov	word ptr ds:[9B4Dh],95D8h	; (9A19:9B4D=0)
020A:44AF  C6 06 8D23 01			mov	byte ptr ds:[8D23h],1	; (9A19:8D23=0)
020A:44B4  E9 085D				jmp	loc_672			; (4D14)
020A:44B7			loc_560::
020A:44B7  C7 06 9B4D 970B			mov	word ptr ds:[9B4Dh],970Bh	; (9A19:9B4D=0)
020A:44BD  BA 8EE8				mov	dx,8EE8h
020A:44C0  E8 04A3				call	sub_65			; (4966)
020A:44C3  E8 2E0C				call	sub_97			; (72D2)
020A:44C6  C3					retn
							                        ;* No entry point to code
020A:44C7  1E					push	ds
020A:44C8  8E 1E 995F				mov	ds,data_639		; (020A:995F=0FFF0h)
020A:44CC  80 3E 02B0 00			cmp	byte ptr ds:[2B0h],0	; (FFF0:02B0=72h)
020A:44D1  74 0B				je	loc_561			; Jump if equal
020A:44D3  83 3E 02B1 FF			cmp	word ptr ds:[2B1h],0FFFFh	; (FFF0:02B1=475h)
020A:44D8  74 13				je	loc_562			; Jump if equal
020A:44DA  C4					db	0C4h
020A:44DB  C4 54 00		;*		les	dx,dword ptr [si+0]	; Load 32 bit ptr
020A:44DB  C4 54 00				db	0C4h, 54h, 00h
020A:44DE			loc_561::
020A:44DE  B8 122E				mov	ax,122Eh
020A:44E1  B2 05				mov	dl,5
020A:44E3  8B 3E 02C7				mov	di,word ptr ds:[2C7h]	; (FFF0:02C7=0B0h)
020A:44E7  8E 06 02C9				mov	es,word ptr ds:[2C9h]	; (FFF0:02C9=1EC4h)
020A:44EB  CD 2F				int	2Fh			; DOS Internal services
										;*  undocumented function
020A:44ED			loc_562::
020A:44ED  1F					pop	ds
020A:44EE  E8 031B				call	sub_61			; (480C)
020A:44F1  8E 06 995F				mov	es,data_639		; (020A:995F=0FFF0h)
020A:44F5  26: A1 024B				mov	ax,word ptr es:[24Bh]	; (FFF0:024B=0E300h)
020A:44F9  26: A3 0016				mov	word ptr es:[16h],ax	; (FFF0:0016=4F49h)
020A:44FD  26: A1 024D				mov	ax,word ptr es:[24Dh]	; (FFF0:024D=0E806h)
020A:4501  26: A3 000A				mov	word ptr es:[0Ah],ax	; (FFF0:000A=6956h)
020A:4505  26: A1 024F				mov	ax,word ptr es:[24Fh]	; (FFF0:024F=5)
020A:4509  26: A3 000C				mov	word ptr es:[0Ch],ax	; (FFF0:000C=7472h)
020A:450D  06					push	es
020A:450E  8E 06 996F				mov	es,data_642		; (020A:996F=2600h)
020A:4512  B4 49				mov	ah,49h
020A:4514  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:4516  07					pop	es
020A:4517  B4 4C				mov	ah,4Ch			; 'L'
020A:4519  26: A0 02A7				mov	al,byte ptr es:[2A7h]	; (FFF0:02A7=26h)
020A:451D  CD 21				int	21h			; DOS Services  ah=function 4Ch
										;  terminate with al=return code

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_45		proc	near
020A:451F  33 D2				xor	dx,dx			; Zero register
020A:4521  89 36 9AC5				mov	word ptr ds:[9AC5h],si	; (9A19:9AC5=0)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 151

020A:4525  E8 2D9E				call	sub_96			; (72C6)
020A:4528  3C FF				cmp	al,0FFh
020A:452A  74 09				je	loc_564			; Jump if equal
020A:452C  3D 0000				cmp	ax,0
020A:452F  75 01				jne	loc_563			; Jump if not equal
020A:4531  40					inc	ax
020A:4532			loc_563::
020A:4532  E8 0015				call	sub_47			; (454A)
020A:4535			loc_564::
020A:4535  C3					retn
				sub_45		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_46		proc	near
020A:4536  89 36 9AC5				mov	data_648,si		; (020A:9AC5=262Eh)
020A:453A  E8 2D89				call	sub_96			; (72C6)
020A:453D  3C FF				cmp	al,0FFh
020A:453F  74 08				je	loc_565			; Jump if equal
020A:4541  3D 0000				cmp	ax,0
020A:4544  74 03				je	loc_565			; Jump if equal
020A:4546  E8 0001				call	sub_47			; (454A)
020A:4549			loc_565::
020A:4549  C3					retn
				sub_46		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_47		proc	near
020A:454A  C6 06 8D1F 02			mov	byte ptr ds:[8D1Fh],2	; (9A19:8D1F=0)
020A:454F  BA 8D21				mov	dx,8D21h
020A:4552  C6 04 00				mov	byte ptr [si],0
020A:4555  A3 8D21				mov	word ptr ds:[8D21h],ax	; (9A19:8D21=0)
020A:4558  3D 0002				cmp	ax,2
020A:455B  74 0D				je	loc_566			; Jump if equal
020A:455D  8B 36 9AC5				mov	si,word ptr ds:[9AC5h]	; (9A19:9AC5=0)
020A:4561  89 36 9B4D				mov	word ptr ds:[9B4Dh],si	; (9A19:9B4D=0)
020A:4565  C6 06 8D23 01			mov	byte ptr ds:[8D23h],1	; (9A19:8D23=0)
020A:456A			loc_566::
020A:456A  46					inc	si
020A:456B  C3					retn
				sub_47		endp

							                        ;* No entry point to code
020A:456C  E8 00FE				call	sub_48			; (466D)
020A:456F  E8 01B5				call	sub_54			; (4727)
020A:4572  56					push	si
020A:4573  E8 01A3				call	sub_53			; (4719)
020A:4576  5E					pop	si
020A:4577  75 01				jnz	loc_568			; Jump if not zero
020A:4579			loc_567::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 152

020A:4579  C3					retn
020A:457A			loc_568::
020A:457A  E8 017D				call	sub_52			; (46FA)
020A:457D  E8 0199				call	sub_53			; (4719)
020A:4580  56					push	si
020A:4581  EB 53				jmp	short loc_574		; (45D6)
020A:4583			loc_569::
020A:4583  E9 00BE				jmp	loc_581			; (4644)
020A:4586  E8 0190				call	sub_53			; (4719)
020A:4589  74			data_507	db	74h
020A:458A  F8					clc				; Clear carry flag
020A:458B  33 DB				xor	bx,bx			; Zero register
020A:458D  56					push	si
020A:458E			loc_570::
020A:458E  AC					lodsb				; String [si] to al
020A:458F  3C 0D				cmp	al,0Dh
020A:4591  74 0F				je	loc_571			; Jump if equal
020A:4593  3C 3D				cmp	al,3Dh			; '='
020A:4595  75 F7				jne	loc_570			; Jump if not equal
020A:4597  FE C3				inc	bl
020A:4599  80 3C 0D				cmp	byte ptr [si],0Dh
020A:459C  75 F0				jne	loc_570			; Jump if not equal
020A:459E  FE C7				inc	bh
020A:45A0  EB EC				jmp	short loc_570		; (458E)
020A:45A2			loc_571::
020A:45A2  5E					pop	si
020A:45A3  FE CB				dec	bl
020A:45A5  74 06				jz	loc_572			; Jump if zero
020A:45A7  BA 8DB9				mov	dx,8DB9h
020A:45AA  E9 0767				jmp	loc_672			; (4D14)
020A:45AD			loc_572::
020A:45AD  53					push	bx
020A:45AE  E8 00BF				call	sub_49			; (4670)
020A:45B1  5B					pop	bx
020A:45B2  FE CF				dec	bh
020A:45B4  74 C3				jz	loc_ret_567		; Jump if zero
020A:45B6  E8 016E				call	sub_54			; (4727)
020A:45B9  8B DF				mov	bx,di
020A:45BB  E8 013C				call	sub_52			; (46FA)
020A:45BE  56					push	si
020A:45BF  87 DF				xchg	bx,di
020A:45C1  C6 06 9261 00			mov	byte ptr data_633,0	; (020A:9261=0BDh)
020A:45C6  BE 8F9D				mov	si,8F9Dh
020A:45C9  B9 0004				mov	cx,4
020A:45CC  F3/ A7				repe	cmpsw			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020A:45CE  75 04				jnz	loc_573			; Jump if not zero
020A:45D0  FE 06 9261				inc	data_633		; (020A:9261=0BDh)
020A:45D4			loc_573::
020A:45D4  8B FB				mov	di,bx
020A:45D6			loc_574::
020A:45D6  5E					pop	si
020A:45D7  56					push	si
020A:45D8			loc_575::
020A:45D8  AC					lodsb				; String [si] to al
020A:45D9  3C 0D				cmp	al,0Dh
020A:45DB  74 05				je	loc_576			; Jump if equal
020A:45DD  E8 01B6				call	sub_59			; (4796)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 153

020A:45E0  EB F6				jmp	short loc_575		; (45D8)
020A:45E2			loc_576::
020A:45E2  5E					pop	si
020A:45E3  80 3E 9261 00			cmp	byte ptr data_633,0	; (020A:9261=0BDh)
020A:45E8			loc_577::
020A:45E8  74 8F				je	loc_ret_567		; Jump if equal
020A:45EA  E8 0386				call	sub_66			; (4973)
020A:45ED  8E 06 995F				mov	es,data_639		; (020A:995F=0FFF0h)
020A:45F1  BF 0258				mov	di,258h
020A:45F4  8B DF				mov	bx,di
020A:45F6  33 C0				xor	ax,ax			; Zero register
020A:45F8  26: A2 02A1				mov	byte ptr es:[2A1h],al	; (FFF0:02A1=0C3h)
020A:45FC  50					push	ax
020A:45FD  8A 04				mov	al,[si]
020A:45FF  E8 0147				call	sub_57			; (4749)
020A:4602  58					pop	ax
020A:4603  75 18				jnz	loc_578			; Jump if not zero
020A:4605  80 7C 01 3A				cmp	byte ptr [si+1],3Ah	; ':'
020A:4609  75 12				jne	loc_578			; Jump if not equal
020A:460B  8A 04				mov	al,[si]
020A:460D  E8 0163				call	sub_58			; (4773)
020A:4610  2C 41				sub	al,41h			; 'A'
020A:4612  83 C7 02				add	di,2
020A:4615  FE C0				inc	al
020A:4617  26: A2 02A1				mov	byte ptr es:[2A1h],al	; (FFF0:02A1=0C3h)
020A:461B  04 40				add	al,40h			; '@'
020A:461D			loc_578::
020A:461D  26: 89 3E 0237			mov	word ptr es:[237h],di	; (FFF0:0237=0E10Ah)
020A:4622  26: A2 023C				mov	byte ptr es:[23Ch],al	; (FFF0:023C=0E1h)
020A:4626  8B FB				mov	di,bx
020A:4628			loc_579::
020A:4628  AC					lodsb				; String [si] to al
020A:4629  E8 034F				call	sub_67			; (497B)
020A:462C  74 07				jz	loc_580			; Jump if zero
020A:462E  3C 0D				cmp	al,0Dh
020A:4630  74 03				je	loc_580			; Jump if equal
020A:4632  AA					stosb				; Store al to es:[di]
020A:4633  EB F3				jmp	short loc_579		; (4628)
020A:4635			loc_580::
020A:4635  32 C0				xor	al,al			; Zero register
020A:4637  AA					stosb				; Store al to es:[di]
020A:4638  C6 06 9261 00			mov	byte ptr data_633,0	; (020A:9261=0BDh)
020A:463D  4F					dec	di
020A:463E  26: 89 3E 0298			mov	word ptr es:[298h],di	; (FFF0:0298=107h)
020A:4643  C3					retn
020A:4644			loc_581::
020A:4644  8E 1E 995F				mov	ds,data_639		; (020A:995F=0FFF0h)
020A:4648  8E 1E 0458				mov	ds,word ptr ds:[458h]	; (FFF0:0458=18h)
020A:464C  33 F6				xor	si,si			; Zero register
020A:464E			loc_582::
020A:464E  80 3C 00				cmp	byte ptr [si],0
020A:4651  74 95				je	loc_577			; Jump if equal
020A:4653  BF 9AC9				mov	di,9AC9h
020A:4656			loc_583::
020A:4656  AC					lodsb				; String [si] to al
020A:4657  AA					stosb				; Store al to es:[di]
020A:4658  0A C0				or	al,al			; Zero ?
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 154

020A:465A  75 FA				jnz	loc_583			; Jump if not zero
020A:465C  BA 8EBE				mov	dx,8EBEh
020A:465F  1E					push	ds
020A:4660  06					push	es
020A:4661  1F					pop	ds
020A:4662  E8 2C6D				call	sub_97			; (72D2)
020A:4665  1F					pop	ds
020A:4666  EB E6				jmp	short loc_582		; (464E)
020A:4668  BE 8F91				mov	si,8F91h
020A:466B  EB 03				jmp	short loc_584		; (4670)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_48		proc	near
020A:466D  BE 8F96				mov	si,8F96h

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_49::
020A:4670			loc_584::
020A:4670  56					push	si
020A:4671  1E					push	ds
020A:4672  E8 002C				call	sub_50			; (46A1)
020A:4675  72 17				jc	loc_586			; Jump if carry Set
020A:4677  8B F7				mov	si,di
020A:4679  E8 00C5				call	sub_56			; (4741)
020A:467C  87 F7				xchg	si,di
020A:467E  26: 80 3C 00				cmp	byte ptr es:[si],0
020A:4682  75 01				jne	loc_585			; Jump if not equal
020A:4684  4E					dec	si
020A:4685			loc_585::
020A:4685  E8 0170				call	sub_60			; (47F8)
020A:4688  2B CE				sub	cx,si
020A:468A  06					push	es
020A:468B  1F					pop	ds
020A:468C  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:468E			loc_586::
020A:468E  1F					pop	ds
020A:468F  5E					pop	si
020A:4690			loc_587::
020A:4690  C3					retn
				sub_48		endp

							                        ;* No entry point to code
020A:4691  BE 8F91				mov	si,8F91h
020A:4694  EB 03				jmp	short loc_588		; (4699)
020A:4696  BE 8F96				mov	si,8F96h
020A:4699			loc_588::
020A:4699  E8 0005				call	sub_50			; (46A1)
020A:469C  72 F2				jc	loc_ret_587		; Jump if carry Set
020A:469E  E9 009C				jmp	loc_600			; (473D)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 155


				sub_50		proc	near
020A:46A1  FC					cld				; Clear direction
020A:46A2  E8 0041				call	sub_51			; (46E6)
020A:46A5  8E 06 995F				mov	es,data_639		; (020A:995F=0FFF0h)
020A:46A9  26: 8E 06 0458			mov	es,word ptr es:[458h]	; (FFF0:0458=18h)
020A:46AE  33 FF				xor	di,di			; Zero register
020A:46B0			loc_589::
020A:46B0  51					push	cx
020A:46B1  56					push	si
020A:46B2  57					push	di

020A:46B3			locloop_590::
020A:46B3  AC					lodsb				; String [si] to al
020A:46B4  E8 0092				call	sub_57			; (4749)
020A:46B7  74 0F				jz	loc_591			; Jump if zero
020A:46B9  4E					dec	si
020A:46BA  AD					lodsw				; String [si] to ax
020A:46BB  47					inc	di
020A:46BC  47					inc	di
020A:46BD  26: 3B 45 FE				cmp	ax,es:[di-2]
020A:46C1  75 11				jne	loc_592			; Jump if not equal
020A:46C3  49					dec	cx
020A:46C4  E2 ED				loop	locloop_590		; Loop if cx > 0

020A:46C6  EB 0C				jmp	short loc_592		; (46D4)
020A:46C8			loc_591::
020A:46C8  E8 00A8				call	sub_58			; (4773)
020A:46CB  47					inc	di
020A:46CC  26: 3A 45 FF				cmp	al,es:[di-1]
020A:46D0  75 02				jne	loc_592			; Jump if not equal
020A:46D2  E2 DF				loop	locloop_590		; Loop if cx > 0

020A:46D4			loc_592::
020A:46D4  5F					pop	di
020A:46D5  5E					pop	si
020A:46D6  59					pop	cx
020A:46D7  74 B7				jz	loc_ret_587		; Jump if zero
020A:46D9  51					push	cx
020A:46DA  E8 0064				call	sub_56			; (4741)
020A:46DD  59					pop	cx
020A:46DE  26: 80 3D 00				cmp	byte ptr es:[di],0
020A:46E2  75 CC				jne	loc_589			; Jump if not equal
020A:46E4  F9					stc				; Set carry flag
020A:46E5  C3					retn
				sub_50		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_51		proc	near
020A:46E6  1E					push	ds
020A:46E7  07					pop	es
020A:46E8  8B FE				mov	di,si
020A:46EA  57					push	di
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 156

020A:46EB  E8 004F				call	sub_55			; (473D)
020A:46EE  EB 04				jmp	short loc_593		; (46F4)
020A:46F0  57					push	di
020A:46F1  E8 004D				call	sub_56			; (4741)
020A:46F4			loc_593::
020A:46F4  59					pop	cx
020A:46F5  2B F9				sub	di,cx
020A:46F7  87 F9				xchg	di,cx
020A:46F9			loc_594::
020A:46F9  C3					retn
				sub_51		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_52		proc	near
020A:46FA			loc_595::
020A:46FA  80 3C 0D				cmp	byte ptr [si],0Dh
020A:46FD  74 FA				je	loc_ret_594		; Jump if equal
020A:46FF  AC					lodsb				; String [si] to al
020A:4700  E8			data_509	db	0E8h
020A:4701  46					inc	si
020A:4702  00 74 09				add	[si+9],dh
020A:4705  E8 008E				call	sub_59			; (4796)
020A:4708  AC					lodsb				; String [si] to al
020A:4709  E8 008A				call	sub_59			; (4796)
020A:470C  EB EC				jmp	short loc_595		; (46FA)
				sub_52		endp

020A:470E			loc_596::
020A:470E  E8 0062				call	sub_58			; (4773)
020A:4711  E8 0082				call	sub_59			; (4796)
020A:4714  3C 3D				cmp	al,3Dh			; '='
020A:4716  75 E2				jne	loc_595			; Jump if not equal
020A:4718			loc_597::
020A:4718  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_53		proc	near
020A:4719  BE 0080				mov	si,80h
020A:471C  AC					lodsb				; String [si] to al
020A:471D  0A C0				or	al,al			; Zero ?
020A:471F  74 F7				jz	loc_ret_597		; Jump if zero
020A:4721  E8 024F				call	sub_66			; (4973)
020A:4724  3C 0D				cmp	al,0Dh
020A:4726			loc_598::
020A:4726  C3					retn
				sub_53		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 157

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_54		proc	near
020A:4727  8E 06 995F				mov	es,data_639		; (020A:995F=0FFF0h)
020A:472B  26: 8E 06 0458			mov	es,word ptr es:[458h]	; (FFF0:0458=18h)
020A:4730  33 FF				xor	di,di			; Zero register
020A:4732			loc_599::
020A:4732  26: 80 3D 00				cmp	byte ptr es:[di],0
020A:4736  74 EE				je	loc_ret_598		; Jump if equal
020A:4738  E8 0006				call	sub_56			; (4741)
020A:473B  EB F5				jmp	short loc_599		; (4732)
				sub_54		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_55		proc	near
020A:473D			loc_600::
020A:473D  B0 3D				mov	al,3Dh			; '='
020A:473F  EB 02				jmp	short loc_601		; (4743)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_56::
020A:4741  32 C0				xor	al,al			; Zero register
020A:4743			loc_601::
020A:4743  B9 1000				mov	cx,1000h
020A:4746  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:4748  C3					retn
				sub_55		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_57		proc	near
020A:4749  1E					push	ds
020A:474A  56					push	si
020A:474B  50					push	ax
020A:474C  2E: 8E 1E 995F			mov	ds,cs:data_639		; (020A:995F=0FFF0h)
020A:4751  C5 36 02CB				lds	si,dword ptr ds:[2CBh]	; (FFF0:02CB=18h) Load 32 bit ptr
020A:4755			loc_602::
020A:4755  83 3C 00				cmp	word ptr [si],0
020A:4758  74 0E				je	loc_603			; Jump if equal
020A:475A  58					pop	ax
020A:475B  50					push	ax
020A:475C  3A 04				cmp	al,[si]
020A:475E  72 08				jb	loc_603			; Jump if below
020A:4760  46					inc	si
020A:4761  3A 04				cmp	al,[si]
020A:4763  76 07				jbe	loc_604			; Jump if below or =
020A:4765  46					inc	si
020A:4766  EB ED				jmp	short loc_602		; (4755)
020A:4768			loc_603::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 158

020A:4768  33 C0				xor	ax,ax			; Zero register
020A:476A  EB 03				jmp	short loc_605		; (476F)
020A:476C			loc_604::
020A:476C  33 C0				xor	ax,ax			; Zero register
020A:476E  40					inc	ax
020A:476F			loc_605::
020A:476F  58					pop	ax
020A:4770  5E					pop	si
020A:4771  1F					pop	ds
020A:4772  C3					retn
				sub_57		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_58		proc	near
020A:4773  3C 80				cmp	al,80h
020A:4775  72 14				jb	loc_606			; Jump if below
020A:4777  2C 80				sub	al,80h
020A:4779  1E					push	ds
020A:477A  53					push	bx
020A:477B  8E 1E 995F				mov	ds,data_639		; (020A:995F=0FFF0h)
020A:477F  C5 1E 02C3				lds	bx,dword ptr ds:[2C3h]	; (FFF0:02C3=0FCh) Load 32 bit ptr
020A:4783  83 C3 02				add	bx,2
020A:4786  D7					xlat				; al=[al+[bx]] table
020A:4787  5B					pop	bx
020A:4788  1F					pop	ds
020A:4789  EB 0A				jmp	short loc_607		; (4795)
020A:478B			loc_606::
020A:478B  3C 61				cmp	al,61h			; 'a'
020A:478D  72 06				jb	loc_607			; Jump if below
020A:478F  3C 7A				cmp	al,7Ah			; 'z'
020A:4791  77 02				ja	loc_607			; Jump if above
020A:4793  2C 20				sub	al,20h			; ' '
020A:4795			loc_607::
020A:4795  C3					retn
				sub_58		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_59		proc	near
020A:4796  51					push	cx
020A:4797  53					push	bx
020A:4798  06					push	es
020A:4799  1E					push	ds
020A:479A  8E 1E 995F				mov	ds,data_639		; (020A:995F=0FFF0h)
020A:479E  8E 06 0458				mov	es,word ptr ds:[458h]	; (FFF0:0458=18h)
020A:47A2  1F					pop	ds
020A:47A3  E8 0052				call	sub_60			; (47F8)
020A:47A6  8B D9				mov	bx,cx
020A:47A8  83 EB 02				sub	bx,2
020A:47AB  3B FB				cmp	di,bx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 159

020A:47AD  72 3F				jb	loc_611			; Jump if below
020A:47AF  50					push	ax
020A:47B0  51					push	cx
020A:47B1  53					push	bx
020A:47B2  E8 E1F8				call	sub_28			; (29AD)
020A:47B5  5B					pop	bx
020A:47B6  83 C3 02				add	bx,2
020A:47B9  81 FB 8000				cmp	bx,8000h
020A:47BD  0372			data_513	dw	372h
020A:47BF			loc_608::
020A:47BF  F9			data_514	db	0F9h
020A:47C0  EB			data_515	db	0EBh
020A:47C1  16			data_516	db	16h
020A:47C2			loc_609::
020A:47C2  B1 04				mov	cl,4
020A:47C4  D3 EB				shr	bx,cl			; Shift w/zeros fill
020A:47C6  43					inc	bx
020A:47C7  8C C1				mov	cx,es
020A:47C9  03 CB				add	cx,bx
020A:47CB  83 C1 20				add	cx,20h
020A:47CE  8C C8				mov	ax,cs
020A:47D0  3B C8				cmp	cx,ax
020A:47D2  73 EB				jae	loc_608			; Jump if above or =
020A:47D4  B4 4A				mov	ah,4Ah
020A:47D6  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change memory allocation
										;   bx=bytes/16, es=mem segment
020A:47D8			loc_610::
020A:47D8  9C					pushf				; Push flags
020A:47D9  06					push	es
020A:47DA  8E 06 995F				mov	es,data_639		; (020A:995F=0FFF0h)
020A:47DE  E8 E1DC		;*		call	sub_29			;*(29BD)
020A:47DE  E8 DC E1				db	0E8h,0DCh,0E1h
020A:47E1  07					pop	es
020A:47E2  9D					popf				; Pop flags
020A:47E3  59					pop	cx
020A:47E4  58					pop	ax
020A:47E5  73 07				jnc	loc_611			; Jump if carry=0
020A:47E7  07					pop	es
020A:47E8  BA 8D38				mov	dx,8D38h
020A:47EB  E9 0526				jmp	loc_672			; (4D14)
020A:47EE			loc_611::
020A:47EE  AA					stosb				; Store al to es:[di]
020A:47EF  26: C7 05 0000			mov	word ptr es:[di],0
020A:47F4  07					pop	es
020A:47F5  5B					pop	bx
020A:47F6  59					pop	cx
020A:47F7  C3					retn
				sub_59		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_60		proc	near
020A:47F8  06					push	es
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 160

020A:47F9  50					push	ax
020A:47FA  8C C0				mov	ax,es
020A:47FC  48					dec	ax
020A:47FD  8E C0				mov	es,ax
020A:47FF  26: A1 0003				mov	ax,word ptr es:[3]	; (0209:0003=0CEh)
020A:4803  B1 04				mov	cl,4
020A:4805  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:4807  8B C8				mov	cx,ax
020A:4809  58					pop	ax
020A:480A  07					pop	es
020A:480B			loc_612::
020A:480B  C3					retn
				sub_60		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_61		proc	near
020A:480C  1E					push	ds
020A:480D  8E 1E 995F				mov	ds,data_639		; (020A:995F=0FFF0h)
020A:4811  80 3E 02AF 00			cmp	byte ptr ds:[2AFh],0	; (FFF0:02AF=0)
020A:4816  1F					pop	ds
020A:4817  74 F2				jz	loc_ret_612		; Jump if zero
020A:4819  BA 978E				mov	dx,978Eh
020A:481C  B4 3B				mov	ah,3Bh
020A:481E  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:4820  32 C0				xor	al,al			; Zero register
020A:4822  E8 089F				call	sub_74			; (50C4)
020A:4825  C3					retn
				sub_61		endp

							                        ;* No entry point to code
020A:4826  BE 0081				mov	si,81h
020A:4829  BF 930F				mov	di,930Fh
020A:482C  33 C9				xor	cx,cx			; Zero register
020A:482E  33 D2				xor	dx,dx			; Zero register
020A:4830  E8 FD03				call	sub_46			; (4536)
020A:4833  3D FFFF				cmp	ax,0FFFFh
020A:4836  74 16				je	loc_613			; Jump if equal
020A:4838  3D 0000				cmp	ax,0
020A:483B  75 50				jne	loc_617			; Jump if not equal
020A:483D  80 3E A48D 06			cmp	byte ptr data_677,6	; (020A:A48D=80h)
020A:4842  75 11				jne	loc_615			; Jump if not equal
020A:4844  BF 930F				mov	di,930Fh
020A:4847  33 D2				xor	dx,dx			; Zero register
020A:4849  E8 FCD3				call	sub_45			; (451F)
020A:484C  75 3F				jnz	loc_617			; Jump if not zero
020A:484E			loc_613::
020A:484E  E8 F941		;*		call	sub_43			;*(4192)
020A:484E  E8 41 F9				db	0E8h, 41h,0F9h
020A:4851  E8 0112				call	sub_65			; (4966)
020A:4854			loc_614::
020A:4854  C3					retn
020A:4855			loc_615::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 161

020A:4855  56					push	si
020A:4856  C5 36 A491				lds	si,dword ptr data_678	; (020A:A491=7501h) Load 32 bit ptr
020A:485A  E8 0829				call	sub_72			; (5086)
020A:485D  5E					pop	si
020A:485E  BF 930F				mov	di,930Fh
020A:4861  33 D2				xor	dx,dx			; Zero register
020A:4863  E8 FCB9				call	sub_45			; (451F)
020A:4866  75 25				jnz	loc_617			; Jump if not zero
020A:4868  E8 064D				call	sub_70			; (4EB8)
020A:486B  F6 06 9B68 02			test	byte ptr ds:[9B68h],2	; (9A19:9B68=0)
020A:4870  75 18				jnz	loc_616			; Jump if not zero
020A:4872  B4 3B				mov	ah,3Bh
020A:4874  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:4876  73 DC				jnc	loc_ret_614		; Jump if carry=0
020A:4878  E8 F7D8		;*		call	sub_34			;*(4053)
020A:4878  E8 D8 F7				db	0E8h,0D8h,0F7h
020A:487B  3D 0003				cmp	ax,3
020A:487E  74 0A				je	loc_616			; Jump if equal
020A:4880  3D 0005				cmp	ax,5
020A:4883  74 05				je	loc_616			; Jump if equal
020A:4885  E8 00A3				call	sub_63			; (492B)
020A:4888  EB 03				jmp	short loc_617		; (488D)
020A:488A			loc_616::
020A:488A  BA 8E5C				mov	dx,8E5Ch
020A:488D			loc_617::
020A:488D  E8 2A49				call	sub_98			; (72D9)
020A:4890			loc_618::
020A:4890  C3					retn
							                        ;* No entry point to code
020A:4891  E8 003F				call	sub_62			; (48D3)
020A:4894  72 39				jc	loc_621			; Jump if carry Set
020A:4896  B4 39				mov	ah,39h
020A:4898  CD 21				int	21h			; DOS Services  ah=function 39h
										;  create subdir, path ptr ds:dx
020A:489A  73 F4				jnc	loc_ret_618		; Jump if carry=0
020A:489C  E8 F7B4		;*		call	sub_34			;*(4053)
020A:489C  E8 B4 F7				db	0E8h,0B4h,0F7h
020A:489F  3D 0003				cmp	ax,3
020A:48A2  74 28				je	loc_620			; Jump if equal
020A:48A4  3D 0005				cmp	ax,5
020A:48A7  74 05				je	loc_619			; Jump if equal
020A:48A9  E8 007F				call	sub_63			; (492B)
020A:48AC  EB 21				jmp	short loc_621		; (48CF)
020A:48AE			loc_619::
020A:48AE  BA 95D8				mov	dx,95D8h
020A:48B1  B4 1A				mov	ah,1Ah
020A:48B3  CD 21				int	21h			; DOS Services  ah=function 1Ah
										;  set DTA(disk xfer area) ds:dx
020A:48B5  B4 4E				mov	ah,4Eh			; 'N'
020A:48B7  B9 0010				mov	cx,10h
020A:48BA  CD 21				int	21h			; DOS Services  ah=function 4Eh
										;  find 1st filenam match @ds:dx
020A:48BC  72 0E				jc	loc_620			; Jump if carry Set
020A:48BE  8A 16 95ED				mov	dl,data_636		; (020A:95ED=26h)
020A:48C2  F6 C2 10				test	dl,10h
020A:48C5  74 05				jz	loc_620			; Jump if zero
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 162

020A:48C7  BA 8F4C				mov	dx,8F4Ch
020A:48CA  EB 03				jmp	short loc_621		; (48CF)
020A:48CC			loc_620::
020A:48CC  BA 8E5F				mov	dx,8E5Fh
020A:48CF			loc_621::
020A:48CF  E8 2A07				call	sub_98			; (72D9)
020A:48D2			loc_622::
020A:48D2  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_62		proc	near
020A:48D3  BE 0081				mov	si,81h
020A:48D6  BF 9306				mov	di,9306h
020A:48D9  33 C9				xor	cx,cx			; Zero register
020A:48DB  33 D2				xor	dx,dx			; Zero register
020A:48DD  E8 FC56				call	sub_46			; (4536)
020A:48E0  3D 0000				cmp	ax,0
020A:48E3  75 19				jne	loc_624			; Jump if not equal
020A:48E5  BF 95D8				mov	di,95D8h
020A:48E8  57					push	di
020A:48E9  56					push	si
020A:48EA  C5 36 A491				lds	si,dword ptr data_678	; (020A:A491=7501h) Load 32 bit ptr
020A:48EE			loc_623::
020A:48EE  AC					lodsb				; String [si] to al
020A:48EF  AA					stosb				; Store al to es:[di]
020A:48F0  3C 00				cmp	al,0
020A:48F2  75 FA				jne	loc_623			; Jump if not equal
020A:48F4  5E					pop	si
020A:48F5  BF 9306				mov	di,9306h
020A:48F8  E8 FC24				call	sub_45			; (451F)
020A:48FB  5A					pop	dx
020A:48FC  74 D4				jz	loc_ret_622		; Jump if zero
020A:48FE			loc_624::
020A:48FE  BA 8D21				mov	dx,8D21h
020A:4901  33 C0				xor	ax,ax			; Zero register
020A:4903  F9					stc				; Set carry flag
020A:4904			loc_625::
020A:4904  C3					retn
				sub_62		endp

							                        ;* No entry point to code
020A:4905  E8 FFCB				call	sub_62			; (48D3)
020A:4908  72 1D				jc	loc_627			; Jump if carry Set
020A:490A  75 18				jnz	loc_626			; Jump if not zero
020A:490C  B4 3A				mov	ah,3Ah
020A:490E  CD 21				int	21h			; DOS Services  ah=function 3Ah
										;  delete subdir, path ptr ds:dx
020A:4910  73 F2				jnc	loc_ret_625		; Jump if carry=0
020A:4912  E8 F73E		;*		call	sub_34			;*(4053)
020A:4912  E8 3E F7				db	0E8h, 3Eh,0F7h
020A:4915  3D 0003				cmp	ax,3
020A:4918  74 0A				je	loc_626			; Jump if equal
020A:491A  3D 0005				cmp	ax,5
020A:491D  74 05				je	loc_626			; Jump if equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 163

020A:491F  E8 0009				call	sub_63			; (492B)
020A:4922  EB 03				jmp	short loc_627		; (4927)
020A:4924			loc_626::
020A:4924  BA 8E62				mov	dx,8E62h
020A:4927			loc_627::
020A:4927  E8 29AF				call	sub_98			; (72D9)
020A:492A			loc_628::
020A:492A  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_63		proc	near
020A:492B  C6 06 8D1F 01			mov	byte ptr ds:[8D1Fh],1	; (9A19:8D1F=0)
020A:4930  89 16 9B4D				mov	word ptr ds:[9B4Dh],dx	; (9A19:9B4D=0)
020A:4934  C6 06 8D23 01			mov	byte ptr ds:[8D23h],1	; (9A19:8D23=0)
020A:4939  BA 8D21				mov	dx,8D21h
020A:493C  A3 8D21				mov	word ptr ds:[8D21h],ax	; (9A19:8D21=0)
020A:493F  C3					retn
				sub_63		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_64		proc	near
020A:4940  BF 978E				mov	di,978Eh
020A:4943  8A C2				mov	al,dl
020A:4945  04 40				add	al,40h			; '@'
020A:4947  3C 40				cmp	al,40h			; '@'
020A:4949  75 06				jne	loc_629			; Jump if not equal
020A:494B  02 06 9973				add	al,data_643		; (020A:9973=20h)
020A:494F  FE C0				inc	al
020A:4951			loc_629::
020A:4951  AA					stosb				; Store al to es:[di]
020A:4952  8A 26 9964				mov	ah,data_641		; (020A:9964=0C3h)
020A:4956  B0 3A				mov	al,3Ah			; ':'
020A:4958  AB					stosw				; Store ax to es:[di]
020A:4959  06					push	es
020A:495A  1F					pop	ds
020A:495B  8B F7				mov	si,di
020A:495D  B4 47				mov	ah,47h
020A:495F  CD 21				int	21h			; DOS Services  ah=function 47h
										;  get present dir,drive dl,1=a:
										;   ds:si=ASCIIZ directory name
020A:4961  72 C7				jc	loc_ret_628		; Jump if carry Set
020A:4963  0E					push	cs
020A:4964  1F					pop	ds
020A:4965  C3					retn
				sub_64		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 164


				sub_65		proc	near
020A:4966  52					push	dx
020A:4967  BA 8F00				mov	dx,8F00h
020A:496A  1E					push	ds
020A:496B  0E					push	cs
020A:496C  1F					pop	ds
020A:496D  E8 2971				call	sub_100			; (72E1)
020A:4970  1F					pop	ds
020A:4971  5A					pop	dx
020A:4972  C3					retn
				sub_65		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_66		proc	near
020A:4973			loc_630::
020A:4973  AC					lodsb				; String [si] to al
020A:4974  E8 0004				call	sub_67			; (497B)
020A:4977  74 FA				jz	loc_630			; Jump if zero
020A:4979  4E					dec	si
020A:497A			loc_631::
020A:497A  C3					retn
				sub_66		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_67		proc	near
020A:497B  3C 20				cmp	al,20h			; ' '
020A:497D  74 FB				je	loc_ret_631		; Jump if equal
020A:497F  3C 3D				cmp	al,3Dh			; '='
020A:4981  74 F7				je	loc_ret_631		; Jump if equal
020A:4983  3C 2C				cmp	al,2Ch			; ','
020A:4985  74 F3				je	loc_ret_631		; Jump if equal
020A:4987  3C 3B				cmp	al,3Bh			; ';'
020A:4989  74 EF				je	loc_ret_631		; Jump if equal
020A:498B  3C 09				cmp	al,9
020A:498D  74 EB				je	loc_ret_631		; Jump if equal
020A:498F  3C 0A				cmp	al,0Ah
020A:4991  C3					retn
				sub_67		endp

020A:4992  B9 0008				mov	cx,8

020A:4995			locloop_632::
020A:4995  AC					lodsb				; String [si] to al
020A:4996  3C 20				cmp	al,20h			; ' '
020A:4998  74 01				je	loc_633			; Jump if equal
020A:499A  AA					stosb				; Store al to es:[di]
020A:499B			loc_633::
020A:499B  E2 F8				loop	locloop_632		; Loop if cx > 0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 165


020A:499D  AC					lodsb				; String [si] to al
020A:499E  3C 20				cmp	al,20h			; ' '
020A:49A0  74 12				je	loc_635			; Jump if equal
020A:49A2  8A E0				mov	ah,al
020A:49A4  B0 2E				mov	al,2Eh			; '.'
020A:49A6  AA					stosb				; Store al to es:[di]
020A:49A7  86 C4				xchg	al,ah
020A:49A9  AA					stosb				; Store al to es:[di]
020A:49AA  B1 02				mov	cl,2

020A:49AC			locloop_634::
020A:49AC  AC					lodsb				; String [si] to al
020A:49AD  3C 20				cmp	al,20h			; ' '
020A:49AF  74 03				je	loc_635			; Jump if equal
020A:49B1  AA					stosb				; Store al to es:[di]
020A:49B2  E2 F8				loop	locloop_634		; Loop if cx > 0

020A:49B4			loc_635::
020A:49B4  32 C0				xor	al,al			; Zero register
020A:49B6  AA					stosb				; Store al to es:[di]
020A:49B7			loc_636::
020A:49B7  C3					retn
020A:49B8			loc_637::
020A:49B8  A6					cmpsb				; Cmp [si] to es:[di]
020A:49B9  75 FC				jnz	loc_ret_636		; Jump if not zero
020A:49BB  80 7C FF 00				cmp	byte ptr [si-1],0
020A:49BF  74 F6				je	loc_ret_636		; Jump if equal
020A:49C1  EB F5				jmp	short loc_637		; (49B8)
							                        ;* No entry point to code
020A:49C3  50					push	ax
020A:49C4  B0 0D				mov	al,0Dh
020A:49C6  51					push	cx
020A:49C7  57					push	di
020A:49C8  8B FA				mov	di,dx
020A:49CA  B9 FFFF				mov	cx,0FFFFh
020A:49CD  06					push	es
020A:49CE  1E					push	ds
020A:49CF  07					pop	es
020A:49D0  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:49D2  C6 45 FF 00				mov	byte ptr [di-1],0
020A:49D6  07					pop	es
020A:49D7  89 16 9B4D				mov	data_650,dx		; (020A:9B4D=80CFh)
020A:49DB  BA 8EE8				mov	dx,8EE8h
020A:49DE  E8 2900				call	sub_100			; (72E1)
020A:49E1  C6 45 FF 0D				mov	byte ptr [di-1],0Dh
020A:49E5  72 04				jc	loc_638			; Jump if carry Set
020A:49E7  5F					pop	di
020A:49E8  59					pop	cx
020A:49E9  58					pop	ax
020A:49EA  C3					retn
020A:49EB			loc_638::
020A:49EB  0E					push	cs
020A:49EC  1F					pop	ds
020A:49ED  8E 06 995F				mov	es,data_639		; (020A:995F=0FFF0h)
020A:49F1  BA 8D35				mov	dx,8D35h
020A:49F4  26: 80 3E 0331 00			cmp	byte ptr es:[331h],0	; (FFF0:0331=16h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 166

020A:49FA  74 06				je	loc_639			; Jump if equal
020A:49FC  E8 0977				call	sub_75			; (5376)
020A:49FF  BA 8E82				mov	dx,8E82h
020A:4A02			loc_639::
020A:4A02  E9 030F				jmp	loc_672			; (4D14)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_68		proc	near
020A:4A05  50					push	ax
020A:4A06  B4 2F				mov	ah,2Fh			; '/'
020A:4A08  38 26 9963				cmp	data_640,ah		; (020A:9963=8Eh)
020A:4A0C  74 04				je	loc_640			; Jump if equal
020A:4A0E  3C 2F				cmp	al,2Fh			; '/'
020A:4A10  74 02				je	loc_641			; Jump if equal
020A:4A12			loc_640::
020A:4A12  3C 5C				cmp	al,5Ch			; '\'
020A:4A14			loc_641::
020A:4A14  58					pop	ax
020A:4A15  C3					retn
				sub_68		endp

							                        ;* No entry point to code
020A:4A16  C7 06 9CD1 0000			mov	data_654,0		; (020A:9CD1=168Fh)
020A:4A1C  8A 16 005C				mov	dl,byte ptr ds:[5Ch]	; (020A:005C=8Fh)
020A:4A20  E8 FF1D				call	sub_64			; (4940)
020A:4A23  72 33				jc	loc_643			; Jump if carry Set
020A:4A25  E8 0490				call	sub_70			; (4EB8)
020A:4A28  F6 06 9B68 02			test	byte ptr data_652,2	; (020A:9B68=6)
020A:4A2D  75 2C				jnz	loc_644			; Jump if not zero
020A:4A2F  B4 3B				mov	ah,3Bh
020A:4A31  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:4A33  73 13				jnc	loc_642			; Jump if carry=0
020A:4A35  E8 F61B		;*		call	sub_34			;*(4053)
020A:4A35  E8 1B F6				db	0E8h, 1Bh,0F6h
020A:4A38  3D 0003				cmp	ax,3
020A:4A3B  74 1E				je	loc_644			; Jump if equal
020A:4A3D  3D 0005				cmp	ax,5
020A:4A40  74 19				je	loc_644			; Jump if equal
020A:4A42  A3 9CD1				mov	data_654,ax		; (020A:9CD1=168Fh)
020A:4A45  E9 008B				jmp	loc_652			; (4AD3)
020A:4A48			loc_642::
020A:4A48  E8 0677				call	sub_73			; (50C2)
020A:4A4B  B0 3F				mov	al,3Fh			; '?'
020A:4A4D  BF 005D				mov	di,5Dh
020A:4A50  B9 000B				mov	cx,0Bh
020A:4A53  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4A55  32 C0				xor	al,al			; Zero register
020A:4A57  C3					retn
020A:4A58			loc_643::
020A:4A58  E9 0083				jmp	loc_654			; (4ADE)
020A:4A5B			loc_644::
020A:4A5B  8B 36 9ABC				mov	si,data_646		; (020A:9ABC=2405h)
020A:4A5F  4E					dec	si
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 167

020A:4A60  8A 44 FF				mov	al,[si-1]
020A:4A63  80 3E 9CEC 00			cmp	byte ptr data_656,0	; (020A:9CEC=8Fh)
020A:4A68  75 05				jne	loc_645			; Jump if not equal
020A:4A6A  E8 FF98				call	sub_68			; (4A05)
020A:4A6D  74 64				jz	loc_652			; Jump if zero
020A:4A6F			loc_645::
020A:4A6F  8B CE				mov	cx,si
020A:4A71  8B F2				mov	si,dx
020A:4A73  52					push	dx
020A:4A74			loc_646::
020A:4A74  3B F1				cmp	si,cx
020A:4A76  74 13				je	loc_648			; Jump if equal
020A:4A78  AC					lodsb				; String [si] to al
020A:4A79  E8 FCCD				call	sub_57			; (4749)
020A:4A7C  74 03				jz	loc_647			; Jump if zero
020A:4A7E  46					inc	si
020A:4A7F  EB F3				jmp	short loc_646		; (4A74)
020A:4A81			loc_647::
020A:4A81  E8 FF81				call	sub_68			; (4A05)
020A:4A84  75 EE				jnz	loc_646			; Jump if not zero
020A:4A86  8B D6				mov	dx,si
020A:4A88  4A					dec	dx
020A:4A89  EB E9				jmp	short loc_646		; (4A74)
020A:4A8B			loc_648::
020A:4A8B  8B F2				mov	si,dx
020A:4A8D  5A					pop	dx
020A:4A8E  3B F2				cmp	si,dx
020A:4A90  74 56				je	loc_656			; Jump if equal
020A:4A92  8B CE				mov	cx,si
020A:4A94  8B F2				mov	si,dx
020A:4A96			loc_649::
020A:4A96  3B F1				cmp	si,cx
020A:4A98  74 12				je	loc_650			; Jump if equal
020A:4A9A  C6 06 9CEC 00			mov	byte ptr data_656,0	; (020A:9CEC=8Fh)
020A:4A9F  AC					lodsb				; String [si] to al
020A:4AA0  E8 FCA6				call	sub_57			; (4749)
020A:4AA3  74 F1				jz	loc_649			; Jump if zero
020A:4AA5  46					inc	si
020A:4AA6  FE 06 9CEC				inc	data_656		; (020A:9CEC=8Fh)
020A:4AAA  EB EA				jmp	short loc_649		; (4A96)
020A:4AAC			loc_650::
020A:4AAC  50					push	ax
020A:4AAD  B0 2E				mov	al,2Eh			; '.'
020A:4AAF  38 44 01				cmp	[si+1],al
020A:4AB2  75 09				jne	loc_651			; Jump if not equal
020A:4AB4  38 44 02				cmp	[si+2],al
020A:4AB7  74 04				je	loc_651			; Jump if equal
020A:4AB9  80 7C 02 00				cmp	byte ptr [si+2],0
020A:4ABD			loc_651::
020A:4ABD  58					pop	ax
020A:4ABE  74 13				jz	loc_652			; Jump if zero
020A:4AC0  8A 44 FF				mov	al,[si-1]
020A:4AC3  3C 3A				cmp	al,3Ah			; ':'
020A:4AC5  74 21				je	loc_656			; Jump if equal
020A:4AC7  80 3E 9CEC 00			cmp	byte ptr data_656,0	; (020A:9CEC=8Fh)
020A:4ACC  75 07				jne	loc_653			; Jump if not equal
020A:4ACE  E8 FF34				call	sub_68			; (4A05)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 168

020A:4AD1  75 02				jnz	loc_653			; Jump if not zero
020A:4AD3			loc_652::
020A:4AD3  F9					stc				; Set carry flag
020A:4AD4  C3					retn
020A:4AD5			loc_653::
020A:4AD5  C6 04 00				mov	byte ptr [si],0
020A:4AD8  B4 3B				mov	ah,3Bh
020A:4ADA  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:4ADC  73 20				jnc	loc_657			; Jump if carry=0
020A:4ADE			loc_654::
020A:4ADE  E8 F572		;*		call	sub_34			;*(4053)
020A:4ADE  E8 72 F5				db	0E8h, 72h,0F5h
020A:4AE1  A3 9CD1				mov	data_654,ax		; (020A:9CD1=168Fh)
020A:4AE4  0B F6				or	si,si			; Zero ?
020A:4AE6  F9					stc				; Set carry flag
020A:4AE7			loc_655::
020A:4AE7  C3					retn
020A:4AE8			loc_656::
020A:4AE8  8A 04				mov	al,[si]
020A:4AEA  E8 FF18				call	sub_68			; (4A05)
020A:4AED  F9					stc				; Set carry flag
020A:4AEE  75 F7				jnz	loc_ret_655		; Jump if not zero
020A:4AF0  32 DB				xor	bl,bl			; Zero register
020A:4AF2  86 5C 01				xchg	[si+1],bl
020A:4AF5  B4 3B				mov	ah,3Bh
020A:4AF7  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:4AF9  72 E3				jc	loc_654			; Jump if carry Set
020A:4AFB  88 5C 01				mov	[si+1],bl
020A:4AFE			loc_657::
020A:4AFE  E8 05C1				call	sub_73			; (50C2)
020A:4B01  46					inc	si
020A:4B02  89 36 9B66				mov	data_651,si		; (020A:9B66=0C600h)
020A:4B06  9C					pushf				; Push flags
020A:4B07  80 3E 9AC4 FF			cmp	byte ptr data_647,0FFh	; (020A:9AC4=0B0h)
020A:4B0C  74 08				je	loc_658			; Jump if equal
020A:4B0E  BF 005C				mov	di,5Ch
020A:4B11  B8 2902				mov	ax,2902h
020A:4B14  CD 21				int	21h			; DOS Services  ah=function 29h
										;  parse filenam @ds:si FCBes:di
										;   al=parsing control flags
020A:4B16			loc_658::
020A:4B16  9D					popf				; Pop flags
020A:4B17  C3					retn
020A:4B18			loc_659::
020A:4B18  93					xchg	bx,ax
020A:4B19  C3					retn
020A:4B1A  33 DB				xor	bx,bx			; Zero register
020A:4B1C			loc_660::
020A:4B1C  E8 FE54				call	sub_66			; (4973)
020A:4B1F  3A 06 9963				cmp	al,data_640		; (020A:9963=8Eh)
020A:4B23  75 F3				jne	loc_659			; Jump if not equal
020A:4B25  81 CB 8000				or	bx,8000h
020A:4B29  46					inc	si
020A:4B2A  E8 FE46				call	sub_66			; (4973)
020A:4B2D  3C 0D				cmp	al,0Dh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 169

020A:4B2F  74 E7				je	loc_659			; Jump if equal
020A:4B31  46					inc	si
020A:4B32  E8 FC3E				call	sub_58			; (4773)
020A:4B35  BF 9250				mov	di,9250h
020A:4B38  B9 0006				mov	cx,6
020A:4B3B  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:4B3D  75 09				jnz	loc_661			; Jump if not zero
020A:4B3F  B8 0001				mov	ax,1
020A:4B42  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:4B44  0B D8				or	bx,ax
020A:4B46  EB D4				jmp	short loc_660		; (4B1C)
020A:4B48			loc_661::
020A:4B48  EB D2				jmp	short loc_660		; (4B1C)
							                        ;* No entry point to code
020A:4B4A  BA 8D7D				mov	dx,8D7Dh
020A:4B4D  E9 01C4				jmp	loc_672			; (4D14)
020A:4B50			loc_662::
020A:4B50  E9 0102				jmp	loc_669			; (4C55)
							                        ;* No entry point to code
020A:4B53  0A C0				or	al,al			; Zero ?
020A:4B55  74 F9				jz	loc_662			; Jump if zero
020A:4B57  E8 034D				call	sub_69			; (4EA7)
020A:4B5A  74 29				jz	loc_664			; Jump if zero
020A:4B5C  8A 0E 99E7				mov	cl,data_644		; (020A:99E7=88h)
020A:4B60  B5 00				mov	ch,0
020A:4B62  89 0E 9ABC				mov	data_646,cx		; (020A:9ABC=2405h)
020A:4B66  FE 06 9CD3				inc	data_655		; (020A:9CD3=0E9h)
020A:4B6A  E8 03E3				call	sub_71			; (4F50)
020A:4B6D  BE 99E7				mov	si,99E7h
020A:4B70  BA FFFF				mov	dx,0FFFFh
020A:4B73  BF 57A4				mov	di,57A4h
020A:4B76  B8 AE01				mov	ax,0AE01h
020A:4B79  CD 2F				int	2Fh			; Installable command services
										;*  undocumented function
020A:4B7B  80 3E 99E7 00			cmp	byte ptr data_644,0	; (020A:99E7=88h)
020A:4B80  75 03				jne	loc_664			; Jump if not equal
020A:4B82  E9 00A0				jmp	loc_668			; (4C25)
020A:4B85			loc_664::
020A:4B85  BF 90CF				mov	di,90CFh
020A:4B88  33 C9				xor	cx,cx			; Zero register
020A:4B8A  BE 99E8				mov	si,99E8h
020A:4B8D  8A 0D				mov	cl,[di]
020A:4B8F  47					inc	di
020A:4B90  E3 BE				jcxz	loc_662			; Jump if cx=0
020A:4B92  3A 0E 08E7				cmp	cl,byte ptr ds:[8E7h]	; (020A:08E7=5)
020A:4B96  74 E4		;*		je	loc_663			;*Jump if equal
020A:4B96  74 E4				db	 74h,0E4h
020A:4B98  3C 06				cmp	al,6
020A:4B9A  75 06				jne	loc_665			; Jump if not equal
020A:4B9C  26: 88 55 04				mov	es:[di+4],dl
020A:4BA0  5A					pop	dx
020A:4BA1  C5 06 993A				lds	ax,dword ptr data_638	; (020A:993A=0B953h) Load 32 bit ptr
020A:4BA5  0F			;*		pop	cs			; Dangerous-8088 only
020A:4BA5  0F					db	0Fh
020A:4BA6  2E: A1 5253				mov	ax,cs:data_570		; (020A:5253=0FCB6h)
020A:4BAA  00 26 4589				add	byte ptr ds:[4589h],ah	; (007F:4589=52h)
020A:4BAE  04 26				add	al,26h			; '&'
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 170

020A:4BB0  CD 20				int	20h			; DOS program terminate
020A:4BB2  FF 9F 9A00				call	dword ptr ds:[9A00h][bx]	;*(007F:9A00=5706h)
020A:4BB6  F0					db	0F0h
020A:4BB7  FE					db	0FEh
020A:4BB8  1D DEF0				sbb	ax,0DEF0h
020A:4BBB  01 0E 4B04				add	word ptr ds:[4B04h],cx	; (007F:4B04=4946h)
020A:4BBF  01 0E 5604				add	word ptr ds:[5604h],cx	; (007F:5604=328h)
020A:4BC3  01 0E 0E04				add	word ptr ds:[0E04h],cx	; (007F:0E04=0D2D1h)
020A:4BC7  04 01				add	al,1
020A:4BC9  01 01				add	[bx+di],ax
020A:4BCB  00 02				add	[bp+si],al
020A:4BCD  000F[03]				db	15 dup (3)
020A:4BDC  10 05				adc	[di],al
020A:4BDE  38 02				cmp	[bp+si],al
020A:4BE0  49					dec	cx
020A:4BE1  1E					push	ds
020A:4BE2  14 00				adc	al,0
020A:4BE4  18 00				sbb	[bx+si],al
020A:4BE6  C5 06 FFFF				lds	ax,dword ptr ds:[0FFFFh]	; (007F:FFFF) Load 32 bit ptr
020A:4BEA  FF					db	0FFh
020A:4BEB  FF 00				inc	word ptr [bx+si]
020A:4BED  00 00				add	[bx+si],al
020A:4BEF  00 05				add	[di],al
020A:4BF1  000F[00]				db	15 dup (0)
020A:4C00  CD 21				int	21h			; DOS Services  ah=function 1Dh
										;  obsolete CP/M function
020A:4C02  CB					retf				; Return far
020A:4C03  000A[00]				db	10 dup (0)
020A:4C0D  000B[20]				db	11 dup (20h)
020A:4C18  00					db	0
020A:4C19  00					db	0
020A:4C1A  00 00				add	[bx+si],al
020A:4C1C  00			data_523	db	0			; Data table (indexed access)
020A:4C1D  000B[20]				db	11 dup (20h)
020A:4C28  0009[00]				db	9 dup (0)
020A:4C31  0D 2020				or	ax,2020h
020A:4C34  20 53 45				and	[bp+di+45h],dl
020A:4C37  54					push	sp
020A:4C38  20 42 4C				and	[bp+si+4Ch],al
020A:4C3B  41					inc	cx
020A:4C3C  53					push	bx
020A:4C3D  54					push	sp
020A:4C3E  45					inc	bp
020A:4C3F  52					push	dx
020A:4C40  3D 3041				cmp	ax,3041h
020A:4C43  0D A8AD				or	ax,0A8ADh
020A:4C46  A5					movsw				; Mov [si] to es:[di]
020A:4C47  20 A4 EFAB				and	byte ptr ds:[0EFABh][si],ah	; (020A:EFAB=45h)
020A:4C4B  20 A1 A7A2				and	data_687[bx+di],ah	; (020A:A7A2=26h)
020A:4C4F  AE					scasb				; Scan es:[di] for al
020A:4C50  A2 A3AE				mov	data_674,al		; (020A:A3AE=0D3h)
020A:4C53  AE					scasb				; Scan es:[di] for al
020A:4C54  20 AF E0AE				and	byte ptr ds:[0E0AEh][bx],ch	; (020A:E0AE=0BEh)
020A:4C58  E2 A0		;*		loop	locloop_666		;*Loop if cx > 0

020A:4C58  E2 A0				db	0E2h,0A0h
020A:4C5A  20 A2 AEA2				and	[bp+si-515Eh],ah
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 171

020A:4C5E  A4					movsb				; Mov [si] to es:[di]
020A:4C5F  A0 A22D				mov	al,data_668		; (020A:A22D=16h)
020A:4C62  EB A2		;*		jmp	short loc_667		;*(4C06)
020A:4C62  EB A2				db	0EBh,0A2h
020A:4C64  AE					scasb				; Scan es:[di] for al

020A:4C65			locloop_670::
020A:4C65  A4					movsb				; Mov [si] to es:[di]
020A:4C66  A0 5320				mov	al,data_572		; (020A:5320=74h)
020A:4C69  42					inc	dx
020A:4C6A  2C 20				sub	al,20h			; ' '
020A:4C6C  AD					lodsw				; String [si] to ax
020A:4C6D  A0 E0AF				mov	al,byte ptr ds:[0E0AFh]	; (020A:E0AF=0D6h)
020A:4C70  A8 AC				test	al,0ACh
020A:4C72  A5					movsw				; Mov [si] to es:[di]
020A:4C73  E0 3A				loopnz	locloop_671		; Loop if zf=0, cx>0

020A:4C75  0D 0DEC				or	ax,0DECh
020A:4C78  E0 EB				loopnz	locloop_670		; Loop if zf=0, cx>0

020A:4C7A  A5					movsw				; Mov [si] to es:[di]
020A:4C7B  0D 0000				or	ax,0
020A:4C7E  0032[00]				db	50 dup (0)
020A:4CB0  53 6F 75 72 63 65	data_527	db	'Sourcer - V Communications, Inc.'
020A:4CB6  72 20 2D 20 56 20
020A:4CBC  43 6F 6D 6D 75 6E
020A:4CC2  69 63 61 74 69 6F
020A:4CC8  6E 73 2C 20 49 6E
020A:4CCE  63 2E
020A:4CD0  20 43 6F 70 79 72			db	' Copyright 1988-1993 V5.10  s/n '
020A:4CD6  69 67 68 74 20 31
020A:4CDC  39 38 38 2D 31 39
020A:4CE2  39 33 20 56 35 2E
020A:4CE8  31 30 20 20 73 2F
020A:4CEE  6E 20
020A:4CF0  42 33 31 31 33 31			db	'B311312-XBIOF06/23/99', 0
020A:4CF6  32 2D 58 42 49 4F
020A:4CFC  46 30 36 2F 32 33
020A:4D02  2F 39 39 00
020A:4D06  FC					cld				; Clear direction
020A:4D07  EA 2079:4220		;*		jmp	far ptr loc_1997	;*(2079:4220)
020A:4D07  EA					db	0EAh
020A:4D08  4220 2079				dw	4220h, 2079h
020A:4D0C  46 72 61 6E 6B 20			db	'Frank va'
020A:4D12  76 61
020A:4D14			loc_672::
020A:4D14  6E					db	6Eh
020A:4D15  20 47 69				and	[bx+69h],al
020A:4D18  6C					db	6Ch
020A:4D19  6C					db	6Ch
020A:4D1A  75 77				jnz	loc_673			; Jump if not zero
020A:4D1C  65					db	65h
020A:4D1D  20 28				and	[bx+si],ch
020A:4D1F  30 39				xor	[bx+di],bh
020A:4D21  2F					das				; Decimal adjust
020A:4D22  31 34				xor	[si],si
020A:4D24  2F					das				; Decimal adjust
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 172

020A:4D25  39 33				cmp	[bp+di],si
020A:4D27  2C 31				sub	al,31h			; '1'
020A:4D29  35 323A				xor	ax,323Ah
020A:4D2C  30 3A				xor	[bp+si],bh
020A:4D2E  33 30				xor	si,[bx+si]
020A:4D30  29 00				sub	[bx+si],ax
020A:4D32  000E[00]				db	14 dup (0)
020A:4D40  C5 06 2E8D				lds	ax,dword ptr ds:[2E8Dh]	; (020A:2E8D=4F52h) Load 32 bit ptr
020A:4D44  00			data_531	db	0
020A:4D45  4600			data_532	dw	4600h
020A:4D47  32 00				xor	al,[bx+si]
020A:4D49  2E			data_533	db	2Eh
020A:4D4A  8C			data_534	db	8Ch
020A:4D4B  06			data_535	db	6
020A:4D4C  90			data_536	db	90h
020A:4D4D  00 E8				add	al,ch
020A:4D4F  57					push	di
020A:4D50  38 9A 4E64				cmp	[bp+si+4E64h],bl
020A:4D54  93					xchg	bx,ax
020A:4D55  6F					db	6Fh
020A:4D56  E8 3813				call	sub_117			; (856C)
020A:4D59  9A 6F93:54B0		;*		call	far ptr sub_206		;*(6F93:54B0)
020A:4D59  9A					db	9Ah
020A:4D5A  54B0 6F93				dw	54B0h, 6F93h
020A:4D5E  E8 8097				call	$-7F66h
020A:4D61  BE 0080				mov	si,80h
020A:4D64  E8 3C0E				call	sub_122			; (8975)
020A:4D67  2E: A1 0090				mov	ax,word ptr cs:[90h]	; (020A:0090=1FBFh)
020A:4D6B  A3 5618				mov	word ptr ds:[5618h],ax	; (504D:5618=0FFFFh)
020A:4D6E  BF 5156				mov	di,5156h
020A:4D71  03 FE				add	di,si
020A:4D73  E8 3C1A				call	sub_126			; (8990)
020A:4D76  26: 80 85 0100 CD			add	byte ptr es:[100h][di],0CDh	; (020A:0100=28h)
020A:4D7C  C6 06 2B36 00			mov	byte ptr ds:[2B36h],0	; (504D:2B36=0FFh)
020A:4D81  83 3E 1321 00			cmp	word ptr ds:[1321h],0	; (504D:1321=5)
020A:4D86  74 14				je	loc_674			; Jump if equal
020A:4D88  BE 1321				mov	si,1321h
020A:4D8B  8B C6				mov	ax,si
020A:4D8D  05 0004				add	ax,4
020A:4D90  A3 509E				mov	word ptr ds:[509Eh],ax	; (504D:509E=0FFFFh)
020A:4D93			loc_673::
020A:4D93  E8 067E				call	sub_77			; (5414)
020A:4D96  72 04				jc	loc_674			; Jump if carry Set
020A:4D98  89 16 131F				mov	word ptr ds:[131Fh],dx	; (504D:131F=4158h)
020A:4D9C			loc_674::
020A:4D9C  B9 0047				mov	cx,47h
020A:4D9F  81 E9 003A				sub	cx,3Ah
020A:4DA3  BF 01C5				mov	di,1C5h
020A:4DA6  BE 003A				mov	si,3Ah
020A:4DA9  B8 06D5				mov	ax,6D5h
020A:4DAC  8E D8				mov	ds,ax
020A:4DAE  E8 3BDC				call	sub_125			; (898D)
020A:4DB1  FC					cld				; Clear direction
020A:4DB2  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:4DB4  E8 3BBE				call	sub_122			; (8975)
020A:4DB7  9A 6F93:5284		;*		call	far ptr sub_205		;*(6F93:5284)
020A:4DB7  9A					db	9Ah
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 173

020A:4DB8  5284 6F93				dw	5284h, 6F93h
020A:4DBC  B6 00				mov	dh,0
020A:4DBE  E8 20C7				call	sub_91			; (6E88)
020A:4DC1  B4 01				mov	ah,1
020A:4DC3  9A 168F:328C		;*		call	far ptr sub_180		;*(168F:328C)
020A:4DC3  9A					db	9Ah
020A:4DC4  328C 168F				dw	328Ch, 168Fh
020A:4DC8  BF 1141				mov	di,1141h
020A:4DCB  81 EF 1023				sub	di,1023h
020A:4DCF  9A 168F:08E4		;*		call	far ptr sub_161		;*(168F:08E4)
020A:4DCF  9A					db	9Ah
020A:4DD0  08E4 168F				dw	8E4h, 168Fh
020A:4DD4  8C C8				mov	ax,cs
020A:4DD6  9A 6F93:54E0		;*		call	far ptr sub_207		;*(6F93:54E0)
020A:4DD6  9A					db	9Ah
020A:4DD7  54E0 6F93				dw	54E0h, 6F93h
020A:4DDB  80 3E 2B44 02			cmp	byte ptr ds:[2B44h],2	; (ss:2B44=0FAh)
020A:4DE0  74 07				je	loc_675			; Jump if equal
020A:4DE2  80 3E 2B40 01			cmp	byte ptr ds:[2B40h],1	; (ss:2B40=0)
020A:4DE7  75 42				jne	loc_676			; Jump if not equal
020A:4DE9			loc_675::
020A:4DE9  E8 3BA1				call	sub_125			; (898D)
020A:4DEC  BF 00E8				mov	di,0E8h
020A:4DEF  B0 2A				mov	al,2Ah			; '*'
020A:4DF1  B9 0029				mov	cx,29h
020A:4DF4  FC					cld				; Clear direction
020A:4DF5  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4DF7  BF 0188				mov	di,188h
020A:4DFA  B9 0029				mov	cx,29h
020A:4DFD  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4DFF  BE 006F				mov	si,6Fh
020A:4E02  38BF			data_537	dw	38BFh
020A:4E04  01			data_538	db	1
020A:4E05  B9 0027				mov	cx,27h
020A:4E08  F3			data_540	db	0F3h
020A:4E09  A4					movsb				; Mov [si] to es:[di]
020A:4E0A  8B			data_541	db	8Bh
020A:4E0B  261E			data_542	dw	261Eh
020A:4E0D  A013			data_543	dw	0A013h
020A:4E0F  09			data_544	db	9
020A:4E10  12			data_545	db	12h
020A:4E11  88			data_546	db	88h
020A:4E12  47					inc	di
020A:4E13  59					pop	cx
020A:4E14  88 47 46				mov	[bx+46h],al
020A:4E17  88			data_548	db	88h
020A:4E18  47					inc	di
020A:4E19  B05B			data_549	dw	0B05Bh
020A:4E1B  07					pop	es
020A:4E1C  4788			data_550	dw	4788h
020A:4E1E  8857			data_551	dw	8857h
020A:4E20  5847			data_552	dw	5847h
020A:4E22  4788			data_553	dw	4788h
020A:4E24  885A			data_554	dw	885Ah
020A:4E26  47					inc	di
020A:4E27  42					inc	dx
020A:4E28  88 47 45				mov	[bx+45h],al
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 174

020A:4E2B			loc_676::
020A:4E2B  9A 168F:2B34		;*		call	far ptr sub_174		;*(168F:2B34)
020A:4E2B  9A					db	9Ah
020A:4E2C  2B34 168F				dw	2B34h, 168Fh
020A:4E30  E8 1F9D				call	sub_90			; (6DD0)
020A:4E33  E8 7C8A				call	$+7C8Dh
020A:4E36  80 3E 2B40 01			cmp	byte ptr ds:[2B40h],1	; (ss:2B40=0)
020A:4E3B  75 14				jne	loc_677			; Jump if not equal
020A:4E3D  53					push	bx
020A:4E3E  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=41B5h)
020A:4E42  C6 47 41 07				mov	byte ptr [bx+41h],7
020A:4E46  C6 06 1207 07			mov	byte ptr ds:[1207h],7	; (ss:1207=6)
020A:4E4B  C6 06 1208 07			mov	byte ptr ds:[1208h],7	; (ss:1208=8Eh)
020A:4E50  5B					pop	bx
020A:4E51			loc_677::
020A:4E51  9A 168F:7340		;*		call	far ptr sub_203		;*(168F:7340)
020A:4E51  9A					db	9Ah
020A:4E52  7340 168F				dw	7340h, 168Fh
020A:4E56  80 3E 4103 00			cmp	byte ptr ds:[4103h],0	; (ss:4103=0B7h)
020A:4E5B  74 42				je	loc_679			; Jump if equal
020A:4E5D  BF 4103				mov	di,4103h
020A:4E60  B0 00				mov	al,0
020A:4E62  9A 168F:2724		;*		call	far ptr sub_170		;*(168F:2724)
020A:4E62  9A					db	9Ah
020A:4E63  2724 168F				dw	2724h, 168Fh
020A:4E67  9A 168F:27AC		;*		call	far ptr sub_171		;*(168F:27AC)
020A:4E67  9A					db	9Ah
020A:4E68  27AC 168F				dw	27ACh, 168Fh
020A:4E6C  A2 327E				mov	byte ptr ds:[327Eh],al	; (ss:327E=0B0h)
020A:4E6F  3C 00				cmp	al,0
020A:4E71  74 2C				je	loc_679			; Jump if equal
020A:4E73  5750			data_555	dw	5750h
020A:4E75  03BE			data_556	dw	3BEh
020A:4E77  41					inc	cx
020A:4E78  BF 31F0				mov	di,31F0h
020A:4E7B  8B CB				mov	cx,bx
020A:4E7D  FC					cld				; Clear direction
020A:4E7E  F3/ A4		data_557	db	0A4h
020A:4E80  5F					pop	di
020A:4E81  4F					dec	di
020A:4E82  709A			data_558	dw	709Ah
020A:4E84  72 8F				jc	$-6Fh			; Jump if carry Set
020A:4E86  16					push	ss
020A:4E87  8358			data_559	dw	8358h
020A:4E89  0CFB			data_560	dw	0CFBh
020A:4E8B  0D77			data_561	dw	0D77h
020A:4E8D  3C			data_562	db	3Ch
020A:4E8E  01			data_563	db	1
020A:4E8F  74 22				jz	loc_681			; Jump if zero
020A:4E91  80 3E 438F 01			cmp	byte ptr ds:[438Fh],1	; (ss:438F=0FFh)
020A:4E96  75 10				jne	loc_680			; Jump if not equal
020A:4E98  EB 4B				jmp	short loc_685		; (4EE5)
020A:4E9A			loc_678::
020A:4E9A  C6 06 327E 00			mov	byte ptr ds:[327Eh],0	; (ss:327E=0B0h)
020A:4E9F			loc_679::
020A:4E9F  80 3E 438F 01			cmp	byte ptr ds:[438Fh],1	; (ss:438F=0FFh)
020A:4EA4  75 02				jne	loc_680			; Jump if not equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 175

020A:4EA6  EB 45				jmp	short loc_686		; (4EED)
020A:4EA8			loc_680::
020A:4EA8  BD 4103				mov	bp,4103h
020A:4EAB  BE 4381				mov	si,4381h
020A:4EAE  9A 168F:4160		;*		call	far ptr sub_189		;*(168F:4160)
020A:4EAE  9A					db	9Ah
020A:4EAF  4160 168F				dw	4160h, 168Fh
020A:4EB3			loc_681::
020A:4EB3  B4 2A				mov	ah,2Ah			; '*'
020A:4EB5  E8 2134				call	sub_94			; (6FEC)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_70		proc	near
020A:4EB8  E8 1D89				call	sub_83			; (6C44)
020A:4EBB  BA 4103				mov	dx,4103h
020A:4EBE  B4 3D				mov	ah,3Dh			; '='
020A:4EC0  B0 00				mov	al,0
020A:4EC2  B9 0000				mov	cx,0
020A:4EC5  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:4EC7  A3 4150				mov	word ptr ds:[4150h],ax	; (9A19:4150=4F52h)
020A:4ECA  73 12				jnc	loc_684			; Jump if carry=0
020A:4ECC  80 3E 327E 01			cmp	byte ptr ds:[327Eh],1	; (9A19:327E=20h)
020A:4ED1  77 09				ja	loc_683			; Jump if above
020A:4ED3  75 05				jnz	loc_682			; Jump if not zero
020A:4ED5  B3 01				mov	bl,1
020A:4ED7  E9 3430				jmp	loc_1319		; (830A)
020A:4EDA			loc_682::
020A:4EDA  EB 11				jmp	short loc_686		; (4EED)
020A:4EDC			loc_683::
020A:4EDC  EB 07				jmp	short loc_685		; (4EE5)
020A:4EDE			loc_684::
020A:4EDE  9A 168F:0B10		;*		call	far ptr sub_165		;*(168F:0B10)
020A:4EDE  9A					db	9Ah
020A:4EDF  0B10 168F				dw	0B10h, 168Fh
020A:4EE3  EB 08				jmp	short loc_686		; (4EED)
020A:4EE5			loc_685::
020A:4EE5  E8 5E1C				call	sub_144			; (AD04)
020A:4EE8  73 03				jnc	loc_686			; Jump if carry=0
020A:4EEA  E9 3546				jmp	loc_1331		; (8433)
020A:4EED			loc_686::
020A:4EED  C6 06 2B36 01			mov	byte ptr ds:[2B36h],1	; (9A19:2B36=0AEh)
020A:4EF2  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (9A19:327D=47h)
020A:4EF6  E8 20F3				call	sub_94			; (6FEC)
020A:4EF9  E8 1D48				call	sub_83			; (6C44)
020A:4EFC  80 3E 4F13 01			cmp	byte ptr ds:[4F13h],1	; (9A19:4F13=53h)
020A:4F01  75 08				jne	loc_687			; Jump if not equal
020A:4F03  C6 06 4F13 00			mov	byte ptr ds:[4F13h],0	; (9A19:4F13=53h)
020A:4F08  E9 0E95				jmp	loc_866			; (5DA0)
020A:4F0B			loc_687::
020A:4F0B  E8 3A7F				call	sub_125			; (898D)
020A:4F0E  2E: 80 3E 0098 01			cmp	byte ptr cs:[98h],1	; (020A:0098=0)
020A:4F14  74 20				je	loc_691			; Jump if equal
020A:4F16  B4 07				mov	ah,7
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 176

020A:4F18  CD 21				int	21h			; DOS Services  ah=function 07h
										;  get keybd char al, no echo
020A:4F1A  3C 00				cmp	al,0
020A:4F1C  75 0D				jne	loc_689			; Jump if not equal
020A:4F1E  B4 07				mov	ah,7
020A:4F20  CD 21				int	21h			; DOS Services  ah=function 07h
										;  get keybd char al, no echo
020A:4F22  3C 3B				cmp	al,3Bh			; ';'
020A:4F24  75 03				jne	loc_688			; Jump if not equal
020A:4F26  E9 188C				jmp	loc_977			; (67B5)
020A:4F29			loc_688::
020A:4F29  EB 3B				jmp	short loc_694		; (4F66)
020A:4F2B			loc_689::
020A:4F2B  3C 3F				cmp	al,3Fh			; '?'
020A:4F2D  75 03				jne	loc_690			; Jump if not equal
020A:4F2F  E9 1883				jmp	loc_977			; (67B5)
020A:4F32			loc_690::
020A:4F32  3C 1B				cmp	al,1Bh
020A:4F34  75 03				jne	loc_692			; Jump if not equal
020A:4F36			loc_691::
020A:4F36  E9 161C				jmp	loc_950			; (6555)
020A:4F39			loc_692::
020A:4F39  3C 2B				cmp	al,2Bh			; '+'
020A:4F3B  75 03				jne	loc_693			; Jump if not equal
020A:4F3D  E9 19B5				jmp	loc_993			; (68F5)
020A:4F40			loc_693::
020A:4F40  3C 80				cmp	al,80h
020A:4F42  73 E5				jae	loc_688			; Jump if above or =
020A:4F44  A8 40				test	al,40h			; '@'
020A:4F46  74 E1				jz	loc_688			; Jump if zero
020A:4F48  24 5F				and	al,5Fh			; '_'
020A:4F4A  B9 5069				mov	cx,5069h
020A:4F4D  81 E9 5050				sub	cx,5050h
020A:4F51  BF 5050				mov	di,5050h
020A:4F54  FC					cld				; Clear direction
020A:4F55  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:4F57  E3 0D				jcxz	loc_694			; Jump if cx=0
020A:4F59  4F					dec	di
020A:4F5A  81 EF 5050				sub	di,5050h
020A:4F5E  D1 E7				shl	di,1			; Shift w/zeros fill
020A:4F60  81 C7 5069				add	di,5069h
020A:4F64  FF 25				jmp	word ptr [di]		;*
020A:4F66			loc_694::
020A:4F66  9A 168F:2B10		;*		call	far ptr sub_173		;*(168F:2B10)
020A:4F66  9A					db	9Ah
020A:4F67  2B10 168F				dw	2B10h, 168Fh
020A:4F6B  EB 9E				jmp	short loc_687		; (4F0B)
				sub_70		endp

							                        ;* No entry point to code
020A:4F6D  E8 2020				call	sub_92			; (6F90)
020A:4F70  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:4F74  B4 22				mov	ah,22h			; '"'
020A:4F76  E8 2073				call	sub_94			; (6FEC)
020A:4F79  E8 1CC8				call	sub_83			; (6C44)
020A:4F7C  80 3E 1329 01			cmp	byte ptr ds:[1329h],1	; (9A19:1329=74h)
020A:4F81  75 30				jne	loc_697			; Jump if not equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 177

020A:4F83  B4 02				mov	ah,2
020A:4F85  32 FF				xor	bh,bh			; Zero register
020A:4F87  BA 0500				mov	dx,500h
020A:4F8A  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:4F8A  9A					db	9Ah
020A:4F8B  2BA8 168F				dw	2BA8h, 168Fh
020A:4F8F  BE 0623				mov	si,623h
020A:4F92  B9 0BC3				mov	cx,0BC3h
020A:4F95  81 E9 0623				sub	cx,623h
020A:4F99  49					dec	cx
020A:4F9A  E8 39F3				call	sub_126			; (8990)

020A:4F9D			locloop_695::
020A:4F9D  33 ED				xor	bp,bp			; Zero register
020A:4F9F  26: 8A 14				mov	dl,es:[si]
020A:4FA2  80 FA F4				cmp	dl,0F4h
020A:4FA5  72 02				jb	loc_696			; Jump if below
020A:4FA7  B2 20				mov	dl,20h			; ' '
020A:4FA9			loc_696::
020A:4FA9  9A 168F:07A0		;*		call	far ptr sub_158		;*(168F:07A0)
020A:4FA9  9A					db	9Ah
020A:4FAA  07A0 168F				dw	7A0h, 168Fh
020A:4FAE  46					inc	si
020A:4FAF  E2 EC				loop	locloop_695		; Loop if cx > 0

020A:4FB1  EB 7C				jmp	short loc_706		; (502F)
020A:4FB3			loc_697::
020A:4FB3  E8 1CD2				call	sub_86			; (6C88)
020A:4FB6  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (9A19:131B=50C3h)
020A:4FBA  BF 0320				mov	di,320h
020A:4FBD  03 3E 131D				add	di,word ptr ds:[131Dh]	; (9A19:131D=5706h)
020A:4FC1  E8 39B4				call	sub_123			; (8978)
020A:4FC4  BE 0623				mov	si,623h
020A:4FC7  B9 0BC3				mov	cx,0BC3h
020A:4FCA  81 E9 0623				sub	cx,623h
020A:4FCE  B7 07				mov	bh,7
020A:4FD0  FC					cld				; Clear direction

020A:4FD1			locloop_698::
020A:4FD1  8A DF				mov	bl,bh
020A:4FD3  80 3C FE				cmp	byte ptr [si],0FEh
020A:4FD6  75			data_567	db	75h
020A:4FD7  0F			data_568	db	0Fh
020A:4FD8  80 FF 07				cmp	bh,7
020A:4FDB  75 04				jne	loc_699			; Jump if not equal
020A:4FDD  B7 0F				mov	bh,0Fh
020A:4FDF  EB 02				jmp	short loc_700		; (4FE3)
020A:4FE1			loc_699::
020A:4FE1  B7 07				mov	bh,7
020A:4FE3			loc_700::
020A:4FE3  8A DF				mov	bl,bh
020A:4FE5  EB 0F				jmp	short loc_702		; (4FF6)
020A:4FE7			loc_701::
020A:4FE7  80 3C F4				cmp	byte ptr [si],0F4h
020A:4FEA  72 15				jb	loc_703			; Jump if below
020A:4FEC  1E					push	ds
020A:4FED  E8 3985				call	sub_122			; (8975)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 178

020A:4FF0  8A 1E 1207				mov	bl,byte ptr ds:[1207h]	; (9A19:1207=6)
020A:4FF4  1F					pop	ds
020A:4FF5  FC					cld				; Clear direction
020A:4FF6			loc_702::
020A:4FF6  B0 20				mov	al,20h			; ' '
020A:4FF8  AA					stosb				; Store al to es:[di]
020A:4FF9  46					inc	si
020A:4FFA  26: 88 1D				mov	es:[di],bl
020A:4FFD  47					inc	di
020A:4FFE  49					dec	cx
020A:4FFF  EB 0E				jmp	short loc_704		; (500F)
020A:5001			loc_703::
020A:5001  80 3C 80				cmp	byte ptr [si],80h
020A:5004  72 09				jb	loc_704			; Jump if below
020A:5006  1E					push	ds
020A:5007  E8 396B				call	sub_122			; (8975)
020A:500A  8A 1E 1206				mov	bl,byte ptr ds:[1206h]	; (9A19:1206=1Eh)
020A:500E  1F					pop	ds
020A:500F			loc_704::
020A:500F  AC					lodsb				; String [si] to al
020A:5010  1E					push	ds
020A:5011  E8 3961				call	sub_122			; (8975)
020A:5014  80 3E 2B44 02			cmp	byte ptr ds:[2B44h],2	; (9A19:2B44=20h)
020A:5019  75 0C				jne	loc_705			; Jump if not equal
020A:501B  3C 80				cmp	al,80h
020A:501D  72 08				jb	loc_705			; Jump if below
020A:501F  53					push	bx
020A:5020  BB 2B61				mov	bx,2B61h
020A:5023  2C 80				sub	al,80h
020A:5025  D7					xlat				; al=[al+[bx]] table
020A:5026  5B					pop	bx
020A:5027			loc_705::
020A:5027  1F					pop	ds
020A:5028  AA					stosb				; Store al to es:[di]
020A:5029  26: 88 1D				mov	es:[di],bl
020A:502C  47					inc	di
020A:502D  E2 A2				loop	locloop_698		; Loop if cx > 0

020A:502F			loc_706::
020A:502F  E8 3943				call	sub_122			; (8975)
020A:5032  E8 1C77				call	sub_87			; (6CAC)
020A:5035  83 26 4E19 FE			and	word ptr ds:[4E19h],0FFFEh	; (9A19:4E19=0)
020A:503A  8B 1E 4E22				mov	bx,word ptr ds:[4E22h]	; (9A19:4E22=0)
020A:503E  E8 237F				call	sub_104			; (73C0)
020A:5041			loc_707::
020A:5041  9A 168F:0760		;*		call	far ptr sub_156		;*(168F:0760)
020A:5041  9A					db	9Ah
020A:5042  0760 168F				dw	760h, 168Fh
020A:5046  3C 00				cmp	al,0
020A:5048  74 0A				je	loc_708			; Jump if equal
020A:504A  24 5F				and	al,5Fh			; '_'
020A:504C  3C 41				cmp	al,41h			; 'A'
020A:504E  72 04				jb	loc_708			; Jump if below
020A:5050  3C 5A				cmp	al,5Ah			; 'Z'
020A:5052  76 03				jbe	loc_709			; Jump if below or =
020A:5054			loc_708::
020A:5054  E9 0098				jmp	loc_714			; (50EF)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 179

020A:5057			loc_709::
020A:5057  3C 50				cmp	al,50h			; 'P'
020A:5059  77 29				ja	loc_710			; Jump if above
020A:505B  2C 41				sub	al,41h			; 'A'
020A:505D  BB 8000				mov	bx,8000h
020A:5060  8A C8				mov	cl,al
020A:5062  D3 CB				ror	bx,cl			; Rotate
020A:5064  8B 16 4E22				mov	dx,word ptr ds:[4E22h]	; (9A19:4E22=0)
020A:5068  8B CA				mov	cx,dx
020A:506A  23 D3				and	dx,bx
020A:506C  F7 D2				not	dx
020A:506E  23 D3				and	dx,bx
020A:5070  F7 D3				not	bx
020A:5072  23 CB				and	cx,bx
020A:5074  0B CA				or	cx,dx
020A:5076  F7 06 4E19 0002			test	word ptr ds:[4E19h],2	; (9A19:4E19=0)
020A:507C  75 62				jnz	loc_712			; Jump if not zero
020A:507E  89 0E 4E22				mov	word ptr ds:[4E22h],cx	; (9A19:4E22=0)
020A:5082  EB 61				jmp	short loc_713		; (50E5)
020A:5084			loc_710::
020A:5084  3C 54				cmp	al,54h			; 'T'

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_72		proc	near
020A:5086  77 2F				ja	loc_711			; Jump if above
020A:5088  80 3E 35E6 00			cmp	byte ptr ds:[35E6h],0	; (9A19:35E6=0E2h)
020A:508D  74 51				je	loc_712			; Jump if equal
020A:508F  2C 51				sub	al,51h			; 'Q'
020A:5091  B3 04				mov	bl,4
020A:5093  8A C8				mov	cl,al
020A:5095  D2 CB				ror	bl,cl			; Rotate
020A:5097  8A 16 4E7F				mov	dl,byte ptr ds:[4E7Fh]	; (9A19:4E7F=22h)
020A:509B  8A CA				mov	cl,dl
020A:509D  22 D3				and	dl,bl
020A:509F  F6 D2				not	dl
020A:50A1  22 D3				and	dl,bl
020A:50A3  F6 D3				not	bl
020A:50A5  22 CB				and	cl,bl
020A:50A7  0A CA				or	cl,dl
020A:50A9  F7 06 4E19 0002			test	word ptr ds:[4E19h],2	; (9A19:4E19=0)
020A:50AF  75 2F				jnz	loc_712			; Jump if not zero
020A:50B1  88 0E 4E7F				mov	byte ptr ds:[4E7Fh],cl	; (9A19:4E7F=22h)
020A:50B5  EB 2E				jmp	short loc_713		; (50E5)
020A:50B7			loc_711::
020A:50B7  2C 55				sub	al,55h			; 'U'
020A:50B9  BB 0080				mov	bx,80h
020A:50BC  8A C8				mov	cl,al
020A:50BE  D3 CB				ror	bx,cl			; Rotate
020A:50C0  8B 16 4E24				mov	dx,word ptr ds:[4E24h]	; (9A19:4E24=0)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_74::
020A:50C4  8B CA				mov	cx,dx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 180

020A:50C6  23 D3				and	dx,bx
020A:50C8  F7 D2				not	dx
020A:50CA  23 D3				and	dx,bx
020A:50CC  F7 D3				not	bx
020A:50CE  23 CB				and	cx,bx
020A:50D0  0B CA				or	cx,dx
020A:50D2  F7 06 4E19 0002			test	data_549,2		; (020A:4E19=0B05Bh)
020A:50D8  75 06				jnz	loc_712			; Jump if not zero
020A:50DA  89 0E 4E24				mov	data_554,cx		; (020A:4E24=885Ah)
020A:50DE  EB 05				jmp	short loc_713		; (50E5)
020A:50E0			loc_712::
020A:50E0  9A 168F:2B10		;*		call	far ptr sub_173		;*(168F:2B10)
020A:50E0  9A					db	9Ah
020A:50E1  2B10 168F				dw	2B10h, 168Fh
020A:50E5			loc_713::
020A:50E5  8B 1E 4E22				mov	bx,data_553		; (020A:4E22=4788h)
020A:50E9  E8 22D4				call	sub_104			; (73C0)
020A:50EC  E9 FF52				jmp	loc_707			; (5041)
				sub_72		endp

020A:50EF			loc_714::
020A:50EF  E8 1EC6				call	sub_93			; (6FB8)
020A:50F2  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:50F6  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:50FA  C6 06 2B36 01			mov	data_285,1		; (020A:2B36=0ADh)
020A:50FF  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (020A:327D=65h)
020A:5103  E8 1EE6				call	sub_94			; (6FEC)
020A:5106  E8 1B3B				call	sub_83			; (6C44)
020A:5109  A0 2B3B				mov	al,data_289		; (020A:2B3B=0A0h)
020A:510C  F6 06 4E7F 07			test	data_557,7		; (020A:4E7F=0A4h)
020A:5111  74 0C				jz	loc_715			; Jump if zero
020A:5113  80 3E 2B3B 0A			cmp	data_289,0Ah		; (020A:2B3B=0A0h)
020A:5118  73 05				jae	loc_715			; Jump if above or =
020A:511A  B0 0A				mov	al,0Ah
020A:511C  E8 264D				call	sub_110			; (776C)
020A:511F			loc_715::
020A:511F  E8 2322				call	sub_105			; (7444)
020A:5122  E9 FDE6				jmp	loc_687			; (4F0B)
							                        ;* No entry point to code
020A:5125  E8 1E68				call	sub_92			; (6F90)
020A:5128  C6 47 52 00				mov	byte ptr [bx+52h],0
020A:512C  C6 47 39 0F				mov	byte ptr [bx+39h],0Fh
020A:5130  C6 47 79 0F				mov	byte ptr [bx+79h],0Fh
020A:5134  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:5138  E8 19E5				call	sub_82			; (6B20)
020A:513B  B4 02				mov	ah,2
020A:513D  32 FF				xor	bh,bh			; Zero register
020A:513F  BA 1313				mov	dx,1313h
020A:5142  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:5142  9A					db	9Ah
020A:5143  2BA8 168F				dw	2BA8h, 168Fh
020A:5147  E8 2266				call	sub_103			; (73B0)
020A:514A  B1 04				mov	cl,4
020A:514C  B3 02				mov	bl,2
020A:514E  BE 0699				mov	si,699h
020A:5151  9A 168F:0620		;*		call	far ptr sub_155		;*(168F:0620)
020A:5151  9A					db	9Ah
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 181

020A:5152  0620 168F				dw	620h, 168Fh
020A:5156  3C 1B				cmp	al,1Bh
020A:5158  75 03				jne	loc_716			; Jump if not equal
020A:515A  E9 00A2				jmp	loc_722			; (51FF)
020A:515D			loc_716::
020A:515D  80 F9 00				cmp	cl,0
020A:5160  74 03				je	loc_717			; Jump if equal
020A:5162  E9 0095				jmp	loc_721			; (51FA)
020A:5165			loc_717::
020A:5165  B9 0080				mov	cx,80h
020A:5168  BF 0699				mov	di,699h
020A:516B  E8 0262				call	sub_76			; (53D0)
020A:516E  72 03				jc	loc_718			; Jump if carry Set
020A:5170  E9 0087				jmp	loc_721			; (51FA)
020A:5173			loc_718::
020A:5173  89 16 3029				mov	data_320,dx		; (020A:3029=0)
020A:5177  B2 3A				mov	dl,3Ah			; ':'
020A:5179  9A 168F:07A0		;*		call	far ptr sub_158		;*(168F:07A0)
020A:5179  9A					db	9Ah
020A:517A  07A0 168F				dw	7A0h, 168Fh
020A:517E  B1 04				mov	cl,4
020A:5180  B3 02				mov	bl,2
020A:5182  BE 069E				mov	si,69Eh
020A:5185  9A 168F:0620		;*		call	far ptr sub_155		;*(168F:0620)
020A:5185  9A					db	9Ah
020A:5186  0620 168F				dw	620h, 168Fh
020A:518A  3C 1B				cmp	al,1Bh
020A:518C  74 71				je	loc_722			; Jump if equal
020A:518E  80 F9 00				cmp	cl,0
020A:5191  75 67				jne	loc_721			; Jump if not equal
020A:5193  B9 0080				mov	cx,80h
020A:5196  BF 069E				mov	di,69Eh
020A:5199  E8 0234				call	sub_76			; (53D0)
020A:519C  73 5C				jnc	loc_721			; Jump if carry=0
020A:519E  E8 37E3				call	sub_124			; (8984)
020A:51A1  26: 89 16 0002			mov	word ptr es:[2],dx	; (1EC4:0002=6174h)
020A:51A6  26: 83 3E 0006 FF			cmp	word ptr es:[6],0FFFFh	; (1EC4:0006=2020h)
020A:51AC  75 07				jne	loc_719			; Jump if not equal
020A:51AE  26: C7 06 0004 0000			mov	word ptr es:[4],0	; (1EC4:0004=365Fh)
020A:51B5			loc_719::
020A:51B5  A1 3029				mov	ax,data_320		; (020A:3029=0)
020A:51B8  26: A3 0000				mov	word ptr es:[0],ax	; (1EC4:0000=6164h)
020A:51BC  26: A3 0006				mov	word ptr es:[6],ax	; (1EC4:0006=2020h)
020A:51C0  26: A3 0008				mov	word ptr es:[8],ax	; (1EC4:0008=2020h)
020A:51C4  26: C6 06 000E 00			mov	byte ptr es:[0Eh],0	; (1EC4:000E=20h)
020A:51CA  26: 83 3E 000A FF			cmp	word ptr es:[0Ah],0FFFFh	; (1EC4:000A=2020h)
020A:51D0  75 19				jne	loc_720			; Jump if not equal
020A:51D2  26: C7 06 000A 0000			mov	word ptr es:[0Ah],0	; (1EC4:000A=2020h)
020A:51D9  26: C7 06 000C 0041			mov	word ptr es:[0Ch],41h	; (1EC4:000C=3B20h)
020A:51E0  80 3E 3040 00			cmp	data_334,0		; (020A:3040=0B3h)
020A:51E5  77 04				ja	loc_720			; Jump if above
020A:51E7  FE 06 3040				inc	data_334		; (020A:3040=0B3h)
020A:51EB			loc_720::
020A:51EB  E8 379F				call	sub_125			; (898D)
020A:51EE  E8 2E83				call	sub_116			; (8074)
020A:51F1  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (020A:327D=65h)
020A:51F5  E8 1DF4				call	sub_94			; (6FEC)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 182

020A:51F8  EB 05				jmp	short loc_722		; (51FF)
020A:51FA			loc_721::
020A:51FA  9A 168F:2B10		;*		call	far ptr sub_173		;*(168F:2B10)
020A:51FA  9A					db	9Ah
020A:51FB  2B10 168F				dw	2B10h, 168Fh
020A:51FF			loc_722::
020A:51FF  E8 20DE				call	sub_99			; (72E0)
020A:5202  E8 1DB3				call	sub_93			; (6FB8)
020A:5205  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:5209  C6 47 79 07				mov	byte ptr [bx+79h],7
020A:520D  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:5211  E8 2190				call	sub_102			; (73A4)
020A:5214  E8 1A2D				call	sub_83			; (6C44)
020A:5217  E9 FCF1				jmp	loc_687			; (4F0B)
							                        ;* No entry point to code
020A:521A  8A 36 327F				mov	dh,byte ptr data_380	; (020A:327F='uineIntel')
020A:521E  FE C6				inc	dh
020A:5220  A0 2B3B				mov	al,data_289		; (020A:2B3B=0A0h)
020A:5223  80 FE 07				cmp	dh,7
020A:5226  76 08				jbe	loc_723			; Jump if below or =
020A:5228  B6 01				mov	dh,1
020A:522A  3C 09				cmp	al,9
020A:522C  75 02				jne	loc_723			; Jump if not equal
020A:522E  B0 04				mov	al,4
020A:5230			loc_723::
020A:5230  88 36 327F				mov	byte ptr data_380,dh	; (020A:327F='uineIntel')
020A:5234  80 FE 01				cmp	dh,1
020A:5237  76 06				jbe	loc_724			; Jump if below or =
020A:5239  3C 04				cmp	al,4
020A:523B  75 02				jne	loc_724			; Jump if not equal
020A:523D  B0 12				mov	al,12h
020A:523F			loc_724::
020A:523F  9A 168F:0850		;*		call	far ptr sub_160		;*(168F:0850)
020A:523F  9A					db	9Ah
020A:5240  0850 168F				dw	850h, 168Fh
020A:5244  E8 2525				call	sub_110			; (776C)
020A:5247  9A 168F:2B70		;*		call	far ptr sub_175		;*(168F:2B70)
020A:5247  9A					db	9Ah
020A:5248  2B70 168F				dw	2B70h, 168Fh
020A:524C  E8 2091				call	sub_99			; (72E0)
020A:524F  E8 19F2				call	sub_83			; (6C44)
020A:5252  E9 FCB6				jmp	loc_687			; (4F0B)
							                        ;* No entry point to code
020A:5255  E8 1D38				call	sub_92			; (6F90)
020A:5258  C6 47 52 07				mov	byte ptr [bx+52h],7
020A:525C  C6 47 3C 0F				mov	byte ptr [bx+3Ch],0Fh
020A:5260  C6 47 4F 0F				mov	byte ptr [bx+4Fh],0Fh
020A:5264  B4 1E				mov	ah,1Eh
020A:5266  E8 1D83				call	sub_94			; (6FEC)
020A:5269  C6 06 066E 20			mov	byte ptr ds:[66Eh],20h	; (020A:066E=0Eh) ' '
020A:526E  E8 18AF				call	sub_82			; (6B20)
020A:5271  B4 02				mov	ah,2
020A:5273  32 FF				xor	bh,bh			; Zero register
020A:5275  BA 1238				mov	dx,1238h
020A:5278  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:5278  9A					db	9Ah
020A:5279  2BA8 168F				dw	2BA8h, 168Fh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 183

020A:527D  E8 2130				call	sub_103			; (73B0)
020A:5280  9A 168F:0760		;*		call	far ptr sub_156		;*(168F:0760)
020A:5280  9A					db	9Ah
020A:5281  0760 168F				dw	760h, 168Fh
020A:5285  3C 80				cmp	al,80h
020A:5287  73 2A				jae	loc_726			; Jump if above or =
020A:5289  A8 40				test	al,40h			; '@'
020A:528B  74 26				jz	loc_726			; Jump if zero
020A:528D  24 5F				and	al,5Fh			; '_'
020A:528F  3C 41				cmp	al,41h			; 'A'
020A:5291  72 20				jb	loc_726			; Jump if below
020A:5293  3C 5A				cmp	al,5Ah			; 'Z'
020A:5295  77 1C				ja	loc_726			; Jump if above
020A:5297  8A D0				mov	dl,al
020A:5299  80 EA 41				sub	dl,41h			; 'A'
020A:529C  8A DA				mov	bl,dl
020A:529E  52					push	dx
020A:529F  B4 02				mov	ah,2
020A:52A1  32 FF				xor	bh,bh			; Zero register
020A:52A3			loc_725::
020A:52A3  BA 184F				mov	dx,184Fh
020A:52A6  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:52A6  9A					db	9Ah
020A:52A7  2BA8 168F				dw	2BA8h, 168Fh
020A:52AB  E8 20F6				call	sub_102			; (73A4)
020A:52AE  5A					pop	dx
020A:52AF  B4 0E				mov	ah,0Eh
020A:52B1  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:52B3			loc_726::
020A:52B3  B4 19				mov	ah,19h
020A:52B5  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:52B7  A2 30CE				mov	data_372,al		; (020A:30CE=31h)
020A:52BA  04 61				add	al,61h			; 'a'
020A:52BC  A2 066E				mov	byte ptr ds:[66Eh],al	; (020A:066E=0Eh)
020A:52BF  E8 1B0E				call	sub_90			; (6DD0)
020A:52C2  8A 16 30CD				mov	dl,data_371		; (020A:30CD=7Eh)
020A:52C6  B4 0E				mov	ah,0Eh
020A:52C8  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:52CA  E8 1CEB				call	sub_93			; (6FB8)
020A:52CD  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:52D1  C6 47 4F 07				mov	byte ptr [bx+4Fh],7
020A:52D5  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (020A:327D=65h)
020A:52D9  E8 1D10				call	sub_94			; (6FEC)
020A:52DC  E8 20C5				call	sub_102			; (73A4)
020A:52DF  E8 1962				call	sub_83			; (6C44)
020A:52E2  E9 FC26				jmp	loc_687			; (4F0B)
							                        ;* No entry point to code
020A:52E5  E8 1CA8				call	sub_92			; (6F90)
020A:52E8  C6 47 52 00				mov	byte ptr [bx+52h],0
020A:52EC  C6 47 3A 0F				mov	byte ptr [bx+3Ah],0Fh
020A:52F0  C6 47 7A 0F				mov	byte ptr [bx+7Ah],0Fh
020A:52F4  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:52F8  80 0E 1715 02			or	data_224,2		; (020A:1715=0)
020A:52FD  E8 1FE0				call	sub_99			; (72E0)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 184

020A:5300  E8 181D				call	sub_82			; (6B20)
020A:5303  B4 02				mov	ah,2
020A:5305  32 FF				xor	bh,bh			; Zero register
020A:5307  BA 1418				mov	dx,1418h
020A:530A  9A			data_571	db	9Ah
020A:530B  A8 2B				test	al,2Bh			; '+'
020A:530D  8F					db	8Fh
020A:530E  16					push	ss
020A:530F  E8 209E				call	sub_103			; (73B0)
020A:5312  B1 04				mov	cl,4
020A:5314  B3 02				mov	bl,2
020A:5316  BE 06EE				mov	si,6EEh
020A:5319  9A 168F:0620		;*		call	far ptr sub_155		;*(168F:0620)
020A:5319  9A					db	9Ah
020A:531A  0620 168F				dw	620h, 168Fh
020A:531E  3C 1B				cmp	al,1Bh
020A:5320  74			data_572	db	74h
020A:5321  71 80				jno	loc_725			; Jump if not overflw
020A:5323  F9					stc				; Set carry flag
020A:5324  00 75 67				add	[di+67h],dh
020A:5327  B9 0080				mov	cx,80h
020A:532A  BF 06EE				mov	di,6EEh
020A:532D  E8 00A0				call	sub_76			; (53D0)
020A:5330  73 5C				jnc	loc_729			; Jump if carry=0
020A:5332  E8 364F				call	sub_124			; (8984)
020A:5335  26: 89 16 0004			mov	word ptr es:[4],dx	; (1EC4:0004=365Fh)
020A:533A  26: 83 3E 0000 FF			cmp	word ptr es:[0],0FFFFh	; (1EC4:0000=6164h)
020A:5340  75 38				jne	loc_728			; Jump if not equal
020A:5342  33 C0				xor	ax,ax			; Zero register
020A:5344  26: A3 0000				mov	word ptr es:[0],ax	; (1EC4:0000=6164h)
020A:5348  26: A3 0002				mov	word ptr es:[2],ax	; (1EC4:0002=6174h)
020A:534C  26: A3 0000				mov	word ptr es:[0],ax	; (1EC4:0000=6164h)
020A:5350  26: A3 0006				mov	word ptr es:[6],ax	; (1EC4:0006=2020h)
020A:5354  26: A3 0008				mov	word ptr es:[8],ax	; (1EC4:0008=2020h)
020A:5358  26: A2 000E				mov	byte ptr es:[0Eh],al	; (1EC4:000E=20h)
020A:535C  26: 83 3E 000A FF			cmp	word ptr es:[0Ah],0FFFFh	; (1EC4:000A=2020h)
020A:5362  75 0B				jne	loc_727			; Jump if not equal
020A:5364  26: A3 000A				mov	word ptr es:[0Ah],ax	; (1EC4:000A=2020h)
020A:5368  26: C7 06 000C 0041			mov	word ptr es:[0Ch],41h	; (1EC4:000C=3B20h)
020A:536F			loc_727::
020A:536F  80 3E 3040 00			cmp	data_334,0		; (020A:3040=0B3h)
020A:5374  77 04				ja	loc_728			; Jump if above

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_75		proc	near
020A:5376  FE 06 3040				inc	data_334		; (020A:3040=0B3h)
020A:537A			loc_728::
020A:537A  C6 06 1715 01			mov	data_224,1		; (020A:1715=0)
020A:537F  E8 360B				call	sub_125			; (898D)
020A:5382  E8 2CEF				call	sub_116			; (8074)
020A:5385  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (020A:327D=65h)
020A:5389  E8 1C60				call	sub_94			; (6FEC)
020A:538C  EB 0D				jmp	short loc_730		; (539B)
020A:538E			loc_729::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 185

020A:538E  9A 168F:2B10		;*		call	far ptr sub_173		;*(168F:2B10)
020A:538E  9A					db	9Ah
020A:538F  2B10 168F				dw	2B10h, 168Fh
020A:5393  80 26 1715 FD			and	data_224,0FDh		; (020A:1715=0)
020A:5398  E8 1F45				call	sub_99			; (72E0)
020A:539B			loc_730::
020A:539B  E8 1C1A				call	sub_93			; (6FB8)
020A:539E  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:53A2  C6 47 7A 07				mov	byte ptr [bx+7Ah],7
020A:53A6  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:53AA  E8 1FF7				call	sub_102			; (73A4)
020A:53AD  E8 1894				call	sub_83			; (6C44)
020A:53B0  E9 FB58				jmp	loc_687			; (4F0B)
				sub_75		endp

							                        ;* No entry point to code
020A:53B3  E8 35D7				call	sub_125			; (898D)
020A:53B6  B0 41				mov	al,41h			; 'A'
020A:53B8  80 3E 35E6 01			cmp	byte ptr ds:[35E6h],1	; (020A:35E6=0C0h)
020A:53BD  74 02				je	loc_731			; Jump if equal
020A:53BF  B0 4C				mov	al,4Ch			; 'L'
020A:53C1			loc_731::
020A:53C1  E8 0248				call	sub_78			; (560C)
020A:53C4  E8 187D				call	sub_83			; (6C44)
020A:53C7  E9 FB41				jmp	loc_687			; (4F0B)
020A:53CA  00					db	0
020A:53CB  00					db	0
020A:53CC  00					db	0
020A:53CD  00 00				add	[bx+si],al
020A:53CF  00 53 32				add	[bp+di+32h],dl
020A:53D2  DB					db	0DBh
020A:53D3  33 D2				xor	dx,dx			; Zero register
020A:53D5			loc_732::
020A:53D5  80 FB 04				cmp	bl,4
020A:53D8  73 32				jae	loc_736			; Jump if above or =
020A:53DA  8A 05				mov	al,[di]
020A:53DC  3C 40				cmp	al,40h			; '@'
020A:53DE  72 0C				jb	loc_733			; Jump if below
020A:53E0  24 DF				and	al,0DFh
020A:53E2  2C 41				sub	al,41h			; 'A'
020A:53E4  3C 06				cmp	al,6
020A:53E6  73 1F				jae	loc_735			; Jump if above or =
020A:53E8  04 0A				add	al,0Ah
020A:53EA  EB 06				jmp	short loc_734		; (53F2)
020A:53EC			loc_733::
020A:53EC  2C 30				sub	al,30h			; '0'
020A:53EE  3C 09				cmp	al,9
020A:53F0  77 15				ja	loc_735			; Jump if above
020A:53F2			loc_734::
020A:53F2  32 E4				xor	ah,ah			; Zero register
020A:53F4  FE C3				inc	bl
020A:53F6  51					push	cx
020A:53F7  B1 04				mov	cl,4
020A:53F9  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:53FB  59					pop	cx
020A:53FC  03 D0				add	dx,ax
020A:53FE  9A 168F:05A0		;*		call	far ptr sub_154		;*(168F:05A0)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 186

020A:53FE  9A					db	9Ah
020A:53FF  05A0 168F				dw	5A0h, 168Fh
020A:5403  73 D0				jnc	loc_732			; Jump if carry=0
020A:5405  EB 08				jmp	short loc_737		; (540F)
020A:5407			loc_735::
020A:5407  80 FB 01				cmp	bl,1
020A:540A  72 03				jb	loc_737			; Jump if below
020A:540C			loc_736::
020A:540C  F9					stc				; Set carry flag
020A:540D  EB 01				jmp	short loc_738		; (5410)
020A:540F			loc_737::
020A:540F  F8					clc				; Clear carry flag
020A:5410			loc_738::
020A:5410  5B					pop	bx
020A:5411  C3					retn
020A:5412  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_77		proc	near
020A:5414  56					push	si
020A:5415			loc_739::
020A:5415  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:5418  74 0A				je	loc_740			; Jump if equal
020A:541A  80 3C 09				cmp	byte ptr [si],9
020A:541D  74 05				je	loc_740			; Jump if equal
020A:541F  80 3C 3D				cmp	byte ptr [si],3Dh	; '='
020A:5422  75 09				jne	loc_741			; Jump if not equal
020A:5424			loc_740::
020A:5424  46					inc	si
020A:5425  3B 36 509E				cmp	si,word ptr ds:[509Eh]	; (504D:509E=0FFFFh)
020A:5429  76 EA				jbe	loc_739			; Jump if below or =
020A:542B  EB 5D				jmp	short loc_748		; (548A)
020A:542D			loc_741::
020A:542D  33 D2				xor	dx,dx			; Zero register
020A:542F  B5 04				mov	ch,4
020A:5431  8A CD				mov	cl,ch
020A:5433			loc_742::
020A:5433  8A 04				mov	al,[si]
020A:5435  3C 40				cmp	al,40h			; '@'
020A:5437  72 0C				jb	loc_743			; Jump if below
020A:5439  24 DF				and	al,0DFh
020A:543B  2C 41				sub	al,41h			; 'A'
020A:543D  3C 06				cmp	al,6
020A:543F  73 24				jae	loc_747			; Jump if above or =
020A:5441  04 0A				add	al,0Ah
020A:5443  EB 06				jmp	short loc_744		; (544B)
020A:5445			loc_743::
020A:5445  2C 30				sub	al,30h			; '0'
020A:5447  3C 09				cmp	al,9
020A:5449  77 1A				ja	loc_747			; Jump if above
020A:544B			loc_744::
020A:544B  32 E4				xor	ah,ah			; Zero register
020A:544D  03 D0				add	dx,ax
020A:544F  D3 C2				rol	dx,cl			; Rotate
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 187

020A:5451  FE CD				dec	ch
020A:5453  80 FD 00				cmp	ch,0
020A:5456  74 07				je	loc_745			; Jump if equal
020A:5458  46					inc	si
020A:5459  3B 36 509E				cmp	si,word ptr ds:[509Eh]	; (504D:509E=0FFFFh)
020A:545D  76 D4				jbe	loc_742			; Jump if below or =
020A:545F			loc_745::
020A:545F  46					inc	si
020A:5460			loc_746::
020A:5460  D3 CA				ror	dx,cl			; Rotate
020A:5462  58					pop	ax
020A:5463  F8					clc				; Clear carry flag
020A:5464  C3					retn
020A:5465			loc_747::
020A:5465  80 FD 04				cmp	ch,4
020A:5468  74 20				je	loc_748			; Jump if equal
020A:546A  8A 04				mov	al,[si]
020A:546C  3C 20				cmp	al,20h			; ' '
020A:546E  74 F0				je	loc_746			; Jump if equal
020A:5470  3C 09				cmp	al,9
020A:5472  74 EC				je	loc_746			; Jump if equal
020A:5474  3C 00				cmp	al,0
020A:5476  74 E8				je	loc_746			; Jump if equal
020A:5478  3C 2C				cmp	al,2Ch			; ','
020A:547A  74 E4				je	loc_746			; Jump if equal
020A:547C  3C 3A				cmp	al,3Ah			; ':'
020A:547E  74 E0				je	loc_746			; Jump if equal
020A:5480  3C 3B				cmp	al,3Bh			; ';'
020A:5482  74 DC				je	loc_746			; Jump if equal
020A:5484  24 DF				and	al,0DFh
020A:5486  3C 48				cmp	al,48h			; 'H'
020A:5488  74 D6				je	loc_746			; Jump if equal
020A:548A			loc_748::
020A:548A  F9					stc				; Set carry flag
020A:548B  5E					pop	si
020A:548C  C3					retn
				sub_77		endp

020A:548D  00 00				add	[bx+si],al
020A:548F  00 BA 8005				add	[bp+si-7FFBh],bh
020A:5493  BB 04F0				mov	bx,4F0h
020A:5496  E8 ECB7				call	sub_42			; (4150)
020A:5499  C3					retn
020A:549A  00					db	0
020A:549B  00					db	0
020A:549C  00					db	0
							                        ;* No entry point to code
020A:549D  00 00				add	[bx+si],al
020A:549F  00 F7				add	bh,dh
020A:54A1  06					push	es
020A:54A2  19 4E 02				sbb	[bp+2],cx
020A:54A5  00 74 02				add	[si+2],dh
020A:54A8			loc_749::
020A:54A8  EB 7B				jmp	short loc_757		; (5525)
020A:54AA			loc_750::
020A:54AA  8A 04				mov	al,[si]
020A:54AC  8A E0				mov	ah,al
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 188

020A:54AE  3C 00				cmp	al,0
020A:54B0  74 F6				je	loc_749			; Jump if equal
020A:54B2  24 5F				and	al,5Fh			; '_'
020A:54B4  3C 41				cmp	al,41h			; 'A'
020A:54B6  72 F0				jb	loc_749			; Jump if below
020A:54B8  3C 5A				cmp	al,5Ah			; 'Z'
020A:54BA  77 EC				ja	loc_749			; Jump if above
020A:54BC  3C 50				cmp	al,50h			; 'P'
020A:54BE  77 1E				ja	loc_752			; Jump if above
020A:54C0  2C 41				sub	al,41h			; 'A'
020A:54C2  BB 8000				mov	bx,8000h
020A:54C5  8A C8				mov	cl,al
020A:54C7  D3 CB				ror	bx,cl			; Rotate
020A:54C9  8B 16 4E22				mov	dx,data_553		; (020A:4E22=4788h)
020A:54CD  0B D3				or	dx,bx
020A:54CF  F6 C4 20				test	ah,20h			; ' '
020A:54D2  74 04				jz	loc_751			; Jump if zero
020A:54D4  F7 D3				not	bx
020A:54D6  23 D3				and	dx,bx
020A:54D8			loc_751::
020A:54D8  89 16 4E22				mov	data_553,dx		; (020A:4E22=4788h)
020A:54DC  EB 44				jmp	short loc_756		; (5522)
020A:54DE			loc_752::
020A:54DE  3C 54				cmp	al,54h			; 'T'
020A:54E0  77 24				ja	loc_754			; Jump if above
020A:54E2  80 3E 35E6 00			cmp	byte ptr ds:[35E6h],0	; (020A:35E6=0C0h)
020A:54E7  74 39				je	loc_756			; Jump if equal
020A:54E9  2C 51				sub	al,51h			; 'Q'
020A:54EB  B3 04				mov	bl,4
020A:54ED  8A C8				mov	cl,al
020A:54EF  D2 CB				ror	bl,cl			; Rotate
020A:54F1  8A 16 4E7F				mov	dl,data_557		; (020A:4E7F=0A4h)
020A:54F5  0A D3				or	dl,bl
020A:54F7  F6 C4 20				test	ah,20h			; ' '
020A:54FA  74 04				jz	loc_753			; Jump if zero
020A:54FC  F6 D3				not	bl
020A:54FE  22 D3				and	dl,bl
020A:5500			loc_753::
020A:5500  88 16 4E7F				mov	data_557,dl		; (020A:4E7F=0A4h)
020A:5504  77 1C				ja	loc_756			; Jump if above
020A:5506			loc_754::
020A:5506  2C 55				sub	al,55h			; 'U'
020A:5508  BB 0080				mov	bx,80h
020A:550B  8A C8				mov	cl,al
020A:550D  D3 CB				ror	bx,cl			; Rotate
020A:550F  8B 16 4E24				mov	dx,data_554		; (020A:4E24=885Ah)
020A:5513  0B D3				or	dx,bx
020A:5515  F6 C4 20				test	ah,20h			; ' '
020A:5518  74 04				jz	loc_755			; Jump if zero
020A:551A  F7 D3				not	bx
020A:551C  23 D3				and	dx,bx
020A:551E			loc_755::
020A:551E  89 16 4E24				mov	data_554,dx		; (020A:4E24=885Ah)
020A:5522			loc_756::
020A:5522  46					inc	si
020A:5523  EB 85				jmp	short loc_750		; (54AA)
020A:5525			loc_757::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 189

020A:5525  A0 2B3B				mov	al,data_289		; (020A:2B3B=0A0h)
020A:5528  F6 06 4E7F 07			test	data_557,7		; (020A:4E7F=0A4h)
020A:552D  74 0C				jz	loc_758			; Jump if zero
020A:552F  80 3E 2B3B 0A			cmp	data_289,0Ah		; (020A:2B3B=0A0h)
020A:5534  73 05				jae	loc_758			; Jump if above or =
020A:5536  B0 0A				mov	al,0Ah
020A:5538  E8 2231				call	sub_110			; (776C)
020A:553B			loc_758::
020A:553B  E8 1F06				call	sub_105			; (7444)
020A:553E  F7 06 4E22 0002			test	data_553,2		; (020A:4E22=4788h)
020A:5544  74 07				jz	loc_759			; Jump if zero
020A:5546  B0 01				mov	al,1
020A:5548  9A 168F:45B8		;*		call	far ptr sub_194		;*(168F:45B8)
020A:5548  9A					db	9Ah
020A:5549  45B8 168F				dw	45B8h, 168Fh
020A:554D			loc_759::
020A:554D  C3					retn
							                        ;* No entry point to code
020A:554E  87 DB				xchg	bx,bx
020A:5550  80 3E 5614 01			cmp	byte ptr data_578,1	; (020A:5614=2Eh)
020A:5555  75 07				jne	loc_760			; Jump if not equal
020A:5557  C6 06 4FD6 12			mov	data_567,12h		; (020A:4FD6=75h)
020A:555C  EB 28				jmp	short loc_762		; (5586)
020A:555E			loc_760::
020A:555E  89 36 509E				mov	word ptr ds:[509Eh],si	; (020A:509E=0F6D3h)
020A:5562  8B 1E 4F94				mov	bx,word ptr ds:[4F94h]	; (020A:4F94=810Bh)
020A:5566  01 1E 509E				add	word ptr ds:[509Eh],bx	; (020A:509E=0F6D3h)
020A:556A  E8 FEA7				call	sub_77			; (5414)
020A:556D  72 12				jc	loc_761			; Jump if carry Set
020A:556F  E8 3439				call	sub_130			; (89AB)
020A:5572  3B D0				cmp	dx,ax
020A:5574  72 0B				jb	loc_761			; Jump if below
020A:5576  89 16 3035				mov	data_327,dx		; (020A:3035=3200h)
020A:557A  2E: 89 16 38A7			mov	cs:data_466,dx		; (020A:38A7=244h)
020A:557F  EB 05				jmp	short loc_762		; (5586)
020A:5581			loc_761::
020A:5581  C6 06 4FD6 31			mov	data_567,31h		; (020A:4FD6=75h) '1'
020A:5586			loc_762::
020A:5586  C3					retn
							                        ;* No entry point to code
020A:5587  90					nop
020A:5588  B4 01				mov	ah,1
020A:558A  3C 46				cmp	al,46h			; 'F'
020A:558C  74 37				je	loc_763			; Jump if equal
020A:558E  FE C4				inc	ah
020A:5590  3C 43				cmp	al,43h			; 'C'
020A:5592  74 31				je	loc_763			; Jump if equal
020A:5594  FE C4				inc	ah
020A:5596  3C 45				cmp	al,45h			; 'E'
020A:5598  74 2B				je	loc_763			; Jump if equal
020A:559A  FE C4				inc	ah
020A:559C  3C 5A				cmp	al,5Ah			; 'Z'
020A:559E  74 25				je	loc_763			; Jump if equal
020A:55A0  FE C4				inc	ah
020A:55A2  3C 44				cmp	al,44h			; 'D'
020A:55A4  74 1F				je	loc_763			; Jump if equal
020A:55A6  FE C4				inc	ah
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 190

020A:55A8  3C 4F				cmp	al,4Fh			; 'O'
020A:55AA  74 19				je	loc_763			; Jump if equal
020A:55AC  FE C4				inc	ah
020A:55AE  3C 53				cmp	al,53h			; 'S'
020A:55B0  74 13				je	loc_763			; Jump if equal
020A:55B2  FE C4				inc	ah
020A:55B4  3C 57				cmp	al,57h			; 'W'
020A:55B6  74 0D				je	loc_763			; Jump if equal
020A:55B8  FE C4				inc	ah
020A:55BA  3C 4E				cmp	al,4Eh			; 'N'
020A:55BC  74 07				je	loc_763			; Jump if equal
020A:55BE  C6 06 4FD6 09			mov	data_567,9		; (020A:4FD6=75h)
020A:55C3  EB 0E				jmp	short loc_764		; (55D3)
020A:55C5			loc_763::
020A:55C5  88 26 327F				mov	byte ptr data_380,ah	; (020A:327F='uineIntel')
020A:55C9  9A 168F:0850		;*		call	far ptr sub_160		;*(168F:0850)
020A:55C9  9A					db	9Ah
020A:55CA  0850 168F				dw	850h, 168Fh
020A:55CE  9A 168F:2B70		;*		call	far ptr sub_175		;*(168F:2B70)
020A:55CE  9A					db	9Ah
020A:55CF  2B70 168F				dw	2B70h, 168Fh
020A:55D3			loc_764::
020A:55D3  C3					retn
							                        ;* No entry point to code
020A:55D4  3C 41				cmp	al,41h			; 'A'
020A:55D6  72 2C				jb	loc_765			; Jump if below
020A:55D8  3C 5A				cmp	al,5Ah			; 'Z'
020A:55DA  77 28				ja	loc_765			; Jump if above
020A:55DC  8A D0				mov	dl,al
020A:55DE  80 EA 41				sub	dl,41h			; 'A'
020A:55E1  8A DA				mov	bl,dl
020A:55E3  B4 19				mov	ah,19h
020A:55E5  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:55E7  50					push	ax
020A:55E8  B4 0E				mov	ah,0Eh
020A:55EA  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:55EC  B4 19				mov	ah,19h
020A:55EE  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:55F0  A2 30CE				mov	data_372,al		; (020A:30CE=31h)
020A:55F3  04 61				add	al,61h			; 'a'
020A:55F5  A2 066E				mov	byte ptr ds:[66Eh],al	; (020A:066E=0Eh)
020A:55F8  E8 17D5				call	sub_90			; (6DD0)
020A:55FB  58					pop	ax
020A:55FC  8A D0				mov	dl,al
020A:55FE  B4 0E				mov	ah,0Eh
020A:5600  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:5602  EB 05				jmp	short loc_766		; (5609)
020A:5604			loc_765::
020A:5604  06C6			data_576	dw	6C6h
020A:5606  D6					db	0D6h
020A:5607  4F					dec	di
020A:5608  09 C3				or	bx,ax
020A:560A  87 DB				xchg	bx,bx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 191


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_78		proc	near
020A:560C  50					push	ax
020A:560D  BF 036A				mov	di,36Ah
020A:5610  B9 0009				mov	cx,9
020A:5613  B0			data_577	db	0B0h
020A:5614  2E			data_578	db	2Eh
020A:5615  FC					cld				; Clear direction
020A:5616  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:5618  584F			data_579	dw	584Fh
020A:561A  3C 4C				cmp	al,4Ch			; 'L'
020A:561C  74 0C				je	loc_767			; Jump if equal
020A:561E  3C 41				cmp	al,41h			; 'A'
020A:5620  74 0B				je	loc_768			; Jump if equal
020A:5622  C6 06 4FD6 09			mov	data_567,9		; (020A:4FD6=75h)
020A:5627  E9 0117				jmp	loc_778			; (5741)
020A:562A			loc_767::
020A:562A  E9 009B				jmp	loc_773			; (56C8)
020A:562D			loc_768::
020A:562D  F6 06 14FA 80			test	data_207,80h		; (020A:14FA=0)
020A:5632  75 05				jnz	loc_769			; Jump if not zero
020A:5634  C6 06 14FA 02			mov	data_207,2		; (020A:14FA=0)
020A:5639			loc_769::
020A:5639  C6 06 35E6 00			mov	byte ptr ds:[35E6h],0	; (020A:35E6=0C0h)
020A:563E  9A 168F:26A0		;*		call	far ptr sub_168		;*(168F:26A0)
020A:563E  9A					db	9Ah
020A:563F  26A0 168F				dw	26A0h, 168Fh
020A:5643  8B 1E 1326				mov	bx,data_199		; (020A:1326=0)
020A:5647  C6 47 30 00				mov	byte ptr [bx+30h],0
020A:564B  C6 47 33 00				mov	byte ptr [bx+33h],0
020A:564F  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:5653  C6 47 65 00				mov	byte ptr [bx+65h],0
020A:5657  C6 47 66 00				mov	byte ptr [bx+66h],0
020A:565B  C6 47 69 00				mov	byte ptr [bx+69h],0
020A:565F  C6 47 6A 00				mov	byte ptr [bx+6Ah],0
020A:5663  C6 47 6B 00				mov	byte ptr [bx+6Bh],0
020A:5667  C6 47 6C 00				mov	byte ptr [bx+6Ch],0
020A:566B  C6 47 70 00				mov	byte ptr [bx+70h],0
020A:566F  C6 47 71 00				mov	byte ptr [bx+71h],0
020A:5673  C6 47 7B 00				mov	byte ptr [bx+7Bh],0
020A:5677  C6 47 4A 00				mov	byte ptr [bx+4Ah],0
020A:567B  C6 06 4E7F 00			mov	data_557,0		; (020A:4E7F=0A4h)
020A:5680  B9 000D				mov	cx,0Dh
020A:5683  BF 13E8				mov	di,13E8h
020A:5686  A0 13E4				mov	al,data_204		; (020A:13E4=0)

020A:5689			locloop_770::
020A:5689  3A 05				cmp	al,[di]
020A:568B  74 05				je	loc_771			; Jump if equal
020A:568D  83 C7 10				add	di,10h
020A:5690  E2 F7				loop	locloop_770		; Loop if cx > 0

020A:5692			loc_771::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 192

020A:5692  81 7D 01 4F4E			cmp	word ptr [di+1],4F4Eh
020A:5697  75 1D				jne	loc_772			; Jump if not equal
020A:5699  BF 13E8				mov	di,13E8h
020A:569C  81 C7 00C0				add	di,0C0h
020A:56A0  8A 45 0D				mov	al,[di+0Dh]
020A:56A3  A2 13E5				mov	data_205,al		; (020A:13E5=0)
020A:56A6  8A 05				mov	al,[di]
020A:56A8  A2 13E4				mov	data_204,al		; (020A:13E4=0)
020A:56AB  8B 45 0B				mov	ax,[di+0Bh]
020A:56AE  A3 13E6				mov	data_206,ax		; (020A:13E6=0)
020A:56B1  9A 168F:2B34		;*		call	far ptr sub_174		;*(168F:2B34)
020A:56B1  9A					db	9Ah
020A:56B2  2B34 168F				dw	2B34h, 168Fh
020A:56B6			loc_772::
020A:56B6  80 26 35E4 FE			and	data_436,0FEh		; (020A:35E4=46h)
020A:56BB  C032			data_583	dw	0C032h
020A:56BD  D89A			data_584	dw	0D89Ah
020A:56BF  09			data_585	db	9
020A:56C0  8F			data_586	db	8Fh
020A:56C1  16			data_587	db	16h
020A:56C2  C6			data_588	db	0C6h
020A:56C3  47					inc	di
020A:56C4  48					dec	ax
020A:56C5  00 EB				add	bl,ch
020A:56C7  65					db	65h
020A:56C8			loc_773::
020A:56C8  F6 06 14FA 80			test	data_207,80h		; (020A:14FA=0)
020A:56CD  75 05				jnz	loc_774			; Jump if not zero
020A:56CF  C6 06 14FA 00			mov	data_207,0		; (020A:14FA=0)
020A:56D4			loc_774::
020A:56D4  C6 06 35E6 01			mov	byte ptr ds:[35E6h],1	; (020A:35E6=0C0h)
020A:56D9  9A 168F:26A0		;*		call	far ptr sub_168		;*(168F:26A0)
020A:56D9  9A					db	9Ah
020A:56DA  26A0 168F				dw	26A0h, 168Fh
020A:56DE  A0 1209				mov	al,data_193		; (020A:1209=0)
020A:56E1  8B 1E 1326				mov	bx,data_199		; (020A:1326=0)
020A:56E5  C6 47 30 0F				mov	byte ptr [bx+30h],0Fh
020A:56E9  C6 47 33 0F				mov	byte ptr [bx+33h],0Fh
020A:56ED  C6 47 34 0F				mov	byte ptr [bx+34h],0Fh
020A:56F1  88 47 65				mov	[bx+65h],al
020A:56F4  C6 47 66 07				mov	byte ptr [bx+66h],7
020A:56F8  C6 47 69 07				mov	byte ptr [bx+69h],7
020A:56FC  C6 47 6A 07				mov	byte ptr [bx+6Ah],7
020A:5700  C6 47 6B 07				mov	byte ptr [bx+6Bh],7
020A:5704  C6 47 6C 07				mov	byte ptr [bx+6Ch],7
020A:5708  88 47 70				mov	[bx+70h],al
020A:570B  C6 47 71 07				mov	byte ptr [bx+71h],7
020A:570F  C6 47 7B 07				mov	byte ptr [bx+7Bh],7
020A:5713  F6 06 35E3 01			test	data_435,1		; (020A:35E3=46h)
020A:5718  75 04				jnz	loc_776			; Jump if not zero
020A:571A  C6 47 4A 07				mov	byte ptr [bx+4Ah],7
020A:571E			loc_776::
020A:571E  E8 1D23				call	sub_105			; (7444)
020A:5721  80 0E 35E4 01			or	data_436,1		; (020A:35E4=46h)
020A:5726  B0 01				mov	al,1
020A:5728  9A 168F:09D8		;*		call	far ptr sub_163		;*(168F:09D8)
020A:5728  9A					db	9Ah
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 193

020A:5729  09D8 168F				dw	9D8h, 168Fh
020A:572D			loc_777::
020A:572D  E8 1544				call	sub_85			; (6C74)
020A:5730  BF 3233				mov	di,3233h
020A:5733  B9 003F				mov	cx,3Fh
020A:5736  B0 2E				mov	al,2Eh			; '.'
020A:5738  FC					cld				; Clear direction
020A:5739  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:573B  4F					dec	di
020A:573C  9A 168F:26A0		;*		call	far ptr sub_168		;*(168F:26A0)
020A:573C  9A					db	9Ah
020A:573D  26A0 168F				dw	26A0h, 168Fh
020A:5741			loc_778::
020A:5741  C3					retn
				sub_78		endp

							                        ;* No entry point to code
020A:5742  87 DB				xchg	bx,bx
020A:5744  C6 06 4F13 01			mov	byte ptr ds:[4F13h],1	; (020A:4F13=1)
020A:5749  C3					retn
							                        ;* No entry point to code
020A:574A  87 DB				xchg	bx,bx
020A:574C  8B 1E 4F94				mov	bx,word ptr ds:[4F94h]	; (020A:4F94=810Bh)
020A:5750  80 3E 35E6 00			cmp	byte ptr ds:[35E6h],0	; (020A:35E6=0C0h)
020A:5755  74 1B				je	loc_780			; Jump if equal
020A:5757  BF 0378				mov	di,378h
020A:575A  B9 0021				mov	cx,21h
020A:575D  B0 20				mov	al,20h			; ' '
020A:575F  FC					cld				; Clear direction
020A:5760  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:5762  B9 0020				mov	cx,20h
020A:5765  83 FB 20				cmp	bx,20h
020A:5768  77 02				ja	loc_779			; Jump if above
020A:576A  8B CB				mov	cx,bx
020A:576C			loc_779::
020A:576C  BF 0378				mov	di,378h
020A:576F  FC					cld				; Clear direction
020A:5770  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5772			loc_780::
020A:5772  C3					retn
							                        ;* No entry point to code
020A:5773  90					nop
020A:5774  8B 1E 4F94				mov	bx,word ptr ds:[4F94h]	; (020A:4F94=810Bh)
020A:5778  83 FB 00				cmp	bx,0
020A:577B  75 08				jne	loc_781			; Jump if not equal
020A:577D  C6 06 4FD6 09			mov	data_567,9		; (020A:4FD6=75h)
020A:5782  E9 00BC				jmp	loc_790			; (5841)
020A:5785			loc_781::
020A:5785  80 3C 3F				cmp	byte ptr [si],3Fh	; '?'
020A:5788  74 1D				je	loc_782			; Jump if equal
020A:578A  8B FE				mov	di,si
020A:578C  B0 00				mov	al,0
020A:578E  9A 168F:2724		;*		call	far ptr sub_170		;*(168F:2724)
020A:578E  9A					db	9Ah
020A:578F  2724 168F				dw	2724h, 168Fh
020A:5793  9A 168F:27AC		;*		call	far ptr sub_171		;*(168F:27AC)
020A:5793  9A					db	9Ah
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 194

020A:5794  27AC 168F				dw	27ACh, 168Fh
020A:5798  A2 327E				mov	data_379,al		; (020A:327E=6Eh)
020A:579B  3C 01				cmp	al,1
020A:579D  77 12				ja	loc_783			; Jump if above
020A:579F  C6 06 4FD6 09			mov	data_567,9		; (020A:4FD6=75h)
020A:57A4  E9 009A				jmp	loc_790			; (5841)
020A:57A7			loc_782::
020A:57A7  80 3E 327E 01			cmp	data_379,1		; (020A:327E=6Eh)
020A:57AC  77 25				ja	loc_784			; Jump if above
020A:57AE  E9 009D				jmp	loc_791			; (584E)
020A:57B1			loc_783::
020A:57B1  BF 31F0				mov	di,31F0h
020A:57B4  B9 0040				mov	cx,40h
020A:57B7  B0 00				mov	al,0
020A:57B9  FC					cld				; Clear direction
020A:57BA  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:57BC  BF 0649				mov	di,649h
020A:57BF  B9 000C				mov	cx,0Ch
020A:57C2  B0 20				mov	al,20h			; ' '
020A:57C4  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:57C6  BF 31F0				mov	di,31F0h
020A:57C9  8B CB				mov	cx,bx
020A:57CB  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:57CD  4F					dec	di
020A:57CE  9A 168F:7270		;*		call	far ptr sub_202		;*(168F:7270)
020A:57CE  9A					db	9Ah
020A:57CF  7270 168F				dw	7270h, 168Fh
020A:57D3			loc_784::
020A:57D3  80 3E 3031 03			cmp	data_324,3		; (020A:3031=0)
020A:57D8  75 05				jne	loc_785			; Jump if not equal
020A:57DA  C6 06 3031 04			mov	data_324,4		; (020A:3031=0)
020A:57DF			loc_785::
020A:57DF  E8 5522				call	sub_144			; (AD04)
020A:57E2  73 05				jnc	loc_786			; Jump if carry=0
020A:57E4  A2 4FD6				mov	data_567,al		; (020A:4FD6=75h)
020A:57E7  EB 58				jmp	short loc_790		; (5841)
020A:57E9			loc_786::
020A:57E9  C6 06 5614 01			mov	data_578,1		; (020A:5614=2Eh)
020A:57EE  80 3E 2B38 01			cmp	data_287,1		; (020A:2B38=0E5h)
020A:57F3  74 05				je	loc_787			; Jump if equal
020A:57F5  B0 0A				mov	al,0Ah
020A:57F7  E8 1F72				call	sub_110			; (776C)
020A:57FA			loc_787::
020A:57FA  E8 3187				call	sub_124			; (8984)
020A:57FD  BE 0000				mov	si,0
020A:5800  BB 291D				mov	bx,291Dh
020A:5803  B9 00FA				mov	cx,0FAh
020A:5806  32 D2				xor	dl,dl			; Zero register

020A:5808			locloop_788::
020A:5808  26: 8B 04				mov	ax,es:[si]
020A:580B  26: 89 07				mov	es:[bx],ax
020A:580E  3D FFFF				cmp	ax,0FFFFh
020A:5811  74 02				je	loc_789			; Jump if equal
020A:5813  FE C2				inc	dl
020A:5815			loc_789::
020A:5815  83 C6 15				add	si,15h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 195

020A:5818  43					inc	bx
020A:5819  43					inc	bx
020A:581A  E2 EC				loop	locloop_788		; Loop if cx > 0

020A:581C  88 16 3042				mov	data_335,dl		; (020A:3042=0CFh)
020A:5820  80 3E 3031 04			cmp	data_324,4		; (020A:3031=0)
020A:5825  75 1A				jne	loc_790			; Jump if not equal
020A:5827  FE 0E 3031				dec	data_324		; (020A:3031=0)
020A:582B  BF 0000				mov	di,0
020A:582E  A0 3040				mov	al,data_334		; (020A:3040=0B3h)
020A:5831  B4 15				mov	ah,15h
020A:5833  F6 E4				mul	ah			; ax = reg * al
020A:5835  8B C8				mov	cx,ax
020A:5837  B0 FF				mov	al,0FFh
020A:5839  FC					cld				; Clear direction
020A:583A  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:583C  C6 06 3040 00			mov	data_334,0		; (020A:3040=0B3h)
020A:5841			loc_790::
020A:5841  E8 3149				call	sub_125			; (898D)
020A:5844  51					push	cx
020A:5845  2AB4					dw	2AB4h
020A:5847  E8 17A2				call	sub_94			; (6FEC)
020A:584A  E8 140F				call	sub_84			; (6C5C)
020A:584D  59					pop	cx
020A:584E			loc_791::
020A:584E  C3					retn
							                        ;* No entry point to code
020A:584F  90					nop
020A:5850  89 36 509E				mov	word ptr ds:[509Eh],si	; (020A:509E=0F6D3h)
020A:5854  8B 1E 4F94				mov	bx,word ptr ds:[4F94h]	; (020A:4F94=810Bh)
020A:5858  01 1E 509E				add	word ptr ds:[509Eh],bx	; (020A:509E=0F6D3h)
020A:585C  E8 FBB5				call	sub_77			; (5414)
020A:585F  72 2B				jc	loc_792			; Jump if carry Set
020A:5861  89 16 35E9				mov	word ptr ds:[35E9h],dx	; (020A:35E9=3A01h)
020A:5865  89 16 35EB				mov	word ptr ds:[35EBh],dx	; (020A:35EB=2606h)
020A:5869  83 26 35EB E7			and	word ptr ds:[35EBh],0FFE7h	; (020A:35EB=2606h)
020A:586E  88			data_591	db	88h
020A:586F  36					db	36h
020A:5870  D4 53		;*		aam	53h			; 'S' undocumented inst
020A:5870  D4 53				db	0D4h, 53h
020A:5872  F7 06 35E9 0002			test	word ptr ds:[35E9h],2	; (020A:35E9=3A01h)
020A:5878  74 17				jz	loc_793			; Jump if zero
020A:587A  BF 338A				mov	di,338Ah
020A:587D  83 EF 03				sub	di,3
020A:5880  B9 0004				mov	cx,4
020A:5883  2B F9				sub	di,cx
020A:5885  B0 58				mov	al,58h			; 'X'
020A:5887  FC					cld				; Clear direction
020A:5888  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:588A  EB 05				jmp	short loc_793		; (5891)
020A:588C			loc_792::
020A:588C  C6 06 4FD6 09			mov	data_567,9		; (020A:4FD6=75h)
020A:5891			loc_793::
020A:5891  C3					retn
							                        ;* No entry point to code
020A:5892  87 DB				xchg	bx,bx
020A:5894  80 3E 5614 01			cmp	data_578,1		; (020A:5614=2Eh)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 196

020A:5899  75 07				jne	loc_794			; Jump if not equal
020A:589B  C6 06 4FD6 12			mov	data_567,12h		; (020A:4FD6=75h)
020A:58A0  EB 2B				jmp	short loc_797		; (58CD)
020A:58A2			loc_794::
020A:58A2  B4 01				mov	ah,1
020A:58A4  3C 46				cmp	al,46h			; 'F'
020A:58A6  74 16				je	loc_795			; Jump if equal
020A:58A8  FE C4				inc	ah
020A:58AA  3C 42				cmp	al,42h			; 'B'
020A:58AC  74 10				je	loc_795			; Jump if equal
020A:58AE  FE C4				inc	ah
020A:58B0  3C 44				cmp	al,44h			; 'D'
020A:58B2  74 0A				je	loc_795			; Jump if equal
020A:58B4  2C 31				sub	al,31h			; '1'
020A:58B6  3C 02				cmp	al,2
020A:58B8  77 0E				ja	loc_796			; Jump if above
020A:58BA  FE C0				inc	al
020A:58BC  8A E0				mov	ah,al
020A:58BE			loc_795::
020A:58BE  88 26 3031				mov	data_324,ah		; (020A:3031=0)
020A:58C2  88 26 3032				mov	data_325,ah		; (020A:3032=0)
020A:58C6  EB 05				jmp	short loc_797		; (58CD)
020A:58C8			loc_796::
020A:58C8  C6 06 4FD6 09			mov	data_567,9		; (020A:4FD6=75h)
020A:58CD			loc_797::
020A:58CD  C3					retn
							                        ;* No entry point to code
020A:58CE  87 DB				xchg	bx,bx
020A:58D0  32 E4				xor	ah,ah			; Zero register
020A:58D2  3C 44				cmp	al,44h			; 'D'
020A:58D4  74 1D				je	loc_798			; Jump if equal
020A:58D6  FE C4				inc	ah
020A:58D8  3C 5A				cmp	al,5Ah			; 'Z'
020A:58DA  74 17				je	loc_798			; Jump if equal
020A:58DC  FE C4				inc	ah
020A:58DE  3C 53				cmp	al,53h			; 'S'
020A:58E0  74 11				je	loc_798			; Jump if equal
020A:58E2  FE C4				inc	ah
020A:58E4  3C 4C				cmp	al,4Ch			; 'L'
020A:58E6  74 0B				je	loc_798			; Jump if equal
020A:58E8  3C 4E				cmp	al,4Eh			; 'N'
020A:58EA  74 07				je	loc_798			; Jump if equal
020A:58EC  C6 06 4FD6 09			mov	data_567,9		; (020A:4FD6=75h)
020A:58F1  EB 0A				jmp	short loc_799		; (58FD)
020A:58F3			loc_798::
020A:58F3  88 26 15D0				mov	data_211,ah		; (020A:15D0=0)
020A:58F7  E8 1B9A				call	sub_106			; (7494)
020A:58FA  E8 0364				call	sub_79			; (5C61)
020A:58FD			loc_799::
020A:58FD  C3					retn
							                        ;* No entry point to code
020A:58FE  87 DB				xchg	bx,bx
020A:5900  3C 41				cmp	al,41h			; 'A'
020A:5902  75 07				jne	loc_800			; Jump if not equal
020A:5904  80 0E 30B2 80			or	byte ptr data_366,80h	; (020A:30B2='TA=C:\DOCU')
020A:5909  EB 0E				jmp	short loc_801		; (5919)
020A:590B			loc_800::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 197

020A:590B  80 26 30B2 7F			and	byte ptr data_366,7Fh	; (020A:30B2='TA=C:\DOCU')
020A:5910  8A 44 01				mov	al,[si+1]
020A:5913  24 5F				and	al,5Fh			; '_'
020A:5915  3C 4E				cmp	al,4Eh			; 'N'
020A:5917  74 08				je	loc_802			; Jump if equal
020A:5919			loc_801::
020A:5919  C6 06 30B0 00			mov	data_365,0		; (020A:30B0=44h)
020A:591E  E9 0256				jmp	loc_835			; (5B77)
020A:5921			loc_802::
020A:5921  C6 06 30B0 01			mov	data_365,1		; (020A:30B0=44h)
020A:5926  E9 024E				jmp	loc_835			; (5B77)
							                        ;* No entry point to code
020A:5929  87 DB				xchg	bx,bx
020A:592B  90					nop
020A:592C  A0 4E90				mov	al,byte ptr ds:[4E90h]	; (020A:4E90=22h)
020A:592F  24 DF				and	al,0DFh
020A:5931  3C 41				cmp	al,41h			; 'A'
020A:5933  75 0D				jne	loc_803			; Jump if not equal
020A:5935  C6 06 35E3 01			mov	data_435,1		; (020A:35E3=46h)
020A:593A  8B 1E 1326				mov	bx,data_199		; (020A:1326=0)
020A:593E  C6 47 4A 00				mov	byte ptr [bx+4Ah],0
020A:5942			loc_803::
020A:5942  C3					retn
							                        ;* No entry point to code
020A:5943  90					nop
020A:5944  8B 1E 4F94				mov	bx,word ptr ds:[4F94h]	; (020A:4F94=810Bh)
020A:5948  83 FB 00				cmp	bx,0
020A:594B  75 08				jne	loc_804			; Jump if not equal
020A:594D  C6 06 4FD6 09			mov	data_567,9		; (020A:4FD6=75h)
020A:5952  E9 0090				jmp	loc_810			; (59E5)
020A:5955			loc_804::
020A:5955  FC					cld				; Clear direction
020A:5956  BF 3233				mov	di,3233h
020A:5959  B9 0029				mov	cx,29h
020A:595C  B0 00				mov	al,0
020A:595E  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:5960  BF 036A				mov	di,36Ah
020A:5963  B9 000C				mov	cx,0Ch
020A:5966  B0 20				mov	al,20h			; ' '
020A:5968  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:596A  BF 3233				mov	di,3233h
020A:596D  8B CB				mov	cx,bx

020A:596F			locloop_805::
020A:596F  80 3C 2E				cmp	byte ptr [si],2Eh	; '.'
020A:5972  74 03				je	loc_806			; Jump if equal
020A:5974  A4					movsb				; Mov [si] to es:[di]
020A:5975  E2 F8				loop	locloop_805		; Loop if cx > 0

020A:5977			loc_806::
020A:5977  2B D9				sub	bx,cx
020A:5979  9A 168F:26A0		;*		call	far ptr sub_168		;*(168F:26A0)
020A:5979  9A					db	9Ah
020A:597A  26A0 168F				dw	26A0h, 168Fh
020A:597E  83 C3 04				add	bx,4
020A:5981  47					inc	di
020A:5982  8B CB				mov	cx,bx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 198

020A:5984			loc_807::
020A:5984  8A 05				mov	al,[di]
020A:5986  3C 3A				cmp	al,3Ah			; ':'
020A:5988  74 0D				je	loc_808			; Jump if equal
020A:598A  3C 5C				cmp	al,5Ch			; '\'
020A:598C  74 09				je	loc_808			; Jump if equal
020A:598E  83 F9 01				cmp	cx,1
020A:5991  76 06				jbe	loc_809			; Jump if below or =
020A:5993  49					dec	cx
020A:5994  4F					dec	di
020A:5995  EB ED				jmp	short loc_807		; (5984)
020A:5997			loc_808::
020A:5997  47					inc	di
020A:5998  41					inc	cx
020A:5999			loc_809::
020A:5999  2B D9				sub	bx,cx
020A:599B  8B CB				mov	cx,bx
020A:599D  41					inc	cx
020A:599E  83 F9 0C				cmp	cx,0Ch
020A:59A1  77 42				ja	loc_810			; Jump if above
020A:59A3  8B F7				mov	si,di
020A:59A5  BF 036A				mov	di,36Ah
020A:59A8  FC					cld				; Clear direction
020A:59A9  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:59AB  80 3E 3234 3A			cmp	byte ptr data_376,3Ah	; (020A:3234='RCHITECTURE=x86') ':'
020A:59B0  75 33				jne	loc_810			; Jump if not equal
020A:59B2  A0 3233				mov	al,data_375		; (020A:3233=41h)
020A:59B5  24 5F				and	al,5Fh			; '_'
020A:59B7  3C 41				cmp	al,41h			; 'A'
020A:59B9  72 2A				jb	loc_810			; Jump if below
020A:59BB  3C 5A				cmp	al,5Ah			; 'Z'
020A:59BD  77 26				ja	loc_810			; Jump if above
020A:59BF  8A D0				mov	dl,al
020A:59C1  80 EA 41				sub	dl,41h			; 'A'
020A:59C4  8A DA				mov	bl,dl
020A:59C6  B4 19				mov	ah,19h
020A:59C8  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:59CA  50					push	ax
020A:59CB  B4 0E				mov	ah,0Eh
020A:59CD  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:59CF  B4 19				mov	ah,19h
020A:59D1  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:59D3  A2 30CE				mov	data_372,al		; (020A:30CE=31h)
020A:59D6  04 61				add	al,61h			; 'a'
020A:59D8  A2 066E				mov	byte ptr ds:[66Eh],al	; (020A:066E=0Eh)
020A:59DB  E8 13F2				call	sub_90			; (6DD0)
020A:59DE  58					pop	ax
020A:59DF  8A D0				mov	dl,al
020A:59E1  B4 0E				mov	ah,0Eh
020A:59E3  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:59E5			loc_810::
020A:59E5  C3					retn
							                        ;* No entry point to code
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 199

020A:59E6  87 DB				xchg	bx,bx
020A:59E8  2C 32				sub	al,32h			; '2'
020A:59EA  3C 07				cmp	al,7
020A:59EC  77 0E				ja	loc_811			; Jump if above
020A:59EE  04 02				add	al,2
020A:59F0  D0 E0				shl	al,1			; Shift w/zeros fill
020A:59F2  E8 1D77				call	sub_110			; (776C)
020A:59F5  C6 06 2B38 01			mov	data_287,1		; (020A:2B38=0E5h)
020A:59FA  EB 05				jmp	short loc_812		; (5A01)
020A:59FC			loc_811::
020A:59FC  C6 06 4FD6 09			mov	data_567,9		; (020A:4FD6=75h)
020A:5A01			loc_812::
020A:5A01  C3					retn
							                        ;* No entry point to code
020A:5A02  87 DB				xchg	bx,bx
020A:5A04  8B 1E 4F94				mov	bx,word ptr ds:[4F94h]	; (020A:4F94=810Bh)
020A:5A08  32 E4				xor	ah,ah			; Zero register
020A:5A0A  3C 4E				cmp	al,4Eh			; 'N'
020A:5A0C  74 3E				je	loc_814			; Jump if equal
020A:5A0E  FE C4				inc	ah
020A:5A10  3C 44				cmp	al,44h			; 'D'
020A:5A12  74 38				je	loc_814			; Jump if equal
020A:5A14  FE C4				inc	ah
020A:5A16  3C 49				cmp	al,49h			; 'I'
020A:5A18  74 32				je	loc_814			; Jump if equal
020A:5A1A  B4 04				mov	ah,4
020A:5A1C  3C 4F				cmp	al,4Fh			; 'O'
020A:5A1E  74 2C				je	loc_814			; Jump if equal
020A:5A20  B4 07				mov	ah,7
020A:5A22  3C 41				cmp	al,41h			; 'A'
020A:5A24  74 26				je	loc_814			; Jump if equal
020A:5A26  3C 45				cmp	al,45h			; 'E'
020A:5A28  75 2B				jne	loc_815			; Jump if not equal
020A:5A2A			loc_813::
020A:5A2A  46					inc	si
020A:5A2B  4B					dec	bx
020A:5A2C  74 27				jz	loc_815			; Jump if zero
020A:5A2E  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:5A31  75 F7				jne	loc_813			; Jump if not equal
020A:5A33  46					inc	si
020A:5A34  4B					dec	bx
020A:5A35  74 1E				jz	loc_815			; Jump if zero
020A:5A37  B4 06				mov	ah,6
020A:5A39  80 3C 44				cmp	byte ptr [si],44h	; 'D'
020A:5A3C  74 0E				je	loc_814			; Jump if equal
020A:5A3E  FE CC				dec	ah
020A:5A40  80 3C 49				cmp	byte ptr [si],49h	; 'I'
020A:5A43  74 07				je	loc_814			; Jump if equal
020A:5A45  B4 03				mov	ah,3
020A:5A47  80 3C 4F				cmp	byte ptr [si],4Fh	; 'O'
020A:5A4A  75 09				jne	loc_815			; Jump if not equal
020A:5A4C			loc_814::
020A:5A4C  88 26 16AB				mov	data_217,ah		; (020A:16AB=41h)
020A:5A50  E8 1ACD				call	sub_107			; (7520)
020A:5A53  EB 05				jmp	short loc_816		; (5A5A)
020A:5A55			loc_815::
020A:5A55  C6 06 4FD6 09			mov	data_567,9		; (020A:4FD6=75h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 200

020A:5A5A			loc_816::
020A:5A5A  C3					retn
							                        ;* No entry point to code
020A:5A5B  90					nop
020A:5A5C  80 3E 35E6 00			cmp	byte ptr ds:[35E6h],0	; (020A:35E6=0C0h)
020A:5A61  74 28				je	loc_819			; Jump if equal
020A:5A63  8A E0				mov	ah,al
020A:5A65  80 FC 4F				cmp	ah,4Fh			; 'O'
020A:5A68  74 1A				je	loc_818			; Jump if equal
020A:5A6A  C6 06 35E4 01			mov	data_436,1		; (020A:35E4=46h)
020A:5A6F  B0 01				mov	al,1
020A:5A71  80 FC 4E				cmp	ah,4Eh			; 'N'
020A:5A74  74 07				je	loc_817			; Jump if equal
020A:5A76  80 0E 35E4 02			or	data_436,2		; (020A:35E4=46h)
020A:5A7B  EB 0E				jmp	short loc_819		; (5A8B)
020A:5A7D			loc_817::
020A:5A7D  80 0E 35E4 08			or	data_436,8		; (020A:35E4=46h)
020A:5A82  EB 07				jmp	short loc_819		; (5A8B)
020A:5A84			loc_818::
020A:5A84  80 26 35E4 FE			and	data_436,0FEh		; (020A:35E4=46h)
020A:5A89  32 C0				xor	al,al			; Zero register
020A:5A8B			loc_819::
020A:5A8B  C3					retn
							                        ;* No entry point to code
020A:5A8C  BF 13E8				mov	di,13E8h
020A:5A8F  8A 05				mov	al,[di]
020A:5A91  A2 13E4				mov	data_204,al		; (020A:13E4=0)
020A:5A94  33 ED				xor	bp,bp			; Zero register
020A:5A96  8D 55 0B				lea	dx,[di+0Bh]		; Load effective addr
020A:5A99  8D 4D 01				lea	cx,[di+1]		; Load effective addr
020A:5A9C  2B D1				sub	dx,cx
020A:5A9E  8B CA				mov	cx,dx
020A:5AA0  33 DB				xor	bx,bx			; Zero register
020A:5AA2  56					push	si

020A:5AA3			locloop_820::
020A:5AA3  8A 04				mov	al,[si]
020A:5AA5  3C 00				cmp	al,0
020A:5AA7  74 3E				je	loc_825			; Jump if equal
020A:5AA9  3C 20				cmp	al,20h			; ' '
020A:5AAB  74 04				je	loc_821			; Jump if equal
020A:5AAD  3C 09				cmp	al,9
020A:5AAF  75 03				jne	loc_822			; Jump if not equal
020A:5AB1			loc_821::
020A:5AB1  46					inc	si
020A:5AB2  EB EF				jmp	short locloop_820	; (5AA3)
020A:5AB4			loc_822::
020A:5AB4  81 39 582E				cmp	word ptr [bx+di],582Eh
020A:5AB8  75 0B				jne	loc_823			; Jump if not equal
020A:5ABA  3C 30				cmp	al,30h			; '0'
020A:5ABC  72 18				jb	loc_824			; Jump if below
020A:5ABE  3C 39				cmp	al,39h			; '9'
020A:5AC0  77 03				ja	loc_823			; Jump if above
020A:5AC2  46					inc	si
020A:5AC3  EB 28				jmp	short loc_826		; (5AED)
020A:5AC5			loc_823::
020A:5AC5  38 41 01				cmp	[bx+di+1],al
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 201

020A:5AC8  75 0C				jne	loc_824			; Jump if not equal
020A:5ACA  43					inc	bx
020A:5ACB  46					inc	si
020A:5ACC  80 79 01 20				cmp	byte ptr [bx+di+1],20h	; ' '
020A:5AD0  74 1B				je	loc_826			; Jump if equal
020A:5AD2  E2 CF				loop	locloop_820		; Loop if cx > 0

020A:5AD4  E3 17				jcxz	loc_826			; Jump if cx=0
020A:5AD6			loc_824::
020A:5AD6  5E					pop	si
020A:5AD7  56					push	si
020A:5AD8  45					inc	bp
020A:5AD9  83 FD 0D				cmp	bp,0Dh
020A:5ADC  73 09				jae	loc_825			; Jump if above or =
020A:5ADE  8B CA				mov	cx,dx
020A:5AE0  83 C7 10				add	di,10h
020A:5AE3  33 DB				xor	bx,bx			; Zero register
020A:5AE5  EB BC				jmp	short locloop_820	; (5AA3)
020A:5AE7			loc_825::
020A:5AE7  5E					pop	si
020A:5AE8  B4 36				mov	ah,36h			; '6'
020A:5AEA  E9 2A3B				jmp	loc_1339		; (8528)
020A:5AED			loc_826::
020A:5AED  8A 45 0D				mov	al,[di+0Dh]
020A:5AF0  A2 13E5				mov	data_205,al		; (020A:13E5=0)
020A:5AF3  8A 05				mov	al,[di]
020A:5AF5  A2 13E4				mov	data_204,al		; (020A:13E4=0)
020A:5AF8  8B 45 0B				mov	ax,[di+0Bh]
020A:5AFB  A3 13E6				mov	data_206,ax		; (020A:13E6=0)
020A:5AFE			loc_827::
020A:5AFE  8A 04				mov	al,[si]
020A:5B00  3C 00				cmp	al,0
020A:5B02  74 26				je	loc_830			; Jump if equal
020A:5B04  3C 2C				cmp	al,2Ch			; ','
020A:5B06  74 03				je	loc_828			; Jump if equal
020A:5B08  46					inc	si
020A:5B09  EB F3				jmp	short loc_827		; (5AFE)
020A:5B0B			loc_828::
020A:5B0B  8A 04				mov	al,[si]
020A:5B0D  3C 00				cmp	al,0
020A:5B0F  74 19				je	loc_830			; Jump if equal
020A:5B11  B4 80				mov	ah,80h
020A:5B13  3C 46				cmp	al,46h			; 'F'
020A:5B15  74 0F				je	loc_829			; Jump if equal
020A:5B17  FE C4				inc	ah
020A:5B19  3C 53				cmp	al,53h			; 'S'
020A:5B1B  74 09				je	loc_829			; Jump if equal
020A:5B1D  FE C4				inc	ah
020A:5B1F  3C 42				cmp	al,42h			; 'B'
020A:5B21  74 03				je	loc_829			; Jump if equal
020A:5B23  46					inc	si
020A:5B24  EB E5				jmp	short loc_828		; (5B0B)
020A:5B26			loc_829::
020A:5B26  88 26 14FA				mov	data_207,ah		; (020A:14FA=0)
020A:5B2A			loc_830::
020A:5B2A  9A 168F:2B34		;*		call	far ptr sub_174		;*(168F:2B34)
020A:5B2A  9A					db	9Ah
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 202

020A:5B2B  2B34 168F				dw	2B34h, 168Fh
020A:5B2F  E8 1142				call	sub_85			; (6C74)
020A:5B32  5E					pop	si
020A:5B33  C3					retn
							                        ;* No entry point to code
020A:5B34  8B 04				mov	ax,[si]
020A:5B36  8A 5C 02				mov	bl,[si+2]
020A:5B39  BF 4F96				mov	di,4F96h
020A:5B3C			loc_831::
020A:5B3C  3B 05				cmp	ax,[di]
020A:5B3E  75 05				jne	loc_832			; Jump if not equal
020A:5B40  3A 5D 02				cmp	bl,[di+2]
020A:5B43  74 10				je	loc_833			; Jump if equal
020A:5B45			loc_832::
020A:5B45  83 C7 04				add	di,4
020A:5B48  81 FF 4FD6				cmp	di,4FD6h
020A:5B4C  72 EE				jb	loc_831			; Jump if below
020A:5B4E  C6 06 4FD6 09			mov	data_567,9		; (020A:4FD6=75h)
020A:5B53  EB 5E				jmp	short loc_839		; (5BB3)
020A:5B55			loc_833::
020A:5B55  8A 45 03				mov	al,[di+3]
020A:5B58  3C F1				cmp	al,0F1h
020A:5B5A  74 57				je	loc_839			; Jump if equal
020A:5B5C  8A 36 30A0				mov	dh,data_363		; (020A:30A0=45h)
020A:5B60  3C F2				cmp	al,0F2h
020A:5B62  75 09				jne	loc_834			; Jump if not equal
020A:5B64  A0 30A1				mov	al,byte ptr data_364	; (020A:30A1=' 1\ALLUSE 1')
020A:5B67  A8 F0				test	al,0F0h
020A:5B69  74 02				jz	loc_834			; Jump if zero
020A:5B6B  0C 08				or	al,8
020A:5B6D			loc_834::
020A:5B6D  A2 30A0				mov	data_363,al		; (020A:30A0=45h)
020A:5B70  C6 06 30B0 00			mov	data_365,0		; (020A:30B0=44h)
020A:5B75  EB 25				jmp	short loc_837		; (5B9C)
020A:5B77			loc_835::
020A:5B77  A0 30A0				mov	al,data_363		; (020A:30A0=45h)
020A:5B7A  F6 06 30B0 1F			test	data_365,1Fh		; (020A:30B0=44h)
020A:5B7F  74 1B				jz	loc_837			; Jump if zero
020A:5B81  C6 06 30B0 01			mov	data_365,1		; (020A:30B0=44h)
020A:5B86  A8 10				test	al,10h
020A:5B88  74 07				jz	loc_836			; Jump if zero
020A:5B8A  C6 06 30B0 02			mov	data_365,2		; (020A:30B0=44h)
020A:5B8F  EB 1D				jmp	short loc_838		; (5BAE)
020A:5B91			loc_836::
020A:5B91  A8 20				test	al,20h			; ' '
020A:5B93  74 07				jz	loc_837			; Jump if zero
020A:5B95  C6 06 30B0 04			mov	data_365,4		; (020A:30B0=44h)
020A:5B9A  EB 12				jmp	short loc_838		; (5BAE)
020A:5B9C			loc_837::
020A:5B9C  A8 C0				test	al,0C0h
020A:5B9E  74 0E				jz	loc_838			; Jump if zero
020A:5BA0  C6 06 30B0 0C			mov	data_365,0Ch		; (020A:30B0=44h)
020A:5BA5  A8 80				test	al,80h
020A:5BA7  74 05				jz	loc_838			; Jump if zero
020A:5BA9  C6 06 30B0 14			mov	data_365,14h		; (020A:30B0=44h)
020A:5BAE			loc_838::
020A:5BAE  B6 01				mov	dh,1
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 203

020A:5BB0  E8 12D5				call	sub_91			; (6E88)
020A:5BB3			loc_839::
020A:5BB3  C3					retn
							                        ;* No entry point to code
020A:5BB4  55					push	bp
020A:5BB5  8B 2E 4F94				mov	bp,word ptr ds:[4F94h]	; (020A:4F94=810Bh)
020A:5BB9  33 DB				xor	bx,bx			; Zero register
020A:5BBB  32 C9				xor	cl,cl			; Zero register
020A:5BBD  8A 1C				mov	bl,[si]
020A:5BBF  80 EB 30				sub	bl,30h			; '0'
020A:5BC2  80 FB 09				cmp	bl,9
020A:5BC5  76 03				jbe	loc_840			; Jump if below or =
020A:5BC7  E9 008F				jmp	loc_847			; (5C59)
020A:5BCA			loc_840::
020A:5BCA  8A C3				mov	al,bl
020A:5BCC  46					inc	si
020A:5BCD  4D					dec	bp
020A:5BCE  FE C1				inc	cl
020A:5BD0  8A 1C				mov	bl,[si]
020A:5BD2  80 EB 30				sub	bl,30h			; '0'
020A:5BD5  80 FB 09				cmp	bl,9
020A:5BD8  76 04				jbe	loc_841			; Jump if below or =
020A:5BDA  8A D8				mov	bl,al
020A:5BDC  EB 22				jmp	short loc_842		; (5C00)
020A:5BDE			loc_841::
020A:5BDE  B5 0A				mov	ch,0Ah
020A:5BE0  F6 E5				mul	ch			; ax = reg * al
020A:5BE2  03 D8				add	bx,ax
020A:5BE4  46					inc	si
020A:5BE5  4D					dec	bp
020A:5BE6  FE C1				inc	cl
020A:5BE8  8A 14				mov	dl,[si]
020A:5BEA  80 EA 30				sub	dl,30h			; '0'
020A:5BED  80 FA 09				cmp	dl,9
020A:5BF0  77 0E				ja	loc_842			; Jump if above
020A:5BF2  46					inc	si
020A:5BF3  4D					dec	bp
020A:5BF4  FE C1				inc	cl
020A:5BF6  8B C3				mov	ax,bx
020A:5BF8  F6 E5				mul	ch			; ax = reg * al
020A:5BFA  32 F6				xor	dh,dh			; Zero register
020A:5BFC  03 C2				add	ax,dx
020A:5BFE  8B D8				mov	bx,ax
020A:5C00			loc_842::
020A:5C00  83 FB 00				cmp	bx,0
020A:5C03  74 0B				je	loc_843			; Jump if equal
020A:5C05  83 FB 0A				cmp	bx,0Ah
020A:5C08  72 4F				jb	loc_847			; Jump if below
020A:5C0A  81 FB 00FF				cmp	bx,0FFh
020A:5C0E  77 49				ja	loc_847			; Jump if above
020A:5C10			loc_843::
020A:5C10  88 1E 35E8				mov	byte ptr ds:[35E8h],bl	; (020A:35E8=25h)
020A:5C14  80 FB 00				cmp	bl,0
020A:5C17  74 11				je	loc_844			; Jump if equal
020A:5C19  BF 5ABD				mov	di,5ABDh
020A:5C1C  C7 45 FF 2020			mov	word ptr [di-1],2020h
020A:5C21  56					push	si
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 204

020A:5C22  4E					dec	si
020A:5C23  32 ED				xor	ch,ch			; Zero register
020A:5C25  FD					std				; Set direction flag
020A:5C26  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5C28  FC					cld				; Clear direction
020A:5C29  5E					pop	si
020A:5C2A			loc_844::
020A:5C2A  83 FD 02				cmp	bp,2
020A:5C2D  72 2A				jb	loc_847			; Jump if below
020A:5C2F  83 FD 32				cmp	bp,32h
020A:5C32  77 25				ja	loc_847			; Jump if above
020A:5C34			loc_845::
020A:5C34  80 3C 2C				cmp	byte ptr [si],2Ch	; ','
020A:5C37  74 06				je	loc_846			; Jump if equal
020A:5C39  4D					dec	bp
020A:5C3A  74 1D				jz	loc_847			; Jump if zero
020A:5C3C  46					inc	si
020A:5C3D  EB F5				jmp	short loc_845		; (5C34)
020A:5C3F			loc_846::
020A:5C3F  46					inc	si
020A:5C40  4D					dec	bp
020A:5C41  74 16				jz	loc_847			; Jump if zero
020A:5C43  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:5C46  74 F7				je	loc_846			; Jump if equal
020A:5C48  80 3C 43				cmp	byte ptr [si],43h	; 'C'
020A:5C4B  75 0C				jne	loc_847			; Jump if not equal
020A:5C4D  46					inc	si
020A:5C4E  8A 04				mov	al,[si]
020A:5C50  2C 30				sub	al,30h			; '0'
020A:5C52  3C 07				cmp	al,7
020A:5C54  77 03				ja	loc_847			; Jump if above
020A:5C56  A2 35E1				mov	byte ptr ds:[35E1h],al	; (020A:35E1=1)
020A:5C59			loc_847::
020A:5C59  5D					pop	bp
020A:5C5A  C3					retn
							                        ;* No entry point to code
020A:5C5B  90					nop
020A:5C5C  C6 06 35DF 00			mov	data_433,0		; (020A:35DF=6)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_79		proc	near
020A:5C61  BE 03D0				mov	si,3D0h
020A:5C64  BA 0003				mov	dx,3
020A:5C67			loc_848::
020A:5C67  B9 0016				mov	cx,16h
020A:5C6A  E8 1EAF				call	sub_112			; (7B1C)
020A:5C6D  83 C6 3A				add	si,3Ah
020A:5C70  4A					dec	dx
020A:5C71  75 F4				jnz	loc_848			; Jump if not zero
020A:5C73  B9 3BCD				mov	cx,3BCDh
020A:5C76  81 E9 3634				sub	cx,3634h
020A:5C7A  BE 3634				mov	si,3634h
020A:5C7D  E8 1E9C				call	sub_112			; (7B1C)
020A:5C80  B9 5FF9				mov	cx,5FF9h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 205

020A:5C83  81 E9 5BA8				sub	cx,5BA8h
020A:5C87  BE 5BA8				mov	si,5BA8h
020A:5C8A  E8 1E8F				call	sub_112			; (7B1C)
020A:5C8D  C3					retn
				sub_79		endp

							                        ;* No entry point to code
020A:5C8E  87 DB				xchg	bx,bx
020A:5C90  8B 1E 4F94				mov	bx,word ptr ds:[4F94h]	; (020A:4F94=810Bh)
020A:5C94  80 3E 35E6 00			cmp	byte ptr ds:[35E6h],0	; (020A:35E6=0C0h)
020A:5C99  74 35				je	loc_852			; Jump if equal
020A:5C9B  83 FB 02				cmp	bx,2
020A:5C9E  72 0F				jb	loc_849			; Jump if below
020A:5CA0  8A 44 01				mov	al,[si+1]
020A:5CA3  B3 07				mov	bl,7
020A:5CA5  3C 4E				cmp	al,4Eh			; 'N'
020A:5CA7  74 0D				je	loc_850			; Jump if equal
020A:5CA9  32 DB				xor	bl,bl			; Zero register
020A:5CAB  3C 46				cmp	al,46h			; 'F'
020A:5CAD  74 07				je	loc_850			; Jump if equal
020A:5CAF			loc_849::
020A:5CAF  C6 06 4FD6 09			mov	data_567,9		; (020A:4FD6=75h)
020A:5CB4  EB 1A				jmp	short loc_852		; (5CD0)
020A:5CB6			loc_850::
020A:5CB6  88 1E 4E7F				mov	data_557,bl		; (020A:4E7F=0A4h)
020A:5CBA  80 FB 00				cmp	bl,0
020A:5CBD  74 0E				je	loc_851			; Jump if equal
020A:5CBF  80 3E 2B3B 0A			cmp	data_289,0Ah		; (020A:2B3B=0A0h)
020A:5CC4  73 0A				jae	loc_852			; Jump if above or =
020A:5CC6  B0 0A				mov	al,0Ah
020A:5CC8  E8 1AA1				call	sub_110			; (776C)
020A:5CCB  EB 03				jmp	short loc_852		; (5CD0)
020A:5CCD			loc_851::
020A:5CCD  E8 1774				call	sub_105			; (7444)
020A:5CD0			loc_852::
020A:5CD0  C3					retn
							                        ;* No entry point to code
020A:5CD1  87 DB				xchg	bx,bx
020A:5CD3  90					nop
020A:5CD4  89 36 509E				mov	word ptr ds:[509Eh],si	; (020A:509E=0F6D3h)
020A:5CD8  8B 1E 4F94				mov	bx,word ptr ds:[4F94h]	; (020A:4F94=810Bh)
020A:5CDC  01 1E 509E				add	word ptr ds:[509Eh],bx	; (020A:509E=0F6D3h)
020A:5CE0  E8 F731				call	sub_77			; (5414)
020A:5CE3  72 02				jc	loc_853			; Jump if carry Set
020A:5CE5  EB 05				jmp	short loc_854		; (5CEC)
020A:5CE7			loc_853::
020A:5CE7  C6 06 4FD6 09			mov	data_567,9		; (020A:4FD6=75h)
020A:5CEC			loc_854::
020A:5CEC  C3					retn
							                        ;* No entry point to code
020A:5CED  87 DB				xchg	bx,bx
020A:5CEF  90					nop
020A:5CF0  C6 06 2BE6 00			mov	data_302,0		; (020A:2BE6=0)
020A:5CF5  80 3E 5614 01			cmp	data_578,1		; (020A:5614=2Eh)
020A:5CFA  75 08				jne	loc_855			; Jump if not equal
020A:5CFC  C6 06 4FD6 12			mov	data_567,12h		; (020A:4FD6=75h)
020A:5D01  E9 0082				jmp	loc_864			; (5D86)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 206

020A:5D04			loc_855::
020A:5D04  89 36 509E				mov	word ptr ds:[509Eh],si	; (020A:509E=0F6D3h)
020A:5D08  8B 1E 4F94				mov	bx,word ptr ds:[4F94h]	; (020A:4F94=810Bh)
020A:5D0C  01 1E 509E				add	word ptr ds:[509Eh],bx	; (020A:509E=0F6D3h)
020A:5D10  33 DB				xor	bx,bx			; Zero register
020A:5D12  81 3C 5856				cmp	word ptr [si],5856h
020A:5D16  75 08				jne	loc_856			; Jump if not equal
020A:5D18  83 C6 03				add	si,3
020A:5D1B  C6 06 2BE6 01			mov	data_302,1		; (020A:2BE6=0)
020A:5D20			loc_856::
020A:5D20  E8 F6F1				call	sub_77			; (5414)
020A:5D23  72 5C				jc	loc_863			; Jump if carry Set
020A:5D25  80 3C 3A				cmp	byte ptr [si],3Ah	; ':'
020A:5D28  75 17				jne	loc_859			; Jump if not equal
020A:5D2A  46					inc	si
020A:5D2B  80 3E 2BE6 01			cmp	data_302,1		; (020A:2BE6=0)
020A:5D30  75 06				jne	loc_857			; Jump if not equal
020A:5D32  89 16 2C0F				mov	word ptr ds:[2C0Fh],dx	; (020A:2C0F=4DE2h)
020A:5D36  EB 04				jmp	short loc_858		; (5D3C)
020A:5D38			loc_857::
020A:5D38  89 97 2BE7				mov	data_303[bx],dx		; (020A:2BE7=0)
020A:5D3C			loc_858::
020A:5D3C  E8 F6D5				call	sub_77			; (5414)
020A:5D3F  72 40				jc	loc_863			; Jump if carry Set
020A:5D41			loc_859::
020A:5D41  80 3E 2BE6 01			cmp	data_302,1		; (020A:2BE6=0)
020A:5D46  75 06				jne	loc_860			; Jump if not equal
020A:5D48  89 16 2C11				mov	data_308,dx		; (020A:2C11=40Eh)
020A:5D4C  EB 2D				jmp	short loc_862		; (5D7B)
020A:5D4E			loc_860::
020A:5D4E  89 97 2BE9				mov	data_304[bx],dx		; (020A:2BE9=0)
020A:5D52  80 3C 2C				cmp	byte ptr [si],2Ch	; ','
020A:5D55  75 24				jne	loc_862			; Jump if not equal
020A:5D57  46					inc	si
020A:5D58  E8 F6B9				call	sub_77			; (5414)
020A:5D5B  72 24				jc	loc_863			; Jump if carry Set
020A:5D5D  80 3C 3A				cmp	byte ptr [si],3Ah	; ':'
020A:5D60  75 0A				jne	loc_861			; Jump if not equal
020A:5D62  46					inc	si
020A:5D63  89 97 2BEB				mov	data_305[bx],dx		; (020A:2BEB=0)
020A:5D67  E8 F6AA				call	sub_77			; (5414)
020A:5D6A  72 15				jc	loc_863			; Jump if carry Set
020A:5D6C			loc_861::
020A:5D6C  89 97 2BED				mov	data_306[bx],dx		; (020A:2BED=0)
020A:5D70  80 3C 3B				cmp	byte ptr [si],3Bh	; ';'
020A:5D73  75 06				jne	loc_862			; Jump if not equal
020A:5D75  46					inc	si
020A:5D76  83 C3 08				add	bx,8
020A:5D79  EB A5				jmp	short loc_856		; (5D20)
020A:5D7B			loc_862::
020A:5D7B  FE 06 2BE6				inc	data_302		; (020A:2BE6=0)
020A:5D7F  EB 05				jmp	short loc_864		; (5D86)
020A:5D81			loc_863::
020A:5D81  C6 06 4FD6 09			mov	data_567,9		; (020A:4FD6=75h)
020A:5D86			loc_864::
020A:5D86  C3					retn
							                        ;* No entry point to code
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 207

020A:5D87  90					nop
020A:5D88  2C 30				sub	al,30h			; '0'
020A:5D8A  3C 7F				cmp	al,7Fh
020A:5D8C  77 03				ja	loc_865			; Jump if above
020A:5D8E  A2 35D3				mov	data_425,al		; (020A:35D3=0EBh)
020A:5D91			loc_865::
020A:5D91  C3					retn
020A:5D92  000E[00]				db	14 dup (0)
020A:5DA0			loc_866::
020A:5DA0  BE 4E43				mov	si,4E43h
020A:5DA3  80 3E 327D 00			cmp	byte ptr ds:[327Dh],0	; (020A:327D=65h)
020A:5DA8  74 03				je	loc_867			; Jump if equal
020A:5DAA  E9 F140				jmp	loc_686			; (4EED)
020A:5DAD			loc_867::
020A:5DAD  B6 01				mov	dh,1
020A:5DAF  B2 37				mov	dl,37h			; '7'
020A:5DB1  E8 7640				call	$+7643h
020A:5DB4  0A F6				or	dh,dh			; Zero ?
020A:5DB6  74 09				jz	loc_868			; Jump if zero
020A:5DB8  83 4C D6 04				or	word ptr [si-2Ah],4
020A:5DBC  B2 25				mov	dl,25h			; '%'
020A:5DBE  E8 7633				call	$+7636h
020A:5DC1			loc_868::
020A:5DC1  A1 4E22				mov	ax,data_553		; (020A:4E22=4788h)
020A:5DC4  A3 4E1C				mov	data_550,ax		; (020A:4E1C=4788h)
020A:5DC7  A1 4E24				mov	ax,data_554		; (020A:4E24=885Ah)
020A:5DCA  A3 4E1E				mov	data_551,ax		; (020A:4E1E=8857h)
020A:5DCD  F7 06 4E22 0002			test	data_553,2		; (020A:4E22=4788h)
020A:5DD3  74 07				jz	loc_869			; Jump if zero
020A:5DD5  B0 01				mov	al,1
020A:5DD7  9A 168F:45B8		;*		call	far ptr sub_194		;*(168F:45B8)
020A:5DD7  9A					db	9Ah
020A:5DD8  45B8 168F				dw	45B8h, 168Fh
020A:5DDC			loc_869::
020A:5DDC  8A 16 30CE				mov	dl,data_372		; (020A:30CE=31h)
020A:5DE0  80 C2 61				add	dl,61h			; 'a'
020A:5DE3  88 16 3231				mov	data_374,dl		; (020A:3231=52h)
020A:5DE7  BA 4355				mov	dx,4355h
020A:5DEA  B4 1A				mov	ah,1Ah
020A:5DEC  CD 21				int	21h			; DOS Services  ah=function 1Ah
										;  set DTA(disk xfer area) ds:dx
020A:5DEE  BA 3233				mov	dx,3233h
020A:5DF1  80 3E 3234 3A			cmp	byte ptr data_376,3Ah	; (020A:3234='RCHITECTURE=x86') ':'
020A:5DF6  74 03				je	loc_870			; Jump if equal
020A:5DF8  BA 3231				mov	dx,3231h
020A:5DFB			loc_870::
020A:5DFB  B9 0000				mov	cx,0
020A:5DFE  B4 4E				mov	ah,4Eh
020A:5E00  CD 21				int	21h			; DOS Services  ah=function 4Eh
										;  find 1st filenam match @ds:dx
020A:5E02  72 53				jc	loc_873			; Jump if carry Set
020A:5E04  E8 1189				call	sub_92			; (6F90)
020A:5E07  A0 1208				mov	al,data_192		; (020A:1208=0)
020A:5E0A  88 47 52				mov	[bx+52h],al
020A:5E0D  B4 19				mov	ah,19h
020A:5E0F  E8 11DA				call	sub_94			; (6FEC)
020A:5E12  E8 0D0B				call	sub_82			; (6B20)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 208

020A:5E15  B4 02				mov	ah,2
020A:5E17  32 FF				xor	bh,bh			; Zero register
020A:5E19  BA 174B				mov	dx,174Bh
020A:5E1C  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:5E1C  9A					db	9Ah
020A:5E1D  2BA8 168F				dw	2BA8h, 168Fh
020A:5E21  E8 158C				call	sub_103			; (73B0)
020A:5E24			loc_871::
020A:5E24  F7 06 35E9 0004			test	word ptr ds:[35E9h],4	; (020A:35E9=3A01h)
020A:5E2A  75 2B				jnz	loc_873			; Jump if not zero
020A:5E2C  9A 168F:0760		;*		call	far ptr sub_156		;*(168F:0760)
020A:5E2C  9A					db	9Ah
020A:5E2D  0760 168F				dw	760h, 168Fh
020A:5E31  24 DF				and	al,0DFh
020A:5E33  3C 59				cmp	al,59h			; 'Y'
020A:5E35  74 20				je	loc_873			; Jump if equal
020A:5E37  3C 4E				cmp	al,4Eh			; 'N'
020A:5E39  74 07				je	loc_872			; Jump if equal
020A:5E3B  9A 168F:2B10		;*		call	far ptr sub_173		;*(168F:2B10)
020A:5E3B  9A					db	9Ah
020A:5E3C  2B10 168F				dw	2B10h, 168Fh
020A:5E40  EB E2				jmp	short loc_871		; (5E24)
020A:5E42			loc_872::
020A:5E42  8A 16 30CD				mov	dl,data_371		; (020A:30CD=7Eh)
020A:5E46  B4 0E				mov	ah,0Eh
020A:5E48  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:5E4A  E8 1557				call	sub_102			; (73A4)
020A:5E4D  E8 1168				call	sub_93			; (6FB8)
020A:5E50  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:5E54  E9 F096				jmp	loc_686			; (4EED)
020A:5E57			loc_873::
020A:5E57  8B 1E 1326				mov	bx,data_199		; (020A:1326=0)
020A:5E5B  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:5E5F  E8 1542				call	sub_102			; (73A4)
020A:5E62  E8 2B28				call	sub_125			; (898D)
020A:5E65  B9 000C				mov	cx,0Ch
020A:5E68  BE 036A				mov	si,36Ah
020A:5E6B  BF 3346				mov	di,3346h

020A:5E6E			locloop_874::
020A:5E6E  80 3C 00				cmp	byte ptr [si],0
020A:5E71  74 09				je	loc_875			; Jump if equal
020A:5E73  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:5E76  74 04				je	loc_875			; Jump if equal
020A:5E78  FC					cld				; Clear direction
020A:5E79  A4					movsb				; Mov [si] to es:[di]
020A:5E7A  E2 F2				loop	locloop_874		; Loop if cx > 0

020A:5E7C			loc_875::
020A:5E7C  BB 4DEB				mov	bx,4DEBh
020A:5E7F  B9 0020				mov	cx,20h
020A:5E82  BE 0378				mov	si,378h
020A:5E85  BF 3356				mov	di,3356h
020A:5E88  FC					cld				; Clear direction
020A:5E89  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5E8B  F7 47 2E 0002			test	word ptr [bx+2Eh],2
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 209

020A:5E90  74 03				jz	loc_876			; Jump if zero
020A:5E92  E9 2617				jmp	loc_1335		; (84AC)
020A:5E95			loc_876::
020A:5E95  F7 06 4E24 0020			test	data_554,20h		; (020A:4E24=885Ah)
020A:5E9B  75 0A				jnz	loc_877			; Jump if not zero
020A:5E9D  C6 06 6822 2A			mov	byte ptr data_600,2Ah	; (020A:6822=44h) '*'
020A:5EA2  C6 06 6A59 2A			mov	byte ptr data_601,2Ah	; (020A:6A59=38h) '*'
020A:5EA7			loc_877::
020A:5EA7  83 3E 3037 00			cmp	data_328,0		; (020A:3037=0Eh)
020A:5EAC  75 44				jne	loc_880			; Jump if not equal
020A:5EAE  8B 1E 2B3D				mov	bx,data_291		; (020A:2B3D=0EBADh)
020A:5EB2  8C C8				mov	ax,cs
020A:5EB4  2D 0010				sub	ax,10h
020A:5EB7  06					push	es
020A:5EB8  8E C0				mov	es,ax
020A:5EBA  B4 4A				mov	ah,4Ah
020A:5EBC  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change memory allocation
										;   bx=bytes/16, es=mem segment
020A:5EBE  07					pop	es
020A:5EBF  73 06				jnc	loc_878			; Jump if carry=0
020A:5EC1  B8 0008				mov	ax,8
020A:5EC4  E9 256C				jmp	loc_1331		; (8433)
020A:5EC7			loc_878::
020A:5EC7  E8 2ADE				call	sub_129			; (89A8)
020A:5ECA  8C CB				mov	bx,cs
020A:5ECC  83 EB 10				sub	bx,10h
020A:5ECF  2B C3				sub	ax,bx
020A:5ED1  8B 1E 2B3D				mov	bx,data_291		; (020A:2B3D=0EBADh)
020A:5ED5  2B D8				sub	bx,ax
020A:5ED7  B9 FFFF				mov	cx,0FFFFh
020A:5EDA  81 FB 1000				cmp	bx,1000h
020A:5EDE  73 0A				jae	loc_879			; Jump if above or =
020A:5EE0  8B CB				mov	cx,bx
020A:5EE2  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:5EE4  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:5EE6  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:5EE8  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:5EEA			loc_879::
020A:5EEA  89 0E 4E82				mov	data_558,cx		; (020A:4E82=709Ah)
020A:5EEE  D1 E9				shr	cx,1			; Shift w/zeros fill
020A:5EF0  EB 26				jmp	short loc_882		; (5F18)
020A:5EF2			loc_880::
020A:5EF2  E8 2A9B				call	sub_126			; (8990)
020A:5EF5  8C C0				mov	ax,es
020A:5EF7  8B 0E 3037				mov	cx,data_328		; (020A:3037=0Eh)
020A:5EFB  2B C8				sub	cx,ax
020A:5EFD  81 F9 1000				cmp	cx,1000h
020A:5F01  76 03				jbe	loc_881			; Jump if below or =
020A:5F03  B9 1000				mov	cx,1000h
020A:5F06			loc_881::
020A:5F06  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:5F08  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:5F0A  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:5F0C  89 0E 4E82				mov	data_558,cx		; (020A:4E82=709Ah)
020A:5F10  FF 0E 4E82				dec	data_558		; (020A:4E82=709Ah)
020A:5F14  D1 26 4E82				shl	data_558,1		; (020A:4E82=709Ah) Shift w/zeros fill
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 210

020A:5F18			loc_882::
020A:5F18  E8 2A75				call	sub_126			; (8990)
020A:5F1B  B8 FFFF				mov	ax,0FFFFh
020A:5F1E  33 FF				xor	di,di			; Zero register
020A:5F20  FC					cld				; Clear direction
020A:5F21  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:5F23  E8 2A67				call	sub_125			; (898D)
020A:5F26  B4 2C				mov	ah,2Ch
020A:5F28  CD 21				int	21h			; DOS Services  ah=function 2Ch
										;  get time, cx=hrs/min, dx=sec
020A:5F2A  89 0E 4E73				mov	data_555,cx		; (020A:4E73=5750h)
020A:5F2E  89 16 4E75				mov	data_556,dx		; (020A:4E75=3BEh)
020A:5F32  E8 105B				call	sub_92			; (6F90)
020A:5F35  A0 1207				mov	al,data_191		; (020A:1207=0)
020A:5F38  88 47 4C				mov	[bx+4Ch],al
020A:5F3B  C6 47 4E 07				mov	byte ptr [bx+4Eh],7
020A:5F3F  C6 47 3F 00				mov	byte ptr [bx+3Fh],0
020A:5F43  C6 47 40 00				mov	byte ptr [bx+40h],0
020A:5F47  C6 47 56 00				mov	byte ptr [bx+56h],0
020A:5F4B  C6 47 70 00				mov	byte ptr [bx+70h],0
020A:5F4F  C6 47 71 00				mov	byte ptr [bx+71h],0
020A:5F53  C6 47 72 00				mov	byte ptr [bx+72h],0
020A:5F57  C6 47 73 00				mov	byte ptr [bx+73h],0
020A:5F5B  C6 47 74 00				mov	byte ptr [bx+74h],0
020A:5F5F  C6 47 75 00				mov	byte ptr [bx+75h],0
020A:5F63  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:5F67  C6 47 35 00				mov	byte ptr [bx+35h],0
020A:5F6B  C6 47 36 00				mov	byte ptr [bx+36h],0
020A:5F6F  E8 2BA6				call	sub_131			; (8B18)
020A:5F72  C7 06 2B39 0010			mov	data_288,10h		; (020A:2B39=0A420h)
020A:5F78  9A 168F:2C58		;*		call	far ptr sub_177		;*(168F:2C58)
020A:5F78  9A					db	9Ah
020A:5F79  2C58 168F				dw	2C58h, 168Fh
020A:5F7D  B4 05				mov	ah,5
020A:5F7F  E8 106A				call	sub_94			; (6FEC)
020A:5F82  E8 0CBF				call	sub_83			; (6C44)
020A:5F85  8A 1E 3042				mov	bl,data_335		; (020A:3042=0CFh)
020A:5F89  FE CB				dec	bl
020A:5F8B  BA FFFF				mov	dx,0FFFFh
020A:5F8E  BE 0000				mov	si,0
020A:5F91  E8 29F0				call	sub_124			; (8984)
020A:5F94			loc_883::
020A:5F94  81 FE 291D				cmp	si,291Dh
020A:5F98  73 08				jae	loc_884			; Jump if above or =
020A:5F9A  26: 8B 04				mov	ax,es:[si]
020A:5F9D  3D FFFF				cmp	ax,0FFFFh
020A:5FA0  75 02				jne	loc_885			; Jump if not equal
020A:5FA2			loc_884::
020A:5FA2  EB 58				jmp	short loc_895		; (5FFC)
020A:5FA4			loc_885::
020A:5FA4  BF 291D				mov	di,291Dh
020A:5FA7  32 C9				xor	cl,cl			; Zero register
020A:5FA9			loc_886::
020A:5FA9  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:5FAD  74 0F				je	loc_887			; Jump if equal
020A:5FAF  26: 3B 05				cmp	ax,es:[di]
020A:5FB2  74 12				je	loc_889			; Jump if equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 211

020A:5FB4  83 C7 02				add	di,2
020A:5FB7  FE C1				inc	cl
020A:5FB9  80 F9 FA				cmp	cl,0FAh
020A:5FBC  72 EB				jb	loc_886			; Jump if below
020A:5FBE			loc_887::
020A:5FBE  3B C2				cmp	ax,dx
020A:5FC0  74 02				je	loc_888			; Jump if equal
020A:5FC2  FE C3				inc	bl
020A:5FC4			loc_888::
020A:5FC4  8A CB				mov	cl,bl
020A:5FC6			loc_889::
020A:5FC6  88 0E 3046				mov	data_336,cl		; (020A:3046=0F9h)
020A:5FCA  80 F9 19				cmp	cl,19h
020A:5FCD  77 07				ja	loc_890			; Jump if above
020A:5FCF  80 C1 41				add	cl,41h			; 'A'
020A:5FD2  B5 20				mov	ch,20h			; ' '
020A:5FD4  EB 13				jmp	short loc_893		; (5FE9)
020A:5FD6			loc_890::
020A:5FD6  B5 41				mov	ch,41h			; 'A'
020A:5FD8			loc_891::
020A:5FD8  80 E9 1A				sub	cl,1Ah
020A:5FDB  80 F9 19				cmp	cl,19h
020A:5FDE  76 04				jbe	loc_892			; Jump if below or =
020A:5FE0  FE C5				inc	ch
020A:5FE2  EB F4				jmp	short loc_891		; (5FD8)
020A:5FE4			loc_892::
020A:5FE4  80 C1 41				add	cl,41h			; 'A'
020A:5FE7  86 CD				xchg	cl,ch
020A:5FE9			loc_893::
020A:5FE9  26: F7 44 0C 8000			test	word ptr es:[si+0Ch],8000h
020A:5FEF  75 04				jnz	loc_894			; Jump if not zero
020A:5FF1  26: 89 4C 0C				mov	es:[si+0Ch],cx
020A:5FF5			loc_894::
020A:5FF5  8B D0				mov	dx,ax
020A:5FF7  83 C6 15				add	si,15h
020A:5FFA  EB 98				jmp	short loc_883		; (5F94)
020A:5FFC			loc_895::
020A:5FFC  BE 0000				mov	si,0
020A:5FFF			loc_896::
020A:5FFF  BF 0000				mov	di,0
020A:6002  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:6006  75 03				jne	loc_897			; Jump if not equal
020A:6008  E9 0111				jmp	loc_911			; (611C)
020A:600B			loc_897::
020A:600B  26: F6 44 0B 01			test	byte ptr es:[si+0Bh],1
020A:6010  75 05				jnz	loc_899			; Jump if not zero
020A:6012			loc_898::
020A:6012  83 C6 15				add	si,15h
020A:6015  EB E8				jmp	short loc_896		; (5FFF)
020A:6017			loc_899::
020A:6017  26: 8B 04				mov	ax,es:[si]
020A:601A  26: 8B 5C 02				mov	bx,es:[si+2]
020A:601E  26: 8B 4C 04				mov	cx,es:[si+4]
020A:6022			loc_900::
020A:6022  26: F6 45 0B 01			test	byte ptr es:[di+0Bh],1
020A:6027  74 0B				jz	loc_903			; Jump if zero
020A:6029			loc_901::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 212

020A:6029  83 C7 15				add	di,15h
020A:602C			loc_902::
020A:602C  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:6030  75 F0				jne	loc_900			; Jump if not equal
020A:6032  EB DE				jmp	short loc_898		; (6012)
020A:6034			loc_903::
020A:6034  26: 3B 05				cmp	ax,es:[di]
020A:6037  75 F0				jne	loc_901			; Jump if not equal
020A:6039  26: 3B 4D 02				cmp	cx,es:[di+2]
020A:603D  72 EA				jb	loc_901			; Jump if below
020A:603F  26: 3B 5D 04				cmp	bx,es:[di+4]
020A:6043  77 E4				ja	loc_901			; Jump if above
020A:6045  26: 3B 5D 02				cmp	bx,es:[di+2]
020A:6049  76 15				jbe	loc_904			; Jump if below or =
020A:604B  26: 3B 4D 04				cmp	cx,es:[di+4]
020A:604F  72 47				jb	loc_908			; Jump if below
020A:6051  8B D3				mov	dx,bx
020A:6053  4A					dec	dx
020A:6054  26: 3B 55 02				cmp	dx,es:[di+2]
020A:6058  74 1B				je	loc_906			; Jump if equal
020A:605A  26: 89 55 04				mov	es:[di+4],dx
020A:605E  EB C9				jmp	short loc_901		; (6029)
020A:6060			loc_904::
020A:6060  26: 3B 4D 04				cmp	cx,es:[di+4]
020A:6064  73 0F				jae	loc_906			; Jump if above or =
020A:6066			loc_905::
020A:6066  8B D1				mov	dx,cx
020A:6068  42					inc	dx
020A:6069  26: 3B 55 04				cmp	dx,es:[di+4]
020A:606D  74 06				je	loc_906			; Jump if equal
020A:606F  26: 89 55 02				mov	es:[di+2],dx
020A:6073  EB B4				jmp	short loc_901		; (6029)
020A:6075			loc_906::
020A:6075  06					push	es
020A:6076  1F					pop	ds
020A:6077  56					push	si
020A:6078  57					push	di
020A:6079  8B F7				mov	si,di
020A:607B  83 C6 15				add	si,15h
020A:607E  B9 291D				mov	cx,291Dh
020A:6081  2B CE				sub	cx,si
020A:6083  FC					cld				; Clear direction
020A:6084  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:6086  5F					pop	di
020A:6087  5E					pop	si
020A:6088  E8 28EA				call	sub_122			; (8975)
020A:608B  3B F7				cmp	si,di
020A:608D  72 03				jb	loc_907			; Jump if below
020A:608F  83 EE 15				sub	si,15h
020A:6092			loc_907::
020A:6092  FE 0E 3040				dec	data_334		; (020A:3040=0B3h)
020A:6096  EB 94				jmp	short loc_902		; (602C)
020A:6098			loc_908::
020A:6098  8B D3				mov	dx,bx
020A:609A  4A					dec	dx
020A:609B  26: 3B 55 02				cmp	dx,es:[di+2]
020A:609F  74 C5				je	loc_905			; Jump if equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 213

020A:60A1  26: 87 55 04				xchg	es:[di+4],dx
020A:60A5  80 3E 3040 FA			cmp	data_334,0FAh		; (020A:3040=0B3h)
020A:60AA  73 6D				jae	loc_910			; Jump if above or =
020A:60AC  56					push	si
020A:60AD  53					push	bx
020A:60AE  50					push	ax
020A:60AF  B8 0015				mov	ax,15h
020A:60B2  1E8A			data_597	dw	1E8Ah
020A:60B4  3040			data_598	dw	3040h
020A:60B6  F6 E3				mul	bl			; ax = reg * al
020A:60B8  05 0000				add	ax,0
020A:60BB  8B F0				mov	si,ax
020A:60BD  8B D9				mov	bx,cx
020A:60BF  43					inc	bx
020A:60C0  3B DA				cmp	bx,dx
020A:60C2  74 53				je	loc_909			; Jump if equal
020A:60C4  26: 89 5C 02				mov	es:[si+2],bx
020A:60C8  58					pop	ax
020A:60C9  26: 89 04				mov	es:[si],ax
020A:60CC  26: 89 54 04				mov	es:[si+4],dx
020A:60D0  26: 8B 55 06				mov	dx,es:[di+6]
020A:60D4  26: 89 54 06				mov	es:[si+6],dx
020A:60D8  26: 8B 55 08				mov	dx,es:[di+8]
020A:60DC  26: 89 54 08				mov	es:[si+8],dx
020A:60E0  26: 8B 55 0A				mov	dx,es:[di+0Ah]
020A:60E4  26: 89 54 0A				mov	es:[si+0Ah],dx
020A:60E8  26: 8B 55 0C				mov	dx,es:[di+0Ch]
020A:60EC  26: 89 54 0C				mov	es:[si+0Ch],dx
020A:60F0  26: 8A 55 0E				mov	dl,es:[di+0Eh]
020A:60F4  80 E2 FE				and	dl,0FEh
020A:60F7  26: 88 54 0E				mov	es:[si+0Eh],dl
020A:60FB  26: 8B 55 0F				mov	dx,es:[di+0Fh]
020A:60FF  26: 89 54 0F				mov	es:[si+0Fh],dx
020A:6103  26: 8B 55 11				mov	dx,es:[di+11h]
020A:6107  26: 89 54 11				mov	es:[si+11h],dx
020A:610B  26: 8B 55 13				mov	dx,es:[di+13h]
020A:610F  26: 89 54 13				mov	es:[si+13h],dx
020A:6113  FE 06 3040				inc	data_334		; (020A:3040=0B3h)
020A:6117			loc_909::
020A:6117  5B					pop	bx
020A:6118  5E					pop	si
020A:6119			loc_910::
020A:6119  E9 FF0D				jmp	loc_901			; (6029)
020A:611C			loc_911::
020A:611C  E8 DF81		;*		call	sub_37			;*(40A0)
020A:611C  E8 81 DF				db	0E8h, 81h,0DFh
020A:611F  E8 2862				call	sub_124			; (8984)
020A:6122  8A 16 3040				mov	dl,data_334		; (020A:3040=0B3h)
020A:6126  80 FA 01				cmp	dl,1
020A:6129  77 03				ja	loc_913			; Jump if above
020A:612B			loc_912::
020A:612B  E9 00A9				jmp	loc_919			; (61D7)
020A:612E			loc_913::
020A:612E  BF 0000				mov	di,0
020A:6131  32 F6				xor	dh,dh			; Zero register
020A:6133			loc_914::
020A:6133  26: F6 45 0B 01			test	byte ptr es:[di+0Bh],1
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 214

020A:6138  75 F1				jnz	loc_912			; Jump if not zero
020A:613A  26: 80 7D 0A 03			cmp	byte ptr es:[di+0Ah],3
020A:613F  74 63				je	loc_916			; Jump if equal
020A:6141  26: 8B 4D 04				mov	cx,es:[di+4]
020A:6145  26: 2B 4D 02				sub	cx,es:[di+2]
020A:6149  83 F9 64				cmp	cx,64h
020A:614C  72 56				jb	loc_916			; Jump if below
020A:614E  E8 2824				call	sub_122			; (8975)
020A:6151  26: 8B 05				mov	ax,es:[di]
020A:6154  3B 06 304C				cmp	ax,data_338		; (020A:304C=0)
020A:6158  74 4A				je	loc_916			; Jump if equal
020A:615A  8E D8				mov	ds,ax
020A:615C  26: 8B 75 02				mov	si,es:[di+2]
020A:6160  56					push	si
020A:6161  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:6166  06					push	es
020A:6167  9A 168F:3514		;*		call	far ptr sub_181		;*(168F:3514)
020A:6167  9A					db	9Ah
020A:6168  3514 168F				dw	3514h, 168Fh
020A:616C  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6171  9C					pushf				; Push flags
020A:6172  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:6177  5A					pop	dx
020A:6178  8E C2				mov	es,dx
020A:617A  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:617F  5A					pop	dx
020A:6180  75 0A				jnz	loc_915			; Jump if not zero
020A:6182  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:6187  74 03				je	loc_915			; Jump if equal
020A:6189  E8 2B60				call	sub_132			; (8CEC)
020A:618C			loc_915::
020A:618C  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:6191  9D					popf				; Pop flags
020A:6192  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6197  5E					pop	si
020A:6198  72 0A				jc	loc_916			; Jump if carry Set
020A:619A  FE C6				inc	dh
020A:619C  26: 80 4D 0E 80			or	byte ptr es:[di+0Eh],80h
020A:61A1  26: 8B 1D				mov	bx,es:[di]
020A:61A4			loc_916::
020A:61A4  83 C7 15				add	di,15h
020A:61A7  FE CA				dec	dl
020A:61A9  75 88				jnz	loc_914			; Jump if not zero
020A:61AB  E8 27C7				call	sub_122			; (8975)
020A:61AE  80 FE 01				cmp	dh,1
020A:61B1  75 24				jne	loc_919			; Jump if not equal
020A:61B3  8A 16 3040				mov	dl,byte ptr ds:[3040h]	; (1828:3040=0E2h)
020A:61B7  BF 0000				mov	di,0
020A:61BA			loc_917::
020A:61BA  26: 80 7D 0A 03			cmp	byte ptr es:[di+0Ah],3
020A:61BF  74 0F				je	loc_918			; Jump if equal
020A:61C1  26: F6 45 0E 80			test	byte ptr es:[di+0Eh],80h
020A:61C6  75 08				jnz	loc_918			; Jump if not zero
020A:61C8  26: 89 5D 06				mov	es:[di+6],bx
020A:61CC  26: 89 5D 08				mov	es:[di+8],bx
020A:61D0			loc_918::
020A:61D0  83 C7 15				add	di,15h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 215

020A:61D3  FE CA				dec	dl
020A:61D5  75 E3				jnz	loc_917			; Jump if not zero
020A:61D7			loc_919::
020A:61D7  E8 279B				call	sub_122			; (8975)
020A:61DA  F6 06 35D3 40			test	byte ptr ds:[35D3h],40h	; (1828:35D3=30h) '@'
020A:61DF  74 25				jz	loc_921			; Jump if zero
020A:61E1  9A 168F:26F0		;*		call	far ptr sub_169		;*(168F:26F0)
020A:61E1  9A					db	9Ah
020A:61E2  26F0 168F				dw	26F0h, 168Fh
020A:61E6  C6 06 35E6 00			mov	byte ptr ds:[35E6h],0	; (1828:35E6=0E9h)
020A:61EB  E8 8D92				call	$-726Bh
020A:61EE  8B 1E 4150				mov	bx,word ptr ds:[4150h]	; (1828:4150=8038h)
020A:61F2  E8 59D7				call	$+59DAh
020A:61F5  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (1828:2B3C=74h)
020A:61FA  75 07				jne	loc_920			; Jump if not equal
020A:61FC  8B 1E 4150				mov	bx,word ptr ds:[4150h]	; (1828:4150=8038h)
020A:6200  E8 59C9				call	$+59CCh
020A:6203			loc_920::
020A:6203  E9 1F9A				jmp	loc_1305		; (81A0)
020A:6206			loc_921::
020A:6206  9A 168F:4F4C		;*		call	far ptr sub_196		;*(168F:4F4C)
020A:6206  9A					db	9Ah
020A:6207  4F4C 168F				dw	4F4Ch, 168Fh
020A:620B  B2 00				mov	dl,0
020A:620D			loc_922::
020A:620D  E8 2774				call	sub_124			; (8984)
020A:6210  B8 0015				mov	ax,15h
020A:6213  F6 E2				mul	dl			; ax = reg * al
020A:6215  05 0000				add	ax,0
020A:6218  8B D8				mov	bx,ax
020A:621A  26: 8B 47 0A				mov	ax,es:[bx+0Ah]
020A:621E  24 03				and	al,3
020A:6220  3C 02				cmp	al,2
020A:6222  77 1F				ja	loc_924			; Jump if above
020A:6224  26: 8B 07				mov	ax,es:[bx]
020A:6227  26: 8B 7F 02				mov	di,es:[bx+2]
020A:622B  26: 8B 4F 04				mov	cx,es:[bx+4]
020A:622F  8E C0				mov	es,ax
020A:6231  2B CF				sub	cx,di
020A:6233  81 F9 03E8				cmp	cx,3E8h
020A:6237  72 03				jb	loc_923			; Jump if below
020A:6239  B9 03E8				mov	cx,3E8h
020A:623C			loc_923::
020A:623C  9A 168F:4C30		;*		call	far ptr sub_195		;*(168F:4C30)
020A:623C  9A					db	9Ah
020A:623D  4C30 168F				dw	4C30h, 168Fh
020A:6241  72 08				jc	loc_925			; Jump if carry Set
020A:6243			loc_924::
020A:6243  FE C2				inc	dl
020A:6245  3A 16 3040				cmp	dl,byte ptr ds:[3040h]	; (1828:3040=0E2h)
020A:6249  76 C2				jbe	loc_922			; Jump if below or =
020A:624B			loc_925::
020A:624B  E8 2736				call	sub_124			; (8984)
020A:624E  26: A1 0000				mov	ax,word ptr es:[0]	; (1828:0000=245h)
020A:6252  A3 3050				mov	word ptr ds:[3050h],ax	; (1828:3050=0E2F6h)
020A:6255  E9 A1D8				jmp	$-5E25h
							                        ;* No entry point to code
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 216

020A:6258  80 3E 35E6 00			cmp	byte ptr ds:[35E6h],0	; (1828:35E6=0E9h)
020A:625D  74 5C				je	loc_926			; Jump if equal
020A:625F  E8 272B				call	sub_125			; (898D)
020A:6262  BF 0378				mov	di,378h
020A:6265  B9 0021				mov	cx,21h
020A:6268  B0 20				mov	al,20h			; ' '
020A:626A  FC					cld				; Clear direction
020A:626B  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:626D  E8 0D20				call	sub_92			; (6F90)
020A:6270  C6 47 52 00				mov	byte ptr [bx+52h],0
020A:6274  C6 47 69 0F				mov	byte ptr [bx+69h],0Fh
020A:6278  C6 47 33 0F				mov	byte ptr [bx+33h],0Fh
020A:627C  C6 47 66 0F				mov	byte ptr [bx+66h],0Fh
020A:6280  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:6284  E8 0899				call	sub_82			; (6B20)
020A:6287  B4 02				mov	ah,2
020A:6289  32 FF				xor	bh,bh			; Zero register
020A:628B  BA 0912				mov	dx,912h
020A:628E  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:628E  9A					db	9Ah
020A:628F  2BA8 168F				dw	2BA8h, 168Fh
020A:6293  E8 111A				call	sub_103			; (73B0)
020A:6296  BE 0378				mov	si,378h
020A:6299  B1 20				mov	cl,20h			; ' '
020A:629B  B3 01				mov	bl,1
020A:629D  9A 168F:0620		;*		call	far ptr sub_155		;*(168F:0620)
020A:629D  9A					db	9Ah
020A:629E  0620 168F				dw	620h, 168Fh
020A:62A2  E8 0D13				call	sub_93			; (6FB8)
020A:62A5  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:62A9  C6 47 69 07				mov	byte ptr [bx+69h],7
020A:62AD  C6 47 66 07				mov	byte ptr [bx+66h],7
020A:62B1  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:62B5  E8 10EC				call	sub_102			; (73A4)
020A:62B8  E8 0989				call	sub_83			; (6C44)
020A:62BB			loc_926::
020A:62BB  E9 EC4D				jmp	loc_687			; (4F0B)
							                        ;* No entry point to code
020A:62BE  2E: 80 3E 3E64 00			cmp	cs:data_486,0		; (020A:3E64=74h)
020A:62C4  74 08				je	loc_927			; Jump if equal
020A:62C6  9A 168F:2B10		;*		call	far ptr sub_173		;*(168F:2B10)
020A:62C6  9A					db	9Ah
020A:62C7  2B10 168F				dw	2B10h, 168Fh
020A:62CB  E9 EC3D				jmp	loc_687			; (4F0B)
020A:62CE			loc_927::
020A:62CE  E8 0013				call	sub_80			; (62E4)
020A:62D1  80 3E 31F0 00			cmp	byte ptr ds:[31F0h],0	; (1828:31F0=3Ch)
020A:62D6  74 03				je	loc_928			; Jump if equal
020A:62D8  E8 283D				call	sub_131			; (8B18)
020A:62DB			loc_928::
020A:62DB  E8 0CDA				call	sub_93			; (6FB8)
020A:62DE  E8 0963				call	sub_83			; (6C44)
020A:62E1  E9 EC27				jmp	loc_687			; (4F0B)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 217


				sub_80		proc	near
020A:62E4  E8 0CA9				call	sub_92			; (6F90)
020A:62E7  C6 47 53 00				mov	byte ptr [bx+53h],0
020A:62EB  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:62EF  B4 02				mov	ah,2
020A:62F1  E8 0CF8				call	sub_94			; (6FEC)
020A:62F4  E8 0829				call	sub_82			; (6B20)
020A:62F7  B4 02				mov	ah,2
020A:62F9  32 FF				xor	bh,bh			; Zero register
020A:62FB  BA 171A				mov	dx,171Ah
020A:62FE  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:62FE  9A					db	9Ah
020A:62FF  2BA8 168F				dw	2BA8h, 168Fh
020A:6303  E8 10AA				call	sub_103			; (73B0)
020A:6306  B1 28				mov	cl,28h			; '('
020A:6308  B3 01				mov	bl,1
020A:630A  BE 07E0				mov	si,7E0h
020A:630D  9A 168F:0620		;*		call	far ptr sub_155		;*(168F:0620)
020A:630D  9A					db	9Ah
020A:630E  0620 168F				dw	620h, 168Fh
020A:6312  B3 28				mov	bl,28h			; '('
020A:6314  2A D9				sub	bl,cl
020A:6316  32 FF				xor	bh,bh			; Zero register
020A:6318  83 FB 00				cmp	bx,0
020A:631B  75 02				jne	loc_929			; Jump if not equal
020A:631D  EB 74				jmp	short loc_932		; (6393)
020A:631F			loc_929::
020A:631F  3C 1B				cmp	al,1Bh
020A:6321  75 02				jne	loc_930			; Jump if not equal
020A:6323  EB 6E				jmp	short loc_932		; (6393)
020A:6325			loc_930::
020A:6325  E8 2665				call	sub_125			; (898D)
020A:6328  BF 07E0				mov	di,7E0h
020A:632B  B0 20				mov	al,20h			; ' '
020A:632D  8B CB				mov	cx,bx
020A:632F  FC					cld				; Clear direction
020A:6330  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:6332  74 5F				jz	loc_932			; Jump if zero
020A:6334  BF 07E0				mov	di,7E0h
020A:6337  B0 20				mov	al,20h			; ' '
020A:6339  9A 168F:2724		;*		call	far ptr sub_170		;*(168F:2724)
020A:6339  9A					db	9Ah
020A:633A  2724 168F				dw	2724h, 168Fh
020A:633E  9A 168F:27AC		;*		call	far ptr sub_171		;*(168F:27AC)
020A:633E  9A					db	9Ah
020A:633F  27AC 168F				dw	27ACh, 168Fh
020A:6343  A2 327E				mov	byte ptr ds:[327Eh],al	; (1828:327E=1Dh)
020A:6346  3C 01				cmp	al,1
020A:6348  77 1C				ja	loc_931			; Jump if above
020A:634A  B4 10				mov	ah,10h
020A:634C  E8 0C9D				call	sub_94			; (6FEC)
020A:634F  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (1828:1326=0D543h)
020A:6353  A0 1208				mov	al,byte ptr ds:[1208h]	; (1828:1208=0E9h)
020A:6356  88 47 52				mov	[bx+52h],al
020A:6359  E8 1048				call	sub_102			; (73A4)
020A:635C  E8 08E5				call	sub_83			; (6C44)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 218

020A:635F  9A 168F:0760		;*		call	far ptr sub_156		;*(168F:0760)
020A:635F  9A					db	9Ah
020A:6360  0760 168F				dw	760h, 168Fh
020A:6364  EB 2D				jmp	short loc_932		; (6393)
020A:6366			loc_931::
020A:6366  BF 31F0				mov	di,31F0h
020A:6369  B9 0040				mov	cx,40h
020A:636C  B0 00				mov	al,0
020A:636E  FC					cld				; Clear direction
020A:636F  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:6371  BF 0649				mov	di,649h
020A:6374  B9 000C				mov	cx,0Ch
020A:6377  B0 20				mov	al,20h			; ' '
020A:6379  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:637B  BE 07E0				mov	si,7E0h
020A:637E  BF 31F0				mov	di,31F0h
020A:6381  8B CB				mov	cx,bx
020A:6383  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:6385  4F					dec	di
020A:6386  9A 168F:7270		;*		call	far ptr sub_202		;*(168F:7270)
020A:6386  9A					db	9Ah
020A:6387  7270 168F				dw	7270h, 168Fh
020A:638B  E8 4976				call	sub_144			; (AD04)
020A:638E  73 03				jnc	loc_932			; Jump if carry=0
020A:6390  E9 20A0				jmp	loc_1331		; (8433)
020A:6393			loc_932::
020A:6393  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (1828:327D=0BEh)
020A:6397  E8 0C52				call	sub_94			; (6FEC)
020A:639A  E8 0C1B				call	sub_93			; (6FB8)
020A:639D  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:63A1  C6 47 53 07				mov	byte ptr [bx+53h],7
020A:63A5  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:63A9  E8 0FF8				call	sub_102			; (73A4)
020A:63AC  E8 0895				call	sub_83			; (6C44)
020A:63AF  C3					retn
				sub_80		endp

							                        ;* No entry point to code
020A:63B0  80 3E 15CE 01			cmp	data_209,1		; (020A:15CE=0)
020A:63B5  75 07				jne	loc_933			; Jump if not equal
020A:63B7  80 36 15D0 01			xor	data_211,1		; (020A:15D0=0)
020A:63BC  EB 09				jmp	short loc_934		; (63C7)
020A:63BE			loc_933::
020A:63BE  FE 06 15D0				inc	data_211		; (020A:15D0=0)
020A:63C2  80 26 15D0 03			and	data_211,3		; (020A:15D0=0)
020A:63C7			loc_934::
020A:63C7  E8 10CA				call	sub_106			; (7494)
020A:63CA  E8 F894				call	sub_79			; (5C61)
020A:63CD  E8 0874				call	sub_83			; (6C44)
020A:63D0  E9 EB38				jmp	loc_687			; (4F0B)
							                        ;* No entry point to code
020A:63D3  F6 06 30A0 C0			test	data_363,0C0h		; (020A:30A0=45h)
020A:63D8  75 36				jnz	loc_938			; Jump if not zero
020A:63DA  8A 36 30B0				mov	dh,data_365		; (020A:30B0=44h)
020A:63DE  F6 C6 1F				test	dh,1Fh
020A:63E1  74 04				jz	loc_935			; Jump if zero
020A:63E3  B6 00				mov	dh,0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 219

020A:63E5  EB 38				jmp	short loc_940		; (641F)
020A:63E7			loc_935::
020A:63E7  F6 06 30B2 80			test	byte ptr data_366,80h	; (020A:30B2='TA=C:\DOCU')
020A:63EC  75 07				jnz	loc_936			; Jump if not zero
020A:63EE  80 0E 30B2 80			or	byte ptr data_366,80h	; (020A:30B2='TA=C:\DOCU')
020A:63F3  EB 2E				jmp	short loc_941		; (6423)
020A:63F5			loc_936::
020A:63F5  80 26 30B2 7F			and	byte ptr data_366,7Fh	; (020A:30B2='TA=C:\DOCU')
020A:63FA  B6 01				mov	dh,1
020A:63FC  F6 06 30A0 10			test	data_363,10h		; (020A:30A0=45h)
020A:6401  74 02				jz	loc_937			; Jump if zero
020A:6403  B6 02				mov	dh,2
020A:6405			loc_937::
020A:6405  F6 06 30A0 20			test	data_363,20h		; (020A:30A0=45h) ' '
020A:640A  74 13				jz	loc_940			; Jump if zero
020A:640C  B6 04				mov	dh,4
020A:640E  EB 0F				jmp	short loc_940		; (641F)
020A:6410			loc_938::
020A:6410  F6 06 30A0 40			test	data_363,40h		; (020A:30A0=45h) '@'
020A:6415  74 04				jz	loc_939			; Jump if zero
020A:6417  B6 0C				mov	dh,0Ch
020A:6419  EB 04				jmp	short loc_940		; (641F)
020A:641B			loc_939::
020A:641B  B6 14				mov	dh,14h
020A:641D  EB 00				jmp	short loc_940		; (641F)
020A:641F			loc_940::
020A:641F  88 36 30B0				mov	data_365,dh		; (020A:30B0=44h)
020A:6423			loc_941::
020A:6423  B6 01				mov	dh,1
020A:6425  E8 0A60				call	sub_91			; (6E88)
020A:6428  E9 EAE0				jmp	loc_687			; (4F0B)
							                        ;* No entry point to code
020A:642B  80 3E 35E6 01			cmp	byte ptr ds:[35E6h],1	; (020A:35E6=0C0h)
020A:6430  75 1C				jne	loc_942			; Jump if not equal
020A:6432  FE 06 35E3				inc	data_435		; (020A:35E3=46h)
020A:6436  80 26 35E3 01			and	data_435,1		; (020A:35E3=46h)
020A:643B  8B 1E 1326				mov	bx,data_199		; (020A:1326=0)
020A:643F  C6 47 4A 07				mov	byte ptr [bx+4Ah],7
020A:6443  F6 06 35E3 01			test	data_435,1		; (020A:35E3=46h)
020A:6448  74 04				jz	loc_942			; Jump if zero
020A:644A  C6 47 4A 00				mov	byte ptr [bx+4Ah],0
020A:644E			loc_942::
020A:644E  E8 07F3				call	sub_83			; (6C44)
020A:6451  E9 EAB7				jmp	loc_687			; (4F0B)
							                        ;* No entry point to code
020A:6454  E8 0B39				call	sub_92			; (6F90)
020A:6457  C6 47 68 00				mov	byte ptr [bx+68h],0
020A:645B  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:645F  B4 03				mov	ah,3
020A:6461  E8 0B88				call	sub_94			; (6FEC)
020A:6464  E8 06B9				call	sub_82			; (6B20)
020A:6467  B4 02				mov	ah,2
020A:6469  32 FF				xor	bh,bh			; Zero register
020A:646B  BA 171A				mov	dx,171Ah
020A:646E  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:646E  9A					db	9Ah
020A:646F  2BA8 168F				dw	2BA8h, 168Fh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 220

020A:6473  E8 0F3A				call	sub_103			; (73B0)
020A:6476  B1 28				mov	cl,28h			; '('
020A:6478  B3 03				mov	bl,3
020A:647A  BE 07E0				mov	si,7E0h
020A:647D  9A 168F:0620		;*		call	far ptr sub_155		;*(168F:0620)
020A:647D  9A					db	9Ah
020A:647E  0620 168F				dw	620h, 168Fh
020A:6482  B3 28				mov	bl,28h			; '('
020A:6484  2A D9				sub	bl,cl
020A:6486  32 FF				xor	bh,bh			; Zero register
020A:6488  83 FB 00				cmp	bx,0
020A:648B  74 13				je	loc_943			; Jump if equal
020A:648D  3C 1B				cmp	al,1Bh
020A:648F  74 0F				je	loc_943			; Jump if equal
020A:6491  E8 24F9				call	sub_125			; (898D)
020A:6494  BF 07E0				mov	di,7E0h
020A:6497  B0 20				mov	al,20h			; ' '
020A:6499  8B CB				mov	cx,bx
020A:649B  FC					cld				; Clear direction
020A:649C  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:649E  75 03				jnz	loc_944			; Jump if not zero
020A:64A0			loc_943::
020A:64A0  E9 0086				jmp	loc_948			; (6529)
020A:64A3			loc_944::
020A:64A3  FC					cld				; Clear direction
020A:64A4  BF 3233				mov	di,3233h
020A:64A7  B9 0029				mov	cx,29h
020A:64AA  B0 00				mov	al,0
020A:64AC  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:64AE  BF 036A				mov	di,36Ah
020A:64B1  B9 000C				mov	cx,0Ch
020A:64B4  B0 20				mov	al,20h			; ' '
020A:64B6  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:64B8  BE 07E0				mov	si,7E0h
020A:64BB  BF 3233				mov	di,3233h
020A:64BE  8B CB				mov	cx,bx
020A:64C0  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:64C2  9A 168F:26A0		;*		call	far ptr sub_168		;*(168F:26A0)
020A:64C2  9A					db	9Ah
020A:64C3  26A0 168F				dw	26A0h, 168Fh
020A:64C7  83 C3 04				add	bx,4
020A:64CA  47					inc	di
020A:64CB  8B CB				mov	cx,bx
020A:64CD			loc_945::
020A:64CD  8A 05				mov	al,[di]
020A:64CF  3C 3A				cmp	al,3Ah			; ':'
020A:64D1  74 0D				je	loc_946			; Jump if equal
020A:64D3  3C 5C				cmp	al,5Ch			; '\'
020A:64D5  74 09				je	loc_946			; Jump if equal
020A:64D7  83 F9 01				cmp	cx,1
020A:64DA  76 05				jbe	loc_947			; Jump if below or =
020A:64DC  49					dec	cx
020A:64DD  4F					dec	di
020A:64DE  EB ED				jmp	short loc_945		; (64CD)
020A:64E0			loc_946::
020A:64E0  47					inc	di
020A:64E1			loc_947::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 221

020A:64E1  2B D9				sub	bx,cx
020A:64E3  8B CB				mov	cx,bx
020A:64E5  41					inc	cx
020A:64E6  83 F9 0C				cmp	cx,0Ch
020A:64E9  77 3E				ja	loc_948			; Jump if above
020A:64EB  8B F7				mov	si,di
020A:64ED  BF 036A				mov	di,36Ah
020A:64F0  FC					cld				; Clear direction
020A:64F1  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:64F3  80 3E 3234 3A			cmp	byte ptr data_376,3Ah	; (020A:3234='RCHITECTURE=x86') ':'
020A:64F8  75 2F				jne	loc_948			; Jump if not equal
020A:64FA  A0 3233				mov	al,data_375		; (020A:3233=41h)
020A:64FD  24 5F				and	al,5Fh			; '_'
020A:64FF  3C 41				cmp	al,41h			; 'A'
020A:6501  72 26				jb	loc_948			; Jump if below
020A:6503  3C 5A				cmp	al,5Ah			; 'Z'
020A:6505  77 22				ja	loc_948			; Jump if above
020A:6507  8A D0				mov	dl,al
020A:6509  80 EA 41				sub	dl,41h			; 'A'
020A:650C  8A DA				mov	bl,dl
020A:650E  B4 0E				mov	ah,0Eh
020A:6510  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:6512  B4 19				mov	ah,19h
020A:6514  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:6516  A2 30CE				mov	data_372,al		; (020A:30CE=31h)
020A:6519  04 61				add	al,61h			; 'a'
020A:651B  A2 066E				mov	byte ptr ds:[66Eh],al	; (020A:066E=0Eh)
020A:651E  E8 08AF				call	sub_90			; (6DD0)
020A:6521  8A 16 30CD				mov	dl,data_371		; (020A:30CD=7Eh)
020A:6525  B4 0E				mov	ah,0Eh
020A:6527  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:6529			loc_948::
020A:6529  E8 0A8C				call	sub_93			; (6FB8)
020A:652C  C6 47 68 07				mov	byte ptr [bx+68h],7
020A:6530  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:6534  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (020A:327D=65h)
020A:6538  E8 0AB1				call	sub_94			; (6FEC)
020A:653B  E8 0E66				call	sub_102			; (73A4)
020A:653E  E8 0703				call	sub_83			; (6C44)
020A:6541  E9 E9C7				jmp	loc_687			; (4F0B)
							                        ;* No entry point to code
020A:6544  A0 2B3B				mov	al,data_289		; (020A:2B3B=0A0h)
020A:6547  04 02				add	al,2
020A:6549  3C 14				cmp	al,14h
020A:654B  72 02				jb	loc_949			; Jump if below
020A:654D  B0 04				mov	al,4
020A:654F			loc_949::
020A:654F  E8 121A				call	sub_110			; (776C)
020A:6552  E9 E9B6				jmp	loc_687			; (4F0B)
020A:6555			loc_950::
020A:6555  B4 11				mov	ah,11h
020A:6557  E9 1FCE				jmp	loc_1339		; (8528)
							                        ;* No entry point to code
020A:655A  A0 16AB				mov	al,data_217		; (020A:16AB=41h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 222

020A:655D  BB 16AD				mov	bx,16ADh
020A:6560  D7					xlat				; al=[al+[bx]] table
020A:6561  A2 16AB				mov	data_217,al		; (020A:16AB=41h)
020A:6564  E8 0FB9				call	sub_107			; (7520)
020A:6567  E8 06DA				call	sub_83			; (6C44)
020A:656A  E9 E99E				jmp	loc_687			; (4F0B)
							                        ;* No entry point to code
020A:656D  80 3E 35E6 00			cmp	byte ptr ds:[35E6h],0	; (020A:35E6=0C0h)
020A:6572  74 20				je	loc_954			; Jump if equal
020A:6574  A0 35E4				mov	al,data_436		; (020A:35E4=46h)
020A:6577  A8 01				test	al,1
020A:6579  74 0C				jz	loc_952			; Jump if zero
020A:657B  A8 06				test	al,6
020A:657D  74 04				jz	loc_951			; Jump if zero
020A:657F  B0 09				mov	al,9
020A:6581  EB 06				jmp	short loc_953		; (6589)
020A:6583			loc_951::
020A:6583  B0 02				mov	al,2
020A:6585  EB 02				jmp	short loc_953		; (6589)
020A:6587			loc_952::
020A:6587  B0 03				mov	al,3
020A:6589			loc_953::
020A:6589  A2 35E4				mov	data_436,al		; (020A:35E4=46h)
020A:658C  9A 168F:09D8		;*		call	far ptr sub_163		;*(168F:09D8)
020A:658C  9A					db	9Ah
020A:658D  09D8 168F				dw	9D8h, 168Fh
020A:6591  E8 06B0				call	sub_83			; (6C44)
020A:6594			loc_954::
020A:6594  E9 E974				jmp	loc_687			; (4F0B)
							                        ;* No entry point to code
020A:6597  BF 13E8				mov	di,13E8h
020A:659A  A0 13E4				mov	al,data_204		; (020A:13E4=0)
020A:659D  32 C9				xor	cl,cl			; Zero register
020A:659F			loc_955::
020A:659F  3A 05				cmp	al,[di]
020A:65A1  74 0C				je	loc_956			; Jump if equal
020A:65A3  FE C1				inc	cl
020A:65A5  80 F9 0D				cmp	cl,0Dh
020A:65A8  73 05				jae	loc_956			; Jump if above or =
020A:65AA  83 C7 10				add	di,10h
020A:65AD  EB F0				jmp	short loc_955		; (659F)
020A:65AF			loc_956::
020A:65AF  80 F9 0C				cmp	cl,0Ch
020A:65B2  72 03				jb	loc_957			; Jump if below
020A:65B4  BF 13D8				mov	di,13D8h
020A:65B7			loc_957::
020A:65B7  83 C7 10				add	di,10h
020A:65BA  8A 45 0D				mov	al,[di+0Dh]
020A:65BD  A2 13E5				mov	data_205,al		; (020A:13E5=0)
020A:65C0  8A 05				mov	al,[di]
020A:65C2  A2 13E4				mov	data_204,al		; (020A:13E4=0)
020A:65C5  8B 45 0B				mov	ax,[di+0Bh]
020A:65C8  A3 13E6				mov	data_206,ax		; (020A:13E6=0)
020A:65CB  9A 168F:2B34		;*		call	far ptr sub_174		;*(168F:2B34)
020A:65CB  9A					db	9Ah
020A:65CC  2B34 168F				dw	2B34h, 168Fh
020A:65D0  E8 0671				call	sub_83			; (6C44)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 223

020A:65D3  E9 E935				jmp	loc_687			; (4F0B)
							                        ;* No entry point to code
020A:65D6  01 02				add	[bp+si],ax
020A:65D8  04 10				add	al,10h
020A:65DA  18 20				sbb	[bx+si],ah
020A:65DC  28 40 48				sub	[bx+si+48h],al
020A:65DF  88 00				mov	[bx+si],al
020A:65E1  8A 36 30A0				mov	dh,data_363		; (020A:30A0=45h)
020A:65E5  B8 0000				mov	ax,0
020A:65E8  56					push	si
020A:65E9  BE 1926				mov	si,1926h
020A:65EC			loc_958::
020A:65EC  2E: 3A 34				cmp	dh,cs:[si]
020A:65EF  74 11				je	loc_960			; Jump if equal
020A:65F1  46					inc	si
020A:65F2  2E: 80 3C 00				cmp	byte ptr cs:[si],0
020A:65F6  74 02				je	loc_959			; Jump if equal
020A:65F8  EB F2				jmp	short loc_958		; (65EC)
020A:65FA			loc_959::
020A:65FA  B6 01				mov	dh,1
020A:65FC  C6 06 30B0 00			mov	data_365,0		; (020A:30B0=44h)
020A:6601  4E					dec	si
020A:6602			loc_960::
020A:6602  46					inc	si
020A:6603  2E: 80 3C 00				cmp	byte ptr cs:[si],0
020A:6607  75 08				jne	loc_961			; Jump if not equal
020A:6609  BE 1926				mov	si,1926h
020A:660C  C6 06 30B0 00			mov	data_365,0		; (020A:30B0=44h)
020A:6611			loc_961::
020A:6611  2E: 8A 34				mov	dh,cs:[si]
020A:6614  5E					pop	si
020A:6615  88 36 30A0				mov	data_363,dh		; (020A:30A0=45h)
020A:6619  F6 06 30B0 1F			test	data_365,1Fh		; (020A:30B0=44h)
020A:661E  74 1D				jz	loc_963			; Jump if zero
020A:6620  C6 06 30B0 01			mov	data_365,1		; (020A:30B0=44h)
020A:6625  F6 C6 10				test	dh,10h
020A:6628  74 07				jz	loc_962			; Jump if zero
020A:662A  C6 06 30B0 02			mov	data_365,2		; (020A:30B0=44h)
020A:662F  EB 0C				jmp	short loc_963		; (663D)
020A:6631			loc_962::
020A:6631  F6 C6 20				test	dh,20h			; ' '
020A:6634  74 07				jz	loc_963			; Jump if zero
020A:6636  C6 06 30B0 04			mov	data_365,4		; (020A:30B0=44h)
020A:663B  EB 18				jmp	short loc_964		; (6655)
020A:663D			loc_963::
020A:663D  F6 06 30A0 C0			test	data_363,0C0h		; (020A:30A0=45h)
020A:6642  74 11				jz	loc_964			; Jump if zero
020A:6644  C6 06 30B0 0C			mov	data_365,0Ch		; (020A:30B0=44h)
020A:6649  F6 06 30A0 80			test	data_363,80h		; (020A:30A0=45h)
020A:664E  74 05				jz	loc_964			; Jump if zero
020A:6650  C6 06 30B0 14			mov	data_365,14h		; (020A:30B0=44h)
020A:6655			loc_964::
020A:6655  B6 01				mov	dh,1
020A:6657  E8 082E				call	sub_91			; (6E88)
020A:665A  E9 E8AE				jmp	loc_687			; (4F0B)
							                        ;* No entry point to code
020A:665D  80 3E 35DF 00			cmp	data_433,0		; (020A:35DF=6)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 224

020A:6662  74 07				je	loc_965			; Jump if equal
020A:6664  C6 06 35DF 00			mov	data_433,0		; (020A:35DF=6)
020A:6669  EB 05				jmp	short loc_966		; (6670)
020A:666B			loc_965::
020A:666B  C6 06 35DF 60			mov	data_433,60h		; (020A:35DF=6) '`'
020A:6670			loc_966::
020A:6670  E8 F5EE				call	sub_79			; (5C61)
020A:6673  E8 05CE				call	sub_83			; (6C44)
020A:6676  E9 E892				jmp	loc_687			; (4F0B)
							                        ;* No entry point to code
020A:6679  80 3E 35E6 00			cmp	byte ptr ds:[35E6h],0	; (020A:35E6=0C0h)
020A:667E  74 23				je	loc_969			; Jump if equal
020A:6680  8A 1E 4E7F				mov	bl,data_557		; (020A:4E7F=0A4h)
020A:6684  F6 C3 07				test	bl,7
020A:6687  74 07				jz	loc_967			; Jump if zero
020A:6689  C6					db	0C6h
020A:668A  06					push	es
020A:668B  7F 4E				jg	$+50h			; Jump if >
020A:668D  00 EB				add	bl,ch
020A:668F  0D 0E80				or	ax,0E80h
020A:6692  7F 4E				jg	$+50h			; Jump if >
020A:6694  07					pop	es
020A:6695  B0 0A				mov	al,0Ah
020A:6697  E8 10D2				call	sub_110			; (776C)
020A:669A  E9 E86E				jmp	loc_687			; (4F0B)
020A:669D			loc_968::
020A:669D  E8 0DA4				call	sub_105			; (7444)
020A:66A0  E9 E868				jmp	loc_687			; (4F0B)
020A:66A3			loc_969::
020A:66A3  E9 E8C0				jmp	loc_694			; (4F66)
							                        ;* No entry point to code
020A:66A6  E8 08E7				call	sub_92			; (6F90)
020A:66A9  B4 18				mov	ah,18h
020A:66AB  E8 093E				call	sub_94			; (6FEC)
020A:66AE  E8 0593				call	sub_83			; (6C44)
020A:66B1  9A 168F:0760		;*		call	far ptr sub_156		;*(168F:0760)
020A:66B1  9A					db	9Ah
020A:66B2  0760 168F				dw	760h, 168Fh
020A:66B6  2C 30				sub	al,30h			; '0'
020A:66B8  3C 7F				cmp	al,7Fh
020A:66BA  77 3A				ja	loc_971			; Jump if above
020A:66BC  A2 35D3				mov	data_425,al		; (020A:35D3=0EBh)
020A:66BF  A8 EB				test	al,0EBh
020A:66C1  74 2F				jz	loc_970			; Jump if zero
020A:66C3  80 3E 133E 01			cmp	data_202,1		; (020A:133E=0)
020A:66C8  74 28				je	loc_970			; Jump if equal
020A:66CA  50					push	ax
020A:66CB  51					push	cx
020A:66CC  57					push	di
020A:66CD  06					push	es
020A:66CE  1E					push	ds
020A:66CF  07					pop	es
020A:66D0  B9 001D				mov	cx,1Dh
020A:66D3  B0 20				mov	al,20h			; ' '
020A:66D5  BF 0708				mov	di,708h
020A:66D8  FC					cld				; Clear direction
020A:66D9  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 225

020A:66DB  BD 071C				mov	bp,71Ch
020A:66DE  A1 4E82				mov	ax,data_558		; (020A:4E82=709Ah)
020A:66E1  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:66E1  9A					db	9Ah
020A:66E2  021C 168F				dw	21Ch, 168Fh
020A:66E6  8B 3E 1326				mov	di,data_199		; (020A:1326=0)
020A:66EA  C6 45 5D 07				mov	byte ptr [di+5Dh],7
020A:66EE  07					pop	es
020A:66EF  5F					pop	di
020A:66F0  59					pop	cx
020A:66F1  58					pop	ax
020A:66F2			loc_970::
020A:66F2  A8 08				test	al,8
020A:66F4  75 03				jnz	loc_972			; Jump if not zero
020A:66F6			loc_971::
020A:66F6  E9 00B3				jmp	loc_976			; (67AC)
020A:66F9			loc_972::
020A:66F9  80 26 35D3 F7			and	data_425,0F7h		; (020A:35D3=0EBh)
020A:66FE  B4 23				mov	ah,23h			; '#'
020A:6700  E8 08E9				call	sub_94			; (6FEC)
020A:6703  E8 041A				call	sub_82			; (6B20)
020A:6706  B4 02				mov	ah,2
020A:6708  32 FF				xor	bh,bh			; Zero register
020A:670A  BA 1710				mov	dx,1710h
020A:670D  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:670D  9A					db	9Ah
020A:670E  2BA8 168F				dw	2BA8h, 168Fh
020A:6712  E8 0C9B				call	sub_103			; (73B0)
020A:6715  9A 168F:0760		;*		call	far ptr sub_156		;*(168F:0760)
020A:6715  9A					db	9Ah
020A:6716  0760 168F				dw	760h, 168Fh
020A:671A  8A D0				mov	dl,al
020A:671C  2C 30				sub	al,30h			; '0'
020A:671E  3C 10				cmp	al,10h
020A:6720  76 03				jbe	loc_973			; Jump if below or =
020A:6722  E9 0087				jmp	loc_976			; (67AC)
020A:6725			loc_973::
020A:6725  D0 E0				shl	al,1			; Shift w/zeros fill
020A:6727  A2 35D4				mov	data_426,al		; (020A:35D4=9)
020A:672A  9A 168F:07A0		;*		call	far ptr sub_158		;*(168F:07A0)
020A:672A  9A					db	9Ah
020A:672B  07A0 168F				dw	7A0h, 168Fh
020A:672F  B4 02				mov	ah,2
020A:6731  32 FF				xor	bh,bh			; Zero register
020A:6733  BA 1727				mov	dx,1727h
020A:6736  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:6736  9A					db	9Ah
020A:6737  2BA8 168F				dw	2BA8h, 168Fh
020A:673B  B1 04				mov	cl,4
020A:673D  B3 02				mov	bl,2
020A:673F  BE 07ED				mov	si,7EDh
020A:6742  9A 168F:0620		;*		call	far ptr sub_155		;*(168F:0620)
020A:6742  9A					db	9Ah
020A:6743  0620 168F				dw	620h, 168Fh
020A:6747  3C 1B				cmp	al,1Bh
020A:6749  74 61				je	loc_976			; Jump if equal
020A:674B  3C 0D				cmp	al,0Dh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 226

020A:674D  75 19				jne	loc_975			; Jump if not equal
020A:674F  A1 0699				mov	ax,word ptr ds:[699h]	; (020A:0699=0B050h)
020A:6752  A3 07ED				mov	word ptr ds:[7EDh],ax	; (020A:07ED=2400h)
020A:6755  A1 069B				mov	ax,word ptr ds:[69Bh]	; (020A:069B=47Fh)
020A:6758  A3 07EF				mov	data_135,ax		; (020A:07EF=0C75h)
020A:675B  B9 0004				mov	cx,4

020A:675E			locloop_974::
020A:675E  8A 14				mov	dl,[si]
020A:6760  46					inc	si
020A:6761  9A 168F:07A0		;*		call	far ptr sub_158		;*(168F:07A0)
020A:6761  9A					db	9Ah
020A:6762  07A0 168F				dw	7A0h, 168Fh
020A:6766  E2 F6				loop	locloop_974		; Loop if cx > 0

020A:6768			loc_975::
020A:6768  80 F9 00				cmp	cl,0
020A:676B  75 3F				jne	loc_976			; Jump if not equal
020A:676D  B9 0080				mov	cx,80h
020A:6770  BF 07ED				mov	di,7EDh
020A:6773  E8 EC5A		;*		call	sub_76			;*(53D0)
020A:6773  E8 5A EC				db	0E8h, 5Ah,0ECh
020A:6776  73 34				jnc	loc_976			; Jump if carry=0
020A:6778  89 16 35D5				mov	data_427,dx		; (020A:35D5=6FEh)
020A:677C  B2 3A				mov	dl,3Ah			; ':'
020A:677E  9A 168F:07A0		;*		call	far ptr sub_158		;*(168F:07A0)
020A:677E  9A					db	9Ah
020A:677F  07A0 168F				dw	7A0h, 168Fh
020A:6783  B1 04				mov	cl,4
020A:6785  B3 02				mov	bl,2
020A:6787  BE 07F2				mov	si,7F2h
020A:678A  9A 168F:0620		;*		call	far ptr sub_155		;*(168F:0620)
020A:678A  9A					db	9Ah
020A:678B  0620 168F				dw	620h, 168Fh
020A:678F  3C 1B				cmp	al,1Bh
020A:6791  74 19				je	loc_976			; Jump if equal
020A:6793  80 F9 00				cmp	cl,0
020A:6796  75 14				jne	loc_976			; Jump if not equal
020A:6798  B9 0080				mov	cx,80h
020A:679B  BF 07F2				mov	di,7F2h
020A:679E  E8 EC2F		;*		call	sub_76			;*(53D0)
020A:679E  E8 2F EC				db	0E8h, 2Fh,0ECh
020A:67A1  73 09				jnc	loc_976			; Jump if carry=0
020A:67A3  89 16 35D7				mov	data_428,dx		; (020A:35D7=126h)
020A:67A7  80 0E 35D3 08			or	data_425,8		; (020A:35D3=0EBh)
020A:67AC			loc_976::
020A:67AC  E8 0BF5				call	sub_102			; (73A4)
020A:67AF  E8 0806				call	sub_93			; (6FB8)
020A:67B2  E9 E738				jmp	loc_686			; (4EED)
020A:67B5			loc_977::
020A:67B5  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:67BA  06					push	es
020A:67BB  80 3E 1329 01			cmp	data_201,1		; (020A:1329=0)
020A:67C0  75 37				jne	loc_981			; Jump if not equal
020A:67C2  B4 02				mov	ah,2
020A:67C4  32 FF				xor	bh,bh			; Zero register
020A:67C6  BA 0500				mov	dx,500h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 227

020A:67C9  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:67C9  9A					db	9Ah
020A:67CA  2BA8 168F				dw	2BA8h, 168Fh
020A:67CE  BE 0033				mov	si,33h
020A:67D1  B9 0623				mov	cx,623h
020A:67D4  81 E9 0033				sub	cx,33h
020A:67D8  49					dec	cx
020A:67D9  E8 21B4				call	sub_126			; (8990)

020A:67DC			locloop_978::
020A:67DC  26: 8A 14				mov	dl,es:[si]
020A:67DF  80 EA 23				sub	dl,23h			; '#'
020A:67E2  80 FA 23				cmp	dl,23h			; '#'
020A:67E5  74 05				je	loc_979			; Jump if equal
020A:67E7  80 FA 40				cmp	dl,40h			; '@'
020A:67EA  75 02				jne	loc_980			; Jump if not equal
020A:67EC			loc_979::
020A:67EC  B2 20				mov	dl,20h			; ' '
020A:67EE			loc_980::
020A:67EE  9A 168F:07A0		;*		call	far ptr sub_158		;*(168F:07A0)
020A:67EE  9A					db	9Ah
020A:67EF  07A0 168F				dw	7A0h, 168Fh
020A:67F3  46					inc	si
020A:67F4  E2 E6				loop	locloop_978		; Loop if cx > 0

020A:67F6  E9 00C9				jmp	loc_991			; (68C2)
020A:67F9			loc_981::
020A:67F9  8E 06 131B				mov	es,data_195		; (020A:131B=0)
020A:67FD  BE 0033				mov	si,33h
020A:6800  B9 0623				mov	cx,623h
020A:6803  81 E9 0033				sub	cx,33h
020A:6807  E8 047E				call	sub_86			; (6C88)
020A:680A  B7 07				mov	bh,7
020A:680C  8A 16 1206				mov	dl,data_190		; (020A:1206=0)
020A:6810  BF 0320				mov	di,320h
020A:6813  03 3E 131D				add	di,data_196		; (020A:131D=0)
020A:6817  E8 215E				call	sub_123			; (8978)

020A:681A			locloop_982::
020A:681A  8A DF				mov	bl,bh
020A:681C  1E					push	ds
020A:681D  E8 2155				call	sub_122			; (8975)
020A:6820  80 3E 2B44 02			cmp	data_295,2		; (020A:2B44=0AEh)
020A:6825  1F					pop	ds
020A:6826  74 25				jz	loc_985			; Jump if zero
020A:6828  80 3C 63				cmp	byte ptr [si],63h	; 'c'
020A:682B  75 06				jne	loc_983			; Jump if not equal
020A:682D  B7 0F				mov	bh,0Fh
020A:682F  8A DF				mov	bl,bh
020A:6831  EB 0E				jmp	short loc_984		; (6841)
020A:6833			loc_983::
020A:6833  80 3C 46				cmp	byte ptr [si],46h	; 'F'
020A:6836  75 23				jne	loc_986			; Jump if not equal
020A:6838  1E					push	ds
020A:6839  E8 2139				call	sub_122			; (8975)
020A:683C  8A 1E 1207				mov	bl,data_191		; (020A:1207=0)
020A:6840  1F					pop	ds
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 228

020A:6841			loc_984::
020A:6841  FC					cld				; Clear direction
020A:6842  B0 20				mov	al,20h			; ' '
020A:6844  AA					stosb				; Store al to es:[di]
020A:6845  46					inc	si
020A:6846  26: 88 1D				mov	es:[di],bl
020A:6849  47					inc	di
020A:684A  49					dec	cx
020A:684B  EB 1C				jmp	short loc_988		; (6869)
020A:684D			loc_985::
020A:684D  81 3C 207C				cmp	word ptr [si],207Ch
020A:6851  74 0D				je	loc_987			; Jump if equal
020A:6853  81 3C 7C7C				cmp	word ptr [si],7C7Ch
020A:6857  74 07				je	loc_987			; Jump if equal
020A:6859  EB 0E				jmp	short loc_988		; (6869)
020A:685B			loc_986::
020A:685B  80 3C A3				cmp	byte ptr [si],0A3h
020A:685E  72 09				jb	loc_988			; Jump if below
020A:6860			loc_987::
020A:6860  1E					push	ds
020A:6861  E8 2111				call	sub_122			; (8975)
020A:6864  8A 1E 1206				mov	bl,data_190		; (020A:1206=0)
020A:6868  1F					pop	ds
020A:6869			loc_988::
020A:6869  FC					cld				; Clear direction
020A:686A  50					push	ax
020A:686B  AC					lodsb				; String [si] to al
020A:686C  2C 23				sub	al,23h			; '#'
020A:686E  AA					stosb				; Store al to es:[di]
020A:686F  58					pop	ax
020A:6870  26: 88 1D				mov	es:[di],bl
020A:6873  47					inc	di
020A:6874  E2 A4				loop	locloop_982		; Loop if cx > 0

020A:6876  BE 0001				mov	si,1
020A:6879  B9 001A				mov	cx,1Ah
020A:687C  81 E9 0001				sub	cx,1
020A:6880  BF 016B				mov	di,16Bh
020A:6883  81 EF 0096				sub	di,96h
020A:6887  D1 E7				shl	di,1			; Shift w/zeros fill
020A:6889  1E					push	ds
020A:688A  E8 20E8				call	sub_122			; (8975)
020A:688D  03 3E 131D				add	di,data_196		; (020A:131D=0)
020A:6891  1F					pop	ds
020A:6892  FC					cld				; Clear direction

020A:6893			locloop_989::
020A:6893  A4					movsb				; Mov [si] to es:[di]
020A:6894  47					inc	di
020A:6895  E2 FC				loop	locloop_989		; Loop if cx > 0

020A:6897  BE 001A				mov	si,1Ah
020A:689A  B9 001A				mov	cx,1Ah
020A:689D  81 E9 0001				sub	cx,1
020A:68A1  BF 016B				mov	di,16Bh
020A:68A4  81 EF 0096				sub	di,96h
020A:68A8  D1 E7				shl	di,1			; Shift w/zeros fill
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 229

020A:68AA  81 C7 00A0				add	di,0A0h
020A:68AE  1E					push	ds
020A:68AF  E8 20C3				call	sub_122			; (8975)
020A:68B2  03 3E 131D				add	di,data_196		; (020A:131D=0)
020A:68B6  1F					pop	ds
020A:68B7  FC					cld				; Clear direction

020A:68B8			locloop_990::
020A:68B8  A4					movsb				; Mov [si] to es:[di]
020A:68B9  47					inc	di
020A:68BA  E2 FC				loop	locloop_990		; Loop if cx > 0

020A:68BC  E8 20B6				call	sub_122			; (8975)
020A:68BF  E8 03EA				call	sub_87			; (6CAC)
020A:68C2			loc_991::
020A:68C2  9A 168F:0760		;*		call	far ptr sub_156		;*(168F:0760)
020A:68C2  9A					db	9Ah
020A:68C3  0760 168F				dw	760h, 168Fh
020A:68C7  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:68CC  9C					pushf				; Push flags
020A:68CD  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:68D2  5A					pop	dx
020A:68D3  8E C2				mov	es,dx
020A:68D5  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:68DA  5A					pop	dx
020A:68DB  75 0A				jnz	loc_992			; Jump if not zero
020A:68DD  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:68E2  74 03				je	loc_992			; Jump if equal
020A:68E4  E8 2405				call	sub_132			; (8CEC)
020A:68E7			loc_992::
020A:68E7  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:68EC  9D					popf				; Pop flags
020A:68ED  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:68F2  E9 E5F8				jmp	loc_686			; (4EED)
020A:68F5			loc_993::
020A:68F5  FE 06 14FA				inc	data_207		; (020A:14FA=0)
020A:68F9  80 3E 14FA 03			cmp	data_207,3		; (020A:14FA=0)
020A:68FE  72 05				jb	loc_994			; Jump if below
020A:6900  C6 06 14FA 00			mov	data_207,0		; (020A:14FA=0)
020A:6905			loc_994::
020A:6905  9A 168F:2B34		;*		call	far ptr sub_174		;*(168F:2B34)
020A:6905  9A					db	9Ah
020A:6906  2B34 168F				dw	2B34h, 168Fh
020A:690A  E8 0337				call	sub_83			; (6C44)
020A:690D  E9 E5FB				jmp	loc_687			; (4F0B)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_81		proc	near
020A:6910  F7 06 35E9 0008			test	word ptr ds:[35E9h],8	; (020A:35E9=3A01h)
020A:6916  75 03				jnz	loc_995			; Jump if not zero
020A:6918  E9 0089				jmp	loc_999			; (69A4)
020A:691B			loc_995::
020A:691B  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:6921  75 08				jne	loc_996			; Jump if not equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 230

020A:6923  2E: 80 3E 3E64 00			cmp	cs:data_486,0		; (020A:3E64=74h)
020A:6929  74 79				je	loc_999			; Jump if equal
020A:692B			loc_996::
020A:692B  50					push	ax
020A:692C  53					push	bx
020A:692D  51					push	cx
020A:692E  52					push	dx
020A:692F  56					push	si
020A:6930  57					push	di
020A:6931  55					push	bp
020A:6932  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:6937  1E					push	ds
020A:6938  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:693D  06					push	es
020A:693E  BB 1CF8				mov	bx,1CF8h
020A:6941  BA 0007				mov	dx,7
020A:6944  E8 D809				call	sub_42			; (4150)
020A:6947  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:694C  9C					pushf				; Push flags
020A:694D  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:6952  5A					pop	dx
020A:6953  8E C2				mov	es,dx
020A:6955  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:695A  5A					pop	dx
020A:695B  75 0A				jnz	loc_997			; Jump if not zero
020A:695D  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:6962  74 03				je	loc_997			; Jump if equal
020A:6964  E8 2385				call	sub_132			; (8CEC)
020A:6967			loc_997::
020A:6967  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:696C  9D					popf				; Pop flags
020A:696D  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6972  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6977  9C					pushf				; Push flags
020A:6978  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:697D  5A					pop	dx
020A:697E  8E DA				mov	ds,dx
020A:6980  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:6985  5A					pop	dx
020A:6986  75 0A				jnz	loc_998			; Jump if not zero
020A:6988  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:698D  74 03				je	loc_998			; Jump if equal
020A:698F  E8 235A				call	sub_132			; (8CEC)
020A:6992			loc_998::
020A:6992  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:6997  9D					popf				; Pop flags
020A:6998  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:699D  5D					pop	bp
020A:699E  5F					pop	di
020A:699F  5E					pop	si
020A:69A0  5A					pop	dx
020A:69A1  59					pop	cx
020A:69A2  5B					pop	bx
020A:69A3  58					pop	ax
020A:69A4			loc_999::
020A:69A4  C3					retn
				sub_81		endp
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 231


							                        ;* No entry point to code
020A:69A5  87 DB				xchg	bx,bx
020A:69A7  90					nop
020A:69A8  50					push	ax
020A:69A9  53					push	bx
020A:69AA  51					push	cx
020A:69AB  52					push	dx
020A:69AC  56					push	si
020A:69AD  57					push	di
020A:69AE  55					push	bp
020A:69AF  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:69B4  1E					push	ds
020A:69B5  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:69BA  06					push	es
020A:69BB  26: 8B 2E 0000			mov	bp,word ptr es:[0]	; (020A:0000=1828h)
020A:69C0  BE 0008				mov	si,8
020A:69C3  E8 1FAF				call	sub_122			; (8975)
020A:69C6  83 3E 30BC 06			cmp	data_367,6		; (020A:30BC=454Dh)
020A:69CB  76 02				jbe	loc_1000		; Jump if below or =
020A:69CD  EB 78				jmp	short loc_1009		; (6A47)
020A:69CF			loc_1000::
020A:69CF  BF 789B				mov	di,789Bh
020A:69D2  BB 40C2				mov	bx,40C2h
020A:69D5  26: 8A 44 05				mov	al,es:[si+5]
020A:69D9  25 000F				and	ax,0Fh
020A:69DC  D7					xlat				; al=[al+[bx]] table
020A:69DD  0A C0				or	al,al			; Zero ?
020A:69DF  75 04				jnz	loc_1001		; Jump if not zero
020A:69E1  26: 8A 44 06				mov	al,es:[si+6]
020A:69E5			loc_1001::
020A:69E5  3D 0006				cmp	ax,6
020A:69E8  77 03				ja	loc_1002		; Jump if above
020A:69EA  E9 00B8				jmp	loc_1012		; (6AA5)
020A:69ED			loc_1002::
020A:69ED  8B C8				mov	cx,ax
020A:69EF  26: 8A 44 05				mov	al,es:[si+5]
020A:69F3  24 0C				and	al,0Ch
020A:69F5  83 FE 08				cmp	si,8
020A:69F8  75 02				jne	loc_1003		; Jump if not equal
020A:69FA  8A D0				mov	dl,al
020A:69FC			loc_1003::
020A:69FC  BF 78AA				mov	di,78AAh
020A:69FF  3A C2				cmp	al,dl
020A:6A01  74 03				je	loc_1004		; Jump if equal
020A:6A03  E9 009F				jmp	loc_1012		; (6AA5)
020A:6A06			loc_1004::
020A:6A06  3C 08				cmp	al,8
020A:6A08  74 0B				je	loc_1005		; Jump if equal
020A:6A0A  3C 04				cmp	al,4
020A:6A0C  74 07				je	loc_1005		; Jump if equal
020A:6A0E  3C 00				cmp	al,0
020A:6A10  74 03				je	loc_1005		; Jump if equal
020A:6A12  E9 0090				jmp	loc_1012		; (6AA5)
020A:6A15			loc_1005::
020A:6A15  BF 787D				mov	di,787Dh
020A:6A18  26: 8B 1C				mov	bx,es:[si]
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 232

020A:6A1B  26: 8B 44 02				mov	ax,es:[si+2]
020A:6A1F  83 FB FF				cmp	bx,0FFFFh
020A:6A22  75 07				jne	loc_1006		; Jump if not equal
020A:6A24  3D FFFF				cmp	ax,0FFFFh
020A:6A27  75 02				jne	loc_1006		; Jump if not equal
020A:6A29  EB 13				jmp	short loc_1008		; (6A3E)
020A:6A2B			loc_1006::
020A:6A2B  03 F1				add	si,cx
020A:6A2D  26: 3B 1C				cmp	bx,es:[si]
020A:6A30  72 0A				jb	loc_1007		; Jump if below
020A:6A32  77 71				ja	loc_1012		; Jump if above
020A:6A34  26: 3B 44 02				cmp	ax,es:[si+2]
020A:6A38  76 02				jbe	loc_1007		; Jump if below or =
020A:6A3A  77 69				ja	loc_1012		; Jump if above
020A:6A3C			loc_1007::
020A:6A3C  EB 91				jmp	short loc_1000		; (69CF)
020A:6A3E			loc_1008::
020A:6A3E  BF 788C				mov	di,788Ch
020A:6A41  03 F1				add	si,cx
020A:6A43  3B F5				cmp	si,bp
020A:6A45  75 5E				jne	loc_1012		; Jump if not equal
020A:6A47			loc_1009::
020A:6A47  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6A4C  9C					pushf				; Push flags
020A:6A4D  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:6A52  5A					pop	dx
020A:6A53  8E C2				mov	es,dx
020A:6A55  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:6A5A  5A					pop	dx
020A:6A5B  75 0A				jnz	loc_1010		; Jump if not zero
020A:6A5D  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:6A62  74 03				je	loc_1010		; Jump if equal
020A:6A64  E8 2285				call	sub_132			; (8CEC)
020A:6A67			loc_1010::
020A:6A67  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:6A6C  9D					popf				; Pop flags
020A:6A6D  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6A72  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6A77  9C					pushf				; Push flags
020A:6A78  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:6A7D  5A					pop	dx
020A:6A7E  8E DA				mov	ds,dx
020A:6A80  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:6A85  5A					pop	dx
020A:6A86  75 0A				jnz	loc_1011		; Jump if not zero
020A:6A88  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:6A8D  74 03				je	loc_1011		; Jump if equal
020A:6A8F  E8 225A				call	sub_132			; (8CEC)
020A:6A92			loc_1011::
020A:6A92  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:6A97  9D					popf				; Pop flags
020A:6A98  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6A9D  5D					pop	bp
020A:6A9E  5F					pop	di
020A:6A9F  5E					pop	si
020A:6AA0  5A					pop	dx
020A:6AA1  59					pop	cx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 233

020A:6AA2  5B					pop	bx
020A:6AA3  58					pop	ax
020A:6AA4  C3					retn
020A:6AA5			loc_1012::
020A:6AA5  E8 1ECD				call	sub_122			; (8975)
020A:6AA8  56					push	si
020A:6AA9  BD 25B5				mov	bp,25B5h
020A:6AAC  80 FA 08				cmp	dl,8
020A:6AAF  74 0F				je	loc_1013		; Jump if equal
020A:6AB1  80 FA 04				cmp	dl,4
020A:6AB4  74 0F				je	loc_1014		; Jump if equal
020A:6AB6  80 FA 00				cmp	dl,0
020A:6AB9  74 0F				je	loc_1015		; Jump if equal
020A:6ABB  BE 7851				mov	si,7851h
020A:6ABE  EB 0F				jmp	short loc_1016		; (6ACF)
020A:6AC0			loc_1013::
020A:6AC0  BE 7846				mov	si,7846h
020A:6AC3  EB 0A				jmp	short loc_1016		; (6ACF)
020A:6AC5			loc_1014::
020A:6AC5  BE 7830				mov	si,7830h
020A:6AC8  EB 05				jmp	short loc_1016		; (6ACF)
020A:6ACA			loc_1015::
020A:6ACA  BE 783B				mov	si,783Bh
020A:6ACD  EB 00				jmp	short loc_1016		; (6ACF)
020A:6ACF			loc_1016::
020A:6ACF  9A 168F:4160		;*		call	far ptr sub_189		;*(168F:4160)
020A:6ACF  9A					db	9Ah
020A:6AD0  4160 168F				dw	4160h, 168Fh
020A:6AD4  BD 25C0				mov	bp,25C0h
020A:6AD7  8C C0				mov	ax,es
020A:6AD9  2E: 3B 06 38A1			cmp	ax,cs:data_463		; (020A:38A1=5C8Ah)
020A:6ADE  75 09				jne	loc_1017		; Jump if not equal
020A:6AE0  BE 7867				mov	si,7867h
020A:6AE3  2E: A1 38A3				mov	ax,cs:data_464		; (020A:38A3=3201h)
020A:6AE7  EB 03				jmp	short loc_1018		; (6AEC)
020A:6AE9			loc_1017::
020A:6AE9  BE 7872				mov	si,7872h
020A:6AEC			loc_1018::
020A:6AEC  50					push	ax
020A:6AED  9A 168F:4160		;*		call	far ptr sub_189		;*(168F:4160)
020A:6AED  9A					db	9Ah
020A:6AEE  4160 168F				dw	4160h, 168Fh
020A:6AF2  58					pop	ax
020A:6AF3  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:6AF3  9A					db	9Ah
020A:6AF4  021C 168F				dw	21Ch, 168Fh
020A:6AF8  5E					pop	si
020A:6AF9  8B C6				mov	ax,si
020A:6AFB  BD 25DA				mov	bp,25DAh
020A:6AFE  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:6AFE  9A					db	9Ah
020A:6AFF  021C 168F				dw	21Ch, 168Fh
020A:6B03  BD 25E1				mov	bp,25E1h
020A:6B06  A0 2B39				mov	al,byte ptr data_288	; (020A:2B39=20h)
020A:6B09  9A 168F:022C		;*		call	far ptr sub_150		;*(168F:022C)
020A:6B09  9A					db	9Ah
020A:6B0A  022C 168F				dw	22Ch, 168Fh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 234

020A:6B0E  8B F7				mov	si,di
020A:6B10  BD 25E4				mov	bp,25E4h
020A:6B13  9A 168F:4160		;*		call	far ptr sub_189		;*(168F:4160)
020A:6B13  9A					db	9Ah
020A:6B14  4160 168F				dw	4160h, 168Fh
020A:6B18  E9 19D8				jmp	loc_1336		; (84F3)
020A:6B1B  90					nop
020A:6B1C  C3					retn
020A:6B1D  00 00				add	[bx+si],al
020A:6B1F  00 50 53				add	[bx+si+53h],dl
020A:6B22  51					push	cx
020A:6B23  52					push	dx
020A:6B24  55					push	bp
020A:6B25  56					push	si
020A:6B26  57					push	di
020A:6B27  06					push	es
020A:6B28  80 3E 1329 01			cmp	data_201,1		; (020A:1329=0)
020A:6B2D  74 6B				je	loc_1026		; Jump if equal
020A:6B2F  8B 1E 1326				mov	bx,data_199		; (020A:1326=0)
020A:6B33  8E 06 131B				mov	es,data_195		; (020A:131B=0)
020A:6B37  BE 0096				mov	si,96h
020A:6B3A  BA 0A36				mov	dx,0A36h
020A:6B3D  8B 3E 131D				mov	di,data_196		; (020A:131D=0)
020A:6B41  E8 0144				call	sub_86			; (6C88)
020A:6B44  B9 0866				mov	cx,866h
020A:6B47  80 3E 2B44 02			cmp	data_295,2		; (020A:2B44=0AEh)
020A:6B4C  75 03				jne	loc_1020		; Jump if not equal
020A:6B4E  B9 0816				mov	cx,816h
020A:6B51			loc_1020::
020A:6B51  81 E9 0096				sub	cx,96h
020A:6B55  FC					cld				; Clear direction

020A:6B56			locloop_1021::
020A:6B56  80 3E 2B44 02			cmp	data_295,2		; (020A:2B44=0AEh)
020A:6B5B  75 28				jne	loc_1024		; Jump if not equal
020A:6B5D  81 FE 036A				cmp	si,36Ah
020A:6B61  72 12				jb	loc_1022		; Jump if below
020A:6B63  81 FE 0398				cmp	si,398h
020A:6B67  76 1C				jbe	loc_1024		; Jump if below or =
020A:6B69  81 FE 0649				cmp	si,649h
020A:6B6D  72 06				jb	loc_1022		; Jump if below
020A:6B6F  81 FE 0655				cmp	si,655h
020A:6B73  76 10				jbe	loc_1024		; Jump if below or =
020A:6B75			loc_1022::
020A:6B75  AC					lodsb				; String [si] to al
020A:6B76  3C 80				cmp	al,80h
020A:6B78  72 08				jb	loc_1023		; Jump if below
020A:6B7A  53					push	bx
020A:6B7B  BB 2B61				mov	bx,2B61h
020A:6B7E  2C 80				sub	al,80h
020A:6B80  D7					xlat				; al=[al+[bx]] table
020A:6B81  5B					pop	bx
020A:6B82			loc_1023::
020A:6B82  AA					stosb				; Store al to es:[di]
020A:6B83  EB 01				jmp	short loc_1025		; (6B86)
020A:6B85			loc_1024::
020A:6B85  A4					movsb				; Mov [si] to es:[di]
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 235

020A:6B86			loc_1025::
020A:6B86  87 D6				xchg	dx,si
020A:6B88  8A 04				mov	al,[si]
020A:6B8A  87 F2				xchg	si,dx
020A:6B8C  42					inc	dx
020A:6B8D  D7					xlat				; al=[al+[bx]] table
020A:6B8E  26: 88 05				mov	es:[di],al
020A:6B91  47					inc	di
020A:6B92  E2 C2				loop	locloop_1021		; Loop if cx > 0

020A:6B94  E8 0115				call	sub_87			; (6CAC)
020A:6B97  E9 009F				jmp	loc_1037		; (6C39)
020A:6B9A			loc_1026::
020A:6B9A  33 ED				xor	bp,bp			; Zero register
020A:6B9C  80 3E 2B40 01			cmp	byte ptr ds:[2B40h],1	; (020A:2B40=1Bh)
020A:6BA1  75 05				jne	loc_1027		; Jump if not equal
020A:6BA3  E8 0A0A				call	sub_108			; (75B0)
020A:6BA6  EB 0A				jmp	short loc_1028		; (6BB2)
020A:6BA8			loc_1027::
020A:6BA8  B4 03				mov	ah,3
020A:6BAA  32 FF				xor	bh,bh			; Zero register
020A:6BAC  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:6BAC  9A					db	9Ah
020A:6BAD  2BA8 168F				dw	2BA8h, 168Fh
020A:6BB1  52					push	dx
020A:6BB2			loc_1028::
020A:6BB2  B4 02				mov	ah,2
020A:6BB4  32 FF				xor	bh,bh			; Zero register
020A:6BB6  33 D2				xor	dx,dx			; Zero register
020A:6BB8  80 3E 2B45 01			cmp	data_296,1		; (020A:2B45=0E1h)
020A:6BBD  75 03				jne	loc_1029		; Jump if not equal
020A:6BBF  BA 1702				mov	dx,1702h
020A:6BC2			loc_1029::
020A:6BC2  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:6BC2  9A					db	9Ah
020A:6BC3  2BA8 168F				dw	2BA8h, 168Fh
020A:6BC7  8B 1E 1326				mov	bx,data_199		; (020A:1326=0)
020A:6BCB  B9 0866				mov	cx,866h
020A:6BCE  80 3E 2B40 01			cmp	byte ptr ds:[2B40h],1	; (020A:2B40=1Bh)
020A:6BD3  75 03				jne	loc_1030		; Jump if not equal
020A:6BD5  B9 0816				mov	cx,816h
020A:6BD8			loc_1030::
020A:6BD8  81 E9 0096				sub	cx,96h
020A:6BDC  49					dec	cx
020A:6BDD  BE 0096				mov	si,96h
020A:6BE0  BF 0A36				mov	di,0A36h
020A:6BE3  80 3E 2B45 01			cmp	data_296,1		; (020A:2B45=0E1h)
020A:6BE8  75 09				jne	locloop_1031		; Jump if not equal
020A:6BEA  B9 004C				mov	cx,4Ch
020A:6BED  BE 07C8				mov	si,7C8h
020A:6BF0  BF 1168				mov	di,1168h

020A:6BF3			locloop_1031::
020A:6BF3  8A 05				mov	al,[di]
020A:6BF5  D7					xlat				; al=[al+[bx]] table
020A:6BF6  3C 00				cmp	al,0
020A:6BF8  75 04				jne	loc_1032		; Jump if not equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 236

020A:6BFA  B2 20				mov	dl,20h			; ' '
020A:6BFC  EB 11				jmp	short loc_1034		; (6C0F)
020A:6BFE			loc_1032::
020A:6BFE  3C 0F				cmp	al,0Fh
020A:6C00  75 0B				jne	loc_1033		; Jump if not equal
020A:6C02  C6 06 2B41 01			mov	data_293,1		; (020A:2B41=8Dh)
020A:6C07  9A 168F:0770		;*		call	far ptr sub_157		;*(168F:0770)
020A:6C07  9A					db	9Ah
020A:6C08  0770 168F				dw	770h, 168Fh
020A:6C0C  45					inc	bp
020A:6C0D			loc_1033::
020A:6C0D  8A 14				mov	dl,[si]
020A:6C0F			loc_1034::
020A:6C0F  9A 168F:07A0		;*		call	far ptr sub_158		;*(168F:07A0)
020A:6C0F  9A					db	9Ah
020A:6C10  07A0 168F				dw	7A0h, 168Fh
020A:6C14  0B ED				or	bp,bp			; Zero ?
020A:6C16  74 07				jz	loc_1035		; Jump if zero
020A:6C18  9A 168F:0770		;*		call	far ptr sub_157		;*(168F:0770)
020A:6C18  9A					db	9Ah
020A:6C19  0770 168F				dw	770h, 168Fh
020A:6C1D  33 ED				xor	bp,bp			; Zero register
020A:6C1F			loc_1035::
020A:6C1F  46					inc	si
020A:6C20  47					inc	di
020A:6C21  E2 D0				loop	locloop_1031		; Loop if cx > 0

020A:6C23  80 3E 2B40 01			cmp	byte ptr ds:[2B40h],1	; (020A:2B40=1Bh)
020A:6C28  75 05				jne	loc_1036		; Jump if not equal
020A:6C2A  E8 09C3				call	sub_109			; (75F0)
020A:6C2D  EB 0A				jmp	short loc_1037		; (6C39)
020A:6C2F			loc_1036::
020A:6C2F  B4 02				mov	ah,2
020A:6C31  32 FF				xor	bh,bh			; Zero register
020A:6C33  5A					pop	dx
020A:6C34  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:6C34  9A					db	9Ah
020A:6C35  2BA8 168F				dw	2BA8h, 168Fh
020A:6C39			loc_1037::
020A:6C39  07					pop	es
020A:6C3A  5F					pop	di
020A:6C3B  5E					pop	si
020A:6C3C  5D					pop	bp
020A:6C3D  5A					pop	dx
020A:6C3E  59					pop	cx
020A:6C3F  5B					pop	bx
020A:6C40  58					pop	ax
020A:6C41  C3					retn
020A:6C42  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_83		proc	near
020A:6C44  E8 FED9		;*		call	sub_82			;*(6B20)
020A:6C44  E8 D9 FE				db	0E8h,0D9h,0FEh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 237

020A:6C47  50					push	ax
020A:6C48  53					push	bx
020A:6C49  52					push	dx
020A:6C4A  B4 02				mov	ah,2
020A:6C4C  32 FF				xor	bh,bh			; Zero register
020A:6C4E  BA 184F				mov	dx,184Fh
020A:6C51  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:6C51  9A					db	9Ah
020A:6C52  2BA8 168F				dw	2BA8h, 168Fh
020A:6C56  5A					pop	dx
020A:6C57  5B					pop	bx
020A:6C58  58					pop	ax
020A:6C59  C3					retn
				sub_83		endp

020A:6C5A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_84		proc	near
020A:6C5C			loc_1038::
020A:6C5C  80 3E 1329 01			cmp	data_201,1		; (020A:1329=0)
020A:6C61  75 05				jne	loc_1039		; Jump if not equal
020A:6C63  C6 06 2B45 01			mov	data_296,1		; (020A:2B45=0E1h)
020A:6C68			loc_1039::
020A:6C68  E8 FFD9				call	sub_83			; (6C44)
020A:6C6B  C6 06 2B45 00			mov	data_296,0		; (020A:2B45=0E1h)
020A:6C70  C3					retn
				sub_84		endp

020A:6C71  87 DB				xchg	bx,bx
020A:6C73  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_85		proc	near
020A:6C74  80 3E 4394 01			cmp	data_502,1		; (020A:4394=0AAh)
020A:6C79  74 0A				je	loc_1040		; Jump if equal
020A:6C7B  80 3E 4394 15			cmp	data_502,15h		; (020A:4394=0AAh)
020A:6C80  74 03				je	loc_1040		; Jump if equal
020A:6C82  E9 FE9B		;*		jmp	loc_1019		;*(6B20)
020A:6C82  E9 9B FE				db	0E9h, 9Bh,0FEh
020A:6C85			loc_1040::
020A:6C85  EB D5				jmp	short loc_1038		; (6C5C)
				sub_85		endp

020A:6C87  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_86		proc	near
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 238

020A:6C88  80 3E 1328 01			cmp	byte ptr ds:[1328h],1	; (9A19:1328=0F8h)
020A:6C8D  74 1C				je	loc_1042		; Jump if equal
020A:6C8F  52					push	dx
020A:6C90  BA 03DA				mov	dx,3DAh
020A:6C93			loc_1041::
020A:6C93  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:6C94  A8 08				test	al,8
020A:6C96  75 FB				jnz	loc_1041		; Jump if not zero
020A:6C98  BA 03D8				mov	dx,3D8h
020A:6C9B  1E					push	ds
020A:6C9C  33 C0				xor	ax,ax			; Zero register
020A:6C9E  8E D8				mov	ds,ax
020A:6CA0  A0 0465				mov	al,byte ptr ds:[465h]	; (0000:0465=29h)
020A:6CA3  24 F7				and	al,0F7h
020A:6CA5  A2 0465				mov	byte ptr ds:[465h],al	; (0000:0465=29h)
020A:6CA8  EE					out	dx,al			; port 3D8h, CGA video control
020A:6CA9  1F					pop	ds
020A:6CAA  5A					pop	dx
020A:6CAB			loc_1042::
020A:6CAB  C3					retn
				sub_86		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_87		proc	near
020A:6CAC  80 3E 2B44 02			cmp	byte ptr ds:[2B44h],2	; (9A19:2B44=20h)
020A:6CB1  75 17				jne	loc_1043		; Jump if not equal
020A:6CB3  0E					push	cs
020A:6CB4  57					push	di
020A:6CB5  06					push	es
020A:6CB6  B4 FF				mov	ah,0FFh
020A:6CB8  B9 07D0				mov	cx,7D0h
020A:6CBB  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (9A19:131B=50C3h)
020A:6CBF  8B 3E 131D				mov	di,word ptr ds:[131Dh]	; (9A19:131D=5706h)
020A:6CC3  CD 10				int	10h			; Video display   ah=functn FFh
										;  update video buffer   Topview
020A:6CC5  07					pop	es
020A:6CC6  5F					pop	di
020A:6CC7  59					pop	cx
020A:6CC8  EB 1B				jmp	short loc_1044		; (6CE5)
020A:6CCA			loc_1043::
020A:6CCA  80 3E 1328 01			cmp	byte ptr ds:[1328h],1	; (9A19:1328=0F8h)
020A:6CCF  74 14				je	loc_1044		; Jump if equal
020A:6CD1  52					push	dx
020A:6CD2  BA 03D8				mov	dx,3D8h
020A:6CD5  1E					push	ds
020A:6CD6  33 C0				xor	ax,ax			; Zero register
020A:6CD8  8E D8				mov	ds,ax
020A:6CDA  A0 0465				mov	al,byte ptr ds:[465h]	; (0000:0465=29h)
020A:6CDD  0C 08				or	al,8
020A:6CDF  A2 0465				mov	byte ptr ds:[465h],al	; (0000:0465=29h)
020A:6CE2  EE					out	dx,al			; port 3D8h, CGA video control
020A:6CE3  1F					pop	ds
020A:6CE4  5A					pop	dx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 239

020A:6CE5			loc_1044::
020A:6CE5  C3					retn
				sub_87		endp

020A:6CE6  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_88		proc	near
020A:6CE8  80 3E 1328 01			cmp	data_200,1		; (020A:1328=0)
020A:6CED  75 22				jne	loc_1046		; Jump if not equal
020A:6CEF  80 3E 1329 01			cmp	data_201,1		; (020A:1329=0)
020A:6CF4  74 1B				je	loc_1046		; Jump if equal
020A:6CF6  D1 E7				shl	di,1			; Shift w/zeros fill
020A:6CF8  26: 88 25				mov	es:[di],ah
020A:6CFB  80 3E 2B44 02			cmp	data_295,2		; (020A:2B44=0AEh)
020A:6D00  74 03				je	loc_1045		; Jump if equal
020A:6D02  D1 EF				shr	di,1			; Shift w/zeros fill
020A:6D04  C3					retn
020A:6D05			loc_1045::
020A:6D05  51					push	cx
020A:6D06  B4 FF				mov	ah,0FFh
020A:6D08  B9 0001				mov	cx,1
020A:6D0B  CD 10				int	10h			; Video display   ah=functn FFh
										;  update video buffer   Topview
020A:6D0D  D1 EF				shr	di,1			; Shift w/zeros fill
020A:6D0F  59					pop	cx
020A:6D10  C3					retn
020A:6D11			loc_1046::
020A:6D11  51					push	cx
020A:6D12  52					push	dx
020A:6D13  50					push	ax
020A:6D14  80 3E 1329 01			cmp	data_201,1		; (020A:1329=0)
020A:6D19  74 20				je	loc_1050		; Jump if equal
020A:6D1B  D1 E7				shl	di,1			; Shift w/zeros fill
020A:6D1D  BA 03DA				mov	dx,3DAh
020A:6D20			loc_1047::
020A:6D20  FB					sti				; Enable interrupts
020A:6D21  B5 09				mov	ch,9
020A:6D23  FA					cli				; Disable interrupts
020A:6D24  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:6D25  A8 08				test	al,8
020A:6D27  75 09				jnz	loc_1049		; Jump if not zero
020A:6D29  A8 01				test	al,1
020A:6D2B  75 F3				jnz	loc_1047		; Jump if not zero
020A:6D2D			loc_1048::
020A:6D2D  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:6D2E  84 C5				test	al,ch
020A:6D30  74 FB				jz	loc_1048		; Jump if zero
020A:6D32			loc_1049::
020A:6D32  FC					cld				; Clear direction
020A:6D33  8A C4				mov	al,ah
020A:6D35  AA					stosb				; Store al to es:[di]
020A:6D36  FB					sti				; Enable interrupts
020A:6D37  D1 EF				shr	di,1			; Shift w/zeros fill
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 240

020A:6D39  EB 33				jmp	short loc_1053		; (6D6E)
020A:6D3B			loc_1050::
020A:6D3B  80 FC 20				cmp	ah,20h			; ' '
020A:6D3E  72 2E				jb	loc_1053		; Jump if below
020A:6D40  53					push	bx
020A:6D41  50					push	ax
020A:6D42  B2 50				mov	dl,50h			; 'P'
020A:6D44  8B C7				mov	ax,di
020A:6D46  F6 F2				div	dl			; al, ah rem = ax/reg
020A:6D48  86 C4				xchg	al,ah
020A:6D4A  8B D0				mov	dx,ax
020A:6D4C  B4 02				mov	ah,2
020A:6D4E  32 FF				xor	bh,bh			; Zero register
020A:6D50  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:6D50  9A					db	9Ah
020A:6D51  2BA8 168F				dw	2BA8h, 168Fh
020A:6D55  58					pop	ax
020A:6D56  80 3E 2B41 01			cmp	data_293,1		; (020A:2B41=8Dh)
020A:6D5B  75 09				jne	loc_1051		; Jump if not equal
020A:6D5D  8A C4				mov	al,ah
020A:6D5F  9A 168F:07C8		;*		call	far ptr sub_159		;*(168F:07C8)
020A:6D5F  9A					db	9Ah
020A:6D60  07C8 168F				dw	7C8h, 168Fh
020A:6D64  EB 07				jmp	short loc_1052		; (6D6D)
020A:6D66			loc_1051::
020A:6D66  8A D4				mov	dl,ah
020A:6D68  9A 168F:07A0		;*		call	far ptr sub_158		;*(168F:07A0)
020A:6D68  9A					db	9Ah
020A:6D69  07A0 168F				dw	7A0h, 168Fh
020A:6D6D			loc_1052::
020A:6D6D  5B					pop	bx
020A:6D6E			loc_1053::
020A:6D6E  58					pop	ax
020A:6D6F  5A					pop	dx
020A:6D70  59					pop	cx
020A:6D71  C3					retn
				sub_88		endp

020A:6D72  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_89		proc	near
020A:6D74  80 3E 1328 01			cmp	data_200,1		; (020A:1328=0)
020A:6D79  75 25				jne	loc_1055		; Jump if not equal
020A:6D7B  80 3E 1329 01			cmp	data_201,1		; (020A:1329=0)
020A:6D80  74 1E				je	loc_1055		; Jump if equal
020A:6D82  D1 E7				shl	di,1			; Shift w/zeros fill
020A:6D84  26: 88 65 01				mov	es:[di+1],ah
020A:6D88  80 3E 2B44 02			cmp	data_295,2		; (020A:2B44=0AEh)
020A:6D8D  74 04				je	loc_1054		; Jump if equal
020A:6D8F  D1 EF				shr	di,1			; Shift w/zeros fill
020A:6D91  47					inc	di
020A:6D92  C3					retn
020A:6D93			loc_1054::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 241

020A:6D93  51					push	cx
020A:6D94  B4 FF				mov	ah,0FFh
020A:6D96  B9 0001				mov	cx,1
020A:6D99  CD 10				int	10h			; Video display   ah=functn FFh
										;  update video buffer   Topview
020A:6D9B  D1 EF				shr	di,1			; Shift w/zeros fill
020A:6D9D  47					inc	di
020A:6D9E  59					pop	cx
020A:6D9F  C3					retn
020A:6DA0			loc_1055::
020A:6DA0  51					push	cx
020A:6DA1  52					push	dx
020A:6DA2  50					push	ax
020A:6DA3  80 3E 1329 01			cmp	data_201,1		; (020A:1329=0)
020A:6DA8  74 20				je	loc_1059		; Jump if equal
020A:6DAA  D1 E7				shl	di,1			; Shift w/zeros fill
020A:6DAC  47					inc	di
020A:6DAD  BA 03DA				mov	dx,3DAh
020A:6DB0			loc_1056::
020A:6DB0  FB					sti				; Enable interrupts
020A:6DB1  B5 09				mov	ch,9
020A:6DB3  FA					cli				; Disable interrupts
020A:6DB4  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:6DB5  A8 08				test	al,8
020A:6DB7  75 09				jnz	loc_1058		; Jump if not zero
020A:6DB9  A8 01				test	al,1
020A:6DBB  75 F3				jnz	loc_1056		; Jump if not zero
020A:6DBD			loc_1057::
020A:6DBD  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:6DBE  84 C5				test	al,ch
020A:6DC0  74 FB				jz	loc_1057		; Jump if zero
020A:6DC2			loc_1058::
020A:6DC2  FC					cld				; Clear direction
020A:6DC3  8A C4				mov	al,ah
020A:6DC5  AA					stosb				; Store al to es:[di]
020A:6DC6  FB					sti				; Enable interrupts
020A:6DC7  4F					dec	di
020A:6DC8  D1 EF				shr	di,1			; Shift w/zeros fill
020A:6DCA			loc_1059::
020A:6DCA  47					inc	di
020A:6DCB  58					pop	ax
020A:6DCC  5A					pop	dx
020A:6DCD  59					pop	cx
020A:6DCE  C3					retn
				sub_89		endp

020A:6DCF  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_90		proc	near
020A:6DD0  52					push	dx
020A:6DD1  E8 1BB9				call	sub_125			; (898D)
020A:6DD4  BF 06B9				mov	di,6B9h
020A:6DD7  B9 000A				mov	cx,0Ah
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 242

020A:6DDA  B0 20				mov	al,20h			; ' '
020A:6DDC  FC					cld				; Clear direction
020A:6DDD  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:6DDF  B4 36				mov	ah,36h			; '6'
020A:6DE1  32 D2				xor	dl,dl			; Zero register
020A:6DE3  CD 21				int	21h			; DOS Services  ah=function 36h
										;  get drive info, drive dl,1=a:
										;   returns ax=sectors per clust
										;   bx=avail clust,cx=bytes/sect
										;   dx=clusters per drive
020A:6DE5  3D FFFF				cmp	ax,0FFFFh
020A:6DE8  75 03				jne	loc_1060		; Jump if not equal
020A:6DEA  E9 0096				jmp	loc_1066		; (6E83)
020A:6DED			loc_1060::
020A:6DED  F7 E1				mul	cx			; dx:ax = reg * ax
020A:6DEF  F7 E3				mul	bx			; dx:ax = reg * ax
020A:6DF1  81 FA 05F5				cmp	dx,5F5h
020A:6DF5  72 0F				jb	loc_1061		; Jump if below
020A:6DF7  56					push	si
020A:6DF8  BD 06BE				mov	bp,6BEh
020A:6DFB  BE 564A				mov	si,564Ah
020A:6DFE  9A 168F:4160		;*		call	far ptr sub_189		;*(168F:4160)
020A:6DFE  9A					db	9Ah
020A:6DFF  4160 168F				dw	4160h, 168Fh
020A:6E03  5E					pop	si
020A:6E04  EB 7D				jmp	short loc_1066		; (6E83)
020A:6E06			loc_1061::
020A:6E06  B9 2710				mov	cx,2710h
020A:6E09  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020A:6E0B  50					push	ax
020A:6E0C  BD 06BE				mov	bp,6BEh
020A:6E0F  B3 01				mov	bl,1
020A:6E11  8B C2				mov	ax,dx
020A:6E13  9A 168F:0288		;*		call	far ptr sub_152		;*(168F:0288)
020A:6E13  9A					db	9Ah
020A:6E14  0288 168F				dw	288h, 168Fh
020A:6E18  83 ED 04				sub	bp,4
020A:6E1B  3E: 8A 4E 00				mov	cl,ds:[bp]
020A:6E1F  58					pop	ax
020A:6E20  3D 0000				cmp	ax,0
020A:6E23  75 11				jne	loc_1062		; Jump if not equal
020A:6E25  80 F9 20				cmp	cl,20h			; ' '
020A:6E28  74 59				je	loc_1066		; Jump if equal
020A:6E2A  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:6E2F  4D					dec	bp
020A:6E30  3E: 88 4E 00				mov	ds:[bp],cl
020A:6E34  EB 4D				jmp	short loc_1066		; (6E83)
020A:6E36			loc_1062::
020A:6E36  80 F9 20				cmp	cl,20h			; ' '
020A:6E39  75 02				jne	loc_1063		; Jump if not equal
020A:6E3B  B1 30				mov	cl,30h			; '0'
020A:6E3D			loc_1063::
020A:6E3D  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:6E42  4D					dec	bp
020A:6E43  3E: 88 4E 00				mov	ds:[bp],cl
020A:6E47  83 C5 02				add	bp,2
020A:6E4A  3E: 80 7E 00 20			cmp	byte ptr ds:[bp],20h	; ' '
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 243

020A:6E4F  75 05				jne	loc_1064		; Jump if not equal
020A:6E51  3E: C6 46 00 30			mov	byte ptr ds:[bp],30h	; '0'
020A:6E56			loc_1064::
020A:6E56  45					inc	bp
020A:6E57  3E: 80 7E 00 20			cmp	byte ptr ds:[bp],20h	; ' '
020A:6E5C  75 05				jne	loc_1065		; Jump if not equal
020A:6E5E  3E: C6 46 00 30			mov	byte ptr ds:[bp],30h	; '0'
020A:6E63			loc_1065::
020A:6E63  BD 06B9				mov	bp,6B9h
020A:6E66  B3 01				mov	bl,1
020A:6E68  9A 168F:0288		;*		call	far ptr sub_152		;*(168F:0288)
020A:6E68  9A					db	9Ah
020A:6E69  0288 168F				dw	288h, 168Fh
020A:6E6D  83 ED 04				sub	bp,4
020A:6E70  3E: 8B 46 00				mov	ax,ds:[bp]
020A:6E74  80 FC 20				cmp	ah,20h			; ' '
020A:6E77  74 0A				je	loc_1066		; Jump if equal
020A:6E79  3E: C6 46 01 2C			mov	byte ptr ds:[bp+1],2Ch	; ','
020A:6E7E  4D					dec	bp
020A:6E7F  3E: 89 46 00				mov	ds:[bp],ax
020A:6E83			loc_1066::
020A:6E83  5A					pop	dx
020A:6E84  C3					retn
				sub_90		endp

020A:6E85  87 DB				xchg	bx,bx
020A:6E87  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_91		proc	near
020A:6E88  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:6E8D  06					push	es
020A:6E8E  E8 1AFC				call	sub_125			; (898D)
020A:6E91  8A E6				mov	ah,dh
020A:6E93  8A 36 30A0				mov	dh,byte ptr ds:[30A0h]	; (ss:30A0=15h)
020A:6E97  BE 1349				mov	si,1349h
020A:6E9A  BF 0739				mov	di,739h
020A:6E9D  B9 1355				mov	cx,1355h
020A:6EA0  81 E9 1349				sub	cx,1349h
020A:6EA4  BB 1926				mov	bx,1926h
020A:6EA7			loc_1067::
020A:6EA7  2E: 3A 37				cmp	dh,cs:[bx]
020A:6EAA  74 0B				je	loc_1068		; Jump if equal
020A:6EAC  43					inc	bx
020A:6EAD  03 F1				add	si,cx
020A:6EAF  2E: 80 3F 00				cmp	byte ptr cs:[bx],0
020A:6EB3  74 02				je	loc_1068		; Jump if equal
020A:6EB5  EB F0				jmp	short loc_1067		; (6EA7)
020A:6EB7			loc_1068::
020A:6EB7  FC					cld				; Clear direction
020A:6EB8  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:6EBA  8A 36 30B0				mov	dh,byte ptr ds:[30B0h]	; (ss:30B0=3Eh)
020A:6EBE  BE 13C1				mov	si,13C1h
020A:6EC1  BF 072E				mov	di,72Eh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 244

020A:6EC4  B9 13C6				mov	cx,13C6h
020A:6EC7  81 E9 13C1				sub	cx,13C1h
020A:6ECB  F6 C6 1F				test	dh,1Fh
020A:6ECE  75 0B				jnz	loc_1069		; Jump if not zero
020A:6ED0  F6 06 30B2 80			test	byte ptr ds:[30B2h],80h	; (ss:30B2=4Dh)
020A:6ED5  74 36				jz	loc_1071		; Jump if zero
020A:6ED7  03 F1				add	si,cx
020A:6ED9  EB 32				jmp	short loc_1071		; (6F0D)
020A:6EDB			loc_1069::
020A:6EDB  03 F1				add	si,cx
020A:6EDD  03 F1				add	si,cx
020A:6EDF  F6 C6 01				test	dh,1
020A:6EE2  75 29				jnz	loc_1071		; Jump if not zero
020A:6EE4  03 F1				add	si,cx
020A:6EE6  F6 C6 02				test	dh,2
020A:6EE9  75 22				jnz	loc_1071		; Jump if not zero
020A:6EEB  03 F1				add	si,cx
020A:6EED  52					push	dx
020A:6EEE  8A D6				mov	dl,dh
020A:6EF0  80 E2 FB				and	dl,0FBh
020A:6EF3  F6 C2 14				test	dl,14h
020A:6EF6  5A					pop	dx
020A:6EF7  74 06				jz	loc_1070		; Jump if zero
020A:6EF9  03 F1				add	si,cx
020A:6EFB  03 F1				add	si,cx
020A:6EFD  EB 0E				jmp	short loc_1071		; (6F0D)
020A:6EFF			loc_1070::
020A:6EFF  52					push	dx
020A:6F00  8A D6				mov	dl,dh
020A:6F02  80 E2 FB				and	dl,0FBh
020A:6F05  F6 C2 0C				test	dl,0Ch
020A:6F08  5A					pop	dx
020A:6F09  74 02				jz	loc_1071		; Jump if zero
020A:6F0B  03 F1				add	si,cx
020A:6F0D			loc_1071::
020A:6F0D  FC					cld				; Clear direction
020A:6F0E  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:6F10  80 FC 00				cmp	ah,0
020A:6F13  74 4C				je	loc_1075		; Jump if equal
020A:6F15  80 3E 1329 01			cmp	byte ptr ds:[1329h],1	; (ss:1329=0E9h)
020A:6F1A  74 05				je	loc_1072		; Jump if equal
020A:6F1C  E8 FD55				call	sub_85			; (6C74)
020A:6F1F  EB 40				jmp	short loc_1075		; (6F61)
020A:6F21			loc_1072::
020A:6F21  BE 0739				mov	si,739h
020A:6F24  BF 0739				mov	di,739h
020A:6F27  81 EF 0096				sub	di,96h
020A:6F2B  03 3E 131D				add	di,word ptr ds:[131Dh]	; (ss:131D=777h)
020A:6F2F  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (ss:131B=19F9h)
020A:6F33  B9 1355				mov	cx,1355h
020A:6F36  81 E9 1349				sub	cx,1349h

020A:6F3A			locloop_1073::
020A:6F3A  8A 24				mov	ah,[si]
020A:6F3C  E8 FDA9				call	sub_88			; (6CE8)
020A:6F3F  47					inc	di
020A:6F40  46					inc	si
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 245

020A:6F41  E2 F7				loop	locloop_1073		; Loop if cx > 0

020A:6F43  BE 072E				mov	si,72Eh
020A:6F46  BF 072E				mov	di,72Eh
020A:6F49  81 EF 0096				sub	di,96h
020A:6F4D  03 3E 131D				add	di,word ptr ds:[131Dh]	; (ss:131D=777h)
020A:6F51  B9 13C6				mov	cx,13C6h
020A:6F54  81 E9 13C1				sub	cx,13C1h

020A:6F58			locloop_1074::
020A:6F58  8A 24				mov	ah,[si]
020A:6F5A  E8 FD8B				call	sub_88			; (6CE8)
020A:6F5D  47					inc	di
020A:6F5E  46					inc	si
020A:6F5F  E2 F7				loop	locloop_1074		; Loop if cx > 0

020A:6F61			loc_1075::
020A:6F61  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6F66  9C					pushf				; Push flags
020A:6F67  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:6F6C  5A					pop	dx
020A:6F6D  8E C2				mov	es,dx
020A:6F6F  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:6F74  5A					pop	dx
020A:6F75  75 0A				jnz	loc_1076		; Jump if not zero
020A:6F77  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:6F7C  74 03				je	loc_1076		; Jump if equal
020A:6F7E  E8 1D6B				call	sub_132			; (8CEC)
020A:6F81			loc_1076::
020A:6F81  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:6F86  9D					popf				; Pop flags
020A:6F87  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6F8C  C3					retn
				sub_91		endp

020A:6F8D  87 DB				xchg	bx,bx
020A:6F8F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_92		proc	near
020A:6F90  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (9A19:1326=0FFFEh)
020A:6F94  B9 0011				mov	cx,11h

020A:6F97			locloop_1077::
020A:6F97  C6 47 30 07				mov	byte ptr [bx+30h],7
020A:6F9B  43					inc	bx
020A:6F9C  E2 F9				loop	locloop_1077		; Loop if cx > 0

020A:6F9E  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (9A19:1326=0FFFEh)
020A:6FA2  80 3E 35E6 01			cmp	byte ptr ds:[35E6h],1	; (9A19:35E6=0E2h)
020A:6FA7  74 0C				je	loc_1078		; Jump if equal
020A:6FA9  C6 47 30 00				mov	byte ptr [bx+30h],0
020A:6FAD  C6 47 33 00				mov	byte ptr [bx+33h],0
020A:6FB1  C6 47 34 00				mov	byte ptr [bx+34h],0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 246

020A:6FB5			loc_1078::
020A:6FB5  C3					retn
				sub_92		endp

020A:6FB6  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_93		proc	near
020A:6FB8  8B 1E 1326				mov	bx,data_199		; (020A:1326=0)
020A:6FBC  B9 0011				mov	cx,11h

020A:6FBF			locloop_1079::
020A:6FBF  C6 47 30 0F				mov	byte ptr [bx+30h],0Fh
020A:6FC3  43					inc	bx
020A:6FC4  E2 F9				loop	locloop_1079		; Loop if cx > 0

020A:6FC6  8B 1E 1326				mov	bx,data_199		; (020A:1326=0)
020A:6FCA  80 3E 35E6 01			cmp	byte ptr ds:[35E6h],1	; (020A:35E6=0C0h)
020A:6FCF  74 0C				je	loc_1080		; Jump if equal
020A:6FD1  C6 47 30 00				mov	byte ptr [bx+30h],0
020A:6FD5  C6 47 33 00				mov	byte ptr [bx+33h],0
020A:6FD9  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:6FDD			loc_1080::
020A:6FDD  2E: 80 3E 3E64 01			cmp	cs:data_486,1		; (020A:3E64=74h)
020A:6FE3  75 04				jne	loc_1081		; Jump if not equal
020A:6FE5  C6 47 38 07				mov	byte ptr [bx+38h],7
020A:6FE9			loc_1081::
020A:6FE9  C3					retn
				sub_93		endp

020A:6FEA  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_94		proc	near
020A:6FEC  57					push	di
020A:6FED  56					push	si
020A:6FEE  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:6FF3  06					push	es
020A:6FF4  E8 1996				call	sub_125			; (898D)
020A:6FF7  88 26 1732				mov	byte ptr ds:[1732h],ah	; (ss:1732=4)
020A:6FFB  B9 177E				mov	cx,177Eh
020A:6FFE  81 E9 1734				sub	cx,1734h
020A:7002  BE 1734				mov	si,1734h
020A:7005  8A C1				mov	al,cl
020A:7007  F6 E4				mul	ah			; ax = reg * al
020A:7009  03 F0				add	si,ax
020A:700B  BF 07C9				mov	di,7C9h
020A:700E  FC					cld				; Clear direction
020A:700F  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7011  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7016  9C					pushf				; Push flags
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 247

020A:7017  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:701C  5A					pop	dx
020A:701D  8E C2				mov	es,dx
020A:701F  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:7024  5A					pop	dx
020A:7025  75 0A				jnz	loc_1082		; Jump if not zero
020A:7027  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:702C  74 03				je	loc_1082		; Jump if equal
020A:702E  E8 1CBB				call	sub_132			; (8CEC)
020A:7031			loc_1082::
020A:7031  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7036  9D					popf				; Pop flags
020A:7037  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:703C  5E					pop	si
020A:703D  5F					pop	di
020A:703E  C3					retn
				sub_94		endp

020A:703F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_95		proc	near
020A:7040  50					push	ax
020A:7041  53					push	bx
020A:7042  51					push	cx
020A:7043  52					push	dx
020A:7044  56					push	si
020A:7045  57					push	di
020A:7046  55					push	bp
020A:7047  06					push	es
020A:7048  BD 06AE				mov	bp,6AEh
020A:704B  A1 3084				mov	ax,data_350		; (020A:3084=4F43h)
020A:704E  B3 01				mov	bl,1
020A:7050  9A 168F:0288		;*		call	far ptr sub_152		;*(168F:0288)
020A:7050  9A					db	9Ah
020A:7051  0288 168F				dw	288h, 168Fh
020A:7055  BD 074E				mov	bp,74Eh
020A:7058  A1 3088				mov	ax,data_352		; (020A:3088=4C41h)
020A:705B  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:7061  75 04				jne	loc_1083		; Jump if not equal
020A:7063  03 06 3098				add	ax,data_360		; (020A:3098=3A43h)
020A:7067			loc_1083::
020A:7067  A3 3096				mov	data_359,ax		; (020A:3096=3D45h)
020A:706A  B3 01				mov	bl,1
020A:706C  9A 168F:0288		;*		call	far ptr sub_152		;*(168F:0288)
020A:706C  9A					db	9Ah
020A:706D  0288 168F				dw	288h, 168Fh
020A:7071  BD 06FE				mov	bp,6FEh
020A:7074  A1 308C				mov	ax,data_354		; (020A:308C=4553h)
020A:7077  B3 01				mov	bl,1
020A:7079  9A 168F:0288		;*		call	far ptr sub_152		;*(168F:0288)
020A:7079  9A					db	9Ah
020A:707A  0288 168F				dw	288h, 168Fh
020A:707E  8B 1E 1326				mov	bx,data_199		; (020A:1326=0)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 248

020A:7082  80 7F 4E 00				cmp	byte ptr [bx+4Eh],0
020A:7086  75 03				jne	loc_1084		; Jump if not equal
020A:7088  E9 00F7				jmp	loc_1100		; (7182)
020A:708B			loc_1084::
020A:708B  BE 06AE				mov	si,6AEh
020A:708E  B9 0005				mov	cx,5
020A:7091  80 3E 1329 01			cmp	data_201,1		; (020A:1329=0)
020A:7096  75 6F				jne	loc_1092		; Jump if not equal
020A:7098  B3 03				mov	bl,3
020A:709A  BA 1328				mov	dx,1328h
020A:709D			loc_1085::
020A:709D  F6 06 586E 80			test	data_591,80h		; (020A:586E=88h)
020A:70A2  74 0C				jz	loc_1086		; Jump if zero
020A:70A4  A1 3054				mov	ax,data_342		; (020A:3054=7400h)
020A:70A7  39 06 344C				cmp	data_391,ax		; (020A:344C=0)
020A:70AB  74 32				je	loc_1089		; Jump if equal
020A:70AD  E9 00D2				jmp	loc_1100		; (7182)
020A:70B0			loc_1086::
020A:70B0  80 FB 02				cmp	bl,2
020A:70B3  72 1E				jb	loc_1088		; Jump if below
020A:70B5  74 0E				jz	loc_1087		; Jump if zero
020A:70B7  A1 3084				mov	ax,data_350		; (020A:3084=4F43h)
020A:70BA  3B 06 3090				cmp	ax,data_356		; (020A:3090=5250h)
020A:70BE  74 3A				je	loc_1091		; Jump if equal
020A:70C0  A3 3090				mov	data_356,ax		; (020A:3090=5250h)
020A:70C3  EB 1A				jmp	short loc_1089		; (70DF)
020A:70C5			loc_1087::
020A:70C5  A1 308C				mov	ax,data_354		; (020A:308C=4553h)
020A:70C8  3B 06 3092				cmp	ax,data_357		; (020A:3092=464Fh)
020A:70CC  74 2C				je	loc_1091		; Jump if equal
020A:70CE  A3 3092				mov	data_357,ax		; (020A:3092=464Fh)
020A:70D1  EB 0C				jmp	short loc_1089		; (70DF)
020A:70D3			loc_1088::
020A:70D3  A1 3096				mov	ax,data_359		; (020A:3096=3D45h)
020A:70D6  3B 06 3094				cmp	ax,data_358		; (020A:3094=4C49h)
020A:70DA  74 1E				je	loc_1091		; Jump if equal
020A:70DC  A3 3094				mov	data_358,ax		; (020A:3094=4C49h)
020A:70DF			loc_1089::
020A:70DF  B4 02				mov	ah,2
020A:70E1  32 FF				xor	bh,bh			; Zero register
020A:70E3  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:70E3  9A					db	9Ah
020A:70E4  2BA8 168F				dw	2BA8h, 168Fh
020A:70E8  B9 0005				mov	cx,5
020A:70EB  52					push	dx
020A:70EC  56					push	si
020A:70ED  FC					cld				; Clear direction

020A:70EE			locloop_1090::
020A:70EE  AC					lodsb				; String [si] to al
020A:70EF  8A D0				mov	dl,al
020A:70F1  9A 168F:07A0		;*		call	far ptr sub_158		;*(168F:07A0)
020A:70F1  9A					db	9Ah
020A:70F2  07A0 168F				dw	7A0h, 168Fh
020A:70F6  E2 F6				loop	locloop_1090		; Loop if cx > 0

020A:70F8  5E					pop	si
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 249

020A:70F9  5A					pop	dx
020A:70FA			loc_1091::
020A:70FA  83 C6 50				add	si,50h
020A:70FD  81 C2 0100				add	dx,100h
020A:7101  FE CB				dec	bl
020A:7103  75 98				jnz	loc_1085		; Jump if not zero
020A:7105  EB 7B				jmp	short loc_1100		; (7182)
020A:7107			loc_1092::
020A:7107  8E 06 131B				mov	es,data_195		; (020A:131B=0)
020A:710B  A1 3084				mov	ax,data_350		; (020A:3084=4F43h)
020A:710E  3B 06 3090				cmp	ax,data_356		; (020A:3090=5250h)
020A:7112  74 18				je	loc_1094		; Jump if equal
020A:7114  A3 3090				mov	data_356,ax		; (020A:3090=5250h)
020A:7117  BF 06AE				mov	di,6AEh
020A:711A  81 EF 0096				sub	di,96h
020A:711E  03 3E 131D				add	di,data_196		; (020A:131D=0)

020A:7122			locloop_1093::
020A:7122  FC					cld				; Clear direction
020A:7123  AC					lodsb				; String [si] to al
020A:7124  8A E0				mov	ah,al
020A:7126  E8 FBBF				call	sub_88			; (6CE8)
020A:7129  47					inc	di
020A:712A  E2 F6				loop	locloop_1093		; Loop if cx > 0

020A:712C			loc_1094::
020A:712C  A1 308C				mov	ax,data_354		; (020A:308C=4553h)
020A:712F  3B 06 3092				cmp	ax,data_357		; (020A:3092=464Fh)
020A:7133  74 27				je	loc_1098		; Jump if equal
020A:7135  A3 3092				mov	data_357,ax		; (020A:3092=464Fh)
020A:7138  BE 06FE				mov	si,6FEh
020A:713B  BF 06FE				mov	di,6FEh
020A:713E  81 EF 0096				sub	di,96h
020A:7142  03 3E 131D				add	di,data_196		; (020A:131D=0)
020A:7146  B9 0005				mov	cx,5

020A:7149			locloop_1095::
020A:7149  AC					lodsb				; String [si] to al
020A:714A  83 F9 01				cmp	cx,1
020A:714D  76 05				jbe	loc_1096		; Jump if below or =
020A:714F  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:7152  74 05				je	loc_1097		; Jump if equal
020A:7154			loc_1096::
020A:7154  8A E0				mov	ah,al
020A:7156  E8 FB8F				call	sub_88			; (6CE8)
020A:7159			loc_1097::
020A:7159  47					inc	di
020A:715A  E2 ED				loop	locloop_1095		; Loop if cx > 0

020A:715C			loc_1098::
020A:715C  A1 3096				mov	ax,data_359		; (020A:3096=3D45h)
020A:715F  3B 06 3094				cmp	ax,data_358		; (020A:3094=4C49h)
020A:7163  74 1D				je	loc_1100		; Jump if equal
020A:7165  A3 3094				mov	data_358,ax		; (020A:3094=4C49h)
020A:7168  BE 074E				mov	si,74Eh
020A:716B  BF 074E				mov	di,74Eh
020A:716E  81 EF 0096				sub	di,96h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 250

020A:7172  03 3E 131D				add	di,data_196		; (020A:131D=0)
020A:7176  B9 0005				mov	cx,5

020A:7179			locloop_1099::
020A:7179  AC					lodsb				; String [si] to al
020A:717A  8A E0				mov	ah,al
020A:717C  E8 FB69				call	sub_88			; (6CE8)
020A:717F  47					inc	di
020A:7180  E2 F7				loop	locloop_1099		; Loop if cx > 0

020A:7182			loc_1100::
020A:7182  07					pop	es
020A:7183  5D					pop	bp
020A:7184  5F					pop	di
020A:7185  5E					pop	si
020A:7186  5A					pop	dx
020A:7187  59					pop	cx
020A:7188  5B					pop	bx
020A:7189  58					pop	ax
020A:718A  C3					retn
				sub_95		endp

							                        ;* No entry point to code
020A:718B  90					nop
020A:718C  50					push	ax
020A:718D  53					push	bx
020A:718E  51					push	cx
020A:718F  52					push	dx
020A:7190  57					push	di
020A:7191  55					push	bp
020A:7192  06					push	es
020A:7193  F6 06 586E 80			test	data_591,80h		; (020A:586E=88h)
020A:7198  74 0B				jz	loc_1101		; Jump if zero
020A:719A  A1 3054				mov	ax,data_342		; (020A:3054=7400h)
020A:719D  39 06 344C				cmp	data_391,ax		; (020A:344C=0)
020A:71A1  74 02				je	loc_1101		; Jump if equal
020A:71A3  EB 74				jmp	short loc_1103		; (7219)
020A:71A5			loc_1101::
020A:71A5  BD 07DC				mov	bp,7DCh
020A:71A8  56					push	si
020A:71A9  BE 405B				mov	si,405Bh
020A:71AC  9A 168F:4160		;*		call	far ptr sub_189		;*(168F:4160)
020A:71AC  9A					db	9Ah
020A:71AD  4160 168F				dw	4160h, 168Fh
020A:71B1  5E					pop	si
020A:71B2  A1 344C				mov	ax,data_391		; (020A:344C=0)
020A:71B5  3E: 8B 56 00				mov	dx,ds:[bp]
020A:71B9  3E: 8B 5E 02				mov	bx,ds:[bp+2]
020A:71BD  53					push	bx
020A:71BE  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:71BE  9A					db	9Ah
020A:71BF  021C 168F				dw	21Ch, 168Fh
020A:71C3  5B					pop	bx
020A:71C4  8E 06 131B				mov	es,data_195		; (020A:131B=0)
020A:71C8  BF 07C9				mov	di,7C9h
020A:71CB  83 C7 13				add	di,13h
020A:71CE  81 EF 0096				sub	di,96h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 251

020A:71D2  03 3E 131D				add	di,data_196		; (020A:131D=0)
020A:71D6  BD 07DC				mov	bp,7DCh
020A:71D9  B9 0009				mov	cx,9
020A:71DC  A1 344A				mov	ax,data_390		; (020A:344A=0)
020A:71DF  3B 06 344E				cmp	ax,data_392		; (020A:344E=0)
020A:71E3  A3 344E				mov	data_392,ax		; (020A:344E=0)
020A:71E6  75 21				jnz	locloop_1102		; Jump if not zero
020A:71E8  83 C7 05				add	di,5
020A:71EB  83 C5 05				add	bp,5
020A:71EE  B9 0004				mov	cx,4
020A:71F1  3E: 3B 56 00				cmp	dx,ds:[bp]
020A:71F5  75 12				jne	locloop_1102		; Jump if not equal
020A:71F7  83 C7 02				add	di,2
020A:71FA  83 C5 02				add	bp,2
020A:71FD  B9 0002				mov	cx,2
020A:7200  3E: 3A 5E 00				cmp	bl,ds:[bp]
020A:7204  75 03				jne	locloop_1102		; Jump if not equal
020A:7206  47					inc	di
020A:7207  45					inc	bp
020A:7208  49					dec	cx

020A:7209			locloop_1102::
020A:7209  C6 06 2B41 01			mov	data_293,1		; (020A:2B41=8Dh)
020A:720E  3E: 8A 66 00				mov	ah,ds:[bp]
020A:7212  E8 FAD3				call	sub_88			; (6CE8)
020A:7215  47					inc	di
020A:7216  45					inc	bp
020A:7217  E2 F0				loop	locloop_1102		; Loop if cx > 0

020A:7219			loc_1103::
020A:7219  8B 1E 3454				mov	bx,data_395		; (020A:3454=382Ch)
020A:721D  2B 1E 3452				sub	bx,data_394		; (020A:3452=7572h)
020A:7221  75 03				jnz	loc_1104		; Jump if not zero
020A:7223  E9 00B0				jmp	loc_1110		; (72D6)
020A:7226			loc_1104::
020A:7226  A1 344C				mov	ax,data_391		; (020A:344C=0)
020A:7229  2B 06 3452				sub	ax,data_394		; (020A:3452=7572h)
020A:722D  B9 0040				mov	cx,40h
020A:7230  F7 E1				mul	cx			; dx:ax = reg * ax
020A:7232  F7 F3				div	bx			; ax,dx rem=dx:ax/reg
020A:7234  8B 0E 344C				mov	cx,data_391		; (020A:344C=0)
020A:7238  3B 0E 3054				cmp	cx,data_342		; (020A:3054=7400h)
020A:723C  74 31				je	loc_1107		; Jump if equal
020A:723E  3B 06 3456				cmp	ax,data_396		; (020A:3456=3636h)
020A:7242  75 03				jne	loc_1105		; Jump if not equal
020A:7244  E9 008F				jmp	loc_1110		; (72D6)
020A:7247			loc_1105::
020A:7247  80 3E 1329 01			cmp	data_201,1		; (020A:1329=0)
020A:724C  75 21				jne	loc_1107		; Jump if not equal
020A:724E  8B 1E 3454				mov	bx,data_395		; (020A:3454=382Ch)
020A:7252  2B 1E 3452				sub	bx,data_394		; (020A:3452=7572h)
020A:7256  8B D0				mov	dx,ax
020A:7258  81 FB 0200				cmp	bx,200h
020A:725C  77 08				ja	loc_1106		; Jump if above
020A:725E  F7 C2 0003				test	dx,3
020A:7262  74 0B				jz	loc_1107		; Jump if zero
020A:7264  EB 70				jmp	short loc_1110		; (72D6)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 252

020A:7266			loc_1106::
020A:7266  80 CA 01				or	dl,1
020A:7269  3B 16 3456				cmp	dx,data_396		; (020A:3456=3636h)
020A:726D  74 67				je	loc_1110		; Jump if equal
020A:726F			loc_1107::
020A:726F  8B D0				mov	dx,ax
020A:7271  BF 07C9				mov	di,7C9h
020A:7274  83 C7 1E				add	di,1Eh
020A:7277  81 EF 0096				sub	di,96h
020A:727B  03 3E 131D				add	di,data_196		; (020A:131D=0)
020A:727F  A1 3456				mov	ax,data_396		; (020A:3456=3636h)
020A:7282  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7284  03 F8				add	di,ax
020A:7286  B4 FA				mov	ah,0FAh
020A:7288  80 3E 2B44 02			cmp	data_295,2		; (020A:2B44=0AEh)
020A:728D  75 02				jne	loc_1108		; Jump if not equal
020A:728F  B4 2E				mov	ah,2Eh			; '.'
020A:7291			loc_1108::
020A:7291  C6 06 2B41 01			mov	data_293,1		; (020A:2B41=8Dh)
020A:7296  E8 FA4F				call	sub_88			; (6CE8)
020A:7299  B4 0F				mov	ah,0Fh
020A:729B  E8 FAD6				call	sub_89			; (6D74)
020A:729E  89 16 3456				mov	data_396,dx		; (020A:3456=3636h)
020A:72A2  BF 07C9				mov	di,7C9h
020A:72A5  83 C7 1E				add	di,1Eh
020A:72A8  81 EF 0096				sub	di,96h
020A:72AC  03 3E 131D				add	di,data_196		; (020A:131D=0)
020A:72B0  B4 2A				mov	ah,2Ah			; '*'
020A:72B2  80 3E 2B44 02			cmp	data_295,2		; (020A:2B44=0AEh)
020A:72B7  74 0A				je	loc_1109		; Jump if equal
020A:72B9  B4 DD				mov	ah,0DDh
020A:72BB  F7 C2 0001				test	dx,1
020A:72BF  74 02				jz	loc_1109		; Jump if zero
020A:72C1  B4 DE				mov	ah,0DEh
020A:72C3			loc_1109::
020A:72C3  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:72C5  03 FA				add	di,dx
020A:72C7  C6 06 2B41 01			mov	data_293,1		; (020A:2B41=8Dh)
020A:72CC  E8 FA19				call	sub_88			; (6CE8)
020A:72CF  8A 26 1207				mov	ah,data_191		; (020A:1207=0)
020A:72D3  E8 FA9E				call	sub_89			; (6D74)
020A:72D6			loc_1110::
020A:72D6  07					pop	es
020A:72D7  5D					pop	bp
020A:72D8  5F					pop	di

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_98		proc	near
020A:72D9  5A					pop	dx
020A:72DA  59					pop	cx
020A:72DB  5B					pop	bx
020A:72DC  58					pop	ax
020A:72DD  C3					retn
				sub_98		endp
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 253


020A:72DE  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_99		proc	near
020A:72E0  52					push	dx

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_100::
020A:72E1  51					push	cx
020A:72E2  56					push	si
020A:72E3  57					push	di
020A:72E4  06					push	es
020A:72E5  E8 16A5				call	sub_125			; (898D)
020A:72E8  BE 1716				mov	si,1716h
020A:72EB  F6 06 1715 03			test	byte ptr ds:[1715h],3	; (0010:1715=0)
020A:72F0  75 03				jnz	loc_1111		; Jump if not zero
020A:72F2  BE 1724				mov	si,1724h
020A:72F5			loc_1111::
020A:72F5  BF 06D9				mov	di,6D9h
020A:72F8  B9 1724				mov	cx,1724h
020A:72FB  81 E9 1716				sub	cx,1716h
020A:72FF  FC					cld				; Clear direction
020A:7300  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7302  32 D2				xor	dl,dl			; Zero register
020A:7304  E8 167D				call	sub_124			; (8984)
020A:7307  26: A1 0000				mov	ax,word ptr es:[0]	; (020A:0000=1828h)
020A:730B  3D FFFF				cmp	ax,0FFFFh
020A:730E  75 04				jne	loc_1112		; Jump if not equal
020A:7310  B2 01				mov	dl,1
020A:7312  33 C0				xor	ax,ax			; Zero register
020A:7314			loc_1112::
020A:7314  BD 0699				mov	bp,699h
020A:7317  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:7317  9A					db	9Ah
020A:7318  021C 168F				dw	21Ch, 168Fh
020A:731C  26: A1 0002				mov	ax,word ptr es:[2]	; (020A:0002=10h)
020A:7320  0A D2				or	dl,dl			; Zero ?
020A:7322  74 02				jz	loc_1113		; Jump if zero
020A:7324  33 C0				xor	ax,ax			; Zero register
020A:7326			loc_1113::
020A:7326  BD 069E				mov	bp,69Eh
020A:7329  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:7329  9A					db	9Ah
020A:732A  021C 168F				dw	21Ch, 168Fh
020A:732E  BE 0000				mov	si,0
020A:7331  F6 06 1715 03			test	byte ptr ds:[1715h],3	; (0010:1715=0)
020A:7336  75 0B				jnz	loc_1114		; Jump if not zero
020A:7338  A0 3040				mov	al,byte ptr ds:[3040h]	; (0010:3040=0A0h)
020A:733B  FE C8				dec	al
020A:733D  B3 15				mov	bl,15h
020A:733F  F6 E3				mul	bl			; ax = reg * al
020A:7341  03 F0				add	si,ax
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 254

020A:7343			loc_1114::
020A:7343  26: 8B 04				mov	ax,es:[si]
020A:7346  0A D2				or	dl,dl			; Zero ?
020A:7348  74 02				jz	loc_1115		; Jump if zero
020A:734A  33 C0				xor	ax,ax			; Zero register
020A:734C			loc_1115::
020A:734C  BD 06E9				mov	bp,6E9h
020A:734F  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:734F  9A					db	9Ah
020A:7350  021C 168F				dw	21Ch, 168Fh
020A:7354  26: 8B 44 04				mov	ax,es:[si+4]
020A:7358  BD 06EE				mov	bp,6EEh
020A:735B  0A D2				or	dl,dl			; Zero ?
020A:735D  74 02				jz	loc_1116		; Jump if zero
020A:735F  33 C0				xor	ax,ax			; Zero register
020A:7361			loc_1116::
020A:7361  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:7361  9A					db	9Ah
020A:7362  021C 168F				dw	21Ch, 168Fh
020A:7366  07					pop	es
020A:7367  5F					pop	di
020A:7368  5E					pop	si
020A:7369  5A					pop	dx
020A:736A  59					pop	cx
020A:736B  E8 1607				call	sub_122			; (8975)
020A:736E  C3					retn
				sub_99		endp

020A:736F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_101		proc	near
020A:7370  BF 33FE				mov	di,33FEh
020A:7373  57					push	di
020A:7374  B9 003C				mov	cx,3Ch
020A:7377  B3 00				mov	bl,0

020A:7379			locloop_1117::
020A:7379  26: 8A 04				mov	al,es:[si]
020A:737C  3C 20				cmp	al,20h			; ' '
020A:737E  72 0B				jb	loc_1118		; Jump if below
020A:7380  3C 80				cmp	al,80h
020A:7382  73 07				jae	loc_1118		; Jump if above or =
020A:7384  88 05				mov	[di],al
020A:7386  FE C3				inc	bl
020A:7388  47					inc	di
020A:7389  EB 0E				jmp	short loc_1119		; (7399)
020A:738B			loc_1118::
020A:738B  80 FB 00				cmp	bl,0
020A:738E  74 09				je	loc_1119		; Jump if equal
020A:7390  80 FB 08				cmp	bl,8
020A:7393  77 0C				ja	loc_1120		; Jump if above
020A:7395  5F					pop	di
020A:7396  57					push	di
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 255

020A:7397  B3 00				mov	bl,0
020A:7399			loc_1119::
020A:7399  46					inc	si
020A:739A  80 FB 20				cmp	bl,20h			; ' '
020A:739D  77 02				ja	loc_1120		; Jump if above
020A:739F  E2 D8				loop	locloop_1117		; Loop if cx > 0

020A:73A1			loc_1120::
020A:73A1  5F					pop	di
020A:73A2  C3					retn
				sub_101		endp

020A:73A3  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_102		proc	near
020A:73A4  50					push	ax
020A:73A5  B5 20				mov	ch,20h			; ' '
020A:73A7  B4 01				mov	ah,1
020A:73A9  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:73A9  9A					db	9Ah
020A:73AA  2BA8 168F				dw	2BA8h, 168Fh
020A:73AE  58					pop	ax
020A:73AF  C3					retn
				sub_102		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_103		proc	near
020A:73B0  50					push	ax
020A:73B1  8B 0E 30CB				mov	cx,data_370		; (020A:30CB=4349h)
020A:73B5  B4 01				mov	ah,1
020A:73B7  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:73B7  9A					db	9Ah
020A:73B8  2BA8 168F				dw	2BA8h, 168Fh
020A:73BC  58					pop	ax
020A:73BD  C3					retn
				sub_103		endp

020A:73BE  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_104		proc	near
020A:73C0  06					push	es
020A:73C1  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (9A19:131B=50C3h)
020A:73C5  BF 06C7				mov	di,6C7h
020A:73C8  81 EF 0623				sub	di,623h
020A:73CC  81 C7 0190				add	di,190h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 256

020A:73D0  03 3E 131D				add	di,word ptr ds:[131Dh]	; (9A19:131D=5706h)
020A:73D4  B9 001A				mov	cx,1Ah
020A:73D7  B2 41				mov	dl,41h			; 'A'
020A:73D9  B6 61				mov	dh,61h			; 'a'

020A:73DB			locloop_1121::
020A:73DB  8A E2				mov	ah,dl
020A:73DD  A0 1207				mov	al,byte ptr ds:[1207h]	; (9A19:1207=6)
020A:73E0  F7 C3 8000				test	bx,8000h
020A:73E4  75 04				jnz	loc_1122		; Jump if not zero
020A:73E6  8A E6				mov	ah,dh
020A:73E8  B0 07				mov	al,7
020A:73EA			loc_1122::
020A:73EA  80 3E 1329 01			cmp	byte ptr ds:[1329h],1	; (9A19:1329=74h)
020A:73EF  75 0B				jne	loc_1123		; Jump if not equal
020A:73F1  3A 06 1207				cmp	al,byte ptr ds:[1207h]	; (9A19:1207=6)
020A:73F5  75 05				jne	loc_1123		; Jump if not equal
020A:73F7  C6 06 2B41 01			mov	byte ptr ds:[2B41h],1	; (9A19:2B41=0A2h)
020A:73FC			loc_1123::
020A:73FC  E8 F8E9				call	sub_88			; (6CE8)
020A:73FF  8A E0				mov	ah,al
020A:7401  E8 F970				call	sub_89			; (6D74)
020A:7404  83 C7 4F				add	di,4Fh
020A:7407  FE C2				inc	dl
020A:7409  FE C6				inc	dh
020A:740B  D1 C3				rol	bx,1			; Rotate
020A:740D  83 F9 0D				cmp	cx,0Dh
020A:7410  75 0F				jne	loc_1124		; Jump if not equal
020A:7412  BF 06ED				mov	di,6EDh
020A:7415  81 EF 0623				sub	di,623h
020A:7419  81 C7 0190				add	di,190h
020A:741D  03 3E 131D				add	di,word ptr ds:[131Dh]	; (9A19:131D=5706h)
020A:7421			loc_1124::
020A:7421  83 F9 0B				cmp	cx,0Bh
020A:7424  75 0E				jne	loc_1125		; Jump if not equal
020A:7426  81 C7 00A0				add	di,0A0h
020A:742A  8A 3E 4E7F				mov	bh,byte ptr ds:[4E7Fh]	; (9A19:4E7F=22h)
020A:742E  D0 CF				ror	bh,1			; Rotate
020A:7430  D0 CF				ror	bh,1			; Rotate
020A:7432  D0 CF				ror	bh,1			; Rotate
020A:7434			loc_1125::
020A:7434  83 F9 07				cmp	cx,7
020A:7437  75 04				jne	loc_1126		; Jump if not equal
020A:7439  8A 3E 4E24				mov	bh,byte ptr ds:[4E24h]	; (9A19:4E24=0)
020A:743D			loc_1126::
020A:743D  E2 9C				loop	locloop_1121		; Loop if cx > 0

020A:743F  07					pop	es
020A:7440  C3					retn
				sub_104		endp

020A:7441  87 DB				xchg	bx,bx
020A:7443  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 257


				sub_105		proc	near
020A:7444  53					push	bx
020A:7445  51					push	cx
020A:7446  52					push	dx
020A:7447  57					push	di
020A:7448  56					push	si
020A:7449  06					push	es
020A:744A  E8 1540				call	sub_125			; (898D)
020A:744D  BE 15C8				mov	si,15C8h
020A:7450  BF 030F				mov	di,30Fh
020A:7453  B9 0003				mov	cx,3
020A:7456  F6 06 4E7F 07			test	data_557,7		; (020A:4E7F=0A4h)
020A:745B  75 02				jnz	loc_1127		; Jump if not zero
020A:745D  03 F1				add	si,cx
020A:745F			loc_1127::
020A:745F  FC					cld				; Clear direction
020A:7460  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7462  BE 030F				mov	si,30Fh
020A:7465  BF 030F				mov	di,30Fh
020A:7468  81 EF 0096				sub	di,96h
020A:746C  03 3E 131D				add	di,data_196		; (020A:131D=0)
020A:7470  8E 06 131B				mov	es,data_195		; (020A:131B=0)
020A:7474  B9 0003				mov	cx,3

020A:7477			locloop_1128::
020A:7477  8A 24				mov	ah,[si]
020A:7479  E8 F86C				call	sub_88			; (6CE8)
020A:747C  47					inc	di
020A:747D  46					inc	si
020A:747E  E2 F7				loop	locloop_1128		; Loop if cx > 0

020A:7480  B4 02				mov	ah,2
020A:7482  32 FF				xor	bh,bh			; Zero register
020A:7484  BA 184F				mov	dx,184Fh
020A:7487  9A 168F:2BA8		;*		call	far ptr sub_176		;*(168F:2BA8)
020A:7487  9A					db	9Ah
020A:7488  2BA8 168F				dw	2BA8h, 168Fh
020A:748C  07					pop	es
020A:748D  5E					pop	si
020A:748E  5F					pop	di
020A:748F  5A					pop	dx
020A:7490  59					pop	cx
020A:7491  5B					pop	bx
020A:7492  C3					retn
				sub_105		endp

020A:7493  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_106		proc	near
020A:7494  E8 14F6				call	sub_125			; (898D)
020A:7497  A0 15D0				mov	al,data_211		; (020A:15D0=0)
020A:749A  B9 15E8				mov	cx,15E8h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 258

020A:749D  81 E9 15D1				sub	cx,15D1h
020A:74A1  F6 E1				mul	cl			; ax = reg * al
020A:74A3  05 15D1				add	ax,15D1h
020A:74A6  8B F0				mov	si,ax
020A:74A8  80 3E 15D0 02			cmp	data_211,2		; (020A:15D0=0)
020A:74AD  74 13				je	loc_1129		; Jump if equal
020A:74AF  80 3E 15D0 03			cmp	data_211,3		; (020A:15D0=0)
020A:74B4  75 16				jne	loc_1130		; Jump if not equal
020A:74B6  F6 06 35E4 10			test	data_436,10h		; (020A:35E4=46h)
020A:74BB  74 0F				jz	loc_1130		; Jump if zero
020A:74BD  BE 1644				mov	si,1644h
020A:74C0  EB 0A				jmp	short loc_1130		; (74CC)
020A:74C2			loc_1129::
020A:74C2  F6 06 35E4 04			test	data_436,4		; (020A:35E4=46h)
020A:74C7  74 03				jz	loc_1130		; Jump if zero
020A:74C9  BE 162D				mov	si,162Dh
020A:74CC			loc_1130::
020A:74CC  BF 0480				mov	di,480h
020A:74CF  B9 15DC				mov	cx,15DCh
020A:74D2  81 E9 15D1				sub	cx,15D1h
020A:74D6  FC					cld				; Clear direction
020A:74D7  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:74D9  B9 15E8				mov	cx,15E8h
020A:74DC  81 E9 15DC				sub	cx,15DCh
020A:74E0  BF 0572				mov	di,572h
020A:74E3  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:74E5  B9 166B				mov	cx,166Bh
020A:74E8  81 E9 165B				sub	cx,165Bh
020A:74EC  BE 165B				mov	si,165Bh
020A:74EF  F6 06 35E4 02			test	data_436,2		; (020A:35E4=46h)
020A:74F4  75 17				jnz	loc_1131		; Jump if not zero
020A:74F6  BE 167B				mov	si,167Bh
020A:74F9  F6 06 35E4 04			test	data_436,4		; (020A:35E4=46h)
020A:74FE  75 0D				jnz	loc_1131		; Jump if not zero
020A:7500  9BBE			data_605	dw	9BBEh
020A:7502  16					push	ss
020A:7503  F6 06 35E4 08			test	data_436,8		; (020A:35E4=46h)
020A:7508  75 03				jnz	loc_1131		; Jump if not zero
020A:750A  BE 168B				mov	si,168Bh
020A:750D			loc_1131::
020A:750D  BF 048F				mov	di,48Fh
020A:7510  F6 06 15D0 02			test	data_211,2		; (020A:15D0=0)
020A:7515  74 03				jz	loc_1132		; Jump if zero
020A:7517  BE 166B				mov	si,166Bh
020A:751A			loc_1132::
020A:751A  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:751C  C3					retn
				sub_106		endp

020A:751D  87 DB				xchg	bx,bx
020A:751F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_107		proc	near
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 259

020A:7520  E8 146A				call	sub_125			; (898D)
020A:7523  8B 1E 1326				mov	bx,data_199		; (020A:1326=0)
020A:7527  C6 47 6F 00				mov	byte ptr [bx+6Fh],0
020A:752B  C6 47 5C 00				mov	byte ptr [bx+5Ch],0
020A:752F  C6 47 6E 00				mov	byte ptr [bx+6Eh],0
020A:7533  A0 16AB				mov	al,data_217		; (020A:16AB=41h)
020A:7536  A8 01				test	al,1
020A:7538  74 04				jz	loc_1133		; Jump if zero
020A:753A  C6 47 6F 07				mov	byte ptr [bx+6Fh],7
020A:753E			loc_1133::
020A:753E  A8 02				test	al,2
020A:7540  74 04				jz	loc_1134		; Jump if zero
020A:7542  C6 47 5C 07				mov	byte ptr [bx+5Ch],7
020A:7546			loc_1134::
020A:7546  A8 04				test	al,4
020A:7548  74 04				jz	loc_1135		; Jump if zero
020A:754A  C6 47 6E 07				mov	byte ptr [bx+6Eh],7
020A:754E			loc_1135::
020A:754E  BB 16B5				mov	bx,16B5h
020A:7551  D7					xlat				; al=[al+[bx]] table
020A:7552  8A E0				mov	ah,al
020A:7554  25 0FF0				and	ax,0FF0h
020A:7557  B1 04				mov	cl,4
020A:7559  D2 C8				ror	al,cl			; Rotate
020A:755B  8A DC				mov	bl,ah
020A:755D  32 E4				xor	ah,ah			; Zero register
020A:755F  B9 16C3				mov	cx,16C3h
020A:7562  81 E9 16BD				sub	cx,16BDh
020A:7566  F6 E1				mul	cl			; ax = reg * al
020A:7568  05 16BD				add	ax,16BDh
020A:756B  8B F0				mov	si,ax
020A:756D  BF 053D				mov	di,53Dh
020A:7570  FC					cld				; Clear direction
020A:7571  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7573  B8 16E5				mov	ax,16E5h
020A:7576  2D 16D5				sub	ax,16D5h
020A:7579  8B C8				mov	cx,ax
020A:757B  F6 E3				mul	bl			; ax = reg * al
020A:757D  8B F0				mov	si,ax
020A:757F  81 C6 16D5				add	si,16D5h
020A:7583  BF 0583				mov	di,583h
020A:7586  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7588  C3					retn
				sub_107		endp

							                        ;* No entry point to code
020A:7589  87 DB				xchg	bx,bx
020A:758B  90					nop
020A:758C  50					push	ax
020A:758D  53					push	bx
020A:758E  8A E0				mov	ah,al
020A:7590  8B 1E 1326				mov	bx,data_199		; (020A:1326=0)
020A:7594  A0 1208				mov	al,data_192		; (020A:1208=0)
020A:7597  88 47 52				mov	[bx+52h],al
020A:759A  E8 FA4F				call	sub_94			; (6FEC)
020A:759D  E8 F580		;*		call	sub_82			;*(6B20)
020A:759D  E8 80 F5				db	0E8h, 80h,0F5h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 260

020A:75A0  9A 168F:0760		;*		call	far ptr sub_156		;*(168F:0760)
020A:75A0  9A					db	9Ah
020A:75A1  0760 168F				dw	760h, 168Fh
020A:75A5  8B 1E 1326				mov	bx,data_199		; (020A:1326=0)
020A:75A9  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:75AD  5B					pop	bx
020A:75AE  58					pop	ax
020A:75AF  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_108		proc	near
020A:75B0  52					push	dx
020A:75B1  50					push	ax
020A:75B2  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:75B7  1E					push	ds
020A:75B8  E8 13BA				call	sub_122			; (8975)
020A:75BB  BA 2B53				mov	dx,2B53h
020A:75BE  B4 09				mov	ah,9
020A:75C0  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020A:75C2  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:75C7  9C					pushf				; Push flags
020A:75C8  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:75CD  5A					pop	dx
020A:75CE  8E DA				mov	ds,dx
020A:75D0  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:75D5  5A					pop	dx
020A:75D6  75 0A				jnz	loc_1136		; Jump if not zero
020A:75D8  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:75DD  74 03				je	loc_1136		; Jump if equal
020A:75DF  E8 170A				call	sub_132			; (8CEC)
020A:75E2			loc_1136::
020A:75E2  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:75E7  9D					popf				; Pop flags
020A:75E8  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:75ED  58					pop	ax
020A:75EE  5A					pop	dx
020A:75EF  C3					retn
				sub_108		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_109		proc	near
020A:75F0  52					push	dx
020A:75F1  50					push	ax
020A:75F2  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:75F7  1E					push	ds
020A:75F8  E8 137A				call	sub_122			; (8975)
020A:75FB  BA 2B4F				mov	dx,2B4Fh
020A:75FE  B4 09				mov	ah,9
020A:7600  CD 21				int	21h			; DOS Services  ah=function 09h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 261

										;  display char string at ds:dx
020A:7602  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7607  9C					pushf				; Push flags
020A:7608  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:760D  5A					pop	dx
020A:760E  8E DA				mov	ds,dx
020A:7610  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:7615  5A					pop	dx
020A:7616  75 0A				jnz	loc_1137		; Jump if not zero
020A:7618  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:761D  74 03				je	loc_1137		; Jump if equal
020A:761F  E8 16CA				call	sub_132			; (8CEC)
020A:7622			loc_1137::
020A:7622  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7627  9D					popf				; Pop flags
020A:7628  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:762D  58					pop	ax
020A:762E  5A					pop	dx
020A:762F  C3					retn
				sub_109		endp

020A:7630  50					push	ax
020A:7631			loc_1138::
020A:7631  3E: 81 7E 00 2020			cmp	word ptr ds:[bp],2020h
020A:7637  74 05				je	loc_1139		; Jump if equal
020A:7639  45					inc	bp
020A:763A  FE			data_606	db	0FEh
020A:763B  C8					db	0C8h
020A:763C  75 F3				jnz	loc_1138		; Jump if not zero
020A:763E			loc_1139::
020A:763E  58					pop	ax
020A:763F  C3					retn
							                        ;* No entry point to code
020A:7640  E8 134A				call	sub_125			; (898D)
020A:7643  8B 36 344C				mov	si,data_391		; (020A:344C=0)
020A:7647  BF 2CCA				mov	di,2CCAh
020A:764A  A1 344A				mov	ax,data_390		; (020A:344A=0)
020A:764D  8E D8				mov	ds,ax
020A:764F  0B F6				or	si,si			; Zero ?
020A:7651  74 09				jz	loc_1140		; Jump if zero
020A:7653  33 C9				xor	cx,cx			; Zero register
020A:7655  2B CE				sub	cx,si
020A:7657  83 F9 28				cmp	cx,28h
020A:765A  72 03				jb	loc_1141		; Jump if below
020A:765C			loc_1140::
020A:765C  B9 0028				mov	cx,28h
020A:765F			loc_1141::
020A:765F  FC					cld				; Clear direction
020A:7660  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7662  E8 1310				call	sub_122			; (8975)
020A:7665  BE 2CCA				mov	si,2CCAh
020A:7668  C3					retn
							                        ;* No entry point to code
020A:7669  87 DB				xchg	bx,bx
020A:766B  90					nop
020A:766C  06					push	es
020A:766D  F6 06 35D3 01			test	data_425,1		; (020A:35D3=0EBh)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 262

020A:7672  74 34				jz	loc_1143		; Jump if zero
020A:7674  BF 0708				mov	di,708h
020A:7677  81 EF 0096				sub	di,96h
020A:767B  03 3E 131D				add	di,data_196		; (020A:131D=0)
020A:767F  8E 06 131B				mov	es,data_195		; (020A:131B=0)
020A:7683  BE 2CCA				mov	si,2CCAh
020A:7686  B9 0004				mov	cx,4

020A:7689			locloop_1142::
020A:7689  8A 04				mov	al,[si]
020A:768B  9A 168F:00B0		;*		call	far ptr sub_145		;*(168F:00B0)
020A:768B  9A					db	9Ah
020A:768C  00B0 168F				dw	0B0h, 168Fh
020A:7690  8A E3				mov	ah,bl
020A:7692  E8 F653				call	sub_88			; (6CE8)
020A:7695  B4 0F				mov	ah,0Fh
020A:7697  E8 F6DA				call	sub_89			; (6D74)
020A:769A  8A E7				mov	ah,bh
020A:769C  E8 F649				call	sub_88			; (6CE8)
020A:769F  B4 0F				mov	ah,0Fh
020A:76A1  E8 F6D0				call	sub_89			; (6D74)
020A:76A4  47					inc	di
020A:76A5  46					inc	si
020A:76A6  E2 E1				loop	locloop_1142		; Loop if cx > 0

020A:76A8			loc_1143::
020A:76A8  F6 06 35D3 02			test	data_425,2		; (020A:35D3=0EBh)
020A:76AD  74 15				jz	loc_1145		; Jump if zero
020A:76AF  B9 5000				mov	cx,5000h
020A:76B2  F6 06 30A1 F0			test	byte ptr data_364,0F0h	; (020A:30A1=' 1\ALLUSE 1')
020A:76B7  75 03				jnz	locloop_1144		; Jump if not zero
020A:76B9  B9 1000				mov	cx,1000h

020A:76BC			locloop_1144::
020A:76BC  EB 00				jmp	short $+2		; delay for I/O
020A:76BE  EB 00				jmp	short $+2		; delay for I/O
020A:76C0  EB 00				jmp	short $+2		; delay for I/O
020A:76C2  E2 F8				loop	locloop_1144		; Loop if cx > 0

020A:76C4			loc_1145::
020A:76C4  F6 06 35D3 08			test	data_425,8		; (020A:35D3=0EBh)
020A:76C9  74 2C				jz	loc_1147		; Jump if zero
020A:76CB  A0 35D4				mov	al,data_426		; (020A:35D4=9)
020A:76CE  3A 06 2B3B				cmp	al,data_289		; (020A:2B3B=0A0h)
020A:76D2  77 06				ja	loc_1146		; Jump if above
020A:76D4  3A 06 2B36				cmp	al,data_285		; (020A:2B36=0ADh)
020A:76D8  75 1D				jne	loc_1147		; Jump if not equal
020A:76DA			loc_1146::
020A:76DA  A1 35D5				mov	ax,data_427		; (020A:35D5=6FEh)
020A:76DD  3B 06 344A				cmp	ax,data_390		; (020A:344A=0)
020A:76E1  75 14				jne	loc_1147		; Jump if not equal
020A:76E3  A1 35D7				mov	ax,data_428		; (020A:35D7=126h)
020A:76E6  3B 06 344C				cmp	ax,data_391		; (020A:344C=0)
020A:76EA  75 0B				jne	loc_1147		; Jump if not equal
020A:76EC  9A 168F:2B10		;*		call	far ptr sub_173		;*(168F:2B10)
020A:76EC  9A					db	9Ah
020A:76ED  2B10 168F				dw	2B10h, 168Fh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 263

020A:76F1  9A 168F:0760		;*		call	far ptr sub_156		;*(168F:0760)
020A:76F1  9A					db	9Ah
020A:76F2  0760 168F				dw	760h, 168Fh
020A:76F6  90					nop
020A:76F7			loc_1147::
020A:76F7  07					pop	es
020A:76F8  C3					retn
							                        ;* No entry point to code
020A:76F9  87 DB				xchg	bx,bx
020A:76FB  90					nop
020A:76FC  F7 06 4E22 0100			test	data_553,100h		; (020A:4E22=4788h)
020A:7702  74 67				jz	loc_1150		; Jump if zero
020A:7704  80 3E 2B3C 01			cmp	data_290,1		; (020A:2B3C=0ADh)
020A:7709  75 60				jne	loc_1150		; Jump if not equal
020A:770B  06					push	es
020A:770C  1E					push	ds
020A:770D  07					pop	es
020A:770E  A0 35DD				mov	al,data_431		; (020A:35DD=0)
020A:7711  B9 57DD				mov	cx,57DDh
020A:7714  81 E9 57CD				sub	cx,57CDh
020A:7718  F6 E1				mul	cl			; ax = reg * al
020A:771A  BF 7628				mov	di,7628h
020A:771D  BE 57CD				mov	si,57CDh
020A:7720  03 F0				add	si,ax
020A:7722  FC					cld				; Clear direction
020A:7723  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7725  A1 361A				mov	ax,data_455		; (020A:361A=0F2EBh)
020A:7728  3B 06 35D9				cmp	ax,data_429		; (020A:35D9=6C6h)
020A:772C  74 17				je	loc_1148		; Jump if equal
020A:772E  A3 35D9				mov	data_429,ax		; (020A:35D9=6C6h)
020A:7731  C6 06 763A 44			mov	data_606,44h		; (020A:763A=0FEh) 'D'
020A:7736  BD 7641				mov	bp,7641h
020A:7739  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:7739  9A					db	9Ah
020A:773A  021C 168F				dw	21Ch, 168Fh
020A:773E  B0 52				mov	al,52h			; 'R'
020A:7740  9A 168F:2280		;*		call	far ptr sub_166		;*(168F:2280)
020A:7740  9A					db	9Ah
020A:7741  2280 168F				dw	2280h, 168Fh
020A:7745			loc_1148::
020A:7745  A1 3618				mov	ax,data_454		; (020A:3618=3D03h)
020A:7748  3B 06 35DB				cmp	ax,data_430		; (020A:35DB=127h)
020A:774C  74 17				je	loc_1149		; Jump if equal
020A:774E  A3 35DB				mov	data_430,ax		; (020A:35DB=127h)
020A:7751  C6 06 763A 45			mov	data_606,45h		; (020A:763A=0FEh) 'E'
020A:7756  BD 7641				mov	bp,7641h
020A:7759  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:7759  9A					db	9Ah
020A:775A  021C 168F				dw	21Ch, 168Fh
020A:775E  B0 52				mov	al,52h			; 'R'
020A:7760  9A 168F:2280		;*		call	far ptr sub_166		;*(168F:2280)
020A:7760  9A					db	9Ah
020A:7761  2280 168F				dw	2280h, 168Fh
020A:7765			loc_1149::
020A:7765  C6 06 35DD 00			mov	data_431,0		; (020A:35DD=0)
020A:776A  07					pop	es
020A:776B			loc_1150::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 264

020A:776B  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_110		proc	near
020A:776C  57					push	di
020A:776D  06					push	es
020A:776E  A2 2B3B				mov	data_289,al		; (020A:2B3B=0A0h)
020A:7771  8A E0				mov	ah,al
020A:7773  D0 EC				shr	ah,1			; Shift w/zeros fill
020A:7775  80 C4 30				add	ah,30h			; '0'
020A:7778  88 26 67A9				mov	byte ptr ds:[67A9h],ah	; (020A:67A9=0D3h)
020A:777C  BD 0772				mov	bp,772h
020A:777F  3E: 88 66 00				mov	ds:[bp],ah
020A:7783  8E 06 131B				mov	es,data_195		; (020A:131B=0)
020A:7787  BF 0772				mov	di,772h
020A:778A  81 EF 0096				sub	di,96h
020A:778E  03 3E 131D				add	di,data_196		; (020A:131D=0)
020A:7792  E8 F553				call	sub_88			; (6CE8)
020A:7795  07					pop	es
020A:7796  80 3E 35E6 00			cmp	byte ptr ds:[35E6h],0	; (020A:35E6=0C0h)
020A:779B  74 1D				je	loc_1153		; Jump if equal
020A:779D  80 3E 2B3B 0A			cmp	data_289,0Ah		; (020A:2B3B=0A0h)
020A:77A2  72 0E				jb	loc_1151		; Jump if below
020A:77A4  F6 06 4E7F 07			test	data_557,7		; (020A:4E7F=0A4h)
020A:77A9  75 0C				jnz	loc_1152		; Jump if not zero
020A:77AB  80 0E 4E7F 07			or	data_557,7		; (020A:4E7F=0A4h)
020A:77B0  EB 05				jmp	short loc_1152		; (77B7)
020A:77B2			loc_1151::
020A:77B2  80 26 4E7F F8			and	data_557,0F8h		; (020A:4E7F=0A4h)
020A:77B7			loc_1152::
020A:77B7  E8 FC8A				call	sub_105			; (7444)
020A:77BA			loc_1153::
020A:77BA  5F					pop	di
020A:77BB  C3					retn
				sub_110		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_111		proc	near
020A:77BC  50					push	ax
020A:77BD  53					push	bx
020A:77BE  56					push	si
020A:77BF  55					push	bp
020A:77C0  C6 06 53D6 00			mov	byte ptr ds:[53D6h],0	; (020A:53D6=0FBh)
020A:77C5  BD 0002				mov	bp,2
020A:77C8  8B F0				mov	si,ax
020A:77CA  A3 40F7				mov	data_490,ax		; (020A:40F7=3B4h)
020A:77CD  8B CB				mov	cx,bx
020A:77CF  89 1E 40F5				mov	word ptr ds:[40F5h],bx	; (020A:40F5=97h)
020A:77D3  83 FA 20				cmp	dx,20h
020A:77D6  75 0B				jne	loc_1154		; Jump if not equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 265

020A:77D8  E8 11B2				call	sub_125			; (898D)
020A:77DB  BA 002C				mov	dx,2Ch
020A:77DE  BF 47C4				mov	di,47C4h
020A:77E1  EB 64				jmp	short loc_1161		; (7847)
020A:77E3			loc_1154::
020A:77E3  83 FA 10				cmp	dx,10h
020A:77E6  75 0B				jne	loc_1155		; Jump if not equal
020A:77E8  E8 1199				call	sub_124			; (8984)
020A:77EB  BA 0015				mov	dx,15h
020A:77EE  BF 0000				mov	di,0
020A:77F1  EB 54				jmp	short loc_1161		; (7847)
020A:77F3			loc_1155::
020A:77F3  83 FA 01				cmp	dx,1
020A:77F6  74 31				je	loc_1158		; Jump if equal
020A:77F8  83 FA 02				cmp	dx,2
020A:77FB  74 3B				je	loc_1160		; Jump if equal
020A:77FD  83 FA 04				cmp	dx,4
020A:7800  74 0B				je	loc_1156		; Jump if equal
020A:7802  83 FA 40				cmp	dx,40h
020A:7805  74 15				je	loc_1157		; Jump if equal
020A:7807  BB 0004				mov	bx,4
020A:780A  E9 0BFB				jmp	loc_1330		; (8408)
020A:780D			loc_1156::
020A:780D  E8 15F8				call	sub_135			; (8E08)
020A:7810  BB 003B				mov	bx,3Bh
020A:7813  03 1E 2B42				add	bx,data_294		; (020A:2B42=0A4A5h)
020A:7817  BA 004A				mov	dx,4Ah
020A:781A  EB 5A				jmp	short loc_1171		; (7876)
020A:781C			loc_1157::
020A:781C  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:7822  74 05				je	loc_1158		; Jump if equal
020A:7824  E8 116F				call	sub_127			; (8996)
020A:7827  EB 03				jmp	short loc_1159		; (782C)
020A:7829			loc_1158::
020A:7829  E8 1568				call	sub_134			; (8D94)
020A:782C			loc_1159::
020A:782C  BB 0007				mov	bx,7
020A:782F  03 1E 2B42				add	bx,data_294		; (020A:2B42=0A4A5h)
020A:7833  BA 0016				mov	dx,16h
020A:7836  EB 3E				jmp	short loc_1171		; (7876)
020A:7838			loc_1160::
020A:7838  E8 14E5				call	sub_133			; (8D20)
020A:783B  BB 000A				mov	bx,0Ah
020A:783E  BA 0019				mov	dx,19h
020A:7841  03 16 2B42				add	dx,data_294		; (020A:2B42=0A4A5h)
020A:7845  EB 2F				jmp	short loc_1171		; (7876)
020A:7847			loc_1161::
020A:7847  33 ED				xor	bp,bp			; Zero register
020A:7849  06					push	es
020A:784A  8C D8				mov	ax,ds
020A:784C  8E C0				mov	es,ax
020A:784E  1F					pop	ds
020A:784F  BB FFFF				mov	bx,0FFFFh
020A:7852			loc_1162::
020A:7852  39 75 02				cmp	[di+2],si
020A:7855  74 09				je	loc_1165		; Jump if equal
020A:7857			loc_1163::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 266

020A:7857  39 1D				cmp	[di],bx
020A:7859  74 0B				je	loc_1166		; Jump if equal
020A:785B			loc_1164::
020A:785B  03 FA				add	di,dx
020A:785D  45					inc	bp
020A:785E  EB F2				jmp	short loc_1162		; (7852)
020A:7860			loc_1165::
020A:7860  39 0D				cmp	[di],cx
020A:7862  75 F3				jne	loc_1163		; Jump if not equal
020A:7864  EB 09				jmp	short loc_1168		; (786F)
020A:7866			loc_1166::
020A:7866  39 5D 02				cmp	[di+2],bx
020A:7869  75 02				jne	loc_1167		; Jump if not equal
020A:786B  EB 05				jmp	short loc_1169		; (7872)
020A:786D			loc_1167::
020A:786D  EB EC				jmp	short loc_1164		; (785B)
020A:786F			loc_1168::
020A:786F  F9					stc				; Set carry flag
020A:7870  EB 01				jmp	short loc_1170		; (7873)
020A:7872			loc_1169::
020A:7872  F8					clc				; Clear carry flag
020A:7873			loc_1170::
020A:7873  E9 0297				jmp	loc_1218		; (7B0D)
020A:7876			loc_1171::
020A:7876  BF 0008				mov	di,8
020A:7879  26: A1 0002				mov	ax,word ptr es:[2]	; (020A:0002=10h)
020A:787D  3B C1				cmp	ax,cx
020A:787F  77 0F				ja	loc_1173		; Jump if above
020A:7881  72 08				jc	loc_1172		; Jump if carry Set
020A:7883  26: A1 0004				mov	ax,word ptr es:[4]	; (020A:0004=808h)
020A:7887  3B C6				cmp	ax,si
020A:7889  77 05				ja	loc_1173		; Jump if above
020A:788B			loc_1172::
020A:788B  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (020A:0006=3)
020A:7890			loc_1173::
020A:7890  06					push	es
020A:7891  8C D8				mov	ax,ds
020A:7893  8E C0				mov	es,ax
020A:7895  1F					pop	ds
020A:7896  B4 03				mov	ah,3
020A:7898  26: 80 3E 15D0 01			cmp	es:data_211,1		; (020A:15D0=0)
020A:789E  77 05				ja	loc_1174		; Jump if above
020A:78A0  03 DD				add	bx,bp
020A:78A2  E9 00BD				jmp	loc_1190		; (7962)
020A:78A5			loc_1174::
020A:78A5  39 0D				cmp	[di],cx
020A:78A7  73 35				jae	loc_1178		; Jump if above or =
020A:78A9  8A 45 05				mov	al,[di+5]
020A:78AC  84 C4				test	al,ah
020A:78AE  75 11				jnz	loc_1175		; Jump if not zero
020A:78B0  03 FB				add	di,bx
020A:78B2  39 0D				cmp	[di],cx
020A:78B4  73 28				jae	loc_1178		; Jump if above or =
020A:78B6  8A 45 05				mov	al,[di+5]
020A:78B9  84 C4				test	al,ah
020A:78BB  75 04				jnz	loc_1175		; Jump if not zero
020A:78BD  03 FB				add	di,bx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 267

020A:78BF  EB E4				jmp	short loc_1174		; (78A5)
020A:78C1			loc_1175::
020A:78C1  A8 02				test	al,2
020A:78C3  75 06				jnz	loc_1176		; Jump if not zero
020A:78C5  03 FB				add	di,bx
020A:78C7  03 FD				add	di,bp
020A:78C9  EB DA				jmp	short loc_1174		; (78A5)
020A:78CB			loc_1176::
020A:78CB  A8 01				test	al,1
020A:78CD  75 04				jnz	loc_1177		; Jump if not zero
020A:78CF  03 FA				add	di,dx
020A:78D1  EB D2				jmp	short loc_1174		; (78A5)
020A:78D3			loc_1177::
020A:78D3  8A 45 06				mov	al,[di+6]
020A:78D6  32 E4				xor	ah,ah			; Zero register
020A:78D8  03 F8				add	di,ax
020A:78DA  B4 03				mov	ah,3
020A:78DC  EB C7				jmp	short loc_1174		; (78A5)
020A:78DE			loc_1178::
020A:78DE  74 0B				jz	loc_1179		; Jump if zero
020A:78E0  83 3D FF				cmp	word ptr [di],0FFFFh
020A:78E3  75 4B				jne	loc_1185		; Jump if not equal
020A:78E5  3B 3E 0000				cmp	di,word ptr ds:[0]	; (020A:0000=1828h)
020A:78E9  73 45				jae	loc_1185		; Jump if above or =
020A:78EB			loc_1179::
020A:78EB  39 0D				cmp	[di],cx
020A:78ED  75 41				jne	loc_1185		; Jump if not equal
020A:78EF  39 75 02				cmp	[di+2],si
020A:78F2  73 3A				jae	loc_1184		; Jump if above or =
020A:78F4			loc_1180::
020A:78F4  8A 45 05				mov	al,[di+5]
020A:78F7  84 C4				test	al,ah
020A:78F9  75 16				jnz	loc_1181		; Jump if not zero
020A:78FB  03 FB				add	di,bx
020A:78FD  39 0D				cmp	[di],cx
020A:78FF  75 2F				jne	loc_1185		; Jump if not equal
020A:7901  39 75 02				cmp	[di+2],si
020A:7904  73 28				jae	loc_1184		; Jump if above or =
020A:7906  8A 45 05				mov	al,[di+5]
020A:7909  84 C4				test	al,ah
020A:790B  0475			data_607	dw	475h
020A:790D  FB03			data_608	dw	0FB03h
020A:790F  DAEB			data_609	dw	0DAEBh
020A:7911			loc_1181::
020A:7911  A8			data_610	db	0A8h
020A:7912  7502			data_611	dw	7502h			; Data table (indexed access)
020A:7914  0306			data_612	dw	306h			; Data table (indexed access)
020A:7916  03FB			data_613	dw	3FBh			; Data table (indexed access)
020A:7918  EBFD			data_614	dw	0EBFDh
020A:791A  A8D0			data_615	dw	0A8D0h
020A:791C  7501			data_616	dw	7501h
020A:791E  04 03				add	al,3
020A:7920  FA					cli				; Disable interrupts
020A:7921  EB C8				jmp	short loc_1179		; (78EB)
020A:7923			loc_1183::
020A:7923  8A 45 06				mov	al,[di+6]
020A:7926  32 E4				xor	ah,ah			; Zero register
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 268

020A:7928  03 F8				add	di,ax
020A:792A  B4 03				mov	ah,3
020A:792C  EB BD				jmp	short loc_1179		; (78EB)
020A:792E			loc_1184::
020A:792E  74 02				jz	loc_1186		; Jump if zero
020A:7930			loc_1185::
020A:7930  EB 2D				jmp	short loc_1189		; (795F)
020A:7932			loc_1186::
020A:7932  83 FA 16				cmp	dx,16h
020A:7935  75 25				jne	loc_1188		; Jump if not equal
020A:7937  26: 80 3E 4D4B 01			cmp	es:data_535,1		; (020A:4D4B=6)
020A:793D  74 1D				je	loc_1188		; Jump if equal
020A:793F  26: 80 3E 53D6 00			cmp	byte ptr es:[53D6h],0	; (020A:53D6=0FBh)
020A:7945  75 0A				jne	loc_1187		; Jump if not equal
020A:7947  89 3E 0006				mov	word ptr ds:[6],di	; (020A:0006=3)
020A:794B  26: C6 06 53D6 01			mov	byte ptr es:[53D6h],1	; (020A:53D6=0FBh)
020A:7951			loc_1187::
020A:7951  8A 45 04				mov	al,[di+4]
020A:7954  24 1F				and	al,1Fh
020A:7956  3C 1F				cmp	al,1Fh
020A:7958  75 02				jne	loc_1188		; Jump if not equal
020A:795A  EB 98				jmp	short loc_1180		; (78F4)
020A:795C			loc_1188::
020A:795C  E9 00BF				jmp	loc_1204		; (7A1E)
020A:795F			loc_1189::
020A:795F  E9 014A				jmp	loc_1212		; (7AAC)
020A:7962			loc_1190::
020A:7962  39 0D				cmp	[di],cx
020A:7964  73 37				jae	loc_1194		; Jump if above or =
020A:7966  8A 45 05				mov	al,[di+5]
020A:7969  22 C4				and	al,ah
020A:796B  3C 01				cmp	al,1
020A:796D  75 13				jne	loc_1191		; Jump if not equal
020A:796F  03 FB				add	di,bx
020A:7971  39 0D				cmp	[di],cx
020A:7973  73 28				jae	loc_1194		; Jump if above or =
020A:7975  8A 45 05				mov	al,[di+5]
020A:7978  22 C4				and	al,ah
020A:797A  3C 01				cmp	al,1
020A:797C  75 04				jne	loc_1191		; Jump if not equal
020A:797E  03 FB				add	di,bx
020A:7980  EB E0				jmp	short loc_1190		; (7962)
020A:7982			loc_1191::
020A:7982  77 06				ja	loc_1192		; Jump if above
020A:7984  03 FB				add	di,bx
020A:7986  2B FD				sub	di,bp
020A:7988  EB D8				jmp	short loc_1190		; (7962)
020A:798A			loc_1192::
020A:798A  3C 02				cmp	al,2
020A:798C  75 04				jne	loc_1193		; Jump if not equal
020A:798E  03 FA				add	di,dx
020A:7990  EB D0				jmp	short loc_1190		; (7962)
020A:7992			loc_1193::
020A:7992  8A 45 06				mov	al,[di+6]
020A:7995  32 E4				xor	ah,ah			; Zero register
020A:7997  03 F8				add	di,ax
020A:7999  B4 03				mov	ah,3
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 269

020A:799B  EB C5				jmp	short loc_1190		; (7962)
020A:799D			loc_1194::
020A:799D  74 0B				jz	loc_1195		; Jump if zero
020A:799F  83 3D FF				cmp	word ptr [di],0FFFFh
020A:79A2  75 4D				jne	loc_1201		; Jump if not equal
020A:79A4  3B 3E 0000				cmp	di,word ptr ds:[0]	; (020A:0000=1828h)
020A:79A8  73 47				jae	loc_1201		; Jump if above or =
020A:79AA			loc_1195::
020A:79AA  39 0D				cmp	[di],cx
020A:79AC  75 43				jne	loc_1201		; Jump if not equal
020A:79AE  39 75 02				cmp	[di+2],si
020A:79B1  73 3C				jae	loc_1200		; Jump if above or =
020A:79B3			loc_1196::
020A:79B3  8A 45 05				mov	al,[di+5]
020A:79B6  22 C4				and	al,ah
020A:79B8  3C 01				cmp	al,1
020A:79BA  75 18				jne	loc_1197		; Jump if not equal
020A:79BC  03 FB				add	di,bx
020A:79BE  39 0D				cmp	[di],cx
020A:79C0  75 2F				jne	loc_1201		; Jump if not equal
020A:79C2  39 75 02				cmp	[di+2],si
020A:79C5  73 28				jae	loc_1200		; Jump if above or =
020A:79C7  8A 45 05				mov	al,[di+5]
020A:79CA  22 C4				and	al,ah
020A:79CC  3C 01				cmp	al,1
020A:79CE  75 04				jne	loc_1197		; Jump if not equal
020A:79D0  03 FB				add	di,bx
020A:79D2  EB D6				jmp	short loc_1195		; (79AA)
020A:79D4			loc_1197::
020A:79D4  77 06				ja	loc_1198		; Jump if above
020A:79D6  03 FB				add	di,bx
020A:79D8  2B FD				sub	di,bp
020A:79DA  EB			data_617	db	0EBh
020A:79DB  CE			data_618	db	0CEh
020A:79DC			loc_1198::
020A:79DC  3C			data_619	db	3Ch
020A:79DD  7502			data_620	dw	7502h
020A:79DF  04 03				add	al,3
020A:79E1  FA					cli				; Disable interrupts
020A:79E2  EB C6				jmp	short loc_1195		; (79AA)
020A:79E4			loc_1199::
020A:79E4  8A 45 06				mov	al,[di+6]
020A:79E7  32 E4				xor	ah,ah			; Zero register
020A:79E9  03 F8				add	di,ax
020A:79EB  B4 03				mov	ah,3
020A:79ED  EB BB				jmp	short loc_1195		; (79AA)
020A:79EF			loc_1200::
020A:79EF  74 03				jz	loc_1202		; Jump if zero
020A:79F1			loc_1201::
020A:79F1  E9 00B8				jmp	loc_1212		; (7AAC)
020A:79F4			loc_1202::
020A:79F4  83 FA 16				cmp	dx,16h
020A:79F7  75 25				jne	loc_1204		; Jump if not equal
020A:79F9  26: 80 3E 4D4B 01			cmp	es:data_535,1		; (020A:4D4B=6)
020A:79FF  74 1D				je	loc_1204		; Jump if equal
020A:7A01  26: 80 3E 53D6 00			cmp	byte ptr es:[53D6h],0	; (020A:53D6=0FBh)
020A:7A07  75 0A				jne	loc_1203		; Jump if not equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 270

020A:7A09  89 3E 0006				mov	word ptr ds:[6],di	; (020A:0006=3)
020A:7A0D  26: C6 06 53D6 01			mov	byte ptr es:[53D6h],1	; (020A:53D6=0FBh)
020A:7A13			loc_1203::
020A:7A13  8A 45 04				mov	al,[di+4]
020A:7A16  24 1F				and	al,1Fh
020A:7A18  3C 1F				cmp	al,1Fh
020A:7A1A  75 02				jne	loc_1204		; Jump if not equal
020A:7A1C  EB 95				jmp	short loc_1196		; (79B3)
020A:7A1E			loc_1204::
020A:7A1E  8B 05				mov	ax,[di]
020A:7A20  A3 0002				mov	word ptr ds:[2],ax	; (020A:0002=10h)
020A:7A23  8B 45 02				mov	ax,[di+2]
020A:7A26  A3 0004				mov	word ptr ds:[4],ax	; (020A:0004=808h)
020A:7A29  26: 80 3E 53D6 00			cmp	byte ptr es:[53D6h],0	; (020A:53D6=0FBh)
020A:7A2F  75 04				jne	loc_1205		; Jump if not equal
020A:7A31  89 3E 0006				mov	word ptr ds:[6],di	; (020A:0006=3)
020A:7A35			loc_1205::
020A:7A35  26: A1 40F5				mov	ax,word ptr es:[40F5h]	; (020A:40F5=97h)
020A:7A39  26: 3B 06 344A			cmp	ax,es:data_390		; (020A:344A=0)
020A:7A3E  75 69				jne	loc_1211		; Jump if not equal
020A:7A40  26: A1 40F7				mov	ax,es:data_490		; (020A:40F7=3B4h)
020A:7A44  26: 3B 06 344C			cmp	ax,es:data_391		; (020A:344C=0)
020A:7A49  75 5E				jne	loc_1211		; Jump if not equal
020A:7A4B  BB 40C2				mov	bx,40C2h
020A:7A4E  8A 45 05				mov	al,[di+5]
020A:7A51  25 000F				and	ax,0Fh
020A:7A54  26: D7				xlat	es:[bx]			; al=[al+[bx]] table
020A:7A56  0A C0				or	al,al			; Zero ?
020A:7A58  75 03				jnz	loc_1206		; Jump if not zero
020A:7A5A  8A 45 06				mov	al,[di+6]
020A:7A5D			loc_1206::
020A:7A5D  8B D8				mov	bx,ax
020A:7A5F  8B 01				mov	ax,[bx+di]
020A:7A61  26: 3B 06 344A			cmp	ax,es:data_390		; (020A:344A=0)
020A:7A66  8B 41 02				mov	ax,[bx+di+2]
020A:7A69  74 03				jz	loc_1207		; Jump if zero
020A:7A6B  B8 FFFF				mov	ax,0FFFFh
020A:7A6E			loc_1207::
020A:7A6E  8A 51 05				mov	dl,[bx+di+5]
020A:7A71  80 E2 0C				and	dl,0Ch
020A:7A74  80 FA 00				cmp	dl,0
020A:7A77  74 10				je	loc_1208		; Jump if equal
020A:7A79  80 FA 04				cmp	dl,4
020A:7A7C  74 27				je	loc_1210		; Jump if equal
020A:7A7E  80 FA 08				cmp	dl,8
020A:7A81  75 26				jne	loc_1211		; Jump if not equal
020A:7A83  26: A3 4E8B				mov	es:data_561,ax		; (020A:4E8B=0D77h)
020A:7A87  EB 20				jmp	short loc_1211		; (7AA9)
020A:7A89			loc_1208::
020A:7A89  26: A3 4E89				mov	es:data_560,ax		; (020A:4E89=0CFBh)
020A:7A8D  8A 41 04				mov	al,[bx+di+4]
020A:7A90  26: A2 4E8D				mov	es:data_562,al		; (020A:4E8D=3Ch)
020A:7A94  32 C0				xor	al,al			; Zero register
020A:7A96  F6 41 05 0F				test	byte ptr [bx+di+5],0Fh
020A:7A9A  74 03				jz	loc_1209		; Jump if zero
020A:7A9C  8A 41 09				mov	al,[bx+di+9]
020A:7A9F			loc_1209::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 271

020A:7A9F  26: A2 4E8E				mov	es:data_563,al		; (020A:4E8E=1)
020A:7AA3  EB 04				jmp	short loc_1211		; (7AA9)
020A:7AA5			loc_1210::
020A:7AA5  26: A3 4E87				mov	es:data_559,ax		; (020A:4E87=8358h)
020A:7AA9			loc_1211::
020A:7AA9  F9					stc				; Set carry flag
020A:7AAA  EB 61				jmp	short loc_1218		; (7B0D)
020A:7AAC			loc_1212::
020A:7AAC  26: A1 40F5				mov	ax,word ptr es:[40F5h]	; (020A:40F5=97h)
020A:7AB0  26: 3B 06 344A			cmp	ax,es:data_390		; (020A:344A=0)
020A:7AB5  75 55				jne	loc_1217		; Jump if not equal
020A:7AB7  26: A1 40F7				mov	ax,es:data_490		; (020A:40F7=3B4h)
020A:7ABB  26: 3B 06 344C			cmp	ax,es:data_391		; (020A:344C=0)
020A:7AC0  75 4A				jne	loc_1217		; Jump if not equal
020A:7AC2  B8 FFFF				mov	ax,0FFFFh
020A:7AC5  8B 1D				mov	bx,[di]
020A:7AC7  26: 3B 1E 344A			cmp	bx,es:data_390		; (020A:344A=0)
020A:7ACC  75 03				jne	loc_1213		; Jump if not equal
020A:7ACE  8B 45 02				mov	ax,[di+2]
020A:7AD1			loc_1213::
020A:7AD1  8A 55 05				mov	dl,[di+5]
020A:7AD4  80 E2 0C				and	dl,0Ch
020A:7AD7  80 FA 00				cmp	dl,0
020A:7ADA  74 10				je	loc_1214		; Jump if equal
020A:7ADC  80 FA 04				cmp	dl,4
020A:7ADF  74 27				je	loc_1216		; Jump if equal
020A:7AE1  80 FA 08				cmp	dl,8
020A:7AE4  75 26				jne	loc_1217		; Jump if not equal
020A:7AE6  26: A3 4E8B				mov	es:data_561,ax		; (020A:4E8B=0D77h)
020A:7AEA  EB 20				jmp	short loc_1217		; (7B0C)
020A:7AEC			loc_1214::
020A:7AEC  26: A3 4E89				mov	es:data_560,ax		; (020A:4E89=0CFBh)
020A:7AF0  8A 45 04				mov	al,[di+4]
020A:7AF3  26: A2 4E8D				mov	es:data_562,al		; (020A:4E8D=3Ch)
020A:7AF7  32 C0				xor	al,al			; Zero register
020A:7AF9  F6 45 05 0F				test	byte ptr [di+5],0Fh
020A:7AFD  74 03				jz	loc_1215		; Jump if zero
020A:7AFF  8A 45 09				mov	al,[di+9]
020A:7B02			loc_1215::
020A:7B02  26: A2 4E8E				mov	es:data_563,al		; (020A:4E8E=1)
020A:7B06  EB 04				jmp	short loc_1217		; (7B0C)
020A:7B08			loc_1216::
020A:7B08  26: A3 4E87				mov	es:data_559,ax		; (020A:4E87=8358h)
020A:7B0C			loc_1217::
020A:7B0C  F8					clc				; Clear carry flag
020A:7B0D			loc_1218::
020A:7B0D  1E					push	ds
020A:7B0E  8C C0				mov	ax,es
020A:7B10  8E D8				mov	ds,ax
020A:7B12  07					pop	es
020A:7B13  8B CD				mov	cx,bp
020A:7B15  5D					pop	bp
020A:7B16  5E					pop	si
020A:7B17  5B					pop	bx
020A:7B18  58					pop	ax
020A:7B19  C3					retn
				sub_111		endp
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 272


020A:7B1A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_112		proc	near

020A:7B1C			locloop_1219::
020A:7B1C  8A 04				mov	al,[si]
020A:7B1E  A8 40				test	al,40h			; '@'
020A:7B20  74 18				jz	loc_1221		; Jump if zero
020A:7B22  3C 40				cmp	al,40h			; '@'
020A:7B24  74 14				je	loc_1221		; Jump if equal
020A:7B26  3C 5B				cmp	al,5Bh			; '['
020A:7B28  72 08				jb	loc_1220		; Jump if below
020A:7B2A  3C 7B				cmp	al,7Bh			; '{'
020A:7B2C  73 0C				jae	loc_1221		; Jump if above or =
020A:7B2E  3C 60				cmp	al,60h			; '`'
020A:7B30  76 08				jbe	loc_1221		; Jump if below or =
020A:7B32			loc_1220::
020A:7B32  24 DF				and	al,0DFh
020A:7B34  0A 06 35DF				or	al,data_433		; (020A:35DF=6)
020A:7B38  88 04				mov	[si],al
020A:7B3A			loc_1221::
020A:7B3A  46					inc	si
020A:7B3B  E2 DF				loop	locloop_1219		; Loop if cx > 0

020A:7B3D  C3					retn
				sub_112		endp

							                        ;* No entry point to code
020A:7B3E  87 DB				xchg	bx,bx
020A:7B40  C6 06 304A 00			mov	data_337,0		; (020A:304A=2Eh)
020A:7B45  BA 0002				mov	dx,2
020A:7B48  BB 2EA0				mov	bx,2EA0h
020A:7B4B  E8 C602				call	sub_42			; (4150)
020A:7B4E  C3					retn
							                        ;* No entry point to code
020A:7B4F  90					nop
020A:7B50  BF 0008				mov	di,8
020A:7B53  BE 0000				mov	si,0
020A:7B56  E8 0E13				call	sub_121			; (896C)
020A:7B59			loc_1222::
020A:7B59  8B 04				mov	ax,[si]
020A:7B5B  8B 5C 02				mov	bx,[si+2]
020A:7B5E  8B 4C 04				mov	cx,[si+4]
020A:7B61  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:7B66  73 64				jae	loc_1224		; Jump if above or =
020A:7B68  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:7B6D  74 60				jz	loc_1225		; Jump if zero
020A:7B6F  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:7B74  75 59				jnz	loc_1225		; Jump if not zero
020A:7B76  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:7B7B  75 4D				jnz	loc_1223		; Jump if not zero
020A:7B7D  26: 3B 05				cmp	ax,es:[di]
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 273

020A:7B80  72 4F				jb	loc_1226		; Jump if below
020A:7B82  77 46				ja	loc_1223		; Jump if above
020A:7B84  26: 3B 5D 02				cmp	bx,es:[di+2]
020A:7B88  77 40				ja	loc_1223		; Jump if above
020A:7B8A  26: 3B 4D 02				cmp	cx,es:[di+2]
020A:7B8E  72 41				jb	loc_1226		; Jump if below
020A:7B90  1E					push	ds
020A:7B91  E8 0DE1				call	sub_122			; (8975)
020A:7B94  F7 06 4E22 0200			test	data_553,200h		; (020A:4E22=4788h)
020A:7B9A  1F					pop	ds
020A:7B9B  74 3F				jz	loc_1227		; Jump if zero
020A:7B9D  8B 54 0A				mov	dx,[si+0Ah]
020A:7BA0  80 E2 03				and	dl,3
020A:7BA3  80 FA 01				cmp	dl,1
020A:7BA6  77 34				ja	loc_1227		; Jump if above
020A:7BA8  26: 8A 55 04				mov	dl,es:[di+4]
020A:7BAC  F6 C2 80				test	dl,80h
020A:7BAF  74 2B				jz	loc_1227		; Jump if zero
020A:7BB1  F6 C2 10				test	dl,10h
020A:7BB4  75 26				jnz	loc_1227		; Jump if not zero
020A:7BB6  9A 168F:55E4		;*		call	far ptr sub_197		;*(168F:55E4)
020A:7BB6  9A					db	9Ah
020A:7BB7  55E4 168F				dw	55E4h, 168Fh
020A:7BBB  72 1F				jc	loc_1227		; Jump if carry Set
020A:7BBD  26: 81 7D 02 0100			cmp	word ptr es:[di+2],100h
020A:7BC3  73 17				jae	loc_1227		; Jump if above or =
020A:7BC5  26: 80 65 04 BF			and	byte ptr es:[di+4],0BFh
020A:7BCA			loc_1223::
020A:7BCA  EB 3C				jmp	short loc_1229		; (7C08)
020A:7BCC			loc_1224::
020A:7BCC  E9 016A				jmp	loc_1242		; (7D39)
020A:7BCF			loc_1225::
020A:7BCF  EB 0B				jmp	short loc_1227		; (7BDC)
020A:7BD1			loc_1226::
020A:7BD1  83 C6 15				add	si,15h
020A:7BD4  83 3C FF				cmp	word ptr [si],0FFFFh
020A:7BD7  74 2F				je	loc_1229		; Jump if equal
020A:7BD9  E9 FF7D				jmp	loc_1222		; (7B59)
020A:7BDC			loc_1227::
020A:7BDC  E8 0D8D				call	sub_121			; (896C)
020A:7BDF  BB 40C2				mov	bx,40C2h
020A:7BE2  26: 8A 45 05				mov	al,es:[di+5]
020A:7BE6  25 000F				and	ax,0Fh
020A:7BE9  1E					push	ds
020A:7BEA  E8 0D88				call	sub_122			; (8975)
020A:7BED  D7					xlat				; al=[al+[bx]] table
020A:7BEE  1F					pop	ds
020A:7BEF  0A C0				or	al,al			; Zero ?
020A:7BF1  75 04				jnz	loc_1228		; Jump if not zero
020A:7BF3  26: 8A 45 06				mov	al,es:[di+6]
020A:7BF7			loc_1228::
020A:7BF7  03 F8				add	di,ax
020A:7BF9  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:7BFE  73 CC				jae	loc_1224		; Jump if above or =
020A:7C00  83 3C FF				cmp	word ptr [si],0FFFFh
020A:7C03  74 03				je	loc_1229		; Jump if equal
020A:7C05  E9 FF51				jmp	loc_1222		; (7B59)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 274

020A:7C08			loc_1229::
020A:7C08  E8 0D6A				call	sub_122			; (8975)
020A:7C0B  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:7C10  74 CA				jz	loc_1227		; Jump if zero
020A:7C12  26: 80 4D 07 40			or	byte ptr es:[di+7],40h	; '@'
020A:7C17  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:7C1C  26: 80 4D 05 40			or	byte ptr es:[di+5],40h	; '@'
020A:7C21  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:7C26  75 B4				jnz	loc_1227		; Jump if not zero
020A:7C28  E8 0401				call	sub_115			; (802C)
020A:7C2B  BD 2D20				mov	bp,2D20h
020A:7C2E  80 3E 35E3 01			cmp	data_435,1		; (020A:35E3=46h)
020A:7C33  75 09				jne	loc_1230		; Jump if not equal
020A:7C35  4D					dec	bp
020A:7C36  80 3E 35E4 00			cmp	data_436,0		; (020A:35E4=46h)
020A:7C3B  74 08				je	loc_1231		; Jump if equal
020A:7C3D  4D					dec	bp
020A:7C3E			loc_1230::
020A:7C3E  3E: C6 46 00 3D			mov	byte ptr ds:[bp],3Dh	; '='
020A:7C43  45					inc	bp
020A:7C44  45					inc	bp
020A:7C45			loc_1231::
020A:7C45  26: 8B 45 02				mov	ax,es:[di+2]
020A:7C49  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:7C49  9A					db	9Ah
020A:7C4A  021C 168F				dw	21Ch, 168Fh
020A:7C4E  BD 2D3B				mov	bp,2D3Bh
020A:7C51  B9 000A				mov	cx,0Ah
020A:7C54  9A 168F:2D70		;*		call	far ptr sub_178		;*(168F:2D70)
020A:7C54  9A					db	9Ah
020A:7C55  2D70 168F				dw	2D70h, 168Fh
020A:7C59  B1 00				mov	cl,0
020A:7C5B  C6 06 2D5B 65			mov	data_315,65h		; (020A:2D5B=43h) 'e'
020A:7C60  C7 06 2D5C 7571			mov	data_316,7571h		; (020A:2D5C=5345h)
020A:7C66  80 3E 35DF 00			cmp	data_433,0		; (020A:35DF=6)
020A:7C6B  75 0B				jne	loc_1232		; Jump if not equal
020A:7C6D  C6 06 2D5B 45			mov	data_315,45h		; (020A:2D5B=43h) 'E'
020A:7C72  C7 06 2D5C 5551			mov	data_316,5551h		; (020A:2D5C=5345h)
020A:7C78			loc_1232::
020A:7C78  BD 2D63				mov	bp,2D63h
020A:7C7B  26: 8B 45 02				mov	ax,es:[di+2]
020A:7C7F  9A 168F:023C		;*		call	far ptr sub_151		;*(168F:023C)
020A:7C7F  9A					db	9Ah
020A:7C80  023C 168F				dw	23Ch, 168Fh
020A:7C84  B7 00				mov	bh,0
020A:7C86  26: 8A 45 04				mov	al,es:[di+4]
020A:7C8A  24 3F				and	al,3Fh			; '?'
020A:7C8C  3C 02				cmp	al,2
020A:7C8E  74 0B				je	loc_1233		; Jump if equal
020A:7C90  3C 00				cmp	al,0
020A:7C92  75 09				jne	loc_1234		; Jump if not equal
020A:7C94  26: 83 7D 08 02			cmp	word ptr es:[di+8],2
020A:7C99  75 02				jne	loc_1234		; Jump if not equal
020A:7C9B			loc_1233::
020A:7C9B  B7 20				mov	bh,20h			; ' '
020A:7C9D			loc_1234::
020A:7C9D  E8 009C				call	sub_113			; (7D3C)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 275

020A:7CA0  F7 06 4E24 0020			test	data_554,20h		; (020A:4E24=885Ah)
020A:7CA6  75 42				jnz	loc_1239		; Jump if not zero
020A:7CA8  26: 8B 05				mov	ax,es:[di]
020A:7CAB  26: 8B 5D 02				mov	bx,es:[di+2]
020A:7CAF  3D A000				cmp	ax,0A000h
020A:7CB2  73 36				jae	loc_1239		; Jump if above or =
020A:7CB4  0B C0				or	ax,ax			; Zero ?
020A:7CB6  75 08				jnz	loc_1235		; Jump if not zero
020A:7CB8  81 FB 0500				cmp	bx,500h
020A:7CBC  76 2C				jbe	loc_1239		; Jump if below or =
020A:7CBE  EB 24				jmp	short loc_1238		; (7CE4)
020A:7CC0			loc_1235::
020A:7CC0  3D 0040				cmp	ax,40h
020A:7CC3  75 08				jne	loc_1236		; Jump if not equal
020A:7CC5  81 FB 0100				cmp	bx,100h
020A:7CC9  76 1F				jbe	loc_1239		; Jump if below or =
020A:7CCB  EB 17				jmp	short loc_1238		; (7CE4)
020A:7CCD			loc_1236::
020A:7CCD  3D 0050				cmp	ax,50h
020A:7CD0  75 06				jne	loc_1237		; Jump if not equal
020A:7CD2  0B DB				or	bx,bx			; Zero ?
020A:7CD4  74 14				jz	loc_1239		; Jump if zero
020A:7CD6  EB 0C				jmp	short loc_1238		; (7CE4)
020A:7CD8			loc_1237::
020A:7CD8  81 FB 00FF				cmp	bx,0FFh
020A:7CDC  77 06				ja	loc_1238		; Jump if above
020A:7CDE  3B 06 3039				cmp	ax,data_329		; (020A:3039=4200h)
020A:7CE2  74 06				je	loc_1239		; Jump if equal
020A:7CE4			loc_1238::
020A:7CE4  C7 06 2DAB 2A3B			mov	data_317,2A3Bh		; (020A:2DAB=6257h)
020A:7CEA			loc_1239::
020A:7CEA  80 3E 586D 01			cmp	byte ptr ds:[586Dh],1	; (020A:586D=0E7h)
020A:7CEF  74 0C				je	loc_1240		; Jump if equal
020A:7CF1  C6 06 586D 01			mov	byte ptr ds:[586Dh],1	; (020A:586D=0E7h)
020A:7CF6  B0 58				mov	al,58h			; 'X'
020A:7CF8  9A 168F:2280		;*		call	far ptr sub_166		;*(168F:2280)
020A:7CF8  9A					db	9Ah
020A:7CF9  2280 168F				dw	2280h, 168Fh
020A:7CFD			loc_1240::
020A:7CFD  BA 2D1B				mov	dx,2D1Bh
020A:7D00  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:7D05  06					push	es
020A:7D06  9A 168F:233C		;*		call	far ptr sub_167		;*(168F:233C)
020A:7D06  9A					db	9Ah
020A:7D07  233C 168F				dw	233Ch, 168Fh
020A:7D0B  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7D10  9C					pushf				; Push flags
020A:7D11  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7D16  5A					pop	dx
020A:7D17  8E C2				mov	es,dx
020A:7D19  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:7D1E  5A					pop	dx
020A:7D1F  75 0A				jnz	loc_1241		; Jump if not zero
020A:7D21  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:7D26  74 03				je	loc_1241		; Jump if equal
020A:7D28  E8 0FC1				call	sub_132			; (8CEC)
020A:7D2B			loc_1241::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 276

020A:7D2B  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7D30  9D					popf				; Pop flags
020A:7D31  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7D36  E9 FEA3				jmp	loc_1227		; (7BDC)
020A:7D39			loc_1242::
020A:7D39  C3					retn
020A:7D3A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_113		proc	near
020A:7D3C  51					push	cx
020A:7D3D  52					push	dx
020A:7D3E  06					push	es
020A:7D3F  55					push	bp
020A:7D40  80 3E 35E6 00			cmp	byte ptr ds:[35E6h],0	; (020A:35E6=0C0h)
020A:7D45  75 0A				jne	loc_1243		; Jump if not equal
020A:7D47  26: 8A 45 04				mov	al,es:[di+4]
020A:7D4B  24 3F				and	al,3Fh			; '?'
020A:7D4D  3C 20				cmp	al,20h			; ' '
020A:7D4F  75 15				jne	loc_1244		; Jump if not equal
020A:7D51			loc_1243::
020A:7D51  F6 06 16AB 01			test	data_217,1		; (020A:16AB=41h)
020A:7D56  74 0E				jz	loc_1244		; Jump if zero
020A:7D58  80 3E 16AC 01			cmp	byte ptr data_218,1	; (020A:16AC='AAAAAAAAAAAAAA')
020A:7D5D  74 07				je	loc_1244		; Jump if equal
020A:7D5F  80 3E 4D49 01			cmp	data_533,1		; (020A:4D49=2Eh)
020A:7D64  75 03				jne	loc_1245		; Jump if not equal
020A:7D66			loc_1244::
020A:7D66  E9 01D5				jmp	loc_1277		; (7F3E)
020A:7D69			loc_1245::
020A:7D69  E8 01DC				call	sub_114			; (7F48)
020A:7D6C  32 C9				xor	cl,cl			; Zero register
020A:7D6E  B0 28				mov	al,28h			; '('
020A:7D70  80 3E 304A 00			cmp	data_337,0		; (020A:304A=2Eh)
020A:7D75  74 02				je	loc_1246		; Jump if equal
020A:7D77  B0 5B				mov	al,5Bh			; '['
020A:7D79			loc_1246::
020A:7D79  3E: 88 46 00				mov	ds:[bp],al
020A:7D7D  45					inc	bp
020A:7D7E  80 3E 35E6 00			cmp	byte ptr ds:[35E6h],0	; (020A:35E6=0C0h)
020A:7D83  75 03				jne	loc_1247		; Jump if not equal
020A:7D85  E9 0108				jmp	loc_1264		; (7E90)
020A:7D88			loc_1247::
020A:7D88  53					push	bx
020A:7D89  8C C8				mov	ax,cs
020A:7D8B  26: 3B 05				cmp	ax,es:[di]
020A:7D8E  75 0A				jne	loc_1248		; Jump if not equal
020A:7D90  3E: C7 46 00 7373			mov	word ptr ds:[bp],7373h
020A:7D96  45					inc	bp
020A:7D97  45					inc	bp
020A:7D98  EB 59				jmp	short loc_1254		; (7DF3)
020A:7D9A			loc_1248::
020A:7D9A  26: 8B 05				mov	ax,es:[di]
020A:7D9D  25 FFF0				and	ax,0FFF0h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 277

020A:7DA0  3D FBA0				cmp	ax,0FBA0h
020A:7DA3  75 22				jne	loc_1251		; Jump if not equal
020A:7DA5  FE C1				inc	cl
020A:7DA7  3E: C7 46 00 3F3F			mov	word ptr ds:[bp],3F3Fh
020A:7DAD  45					inc	bp
020A:7DAE  45					inc	bp
020A:7DAF  26: 8B 05				mov	ax,es:[di]
020A:7DB2  24 0F				and	al,0Fh
020A:7DB4  3C 0F				cmp	al,0Fh
020A:7DB6  74 0D				je	loc_1250		; Jump if equal
020A:7DB8  04 30				add	al,30h			; '0'
020A:7DBA  3C 39				cmp	al,39h			; '9'
020A:7DBC  76 02				jbe	loc_1249		; Jump if below or =
020A:7DBE  04 07				add	al,7
020A:7DC0			loc_1249::
020A:7DC0  3E: 88 46 00				mov	ds:[bp],al
020A:7DC4  45					inc	bp
020A:7DC5			loc_1250::
020A:7DC5  EB 2C				jmp	short loc_1254		; (7DF3)
020A:7DC7			loc_1251::
020A:7DC7  9A 168F:55E4		;*		call	far ptr sub_197		;*(168F:55E4)
020A:7DC7  9A					db	9Ah
020A:7DC8  55E4 168F				dw	55E4h, 168Fh
020A:7DCC  72 10				jc	loc_1252		; Jump if carry Set
020A:7DCE  80 3E 15D0 02			cmp	data_211,2		; (020A:15D0=0)
020A:7DD3  72 09				jb	loc_1252		; Jump if below
020A:7DD5  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:7DDA  74 02				jz	loc_1252		; Jump if zero
020A:7DDC  EB 42				jmp	short loc_1257		; (7E20)
020A:7DDE			loc_1252::
020A:7DDE  26: 8B 05				mov	ax,es:[di]
020A:7DE1  83 3E 3450 FF			cmp	word ptr data_393,0FFFFh	; (020A:3450=2028h)
020A:7DE6  74 04				je	loc_1253		; Jump if equal
020A:7DE8  2B 06 3450				sub	ax,word ptr data_393	; (020A:3450=2028h)
020A:7DEC			loc_1253::
020A:7DEC  9A 168F:0118		;*		call	far ptr sub_148		;*(168F:0118)
020A:7DEC  9A					db	9Ah
020A:7DED  0118 168F				dw	118h, 168Fh
020A:7DF1  EB 06				jmp	short loc_1255		; (7DF9)
020A:7DF3			loc_1254::
020A:7DF3  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:7DF8  45					inc	bp
020A:7DF9			loc_1255::
020A:7DF9  83 3E 3450 FF			cmp	word ptr data_393,0FFFFh	; (020A:3450=2028h)
020A:7DFE  74 17				je	loc_1256		; Jump if equal
020A:7E00  A1 3450				mov	ax,word ptr data_393	; (020A:3450=2028h)
020A:7E03  0B C0				or	ax,ax			; Zero ?
020A:7E05  74 10				jz	loc_1256		; Jump if zero
020A:7E07  51					push	cx
020A:7E08  B1 0C				mov	cl,0Ch
020A:7E0A  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:7E0C  59					pop	cx
020A:7E0D  9A 168F:00B0		;*		call	far ptr sub_145		;*(168F:00B0)
020A:7E0D  9A					db	9Ah
020A:7E0E  00B0 168F				dw	0B0h, 168Fh
020A:7E12  3E: 88 7E 00				mov	ds:[bp],bh
020A:7E16  45					inc	bp
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 278

020A:7E17			loc_1256::
020A:7E17  26: 8B 45 02				mov	ax,es:[di+2]
020A:7E1B  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:7E1B  9A					db	9Ah
020A:7E1C  021C 168F				dw	21Ch, 168Fh
020A:7E20			loc_1257::
020A:7E20  5B					pop	bx
020A:7E21  0A C9				or	cl,cl			; Zero ?
020A:7E23  75 0C				jnz	loc_1258		; Jump if not zero
020A:7E25  F6 C7 30				test	bh,30h			; '0'
020A:7E28  74 0A				jz	loc_1259		; Jump if zero
020A:7E2A  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:7E2F  75 03				jne	loc_1259		; Jump if not equal
020A:7E31			loc_1258::
020A:7E31  E9 00FA				jmp	loc_1275		; (7F2E)
020A:7E34			loc_1259::
020A:7E34  3E: C6 46 00 3D			mov	byte ptr ds:[bp],3Dh	; '='
020A:7E39  45					inc	bp
020A:7E3A  F6 C7 30				test	bh,30h			; '0'
020A:7E3D  74 3B				jz	loc_1262		; Jump if zero
020A:7E3F  F6 C7 20				test	bh,20h			; ' '
020A:7E42  74 24				jz	loc_1261		; Jump if zero
020A:7E44  F6 06 35EE 02			test	data_442,2		; (020A:35EE=75h)
020A:7E49  74 1D				jz	loc_1261		; Jump if zero
020A:7E4B  26: 83 7D 02 FC			cmp	word ptr es:[di+2],0FFFCh
020A:7E50  77 13				ja	loc_1260		; Jump if above
020A:7E52  26: 8B 5D 02				mov	bx,es:[di+2]
020A:7E56  26: 8E 05				mov	es,es:[di]
020A:7E59  26: 8B 47 02				mov	ax,es:[bx+2]
020A:7E5D  26: 8B 1F				mov	bx,es:[bx]
020A:7E60  9A 168F:039C		;*		call	far ptr sub_153		;*(168F:039C)
020A:7E60  9A					db	9Ah
020A:7E61  039C 168F				dw	39Ch, 168Fh
020A:7E65			loc_1260::
020A:7E65  E9 00C6				jmp	loc_1275		; (7F2E)
020A:7E68			loc_1261::
020A:7E68  26: 8B 5D 02				mov	bx,es:[di+2]
020A:7E6C  26: 8E 05				mov	es,es:[di]
020A:7E6F  26: 8B 07				mov	ax,es:[bx]
020A:7E72  9A 168F:023C		;*		call	far ptr sub_151		;*(168F:023C)
020A:7E72  9A					db	9Ah
020A:7E73  023C 168F				dw	23Ch, 168Fh
020A:7E77  E9 00B4				jmp	loc_1275		; (7F2E)
020A:7E7A			loc_1262::
020A:7E7A  26: 8B 5D 02				mov	bx,es:[di+2]
020A:7E7E  26: 8A 45 04				mov	al,es:[di+4]
020A:7E82  24 3F				and	al,3Fh			; '?'
020A:7E84  3C 20				cmp	al,20h			; ' '
020A:7E86  74 03				je	loc_1263		; Jump if equal
020A:7E88  E9 0098				jmp	loc_1274		; (7F23)
020A:7E8B			loc_1263::
020A:7E8B  BA 0010				mov	dx,10h
020A:7E8E  EB 07				jmp	short loc_1265		; (7E97)
020A:7E90			loc_1264::
020A:7E90  26: 8B 5D 02				mov	bx,es:[di+2]
020A:7E94  BA 0018				mov	dx,18h
020A:7E97			loc_1265::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 279

020A:7E97  26: 8B 4D 08				mov	cx,es:[di+8]
020A:7E9B  3B CA				cmp	cx,dx
020A:7E9D  72 02				jb	loc_1266		; Jump if below
020A:7E9F  8B CA				mov	cx,dx
020A:7EA1			loc_1266::
020A:7EA1  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020A:7EA6  45					inc	bp
020A:7EA7  26: 8E 05				mov	es,es:[di]
020A:7EAA  57					push	di
020A:7EAB  8B FB				mov	di,bx
020A:7EAD  BB 5413				mov	bx,5413h

020A:7EB0			locloop_1267::
020A:7EB0  83 F9 01				cmp	cx,1
020A:7EB3  76 31				jbe	loc_1268		; Jump if below or =
020A:7EB5  80 3E 53D9 00			cmp	byte ptr ds:[53D9h],0	; (020A:53D9=32h)
020A:7EBA  74 2A				je	loc_1268		; Jump if equal
020A:7EBC  F7 06 4E22 0002			test	data_553,2		; (020A:4E22=4788h)
020A:7EC2  74 22				jz	loc_1268		; Jump if zero
020A:7EC4  26: 8B 05				mov	ax,es:[di]
020A:7EC7  3C 00				cmp	al,0
020A:7EC9  74 4F				je	loc_1273		; Jump if equal
020A:7ECB  50					push	ax
020A:7ECC  86 E0				xchg	ah,al
020A:7ECE  9A 168F:38EC		;*		call	far ptr sub_182		;*(168F:38EC)
020A:7ECE  9A					db	9Ah
020A:7ECF  38EC 168F				dw	38ECh, 168Fh
020A:7ED3  3D 0001				cmp	ax,1
020A:7ED6  58					pop	ax
020A:7ED7  72 41				jc	loc_1273		; Jump if carry Set
020A:7ED9  74 0E				jz	loc_1269		; Jump if zero
020A:7EDB  3E: 88 46 00				mov	ds:[bp],al
020A:7EDF  45					inc	bp
020A:7EE0  47					inc	di
020A:7EE1  49					dec	cx
020A:7EE2  8A C4				mov	al,ah
020A:7EE4  EB 27				jmp	short loc_1271		; (7F0D)
020A:7EE6			loc_1268::
020A:7EE6  26: 8A 05				mov	al,es:[di]
020A:7EE9			loc_1269::
020A:7EE9  0A C0				or	al,al			; Zero ?
020A:7EEB  74 2D				jz	loc_1273		; Jump if zero
020A:7EED  3C 0D				cmp	al,0Dh
020A:7EEF  74 29				je	loc_1273		; Jump if equal
020A:7EF1  3C 0A				cmp	al,0Ah
020A:7EF3  74 25				je	loc_1273		; Jump if equal
020A:7EF5  80 3E 53D9 01			cmp	byte ptr ds:[53D9h],1	; (020A:53D9=32h)
020A:7EFA  74 04				je	loc_1270		; Jump if equal
020A:7EFC  3C 7E				cmp	al,7Eh			; '~'
020A:7EFE  73 11				jae	loc_1272		; Jump if above or =
020A:7F00			loc_1270::
020A:7F00  3C 20				cmp	al,20h			; ' '
020A:7F02  72 0D				jb	loc_1272		; Jump if below
020A:7F04  83 F9 01				cmp	cx,1
020A:7F07  77 04				ja	loc_1271		; Jump if above
020A:7F09  3C 24				cmp	al,24h			; '$'
020A:7F0B  74 0D				je	loc_1273		; Jump if equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 280

020A:7F0D			loc_1271::
020A:7F0D  3E: 88 46 00				mov	ds:[bp],al
020A:7F11			loc_1272::
020A:7F11  83 FF FE				cmp	di,0FFFEh
020A:7F14  73 04				jae	loc_1273		; Jump if above or =
020A:7F16  47					inc	di
020A:7F17  45					inc	bp
020A:7F18  E2 96				loop	locloop_1267		; Loop if cx > 0

020A:7F1A			loc_1273::
020A:7F1A  5F					pop	di
020A:7F1B  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020A:7F20  45					inc	bp
020A:7F21  EB 0B				jmp	short loc_1275		; (7F2E)
020A:7F23			loc_1274::
020A:7F23  26: 8E 05				mov	es,es:[di]
020A:7F26  26: 8A 07				mov	al,es:[bx]
020A:7F29  9A 168F:00E4		;*		call	far ptr sub_147		;*(168F:00E4)
020A:7F29  9A					db	9Ah
020A:7F2A  00E4 168F				dw	0E4h, 168Fh
020A:7F2E			loc_1275::
020A:7F2E  B0 29				mov	al,29h			; ')'
020A:7F30  80 3E 304A 00			cmp	data_337,0		; (020A:304A=2Eh)
020A:7F35  74 02				je	loc_1276		; Jump if equal
020A:7F37  B0 5D				mov	al,5Dh			; ']'
020A:7F39			loc_1276::
020A:7F39  3E: 88 46 00				mov	ds:[bp],al
020A:7F3D  45					inc	bp
020A:7F3E			loc_1277::
020A:7F3E  5D					pop	bp
020A:7F3F  07					pop	es
020A:7F40  5A					pop	dx
020A:7F41  59					pop	cx
020A:7F42  C6 06 304A 00			mov	data_337,0		; (020A:304A=2Eh)
020A:7F47  C3					retn
				sub_113		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_114		proc	near
020A:7F48  50					push	ax
020A:7F49  51					push	cx
020A:7F4A  57					push	di
020A:7F4B  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:7F50  06					push	es
020A:7F51  E8 0A39				call	sub_125			; (898D)
020A:7F54  32 E4				xor	ah,ah			; Zero register
020A:7F56  BF 2DCF				mov	di,2DCFh
020A:7F59  B9 0026				mov	cx,26h
020A:7F5C  B0 3B				mov	al,3Bh			; ';'
020A:7F5E  FD					std				; Set direction flag
020A:7F5F  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:7F61  0B C9				or	cx,cx			; Zero ?
020A:7F63  75 02				jnz	loc_1278		; Jump if not zero
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 281

020A:7F65  FE C4				inc	ah
020A:7F67			loc_1278::
020A:7F67  BF 2DCF				mov	di,2DCFh
020A:7F6A  B9 0026				mov	cx,26h
020A:7F6D  B0 20				mov	al,20h			; ' '
020A:7F6F  FD					std				; Set direction flag
020A:7F70  F3/ AE				repe	scasb			; Rep zf=1+cx >0 Scan es:[di] for al
020A:7F72  47					inc	di
020A:7F73  47					inc	di
020A:7F74  0A E4				or	ah,ah			; Zero ?
020A:7F76  74 04				jz	loc_1279		; Jump if zero
020A:7F78  C6 05 3B				mov	byte ptr [di],3Bh	; ';'
020A:7F7B  47					inc	di
020A:7F7C			loc_1279::
020A:7F7C  47					inc	di
020A:7F7D  FC					cld				; Clear direction
020A:7F7E  8B EF				mov	bp,di
020A:7F80  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7F85  9C					pushf				; Push flags
020A:7F86  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7F8B  5A					pop	dx
020A:7F8C  8E C2				mov	es,dx
020A:7F8E  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:7F93  5A					pop	dx
020A:7F94  75 0A				jnz	loc_1280		; Jump if not zero
020A:7F96  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:7F9B  74 03				je	loc_1280		; Jump if equal
020A:7F9D  E8 0D4C				call	sub_132			; (8CEC)
020A:7FA0			loc_1280::
020A:7FA0  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7FA5  9D					popf				; Pop flags
020A:7FA6  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7FAB  5F					pop	di
020A:7FAC  59					pop	cx
020A:7FAD  58					pop	ax
020A:7FAE  C3					retn
				sub_114		endp

							                        ;* No entry point to code
020A:7FAF  90					nop
020A:7FB0  80 3E 2B3B 06			cmp	data_289,6		; (020A:2B3B=0A0h)
020A:7FB5  73 02				jae	loc_1281		; Jump if above or =
020A:7FB7  EB 19				jmp	short loc_1283		; (7FD2)
020A:7FB9			loc_1281::
020A:7FB9  80 3E 2B36 04			cmp	data_285,4		; (020A:2B36=0ADh)
020A:7FBE  76 12				jbe	loc_1283		; Jump if below or =
020A:7FC0  F6 06 2B36 01			test	data_285,1		; (020A:2B36=0ADh)
020A:7FC5  75 02				jnz	loc_1282		; Jump if not zero
020A:7FC7  EB 09				jmp	short loc_1283		; (7FD2)
020A:7FC9			loc_1282::
020A:7FC9  BA 0007				mov	dx,7
020A:7FCC  BB 3324				mov	bx,3324h
020A:7FCF  E8 C17E				call	sub_42			; (4150)
020A:7FD2			loc_1283::
020A:7FD2  C3					retn
							                        ;* No entry point to code
020A:7FD3  90					nop
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 282

020A:7FD4  50					push	ax
020A:7FD5  53					push	bx
020A:7FD6  51					push	cx
020A:7FD7  52					push	dx
020A:7FD8  56					push	si
020A:7FD9  57					push	di
020A:7FDA  55					push	bp
020A:7FDB  BF 0008				mov	di,8
020A:7FDE			loc_1284::
020A:7FDE  26: 39 3E 0000			cmp	word ptr es:[0],di	; (020A:0000=1828h)
020A:7FE3  76 3E				jbe	loc_1288		; Jump if below or =
020A:7FE5  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:7FEA  75 20				jnz	loc_1286		; Jump if not zero
020A:7FEC  26: 8A 65 05				mov	ah,es:[di+5]
020A:7FF0  80 E4 0C				and	ah,0Ch
020A:7FF3  80 FC 04				cmp	ah,4
020A:7FF6  75 07				jne	loc_1285		; Jump if not equal
020A:7FF8  26: F6 45 04 20			test	byte ptr es:[di+4],20h	; ' '
020A:7FFD  75 0D				jnz	loc_1286		; Jump if not zero
020A:7FFF			loc_1285::
020A:7FFF  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:8003  74 07				je	loc_1286		; Jump if equal
020A:8005  8B F7				mov	si,di
020A:8007  E8 1FAE				call	sub_140			; (9FB8)
020A:800A  EB D2				jmp	short loc_1284		; (7FDE)
020A:800C			loc_1286::
020A:800C  BB 40C2				mov	bx,40C2h
020A:800F  26: 8A 45 05				mov	al,es:[di+5]
020A:8013  25 000F				and	ax,0Fh
020A:8016  D7					xlat				; al=[al+[bx]] table
020A:8017  0A C0				or	al,al			; Zero ?
020A:8019  75 04				jnz	loc_1287		; Jump if not zero
020A:801B  26: 8A 45 06				mov	al,es:[di+6]
020A:801F			loc_1287::
020A:801F  03 F8				add	di,ax
020A:8021  EB BB				jmp	short loc_1284		; (7FDE)
020A:8023			loc_1288::
020A:8023  5D					pop	bp
020A:8024  5F					pop	di
020A:8025  5E					pop	si
020A:8026  5A					pop	dx
020A:8027  59					pop	cx
020A:8028  5B					pop	bx
020A:8029  58					pop	ax
020A:802A  C3					retn
020A:802B  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_115		proc	near
020A:802C  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:8031  06					push	es
020A:8032  57					push	di
020A:8033  B0 20				mov	al,20h			; ' '
020A:8035  E8 0955				call	sub_125			; (898D)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 283

020A:8038  BF 2D1B				mov	di,2D1Bh
020A:803B  B9 2DD1				mov	cx,2DD1h
020A:803E  81 E9 2D1B				sub	cx,2D1Bh
020A:8042  FC					cld				; Clear direction
020A:8043  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:8045  5F					pop	di
020A:8046  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:804B  9C					pushf				; Push flags
020A:804C  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:8051  5A					pop	dx
020A:8052  8E C2				mov	es,dx
020A:8054  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:8059  5A					pop	dx
020A:805A  75 0A				jnz	loc_1289		; Jump if not zero
020A:805C  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:8061  74 03				je	loc_1289		; Jump if equal
020A:8063  E8 0C86				call	sub_132			; (8CEC)
020A:8066			loc_1289::
020A:8066  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:806B  9D					popf				; Pop flags
020A:806C  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:8071  C3					retn
				sub_115		endp

020A:8072  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_116		proc	near
020A:8074  50					push	ax
020A:8075  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:807A  06					push	es
020A:807B  E8 0906				call	sub_124			; (8984)
020A:807E  C6 06 327D 01			mov	byte ptr ds:[327Dh],1	; (020A:327D=65h)
020A:8083  26: A1 0000				mov	ax,word ptr es:[0]	; (1EC4:0000=6164h)
020A:8087  3D 0000				cmp	ax,0
020A:808A  75 08				jne	loc_1290		; Jump if not equal
020A:808C  26: 83 3E 0004 00			cmp	word ptr es:[4],0	; (1EC4:0004=365Fh)
020A:8092  74 18				je	loc_1291		; Jump if equal
020A:8094			loc_1290::
020A:8094  26: 83 3E 0002 FF			cmp	word ptr es:[2],0FFFFh	; (1EC4:0002=6174h)
020A:809A  74 10				je	loc_1291		; Jump if equal
020A:809C  26: A1 0002				mov	ax,word ptr es:[2]	; (1EC4:0002=6174h)
020A:80A0  26: 3B 06 0004			cmp	ax,word ptr es:[4]	; (1EC4:0004=365Fh)
020A:80A5  73 05				jae	loc_1291		; Jump if above or =
020A:80A7  C6 06 327D 00			mov	byte ptr ds:[327Dh],0	; (020A:327D=65h)
020A:80AC			loc_1291::
020A:80AC  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:80B1  9C					pushf				; Push flags
020A:80B2  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:80B7  5A					pop	dx
020A:80B8  8E C2				mov	es,dx
020A:80BA  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:80BF  5A					pop	dx
020A:80C0  75 0A				jnz	loc_1292		; Jump if not zero
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 284

020A:80C2  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:80C7  74 03				je	loc_1292		; Jump if equal
020A:80C9  E8 0C20				call	sub_132			; (8CEC)
020A:80CC			loc_1292::
020A:80CC  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:80D1  9D					popf				; Pop flags
020A:80D2  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:80D7  58					pop	ax
020A:80D8  C3					retn
				sub_116		endp

							                        ;* No entry point to code
020A:80D9  87 DB				xchg	bx,bx
020A:80DB  90					nop
020A:80DC  E8 08BA				call	sub_128			; (8999)
020A:80DF  BF 12D0				mov	di,12D0h
020A:80E2  BE 2CCA				mov	si,2CCAh
020A:80E5  8B 04				mov	ax,[si]
020A:80E7  0B C0				or	ax,ax			; Zero ?
020A:80E9  75 13				jnz	loc_1293		; Jump if not zero
020A:80EB  80 3E 345C 01			cmp	byte ptr ds:[345Ch],1	; (020A:345C=57h)
020A:80F0  74 0C				je	loc_1293		; Jump if equal
020A:80F2  83 3E 344C FC			cmp	data_391,0FFFCh		; (020A:344C=0)
020A:80F7  73 05				jae	loc_1293		; Jump if above or =
020A:80F9  39 44 02				cmp	[si+2],ax
020A:80FC  74 26				je	loc_1295		; Jump if equal
020A:80FE			loc_1293::
020A:80FE  24 F8				and	al,0F8h
020A:8100  D0 E8				shr	al,1			; Shift w/zeros fill
020A:8102  D0 E8				shr	al,1			; Shift w/zeros fill
020A:8104  32 E4				xor	ah,ah			; Zero register
020A:8106  03 F8				add	di,ax
020A:8108  26: 8B 3D				mov	di,es:[di]
020A:810B  8B 04				mov	ax,[si]
020A:810D			loc_1294::
020A:810D  26: 3A 05				cmp	al,es:[di]
020A:8110  74 15				je	loc_1296		; Jump if equal
020A:8112  72 10				jc	loc_1295		; Jump if carry Set
020A:8114  50					push	ax
020A:8115  B8 1324				mov	ax,1324h
020A:8118  2D 1310				sub	ax,1310h
020A:811B  03 F8				add	di,ax
020A:811D  58					pop	ax
020A:811E  26: 83 3D 00				cmp	word ptr es:[di],0
020A:8122  75 E9				jne	loc_1294		; Jump if not equal
020A:8124			loc_1295::
020A:8124  F8					clc				; Clear carry flag
020A:8125  EB 01				jmp	short loc_1297		; (8128)
020A:8127			loc_1296::
020A:8127  F9					stc				; Set carry flag
020A:8128			loc_1297::
020A:8128  C3					retn
							                        ;* No entry point to code
020A:8129  87 DB				xchg	bx,bx
020A:812B  90					nop
020A:812C  50					push	ax
020A:812D  51					push	cx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 285

020A:812E  56					push	si
020A:812F  B9 1324				mov	cx,1324h
020A:8132  81 E9 1310				sub	cx,1310h
020A:8136  BE 2CF2				mov	si,2CF2h

020A:8139			locloop_1298::
020A:8139  26: 8A 05				mov	al,es:[di]
020A:813C  88 04				mov	[si],al
020A:813E  47					inc	di
020A:813F  46					inc	si
020A:8140  E2 F7				loop	locloop_1298		; Loop if cx > 0

020A:8142  BF 2CF2				mov	di,2CF2h
020A:8145  E8 0845				call	sub_125			; (898D)
020A:8148  5E					pop	si
020A:8149  59					pop	cx
020A:814A  58					pop	ax
020A:814B  C3					retn
							                        ;* No entry point to code
020A:814C  00 87 90DB				add	byte ptr data_631[bx],al	; (020A:90DB=5Ah)
020A:8150  06					push	es
020A:8151  57					push	di
020A:8152  2E: C4 3E 34DF			les	di,cs:data_422		; (020A:34DF=0) Load 32 bit ptr
020A:8157			loc_1299::
020A:8157  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:815B  75 09				jne	loc_1300		; Jump if not equal
020A:815D  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:8162  75 02				jne	loc_1300		; Jump if not equal
020A:8164  EB 24				jmp	short loc_1303		; (818A)
020A:8166			loc_1300::
020A:8166  26: 39 1D				cmp	es:[di],bx
020A:8169  75 1A				jne	loc_1302		; Jump if not equal
020A:816B  2E: 80 3E 349C 01			cmp	cs:data_420,1		; (020A:349C=0)
020A:8171  74 0C				je	loc_1301		; Jump if equal
020A:8173  26: 3B 45 04				cmp	ax,es:[di+4]
020A:8177  77 0C				ja	loc_1302		; Jump if above
020A:8179  26: 3B 45 02				cmp	ax,es:[di+2]
020A:817D  72 06				jb	loc_1302		; Jump if below
020A:817F			loc_1301::
020A:817F  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:8183  EB 07				jmp	short loc_1304		; (818C)
020A:8185			loc_1302::
020A:8185  83 C7 15				add	di,15h
020A:8188  EB CD				jmp	short loc_1299		; (8157)
020A:818A			loc_1303::
020A:818A  33 C0				xor	ax,ax			; Zero register
020A:818C			loc_1304::
020A:818C  5F					pop	di
020A:818D  07					pop	es
020A:818E  C3					retn
020A:818F  00 00				add	[bx+si],al
020A:8191  1B 26 0000				sbb	sp,word ptr ds:[0]	; (020A:0000=1828h)
020A:8195  000B[00]				db	11 dup (0)
020A:81A0			loc_1305::
020A:81A0  80 3E 1329 01			cmp	data_201,1		; (020A:1329=0)
020A:81A5  74 57				je	loc_1309		; Jump if equal
020A:81A7  BE 3233				mov	si,3233h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 286

020A:81AA  BF 08C9				mov	di,8C9h
020A:81AD  B9 0040				mov	cx,40h
020A:81B0  E8 07DA				call	sub_125			; (898D)
020A:81B3  33 DB				xor	bx,bx			; Zero register
020A:81B5  FC					cld				; Clear direction

020A:81B6			locloop_1306::
020A:81B6  80 3C 00				cmp	byte ptr [si],0
020A:81B9  74 04				je	loc_1307		; Jump if equal
020A:81BB  43					inc	bx
020A:81BC  A4					movsb				; Mov [si] to es:[di]
020A:81BD  E2 F7				loop	locloop_1306		; Loop if cx > 0

020A:81BF			loc_1307::
020A:81BF  83 3E 3277 00			cmp	data_377,0		; (020A:3277=2067h)
020A:81C4  74 26				je	loc_1308		; Jump if equal
020A:81C6  32 E4				xor	ah,ah			; Zero register
020A:81C8  A0 0906				mov	al,data_141		; (020A:0906=3Ch)
020A:81CB  2B C3				sub	ax,bx
020A:81CD  2D 0002				sub	ax,2
020A:81D0  2B C3				sub	ax,bx
020A:81D2  7C 18				jl	loc_1308		; Jump if <
020A:81D4  B0 2C				mov	al,2Ch			; ','
020A:81D6  AA					stosb				; Store al to es:[di]
020A:81D7  B0 20				mov	al,20h			; ' '
020A:81D9  AA					stosb				; Store al to es:[di]
020A:81DA  8B CB				mov	cx,bx
020A:81DC  83 E9 03				sub	cx,3
020A:81DF  BE 3233				mov	si,3233h
020A:81E2  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:81E4  BE 3274				mov	si,3274h
020A:81E7  B9 0003				mov	cx,3
020A:81EA  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:81EC			loc_1308::
020A:81EC  BE 0866				mov	si,866h
020A:81EF  BF 01D6				mov	di,1D6h
020A:81F2  B9 00A0				mov	cx,0A0h
020A:81F5  FC					cld				; Clear direction
020A:81F6  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:81F8  C7 06 1345 00A0			mov	data_203,0A0h		; (020A:1345=0)
020A:81FE			loc_1309::
020A:81FE  80 3E 348E 00			cmp	data_419,0		; (020A:348E=0)
020A:8203  74 11				je	loc_1310		; Jump if equal
020A:8205  C7 06 19A8 6170			mov	data_230,6170h		; (020A:19A8=3EBh)
020A:820B  C7 06 19AA 6567			mov	data_231,6567h		; (020A:19AA=0EBFAh)
020A:8211  A1 33FC				mov	ax,data_382		; (020A:33FC=510h)
020A:8214  EB 03				jmp	short loc_1311		; (8219)
020A:8216			loc_1310::
020A:8216  A1 348C				mov	ax,data_418		; (020A:348C=0)
020A:8219			loc_1311::
020A:8219  BD 19B0				mov	bp,19B0h
020A:821C  B3 00				mov	bl,0
020A:821E  9A 168F:0288		;*		call	far ptr sub_152		;*(168F:0288)
020A:821E  9A					db	9Ah
020A:821F  0288 168F				dw	288h, 168Fh
020A:8223  80 3E 348E 00			cmp	data_419,0		; (020A:348E=0)
020A:8228  74 03				je	loc_1312		; Jump if equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 287

020A:822A  E9 00B9				jmp	loc_1318		; (82E6)
020A:822D			loc_1312::
020A:822D  B4 2C				mov	ah,2Ch
020A:822F  CD 21				int	21h			; DOS Services  ah=function 2Ch
										;  get time, cx=hrs/min, dx=sec
020A:8231  8B 1E 4E73				mov	bx,data_555		; (020A:4E73=5750h)
020A:8235  3A FD				cmp	bh,ch
020A:8237  76 03				jbe	loc_1313		; Jump if below or =
020A:8239  80 C5 18				add	ch,18h
020A:823C			loc_1313::
020A:823C  8B DA				mov	bx,dx
020A:823E  B0 3C				mov	al,3Ch			; '<'
020A:8240  F6 E5				mul	ch			; ax = reg * al
020A:8242  32 ED				xor	ch,ch			; Zero register
020A:8244  03 C1				add	ax,cx
020A:8246  B9 003C				mov	cx,3Ch
020A:8249  F7 E1				mul	cx			; dx:ax = reg * ax
020A:824B  53					push	bx
020A:824C  32 DB				xor	bl,bl			; Zero register
020A:824E  86 DF				xchg	bl,bh
020A:8250  03 C3				add	ax,bx
020A:8252  73 01				jnc	loc_1314		; Jump if carry=0
020A:8254  42					inc	dx
020A:8255			loc_1314::
020A:8255  52					push	dx
020A:8256  B9 000A				mov	cx,0Ah
020A:8259  F7 E1				mul	cx			; dx:ax = reg * ax
020A:825B  59					pop	cx
020A:825C  03 D1				add	dx,cx
020A:825E  5B					pop	bx
020A:825F  52					push	dx
020A:8260  50					push	ax
020A:8261  32 FF				xor	bh,bh			; Zero register
020A:8263  8B C3				mov	ax,bx
020A:8265  33 D2				xor	dx,dx			; Zero register
020A:8267  B9 000A				mov	cx,0Ah
020A:826A  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020A:826C  8B D8				mov	bx,ax
020A:826E  58					pop	ax
020A:826F  5A					pop	dx
020A:8270  03 C3				add	ax,bx
020A:8272  73 01				jnc	loc_1315		; Jump if carry=0
020A:8274  42					inc	dx
020A:8275			loc_1315::
020A:8275  52					push	dx
020A:8276  50					push	ax
020A:8277  8B 0E 4E73				mov	cx,data_555		; (020A:4E73=5750h)
020A:827B  8B 1E 4E75				mov	bx,data_556		; (020A:4E75=3BEh)
020A:827F  B0 3C				mov	al,3Ch			; '<'
020A:8281  F6 E5				mul	ch			; ax = reg * al
020A:8283  32 ED				xor	ch,ch			; Zero register
020A:8285  03 C1				add	ax,cx
020A:8287  B9 003C				mov	cx,3Ch
020A:828A  F7 E1				mul	cx			; dx:ax = reg * ax
020A:828C  53					push	bx
020A:828D  32 DB				xor	bl,bl			; Zero register
020A:828F  86 DF				xchg	bl,bh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 288

020A:8291  03 C3				add	ax,bx
020A:8293  73 01				jnc	loc_1316		; Jump if carry=0
020A:8295  42					inc	dx
020A:8296			loc_1316::
020A:8296  52					push	dx
020A:8297  B9 000A				mov	cx,0Ah
020A:829A  F7 E1				mul	cx			; dx:ax = reg * ax
020A:829C  59					pop	cx
020A:829D  03 D1				add	dx,cx
020A:829F  5B					pop	bx
020A:82A0  52					push	dx
020A:82A1  50					push	ax
020A:82A2  32 FF				xor	bh,bh			; Zero register
020A:82A4  8B C3				mov	ax,bx
020A:82A6  33 D2				xor	dx,dx			; Zero register
020A:82A8  B9 000A				mov	cx,0Ah
020A:82AB  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020A:82AD  8B D8				mov	bx,ax
020A:82AF  58					pop	ax
020A:82B0  5A					pop	dx
020A:82B1  03 C3				add	ax,bx
020A:82B3  73 01				jnc	loc_1317		; Jump if carry=0
020A:82B5  42					inc	dx
020A:82B6			loc_1317::
020A:82B6  5B					pop	bx
020A:82B7  59					pop	cx
020A:82B8  2B D8				sub	bx,ax
020A:82BA  1B CA				sbb	cx,dx
020A:82BC  75 28				jnz	loc_1318		; Jump if not zero
020A:82BE  0B DB				or	bx,bx			; Zero ?
020A:82C0  74 24				jz	loc_1318		; Jump if zero
020A:82C2  33 D2				xor	dx,dx			; Zero register
020A:82C4  8B CB				mov	cx,bx
020A:82C6  A1 348C				mov	ax,data_418		; (020A:348C=0)
020A:82C9  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020A:82CB  B9 0258				mov	cx,258h
020A:82CE  F7 E1				mul	cx			; dx:ax = reg * ax
020A:82D0  0B C0				or	ax,ax			; Zero ?
020A:82D2  74 12				jz	loc_1318		; Jump if zero
020A:82D4  BE 348F				mov	si,348Fh
020A:82D7  BD 19B9				mov	bp,19B9h
020A:82DA  9A 168F:4160		;*		call	far ptr sub_189		;*(168F:4160)
020A:82DA  9A					db	9Ah
020A:82DB  4160 168F				dw	4160h, 168Fh
020A:82DF  32 DB				xor	bl,bl			; Zero register
020A:82E1  9A 168F:0288		;*		call	far ptr sub_152		;*(168F:0288)
020A:82E1  9A					db	9Ah
020A:82E2  0288 168F				dw	288h, 168Fh
020A:82E6			loc_1318::
020A:82E6  B4 08				mov	ah,8
020A:82E8  8B 1E 1326				mov	bx,data_199		; (020A:1326=0)
020A:82EC  A0 120A				mov	al,data_194		; (020A:120A=0)
020A:82EF  88 47 52				mov	[bx+52h],al
020A:82F2  E8 ECF7				call	sub_94			; (6FEC)
020A:82F5  9A 168F:2AC0		;*		call	far ptr sub_172		;*(168F:2AC0)
020A:82F5  9A					db	9Ah
020A:82F6  2AC0 168F				dw	2AC0h, 168Fh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 289

020A:82FA  8A 16 30CE				mov	dl,data_372		; (020A:30CE=31h)
020A:82FE  B4 0E				mov	ah,0Eh
020A:8300  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:8302  E8 EACB				call	sub_90			; (6DD0)
020A:8305  EA 168F:3060		;*		jmp	far ptr loc_1996	;*(168F:3060)
020A:8305  EA					db	0EAh
020A:8306  3060 168F				dw	3060h, 168Fh
020A:830A			loc_1319::
020A:830A  B4 0E				mov	ah,0Eh
020A:830C  C6 06 35ED 01			mov	byte ptr ds:[35EDh],1	; (020A:35ED=1)
020A:8311  E9 0214				jmp	loc_1339		; (8528)
							                        ;* No entry point to code
020A:8314  C6 06 35ED 02			mov	byte ptr ds:[35EDh],2	; (020A:35ED=1)
020A:8319  B4 38				mov	ah,38h			; '8'
020A:831B  E9 020A				jmp	loc_1339		; (8528)
020A:831E			loc_1320::
020A:831E  C6 06 35ED 02			mov	byte ptr ds:[35EDh],2	; (020A:35ED=1)
020A:8323  26: A0 000D				mov	al,byte ptr es:data_9+1	; (020A:000D=90h)
020A:8327  24 0C				and	al,0Ch
020A:8329  3C 04				cmp	al,4
020A:832B  74 19				je	loc_1321		; Jump if equal
020A:832D  C7 06 1A4F 6F6C			mov	data_232,6F6Ch		; (020A:1A4F=2E83h)
020A:8333  C7 06 1A51 2063			mov	data_233,2063h		; (020A:1A51=10h)
020A:8339  72 0B				jc	loc_1321		; Jump if carry Set
020A:833B  C7 06 1A4F 7573			mov	data_232,7573h		; (020A:1A4F=2E83h)
020A:8341  C6 06 1A51 62			mov	byte ptr data_233,62h	; (020A:1A51=10h) 'b'
020A:8346			loc_1321::
020A:8346  1E					push	ds
020A:8347  B8 06D5				mov	ax,6D5h
020A:834A  8E D8				mov	ds,ax
020A:834C  A1 38A3				mov	ax,word ptr ds:[38A3h]	; (ss:38A3=0FFFFh)
020A:834F  1F					pop	ds
020A:8350  BD 1A5A				mov	bp,1A5Ah
020A:8353  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:8353  9A					db	9Ah
020A:8354  021C 168F				dw	21Ch, 168Fh
020A:8358  B4 0A				mov	ah,0Ah
020A:835A  E9 01CB				jmp	loc_1339		; (8528)
							                        ;* No entry point to code
020A:835D  BD 1A0D				mov	bp,1A0Dh
020A:8360  B6 09				mov	dh,9
020A:8362  80 3E 4FD6 09			cmp	data_567,9		; (020A:4FD6=75h)
020A:8367  74 57				je	loc_1325		; Jump if equal
020A:8369  80 3E 4FD6 31			cmp	data_567,31h		; (020A:4FD6=75h) '1'
020A:836E  74 39				je	loc_1324		; Jump if equal
020A:8370  80 3E 4FD6 12			cmp	data_567,12h		; (020A:4FD6=75h)
020A:8375  74 1B				je	loc_1323		; Jump if equal
020A:8377  80 3E 4FD6 00			cmp	data_567,0		; (020A:4FD6=75h)
020A:837C  74 42				je	loc_1325		; Jump if equal
020A:837E  80 3E 4FD6 08			cmp	data_567,8		; (020A:4FD6=75h)
020A:8383  74 07				je	loc_1322		; Jump if equal
020A:8385  BD 2B30				mov	bp,2B30h
020A:8388  32 F6				xor	dh,dh			; Zero register
020A:838A  EB 40				jmp	short loc_1326		; (83CC)
020A:838C			loc_1322::
020A:838C  B8 0008				mov	ax,8
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 290

020A:838F  E9 00A1				jmp	loc_1331		; (8433)
020A:8392			loc_1323::
020A:8392  C6 06 35ED 13			mov	byte ptr ds:[35EDh],13h	; (020A:35ED=1)
020A:8397  BD 1C89				mov	bp,1C89h
020A:839A  A1 4392				mov	ax,word ptr ds:[4392h]	; (020A:4392=0E3E6h)
020A:839D  B3 00				mov	bl,0
020A:839F  9A 168F:0288		;*		call	far ptr sub_152		;*(168F:0288)
020A:839F  9A					db	9Ah
020A:83A0  0288 168F				dw	288h, 168Fh
020A:83A4  B4 12				mov	ah,12h
020A:83A6  E9 017F				jmp	loc_1339		; (8528)
020A:83A9			loc_1324::
020A:83A9  C6 06 35ED 0F			mov	byte ptr ds:[35EDh],0Fh	; (020A:35ED=1)
020A:83AE  BD 25A1				mov	bp,25A1h
020A:83B1  A1 4392				mov	ax,word ptr ds:[4392h]	; (020A:4392=0E3E6h)
020A:83B4  B3 00				mov	bl,0
020A:83B6  9A 168F:0288		;*		call	far ptr sub_152		;*(168F:0288)
020A:83B6  9A					db	9Ah
020A:83B7  0288 168F				dw	288h, 168Fh
020A:83BB  B4 31				mov	ah,31h			; '1'
020A:83BD  E9 0168				jmp	loc_1339		; (8528)
020A:83C0			loc_1325::
020A:83C0  80 3E 4FD7 01			cmp	data_568,1		; (020A:4FD7=0Fh)
020A:83C5  75 05				jne	loc_1326		; Jump if not equal
020A:83C7  BD 2429				mov	bp,2429h
020A:83CA  B6 2C				mov	dh,2Ch			; ','
020A:83CC			loc_1326::
020A:83CC  A1 4392				mov	ax,word ptr ds:[4392h]	; (020A:4392=0E3E6h)
020A:83CF  B3 00				mov	bl,0
020A:83D1  9A 168F:0288		;*		call	far ptr sub_152		;*(168F:0288)
020A:83D1  9A					db	9Ah
020A:83D2  0288 168F				dw	288h, 168Fh
020A:83D6  A0 4FD6				mov	al,data_567		; (020A:4FD6=75h)
020A:83D9  32 E4				xor	ah,ah			; Zero register
020A:83DB  0A F6				or	dh,dh			; Zero ?
020A:83DD  74 59				jz	loc_1332		; Jump if zero
020A:83DF  8A E6				mov	ah,dh
020A:83E1  C6 06 35ED 03			mov	byte ptr ds:[35EDh],3	; (020A:35ED=1)
020A:83E6  E9 013F				jmp	loc_1339		; (8528)
							                        ;* No entry point to code
020A:83E9  BD 1AE2				mov	bp,1AE2h
020A:83EC  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:83EC  9A					db	9Ah
020A:83ED  021C 168F				dw	21Ch, 168Fh
020A:83F1  B4 0C				mov	ah,0Ch
020A:83F3  C6 06 35ED 04			mov	byte ptr ds:[35EDh],4	; (020A:35ED=1)
020A:83F8  E9 012D				jmp	loc_1339		; (8528)
							                        ;* No entry point to code
020A:83FB  E8 0577				call	sub_122			; (8975)
020A:83FE  B4 2E				mov	ah,2Eh			; '.'
020A:8400  C6 06 35ED 05			mov	byte ptr ds:[35EDh],5	; (020A:35ED=1)
020A:8405  E9 0120				jmp	loc_1339		; (8528)
020A:8408			loc_1330::
020A:8408  E8 056A				call	sub_122			; (8975)
020A:840B  8B C3				mov	ax,bx
020A:840D  BD 1B3B				mov	bp,1B3Bh
020A:8410  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 291

020A:8410  9A					db	9Ah
020A:8411  021C 168F				dw	21Ch, 168Fh
020A:8415  B4 0D				mov	ah,0Dh
020A:8417  C6 06 35ED 06			mov	byte ptr ds:[35EDh],6	; (020A:35ED=1)
020A:841C  E9 0109				jmp	loc_1339		; (8528)
							                        ;* No entry point to code
020A:841F  BD 1BBC				mov	bp,1BBCh
020A:8422  A1 2B39				mov	ax,data_288		; (020A:2B39=0A420h)
020A:8425  8A 26 2B36				mov	ah,data_285		; (020A:2B36=0ADh)
020A:8429  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:8429  9A					db	9Ah
020A:842A  021C 168F				dw	21Ch, 168Fh
020A:842E  B4 0F				mov	ah,0Fh
020A:8430  E9 00F5				jmp	loc_1339		; (8528)
020A:8433			loc_1331::
020A:8433  C6 06 4FD6 00			mov	data_567,0		; (020A:4FD6=75h)
020A:8438			loc_1332::
020A:8438  8B D8				mov	bx,ax
020A:843A  B4 14				mov	ah,14h
020A:843C  BD 1CFC				mov	bp,1CFCh
020A:843F  83 FB 02				cmp	bx,2
020A:8442  74 2D				je	loc_1333		; Jump if equal
020A:8444  B4 15				mov	ah,15h
020A:8446  BD 1D46				mov	bp,1D46h
020A:8449  83 FB 05				cmp	bx,5
020A:844C  74 23				je	loc_1333		; Jump if equal
020A:844E  B4 16				mov	ah,16h
020A:8450  BD 1D90				mov	bp,1D90h
020A:8453  83 FB 08				cmp	bx,8
020A:8456  74 19				je	loc_1333		; Jump if equal
020A:8458  B4 1D				mov	ah,1Dh
020A:845A  BD 1F96				mov	bp,1F96h
020A:845D  83 FB 14				cmp	bx,14h
020A:8460  74 0F				je	loc_1333		; Jump if equal
020A:8462  8A C3				mov	al,bl
020A:8464  BD 1E0F				mov	bp,1E0Fh
020A:8467  9A 168F:00D4		;*		call	far ptr sub_146		;*(168F:00D4)
020A:8467  9A					db	9Ah
020A:8468  00D4 168F				dw	0D4h, 168Fh
020A:846C  B4 17				mov	ah,17h
020A:846E  BD 1DDA				mov	bp,1DDAh
020A:8471			loc_1333::
020A:8471  80 3E 4FD6 00			cmp	data_567,0		; (020A:4FD6=75h)
020A:8476  74 19				je	loc_1334		; Jump if equal
020A:8478  8B FD				mov	di,bp
020A:847A  1E					push	ds
020A:847B  E8 04F7				call	sub_122			; (8975)
020A:847E  1E					push	ds
020A:847F  07					pop	es
020A:8480  1F					pop	ds
020A:8481  83 C7 3B				add	di,3Bh
020A:8484  BE 2B27				mov	si,2B27h
020A:8487  B9 2B35				mov	cx,2B35h
020A:848A  81 E9 2B27				sub	cx,2B27h
020A:848E  FC					cld				; Clear direction
020A:848F  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8491			loc_1334::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 292

020A:8491  C6 06 35ED 08			mov	byte ptr ds:[35EDh],8	; (020A:35ED=1)
020A:8496  E9 008F				jmp	loc_1339		; (8528)
							                        ;* No entry point to code
020A:8499  B4 1B				mov	ah,1Bh
020A:849B  C6 06 35ED 09			mov	byte ptr ds:[35EDh],9	; (020A:35ED=1)
020A:84A0  E9 0085				jmp	loc_1339		; (8528)
							                        ;* No entry point to code
020A:84A3  B4 1C				mov	ah,1Ch
020A:84A5  C6 06 35ED 0A			mov	byte ptr ds:[35EDh],0Ah	; (020A:35ED=1)
020A:84AA  EB 7C				jmp	short loc_1339		; (8528)
020A:84AC			loc_1335::
020A:84AC  B4 24				mov	ah,24h			; '$'
020A:84AE  C6 06 35ED 0B			mov	byte ptr ds:[35EDh],0Bh	; (020A:35ED=1)
020A:84B3  EB 73				jmp	short loc_1339		; (8528)
							                        ;* No entry point to code
020A:84B5  BD 22FF				mov	bp,22FFh
020A:84B8  A1 4392				mov	ax,word ptr ds:[4392h]	; (020A:4392=0E3E6h)
020A:84BB  B3 00				mov	bl,0
020A:84BD  9A 168F:0288		;*		call	far ptr sub_152		;*(168F:0288)
020A:84BD  9A					db	9Ah
020A:84BE  0288 168F				dw	288h, 168Fh
020A:84C2  B4 28				mov	ah,28h			; '('
020A:84C4  C6 06 35ED 0C			mov	byte ptr ds:[35EDh],0Ch	; (020A:35ED=1)
020A:84C9  EB 5D				jmp	short loc_1339		; (8528)
							                        ;* No entry point to code
020A:84CB  BD 234C				mov	bp,234Ch
020A:84CE  A1 4392				mov	ax,word ptr ds:[4392h]	; (020A:4392=0E3E6h)
020A:84D1  B3 00				mov	bl,0
020A:84D3  9A 168F:0288		;*		call	far ptr sub_152		;*(168F:0288)
020A:84D3  9A					db	9Ah
020A:84D4  0288 168F				dw	288h, 168Fh
020A:84D8  B4 29				mov	ah,29h			; ')'
020A:84DA  C6 06 35ED 0D			mov	byte ptr ds:[35EDh],0Dh	; (020A:35ED=1)
020A:84DF  EB 47				jmp	short loc_1339		; (8528)
							                        ;* No entry point to code
020A:84E1  B4 13				mov	ah,13h
020A:84E3  C6 06 35ED 0E			mov	byte ptr ds:[35EDh],0Eh	; (020A:35ED=1)
020A:84E8  EB 3E				jmp	short loc_1339		; (8528)
							                        ;* No entry point to code
020A:84EA  B4 11				mov	ah,11h
020A:84EC  C6 06 35ED 0E			mov	byte ptr ds:[35EDh],0Eh	; (020A:35ED=1)
020A:84F1  EB 35				jmp	short loc_1339		; (8528)
020A:84F3			loc_1336::
020A:84F3  B4 32				mov	ah,32h			; '2'
020A:84F5  C6 06 35ED 10			mov	byte ptr ds:[35EDh],10h	; (020A:35ED=1)
020A:84FA  EB 2C				jmp	short loc_1339		; (8528)
020A:84FC			loc_1337::
020A:84FC  B4 33				mov	ah,33h			; '3'
020A:84FE  C6 06 35ED 11			mov	byte ptr ds:[35EDh],11h	; (020A:35ED=1)
020A:8503  EB 23				jmp	short loc_1339		; (8528)
							                        ;* No entry point to code
020A:8505  C6 06 35ED 10			mov	byte ptr ds:[35EDh],10h	; (020A:35ED=1)
020A:850A  EB 1C				jmp	short loc_1339		; (8528)
							                        ;* No entry point to code
020A:850C  B4 3B				mov	ah,3Bh			; ';'
020A:850E  EB 0A				jmp	short loc_1338		; (851A)
							                        ;* No entry point to code
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 293

020A:8510  B4 3A				mov	ah,3Ah			; ':'
020A:8512  EB 06				jmp	short loc_1338		; (851A)
							                        ;* No entry point to code
020A:8514  B4 3C				mov	ah,3Ch			; '<'
020A:8516  EB 02				jmp	short loc_1338		; (851A)
020A:8518  B4 3D				mov	ah,3Dh			; '='
020A:851A			loc_1338::
020A:851A  C6 06 35ED 12			mov	byte ptr ds:[35EDh],12h	; (020A:35ED=1)
020A:851F  EB 07				jmp	short loc_1339		; (8528)
							                        ;* No entry point to code
020A:8521  B4 11				mov	ah,11h
020A:8523  C6 06 35ED 14			mov	byte ptr ds:[35EDh],14h	; (020A:35ED=1)
020A:8528			loc_1339::
020A:8528  E8 044A				call	sub_122			; (8975)
020A:852B  E8 EABE				call	sub_94			; (6FEC)
020A:852E  80 3E 1329 01			cmp	data_201,1		; (020A:1329=0)
020A:8533  74 0A				je	loc_1340		; Jump if equal
020A:8535  80 3E 35ED 14			cmp	byte ptr ds:[35EDh],14h	; (020A:35ED=1)
020A:853A  74 03				je	loc_1340		; Jump if equal
020A:853C  E8 EA51				call	sub_92			; (6F90)
020A:853F			loc_1340::
020A:853F  A0 1208				mov	al,data_192		; (020A:1208=0)
020A:8542  88 47 52				mov	[bx+52h],al
020A:8545  9A 168F:2B10		;*		call	far ptr sub_173		;*(168F:2B10)
020A:8545  9A					db	9Ah
020A:8546  2B10 168F				dw	2B10h, 168Fh
020A:854A  EA 168F:3060		;*		jmp	far ptr loc_1996	;*(168F:3060)
020A:854A  EA					db	0EAh
020A:854B  3060 168F				dw	3060h, 168Fh
020A:854F  00					db	0
020A:8550  00 00				add	[bx+si],al
020A:8552  00 FF				add	bh,bh
020A:8554  FF 93 586F				call	word ptr [bp+di+586Fh]	;*
020A:8558  72 4D				jc	loc_1343		; Jump if carry Set
020A:855A  2A C3				sub	al,bl
020A:855C  36: 00 00				add	ss:[bx+si],al
020A:855F  1B 26 28CD				sbb	sp,word ptr ds:[28CDh]	; (020A:28CD=20EFh)
020A:8563  7C 1E				jl	loc_1341		; Jump if <
020A:8565  FF					db	0FFh
020A:8566  FF					db	0FFh
020A:8567  FF					db	0FFh
020A:8568  FF					db	0FFh
020A:8569  FF					db	0FFh
020A:856A  FF 90 41E8				call	word ptr ds:[41E8h][bx+si]	;*(020A:41E8=0EC9h)
020A:856E  00 2E 168B				add	byte ptr data_214,ch	; (020A:168B='AAAAAAAAAAAAAA')
020A:8572  AD					lodsw				; String [si] to ax
020A:8573  38 B8 0001				cmp	byte ptr data_1+1[bx+si],bh	; (020A:0001=18h)
020A:8577  E8 1B52				call	sub_141			; (A0CC)
020A:857A  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:8580  75 15				jne	loc_1342		; Jump if not equal
020A:8582  BA FFFF				mov	dx,0FFFFh
020A:8585  B8 0002				mov	ax,2
020A:8588  E8 1B41				call	sub_141			; (A0CC)
020A:858B  B8 0001				mov	ax,1
020A:858E  E8 1B3B				call	sub_141			; (A0CC)
020A:8591  B8 0004				mov	ax,4
020A:8594  E8 1B35				call	sub_141			; (A0CC)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 294

020A:8597			loc_1342::
020A:8597  2E: C7 06 38AF 261B			mov	cs:data_470,261Bh	; (020A:38AF=115h)
020A:859E  2E: C7 06 38B1 28CD			mov	cs:data_471,28CDh	; (020A:38B1=0A008h)
020A:85A5  C3					retn
020A:85A6  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_118		proc	near
020A:85A8  2E: C7 06 38B3 1E7C			mov	cs:data_472,1E7Ch	; (020A:38B3=116h)
020A:85AF  C3					retn
				sub_118		endp

							                        ;* No entry point to code
020A:85B0  50					push	ax
020A:85B1  53					push	bx
020A:85B2  51					push	cx
020A:85B3  52					push	dx
020A:85B4  56					push	si
020A:85B5  57					push	di
020A:85B6  55					push	bp
020A:85B7  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:85BC  1E					push	ds
020A:85BD  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:85C2  06					push	es
020A:85C3  2E: 80 3E 38A0 FF			cmp	byte ptr cs:[38A0h],0FFh	; (020A:38A0=0)
020A:85C9  2E: C6 06 38A0 00			mov	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:85CF  75 03				jnz	loc_1344		; Jump if not zero
020A:85D1  E9 0220				jmp	loc_1364		; (87F4)
020A:85D4			loc_1344::
020A:85D4  B8 1E7C				mov	ax,1E7Ch
020A:85D7  8E D8				mov	ds,ax
020A:85D9  B8 3D00				mov	ax,3D00h
020A:85DC  BA 78C0				mov	dx,78C0h
020A:85DF  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:85E1  73 03				jnc	loc_1345		; Jump if carry=0
020A:85E3  E9 020E				jmp	loc_1364		; (87F4)
020A:85E6			loc_1345::
020A:85E6  8B D8				mov	bx,ax
020A:85E8  B4 44				mov	ah,44h			; 'D'
020A:85EA  B0 07				mov	al,7
020A:85EC  B9 0000				mov	cx,0
020A:85EF  BA 78C9				mov	dx,78C9h
020A:85F2  CD 21				int	21h			; DOS Services  ah=function 44h
										;  IOctl-7 check output status
										;   bx=handle, returns al status
020A:85F4  50					push	ax
020A:85F5  B4 3E				mov	ah,3Eh
020A:85F7  CD 21				int	21h			; DOS Services  ah=function 3Eh
										;  close file, bx=file handle
020A:85F9  73 09				jnc	loc_1347		; Jump if carry=0
020A:85FB  58					pop	ax
020A:85FC			loc_1346::
020A:85FC  9A 168F:3240		;*		call	far ptr sub_179		;*(168F:3240)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 295

020A:85FC  9A					db	9Ah
020A:85FD  3240 168F				dw	3240h, 168Fh
020A:8601  E9 01F0				jmp	loc_1364		; (87F4)
020A:8604			loc_1347::
020A:8604  58					pop	ax
020A:8605  0A C0				or	al,al			; Zero ?
020A:8607  74 F3				jz	loc_1346		; Jump if zero
020A:8609  B4 40				mov	ah,40h
020A:860B  CD 67				int	67h			; EMS Memory        ah=func 40h
										;  get manager status in ah
020A:860D  80 FC 00				cmp	ah,0
020A:8610  75 EA				jne	loc_1346		; Jump if not equal
020A:8612  B4 42				mov	ah,42h
020A:8614  CD 67				int	67h			; EMS Memory        ah=func 42h
										;  get pages, bx=unused,dx=total
020A:8616  0A E4				or	ah,ah			; Zero ?
020A:8618  75 E2				jnz	loc_1346		; Jump if not zero
020A:861A  83 FB 18				cmp	bx,18h
020A:861D  72 DD				jb	loc_1346		; Jump if below
020A:861F  B4 41				mov	ah,41h
020A:8621  CD 67				int	67h			; EMS Memory        ah=func 41h
										;  get page frame segment in bx
020A:8623  0A E4				or	ah,ah			; Zero ?
020A:8625  75 D5				jnz	loc_1346		; Jump if not zero
020A:8627  2E: 89 1E 38A1			mov	cs:data_463,bx		; (020A:38A1=5C8Ah)
020A:862C  C6 06 7911 01			mov	byte ptr ds:[7911h],1	; (1E7C:7911=0)
020A:8631  B4 43				mov	ah,43h			; 'C'
020A:8633  BB 0004				mov	bx,4
020A:8636  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:8638  0A E4				or	ah,ah			; Zero ?
020A:863A  75 C0				jnz	loc_1346		; Jump if not zero
020A:863C  2E: 89 16 38AD			mov	cs:data_469,dx		; (020A:38AD=0E80h)
020A:8641  89 16 7912				mov	word ptr ds:[7912h],dx	; (1E7C:7912=0FFFFh)
020A:8645  B4 43				mov	ah,43h			; 'C'
020A:8647  BB 0004				mov	bx,4
020A:864A  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:864C  0A E4				or	ah,ah			; Zero ?
020A:864E  75 AC				jnz	loc_1346		; Jump if not zero
020A:8650  2E: 89 16 38A9			mov	cs:data_467,dx		; (020A:38A9=8708h)
020A:8655  89 16 7914				mov	word ptr ds:[7914h],dx	; (1E7C:7914=0FFFFh)
020A:8659  B4 43				mov	ah,43h			; 'C'
020A:865B  BB 0004				mov	bx,4
020A:865E  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:8660  0A E4				or	ah,ah			; Zero ?
020A:8662  75 98				jnz	loc_1346		; Jump if not zero
020A:8664  2E: 89 16 38AB			mov	cs:data_468,dx		; (020A:38AB=111h)
020A:8669  89 16 7916				mov	word ptr ds:[7916h],dx	; (1E7C:7916=0FFFFh)
020A:866D  B4 43				mov	ah,43h			; 'C'
020A:866F  BB 0004				mov	bx,4
020A:8672  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:8674  0A E4				or	ah,ah			; Zero ?
020A:8676  75 84				jnz	loc_1346		; Jump if not zero
020A:8678  89 16 7918				mov	word ptr ds:[7918h],dx	; (1E7C:7918=0FFFFh)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 296

020A:867C  B4 43				mov	ah,43h			; 'C'
020A:867E  BB 0004				mov	bx,4
020A:8681  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:8683  0A E4				or	ah,ah			; Zero ?
020A:8685  74 03				jz	loc_1348		; Jump if zero
020A:8687  E9 FF72				jmp	loc_1346		; (85FC)
020A:868A			loc_1348::
020A:868A  89 16 791A				mov	word ptr ds:[791Ah],dx	; (1E7C:791A=0FFFFh)
020A:868E  B4 43				mov	ah,43h			; 'C'
020A:8690  BB 0004				mov	bx,4
020A:8693  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:8695  0A E4				or	ah,ah			; Zero ?
020A:8697  75 11				jnz	loc_1349		; Jump if not zero
020A:8699  89 16 791C				mov	word ptr ds:[791Ch],dx	; (1E7C:791C=0FFFFh)
020A:869D  C6 06 79DA 03			mov	byte ptr ds:[79DAh],3	; (1E7C:79DA=0)
020A:86A2  C6 06 79DB 01			mov	byte ptr ds:[79DBh],1	; (1E7C:79DB=0)
020A:86A7  EB 09				jmp	short loc_1350		; (86B2)
020A:86A9  90					nop
020A:86AA			loc_1349::
020A:86AA  9A 168F:3240		;*		call	far ptr sub_179		;*(168F:3240)
020A:86AA  9A					db	9Ah
020A:86AB  3240 168F				dw	3240h, 168Fh
020A:86AF  E9 0142				jmp	loc_1364		; (87F4)
020A:86B2			loc_1350::
020A:86B2  BA 5655				mov	dx,5655h
020A:86B5  B4 09				mov	ah,9
020A:86B7  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020A:86B9  B9 0004				mov	cx,4
020A:86BC  BD 0000				mov	bp,0
020A:86BF  8B 16 7912				mov	dx,word ptr ds:[7912h]	; (1E7C:7912=0FFFFh)
020A:86C3  BE 78FB				mov	si,78FBh
020A:86C6  E8 01F7				call	sub_119			; (88C0)
020A:86C9  72 DF				jc	loc_1349		; Jump if carry Set
020A:86CB  BA 2A4D				mov	dx,2A4Dh
020A:86CE  8E C2				mov	es,dx
020A:86D0  8B 16 7914				mov	dx,word ptr ds:[7914h]	; (1E7C:7914=0FFFFh)
020A:86D4  E8 024D				call	sub_120			; (8924)
020A:86D7  72 D1				jc	loc_1349		; Jump if carry Set
020A:86D9  BA 36C3				mov	dx,36C3h
020A:86DC  8E C2				mov	es,dx
020A:86DE  8B 16 7916				mov	dx,word ptr ds:[7916h]	; (1E7C:7916=0FFFFh)
020A:86E2  E8 023F				call	sub_120			; (8924)
020A:86E5  72 C3				jc	loc_1349		; Jump if carry Set
020A:86E7  8B 16 7918				mov	dx,word ptr ds:[7918h]	; (1E7C:7918=0FFFFh)
020A:86EB  BE 78CB				mov	si,78CBh
020A:86EE  E8 01CF				call	sub_119			; (88C0)
020A:86F1  72 B7				jc	loc_1349		; Jump if carry Set
020A:86F3  8B 16 791A				mov	dx,word ptr ds:[791Ah]	; (1E7C:791A=0FFFFh)
020A:86F7  BE 78EB				mov	si,78EBh
020A:86FA  E8 01C3				call	sub_119			; (88C0)
020A:86FD  72 AB				jc	loc_1349		; Jump if carry Set
020A:86FF  8B 16 791C				mov	dx,word ptr ds:[791Ch]	; (1E7C:791C=0FFFFh)
020A:8703  BE 78DB				mov	si,78DBh
020A:8706  E8 01B7				call	sub_119			; (88C0)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 297

020A:8709  72 9F				jc	loc_1349		; Jump if carry Set
020A:870B  2E: C6 06 38A0 01			mov	byte ptr cs:[38A0h],1	; (020A:38A0=0)
020A:8711  B8 2A4D				mov	ax,2A4Dh
020A:8714  8E C0				mov	es,ax
020A:8716  B8 6F93				mov	ax,6F93h
020A:8719  8E D8				mov	ds,ax
020A:871B  33 FF				xor	di,di			; Zero register
020A:871D  8B F7				mov	si,di
020A:871F  FC					cld				; Clear direction
020A:8720  B9 2C44				mov	cx,2C44h
020A:8723  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8725  2E: 8C 06 38A5			mov	cs:data_465,es		; (020A:38A5=8AFFh)
020A:872A  8C C0				mov	ax,es
020A:872C  BB 2C44				mov	bx,2C44h
020A:872F  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:8731  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:8733  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:8735  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:8737  03 C3				add	ax,bx
020A:8739  40					inc	ax
020A:873A  2E: A3 38A7				mov	cs:data_466,ax		; (020A:38A7=244h)
020A:873E  B8 1E7C				mov	ax,1E7Ch
020A:8741  8E D8				mov	ds,ax
020A:8743  B4 42				mov	ah,42h
020A:8745  CD 67				int	67h			; EMS Memory        ah=func 42h
										;  get pages, bx=unused,dx=total
020A:8747  0A E4				or	ah,ah			; Zero ?
020A:8749  74 03				jz	loc_1351		; Jump if zero
020A:874B  E9 00D9				jmp	loc_1365		; (8827)
020A:874E			loc_1351::
020A:874E  F6 06 15CF 01			test	byte ptr ds:[15CFh],1	; (1E7C:15CF=0)
020A:8753  75 4E				jnz	loc_1357		; Jump if not zero
020A:8755  8B C3				mov	ax,bx
020A:8757  B1 04				mov	cl,4
020A:8759  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:875B  74 11				jz	loc_1353		; Jump if zero
020A:875D  3D 0004				cmp	ax,4
020A:8760  76 03				jbe	loc_1352		; Jump if below or =
020A:8762  B8 0004				mov	ax,4
020A:8765			loc_1352::
020A:8765  B1 02				mov	cl,2
020A:8767  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:8769  2B D8				sub	bx,ax
020A:876B  EB 05				jmp	short loc_1354		; (8772)
020A:876D  90					nop
020A:876E			loc_1353::
020A:876E  8B C3				mov	ax,bx
020A:8770  33 DB				xor	bx,bx			; Zero register
020A:8772			loc_1354::
020A:8772  8B EB				mov	bp,bx
020A:8774  B1 02				mov	cl,2
020A:8776  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:8778  8B C8				mov	cx,ax
020A:877A  E3 25				jcxz	loc_1356		; Jump if cx=0
020A:877C  BF 00C0				mov	di,0C0h
020A:877F  89 3E 79DD				mov	word ptr ds:[79DDh],di	; (1E7C:79DD=0)

           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 298

020A:8783			locloop_1355::
020A:8783  B4 43				mov	ah,43h			; 'C'
020A:8785  BB 0004				mov	bx,4
020A:8788  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:878A  0A E4				or	ah,ah			; Zero ?
020A:878C  75 24				jnz	loc_1358		; Jump if not zero
020A:878E  89 95 7912				mov	word ptr ds:[7912h][di],dx	; (1E7C:7912=0FFFFh)
020A:8792  33 F6				xor	si,si			; Zero register
020A:8794  E8 0129				call	sub_119			; (88C0)
020A:8797  72 19				jc	loc_1358		; Jump if carry Set
020A:8799  FE 06 79DC				inc	byte ptr ds:[79DCh]	; (1E7C:79DC=0)
020A:879D  47					inc	di
020A:879E  47					inc	di
020A:879F  E2 E2				loop	locloop_1355		; Loop if cx > 0

020A:87A1			loc_1356::
020A:87A1  8B DD				mov	bx,bp
020A:87A3			loc_1357::
020A:87A3  83 FB 0C				cmp	bx,0Ch
020A:87A6  72 0A				jb	loc_1358		; Jump if below
020A:87A8  8B C3				mov	ax,bx
020A:87AA  B3 0C				mov	bl,0Ch
020A:87AC  F6 F3				div	bl			; al, ah rem = ax/reg
020A:87AE  3C 00				cmp	al,0
020A:87B0  75 03				jne	loc_1359		; Jump if not equal
020A:87B2			loc_1358::
020A:87B2  EB 73				jmp	short loc_1365		; (8827)
020A:87B4  90					nop
020A:87B5			loc_1359::
020A:87B5  32 E4				xor	ah,ah			; Zero register
020A:87B7  3D 001E				cmp	ax,1Eh
020A:87BA  72 03				jb	loc_1360		; Jump if below
020A:87BC  B8 001E				mov	ax,1Eh
020A:87BF			loc_1360::
020A:87BF  8B C8				mov	cx,ax
020A:87C1  BF 000C				mov	di,0Ch

020A:87C4			locloop_1361::
020A:87C4  51					push	cx
020A:87C5  B9 0003				mov	cx,3

020A:87C8			locloop_1362::
020A:87C8  B4 43				mov	ah,43h			; 'C'
020A:87CA  BB 0004				mov	bx,4
020A:87CD  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:87CF  0A E4				or	ah,ah			; Zero ?
020A:87D1  75 1D				jnz	loc_1363		; Jump if not zero
020A:87D3  89 95 7912				mov	word ptr ds:[7912h][di],dx	; (1E7C:7912=0FFFFh)
020A:87D7  FE 06 79DA				inc	byte ptr ds:[79DAh]	; (1E7C:79DA=0)
020A:87DB  33 F6				xor	si,si			; Zero register
020A:87DD  E8 00E0				call	sub_119			; (88C0)
020A:87E0  72 0E				jc	loc_1363		; Jump if carry Set
020A:87E2  47					inc	di
020A:87E3  47					inc	di
020A:87E4  E2 E2				loop	locloop_1362		; Loop if cx > 0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 299


020A:87E6  59					pop	cx
020A:87E7  FE 06 79DB				inc	byte ptr ds:[79DBh]	; (1E7C:79DB=0)
020A:87EB  E2 D7				loop	locloop_1361		; Loop if cx > 0

020A:87ED  EB 38				jmp	short loc_1365		; (8827)
020A:87EF  90					nop
020A:87F0			loc_1363::
020A:87F0  59					pop	cx
020A:87F1  EB 34				jmp	short loc_1365		; (8827)
020A:87F3  90					nop
020A:87F4			loc_1364::
020A:87F4  2E: C7 06 38A5 6F93			mov	cs:data_465,6F93h	; (020A:38A5=8AFFh)
020A:87FB  B8 6F93				mov	ax,6F93h
020A:87FE  BB 2C44				mov	bx,2C44h
020A:8801  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:8803  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:8805  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:8807  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:8809  03 C3				add	ax,bx
020A:880B  40					inc	ax
020A:880C  2E: A3 38A7				mov	cs:data_466,ax		; (020A:38A7=244h)
020A:8810  2E: C7 06 38A9 2A4D			mov	cs:data_467,2A4Dh	; (020A:38A9=8708h)
020A:8817  2E: C7 06 38AB 36C3			mov	cs:data_468,36C3h	; (020A:38AB=111h)
020A:881E  2E: C6 06 38A0 00			mov	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:8824  EB 3A				jmp	short loc_1366		; (8860)
020A:8826  90					nop
020A:8827			loc_1365::
020A:8827  A0 79DA				mov	al,byte ptr ds:[79DAh]	; (1E7C:79DA=0)
020A:882A  02 06 79DC				add	al,byte ptr ds:[79DCh]	; (1E7C:79DC=0)
020A:882E  04 03				add	al,3
020A:8830  32 E4				xor	ah,ah			; Zero register
020A:8832  B1 06				mov	cl,6
020A:8834  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:8836  B3 62				mov	bl,62h			; 'b'
020A:8838  F6 F3				div	bl			; al, ah rem = ax/reg
020A:883A  32 E4				xor	ah,ah			; Zero register
020A:883C  B3 01				mov	bl,1
020A:883E  C6 06 0720 20			mov	byte ptr ds:[720h],20h	; (1E7C:0720=66h) ' '
020A:8843  BD 071D				mov	bp,71Dh
020A:8846  9A 168F:0288		;*		call	far ptr sub_152		;*(168F:0288)
020A:8846  9A					db	9Ah
020A:8847  0288 168F				dw	288h, 168Fh
020A:884B  A1 0720				mov	ax,word ptr ds:[720h]	; (1E7C:0720=2066h)
020A:884E  A2 071D				mov	byte ptr ds:[71Dh],al	; (1E7C:071D=20h)
020A:8851  C6 06 071E 2E			mov	byte ptr ds:[71Eh],2Eh	; (1E7C:071E=6Fh) '.'
020A:8856  88 26 071F				mov	byte ptr ds:[71Fh],ah	; (1E7C:071F=66h)
020A:885A  C7 06 0720 424D			mov	word ptr ds:[720h],424Dh	; (1E7C:0720=2066h)
020A:8860			loc_1366::
020A:8860  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:8865  9C					pushf				; Push flags
020A:8866  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:886B  5A					pop	dx
020A:886C  8E C2				mov	es,dx
020A:886E  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:8873  5A					pop	dx
020A:8874  75 0A				jnz	loc_1367		; Jump if not zero
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 300

020A:8876  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:887B  74 03				je	loc_1367		; Jump if equal
020A:887D  E8 046C				call	sub_132			; (8CEC)
020A:8880			loc_1367::
020A:8880  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:8885  9D					popf				; Pop flags
020A:8886  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:888B  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:8890  9C					pushf				; Push flags
020A:8891  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:8896  5A					pop	dx
020A:8897  8E DA				mov	ds,dx
020A:8899  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:889E  5A					pop	dx
020A:889F  75 0A				jnz	loc_1368		; Jump if not zero
020A:88A1  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:88A6  74 03				je	loc_1368		; Jump if equal
020A:88A8  E8 0441				call	sub_132			; (8CEC)
020A:88AB			loc_1368::
020A:88AB  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:88B0  9D					popf				; Pop flags
020A:88B1  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:88B6  5D					pop	bp
020A:88B7  5F					pop	di
020A:88B8  5E					pop	si
020A:88B9  5A					pop	dx
020A:88BA  59					pop	cx
020A:88BB  5B					pop	bx
020A:88BC  58					pop	ax
020A:88BD  C3					retn
020A:88BE  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_119		proc	near
020A:88C0  50					push	ax
020A:88C1  53					push	bx
020A:88C2  51					push	cx
020A:88C3  55					push	bp
020A:88C4  33 ED				xor	bp,bp			; Zero register
020A:88C6  B9 0004				mov	cx,4

020A:88C9			locloop_1369::
020A:88C9  B4 44				mov	ah,44h			; 'D'
020A:88CB  8B DD				mov	bx,bp
020A:88CD  8A C3				mov	al,bl
020A:88CF  CD 67				int	67h			; EMS Memory        ah=func 44h
										;  map memory, dx=handle
020A:88D1  0A E4				or	ah,ah			; Zero ?
020A:88D3  75 46				jnz	loc_1372		; Jump if not zero
020A:88D5  45					inc	bp
020A:88D6  E2 F1				loop	locloop_1369		; Loop if cx > 0

020A:88D8  06					push	es
020A:88D9  57					push	di
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 301

020A:88DA  2E: 8E 06 38A1			mov	es,cs:data_463		; (020A:38A1=5C8Ah)
020A:88DF  33 FF				xor	di,di			; Zero register
020A:88E1  B8 FFFF				mov	ax,0FFFFh
020A:88E4  B9 8000				mov	cx,8000h
020A:88E7  FC					cld				; Clear direction
020A:88E8  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:88EA  B9 0010				mov	cx,10h
020A:88ED  83 FE 00				cmp	si,0
020A:88F0  74 08				je	loc_1370		; Jump if equal
020A:88F2  BF FFF0				mov	di,0FFF0h
020A:88F5  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:88F7  EB 03				jmp	short loc_1371		; (88FC)
020A:88F9  90					nop
020A:88FA			loc_1370::
020A:88FA  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:88FC			loc_1371::
020A:88FC  1E					push	ds
020A:88FD  2E: 8E 1E 38A1			mov	ds,cs:data_463		; (020A:38A1=5C8Ah)
020A:8902  BD FFFC				mov	bp,0FFFCh
020A:8905  8B C2				mov	ax,dx
020A:8907  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:8907  9A					db	9Ah
020A:8908  021C 168F				dw	21Ch, 168Fh
020A:890C  5F1F					dw	5F1Fh			; Data table (indexed access)
020A:890E  07					pop	es
020A:890F  B4 47				mov	ah,47h
020A:8911  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020A:8913  0A E4				or	ah,ah			; Zero ?
020A:8915  75 04				jnz	loc_1372		; Jump if not zero
020A:8917  F8					clc				; Clear carry flag
020A:8918  EB 02				jmp	short loc_1373		; (891C)
020A:891A  90					nop
020A:891B			loc_1372::
020A:891B  F9					stc				; Set carry flag
020A:891C			loc_1373::
020A:891C  5D					pop	bp
020A:891D  59					pop	cx
020A:891E  5B					pop	bx
020A:891F  58					pop	ax
020A:8920  C3					retn
				sub_119		endp

020A:8921  87 DB				xchg	bx,bx
020A:8923  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_120		proc	near
020A:8924  50					push	ax
020A:8925  53					push	bx
020A:8926  51					push	cx
020A:8927  55					push	bp
020A:8928  33 ED				xor	bp,bp			; Zero register
020A:892A  B9 0004				mov	cx,4
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 302


020A:892D			locloop_1374::
020A:892D  B4 44				mov	ah,44h			; 'D'
020A:892F  8B DD				mov	bx,bp
020A:8931  8A C3				mov	al,bl
020A:8933  CD 67				int	67h			; EMS Memory        ah=func 44h
										;  map memory, dx=handle
020A:8935  0A E4				or	ah,ah			; Zero ?
020A:8937  75 28				jnz	loc_1375		; Jump if not zero
020A:8939  45					inc	bp
020A:893A  E2 F1				loop	locloop_1374		; Loop if cx > 0

020A:893C  06					push	es
020A:893D  1E					push	ds
020A:893E  57					push	di
020A:893F  56					push	si
020A:8940  06					push	es
020A:8941  1F					pop	ds
020A:8942  2E: 8E 06 38A1			mov	es,cs:data_463		; (020A:38A1=5C8Ah)
020A:8947  33 FF				xor	di,di			; Zero register
020A:8949  8B F7				mov	si,di
020A:894B  B9 8000				mov	cx,8000h
020A:894E  FC					cld				; Clear direction
020A:894F  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
020A:8951  5E					pop	si
020A:8952  5F					pop	di
020A:8953  1F					pop	ds
020A:8954  07					pop	es
020A:8955  B4 47				mov	ah,47h
020A:8957  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020A:8959  0A E4				or	ah,ah			; Zero ?
020A:895B  75 04				jnz	loc_1375		; Jump if not zero
020A:895D  F8					clc				; Clear carry flag
020A:895E  EB 05				jmp	short loc_1376		; (8965)
020A:8960  90					nop
020A:8961			loc_1375::
020A:8961  F9					stc				; Set carry flag
020A:8962  EB 01				jmp	short loc_1376		; (8965)
020A:8964  90					nop
020A:8965			loc_1376::
020A:8965  5D					pop	bp
020A:8966  59					pop	cx
020A:8967  5B					pop	bx
020A:8968  58					pop	ax
020A:8969  C3					retn
				sub_120		endp

020A:896A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_121		proc	near
020A:896C  EB 46				jmp	short loc_1377		; (89B4)
020A:896E  90					nop
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 303

020A:896F  EB 49				jmp	short loc_1378		; (89BA)
020A:8971  90					nop
020A:8972  EB 4C				jmp	short loc_1379		; (89C0)
020A:8974  90					nop

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_122::
020A:8975  EB 67				jmp	short loc_1381		; (89DE)
020A:8977  90					nop

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_123::
020A:8978  EB 6A				jmp	short loc_1382		; (89E4)
020A:897A  90					nop
020A:897B  EB 6D				jmp	short loc_1383		; (89EA)
020A:897D  90					nop
020A:897E  EB 70				jmp	short loc_1384		; (89F0)
020A:8980  90					nop
020A:8981  E9 008C				jmp	loc_1386		; (8A10)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_124::
020A:8984  E9 00A7				jmp	loc_1388		; (8A2E)
020A:8987  E9 00AA				jmp	loc_1389		; (8A34)
020A:898A  E9 00AD				jmp	loc_1390		; (8A3A)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_125::
020A:898D  E9 00C8				jmp	loc_1392		; (8A58)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_126::
020A:8990  E9 00CB				jmp	loc_1393		; (8A5E)
020A:8993  E9 00CE				jmp	loc_1394		; (8A64)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_127::
020A:8996  E9 00D1				jmp	loc_1395		; (8A6A)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_128::
020A:8999  E9 00EE				jmp	loc_1397		; (8A8A)
020A:899C  E9 0109				jmp	loc_1399		; (8AA8)
020A:899F  E9 010B				jmp	loc_1400		; (8AAD)
020A:89A2  E9 010D				jmp	loc_1401		; (8AB2)
020A:89A5  E9 0126				jmp	loc_1403		; (8ACE)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_129::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 304

020A:89A8  E9 0128				jmp	loc_1404		; (8AD3)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_130::
020A:89AB  E9 012A				jmp	loc_1405		; (8AD8)
020A:89AE  E9 012C				jmp	loc_1406		; (8ADD)
020A:89B1  E9 0144				jmp	loc_1408		; (8AF8)
020A:89B4			loc_1377::
020A:89B4  2E: 8E 1E 38AF			mov	ds,cs:data_470		; (020A:38AF=115h)
020A:89B9  C3					retn
020A:89BA			loc_1378::
020A:89BA  2E: 8E 1E 38B1			mov	ds,cs:data_471		; (020A:38B1=0A008h)
020A:89BF  C3					retn
020A:89C0			loc_1379::
020A:89C0  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:89C6  75 06				jne	loc_1380		; Jump if not equal
020A:89C8  2E: 8E 1E 38A9			mov	ds,cs:data_467		; (020A:38A9=8708h)
020A:89CD  C3					retn
020A:89CE			loc_1380::
020A:89CE  52					push	dx
020A:89CF  2E: 8B 16 38A9			mov	dx,cs:data_467		; (020A:38A9=8708h)
020A:89D4  E8 0315				call	sub_132			; (8CEC)
020A:89D7  2E: 8E 1E 38A1			mov	ds,cs:data_463		; (020A:38A1=5C8Ah)
020A:89DC  5A					pop	dx
020A:89DD  C3					retn
020A:89DE			loc_1381::
020A:89DE  2E: 8E 1E 38B3			mov	ds,cs:data_472		; (020A:38B3=116h)
020A:89E3  C3					retn
020A:89E4			loc_1382::
020A:89E4  2E: 8E 1E 38A5			mov	ds,cs:data_465		; (020A:38A5=8AFFh)
020A:89E9  C3					retn
020A:89EA			loc_1383::
020A:89EA  2E: 8E 1E 38A7			mov	ds,cs:data_466		; (020A:38A7=244h)
020A:89EF  C3					retn
020A:89F0			loc_1384::
020A:89F0  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:89F6  75 08				jne	loc_1385		; Jump if not equal
020A:89F8  50					push	ax
020A:89F9  B8 5F93				mov	ax,5F93h
020A:89FC  8E D8				mov	ds,ax
020A:89FE  58					pop	ax
020A:89FF  C3					retn
020A:8A00			loc_1385::
020A:8A00  52					push	dx
020A:8A01  2E: 8B 16 38AD			mov	dx,cs:data_469		; (020A:38AD=0E80h)
020A:8A06  E8 02E3				call	sub_132			; (8CEC)
020A:8A09  2E: 8E 1E 38A1			mov	ds,cs:data_463		; (020A:38A1=5C8Ah)
020A:8A0E  5A					pop	dx
020A:8A0F  C3					retn
020A:8A10			loc_1386::
020A:8A10  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:8A16  75 06				jne	loc_1387		; Jump if not equal
020A:8A18  2E: 8E 1E 38AB			mov	ds,cs:data_468		; (020A:38AB=111h)
020A:8A1D  C3					retn
020A:8A1E			loc_1387::
020A:8A1E  52					push	dx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 305

020A:8A1F  2E: 8B 16 38AB			mov	dx,cs:data_468		; (020A:38AB=111h)
020A:8A24  E8 02C5				call	sub_132			; (8CEC)
020A:8A27  2E: 8E 1E 38A1			mov	ds,cs:data_463		; (020A:38A1=5C8Ah)
020A:8A2C  5A					pop	dx
020A:8A2D  C3					retn
020A:8A2E			loc_1388::
020A:8A2E  2E: 8E 06 38AF			mov	es,cs:data_470		; (020A:38AF=115h)
020A:8A33  C3					retn
020A:8A34			loc_1389::
020A:8A34  2E: 8E 06 38B1			mov	es,cs:data_471		; (020A:38B1=0A008h)
020A:8A39  C3					retn
020A:8A3A			loc_1390::
020A:8A3A  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:8A40  75 06				jne	loc_1391		; Jump if not equal
020A:8A42  2E: 8E 06 38A9			mov	es,cs:data_467		; (020A:38A9=8708h)
020A:8A47  C3					retn
020A:8A48			loc_1391::
020A:8A48  52					push	dx
020A:8A49  2E: 8B 16 38A9			mov	dx,cs:data_467		; (020A:38A9=8708h)
020A:8A4E  E8 029B				call	sub_132			; (8CEC)
020A:8A51  2E: 8E 06 38A1			mov	es,cs:data_463		; (020A:38A1=5C8Ah)
020A:8A56  5A					pop	dx
020A:8A57  C3					retn
020A:8A58			loc_1392::
020A:8A58  2E: 8E 06 38B3			mov	es,cs:data_472		; (020A:38B3=116h)
020A:8A5D  C3					retn
020A:8A5E			loc_1393::
020A:8A5E  2E: 8E 06 38A5			mov	es,cs:data_465		; (020A:38A5=8AFFh)
020A:8A63  C3					retn
020A:8A64			loc_1394::
020A:8A64  2E: 8E 06 38A7			mov	es,cs:data_466		; (020A:38A7=244h)
020A:8A69  C3					retn
020A:8A6A			loc_1395::
020A:8A6A  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:8A70  75 08				jne	loc_1396		; Jump if not equal
020A:8A72  50					push	ax
020A:8A73  B8 5F93				mov	ax,5F93h
020A:8A76  8E C0				mov	es,ax
020A:8A78  58					pop	ax
020A:8A79  C3					retn
020A:8A7A			loc_1396::
020A:8A7A  52					push	dx
020A:8A7B  2E: 8B 16 38AD			mov	dx,cs:data_469		; (020A:38AD=0E80h)
020A:8A80  E8 0269				call	sub_132			; (8CEC)
020A:8A83  2E: 8E 06 38A1			mov	es,cs:data_463		; (020A:38A1=5C8Ah)
020A:8A88  5A					pop	dx
020A:8A89  C3					retn
020A:8A8A			loc_1397::
020A:8A8A  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:8A90  75 06				jne	loc_1398		; Jump if not equal
020A:8A92  2E: 8E 06 38AB			mov	es,cs:data_468		; (020A:38AB=111h)
020A:8A97  C3					retn
020A:8A98			loc_1398::
020A:8A98  52					push	dx
020A:8A99  2E: 8B 16 38AB			mov	dx,cs:data_468		; (020A:38AB=111h)
020A:8A9E  E8 024B				call	sub_132			; (8CEC)
020A:8AA1  2E: 8E 06 38A1			mov	es,cs:data_463		; (020A:38A1=5C8Ah)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 306

020A:8AA6  5A					pop	dx
020A:8AA7  C3					retn
020A:8AA8			loc_1399::
020A:8AA8  2E: A1 38AF				mov	ax,cs:data_470		; (020A:38AF=115h)
020A:8AAC  C3					retn
020A:8AAD			loc_1400::
020A:8AAD  2E: A1 38B1				mov	ax,cs:data_471		; (020A:38B1=0A008h)
020A:8AB1  C3					retn
020A:8AB2			loc_1401::
020A:8AB2  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:8AB8  75 05				jne	loc_1402		; Jump if not equal
020A:8ABA  2E: A1 38A9				mov	ax,cs:data_467		; (020A:38A9=8708h)
020A:8ABE  C3					retn
020A:8ABF			loc_1402::
020A:8ABF  52					push	dx
020A:8AC0  2E: 8B 16 38A9			mov	dx,cs:data_467		; (020A:38A9=8708h)
020A:8AC5  E8 0224				call	sub_132			; (8CEC)
020A:8AC8  2E: A1 38A1				mov	ax,cs:data_463		; (020A:38A1=5C8Ah)
020A:8ACC  5A					pop	dx
020A:8ACD  C3					retn
020A:8ACE			loc_1403::
020A:8ACE  2E: A1 38B3				mov	ax,cs:data_472		; (020A:38B3=116h)
020A:8AD2  C3					retn
020A:8AD3			loc_1404::
020A:8AD3  2E: A1 38A5				mov	ax,cs:data_465		; (020A:38A5=8AFFh)
020A:8AD7  C3					retn
020A:8AD8			loc_1405::
020A:8AD8  2E: A1 38A7				mov	ax,cs:data_466		; (020A:38A7=244h)
020A:8ADC  C3					retn
020A:8ADD			loc_1406::
020A:8ADD  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:8AE3  75 04				jne	loc_1407		; Jump if not equal
020A:8AE5  B8 5F93				mov	ax,5F93h
020A:8AE8  C3					retn
020A:8AE9			loc_1407::
020A:8AE9  52					push	dx
020A:8AEA  2E: 8B 16 38AD			mov	dx,cs:data_469		; (020A:38AD=0E80h)
020A:8AEF  E8 01FA				call	sub_132			; (8CEC)
020A:8AF2  2E: A1 38A1				mov	ax,cs:data_463		; (020A:38A1=5C8Ah)
020A:8AF6  5A					pop	dx
020A:8AF7  C3					retn
020A:8AF8			loc_1408::
020A:8AF8  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:8AFE  75 05				jne	loc_1409		; Jump if not equal
020A:8B00  2E: A1 38AB				mov	ax,cs:data_468		; (020A:38AB=111h)
020A:8B04  C3					retn
020A:8B05			loc_1409::
020A:8B05  52					push	dx
020A:8B06  2E: 8B 16 38AB			mov	dx,cs:data_468		; (020A:38AB=111h)
020A:8B0B  E8 01DE				call	sub_132			; (8CEC)
020A:8B0E  2E: A1A1				dw	0A1A1h
020A:8B11  38 5A C3				cmp	[bp+si-3Dh],bl
020A:8B14  01 87 90DB				add	word ptr ds:[90DBh][bx],ax	; (5C8A:90DB=0FFFFh)
				sub_121		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 307

				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_131		proc	near
020A:8B18  2E: 80 3E 3E64 00			cmp	cs:data_486,0		; (020A:3E64=74h)
020A:8B1E  74 03				je	loc_1410		; Jump if equal
020A:8B20  E9 01C5				jmp	loc_1427		; (8CE8)
020A:8B23			loc_1410::
020A:8B23  2E: FE 06 3E64			inc	cs:data_486		; (020A:3E64=74h)
020A:8B28  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:8B2E  75			data_622	db	75h			; Data table (indexed access)
020A:8B2F  03 E9				add	bp,cx
020A:8B31  B5 01				mov	ch,1
020A:8B33			loc_1411::
020A:8B33  50					push	ax
020A:8B34  53					push	bx
020A:8B35  51					push	cx
020A:8B36  52					push	dx
020A:8B37  56					push	si
020A:8B38  57					push	di
020A:8B39  55					push	bp
020A:8B3A  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:8B3F  06					push	es
020A:8B40  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:8B45  1E					push	ds
020A:8B46  E8 FE3B				call	sub_124			; (8984)
020A:8B49  E8 FE29				call	sub_122			; (8975)
020A:8B4C  33 F6				xor	si,si			; Zero register
020A:8B4E  33 C9				xor	cx,cx			; Zero register
020A:8B50  26: 8B 44 04				mov	ax,es:[si+4]
020A:8B54  26: 3B 44 02				cmp	ax,es:[si+2]
020A:8B58  75 09				jne	loc_1412		; Jump if not equal
020A:8B5A  2E: C6 06 3E64 00			mov	cs:data_486,0		; (020A:3E64=74h)
020A:8B60  E9 0128				jmp	loc_1424		; (8C8B)
020A:8B63			loc_1412::
020A:8B63  26: 8B 04				mov	ax,es:[si]
020A:8B66  3D FFFF				cmp	ax,0FFFFh
020A:8B69  74 1C				je	loc_1413		; Jump if equal
020A:8B6B  26: 8B 54 04				mov	dx,es:[si+4]
020A:8B6F  26: 2B 54 02				sub	dx,es:[si+2]
020A:8B73  01 16 790B				add	data_607,dx		; (020A:790B=475h)
020A:8B77  83 16 790D 00			adc	data_608,0		; (020A:790D=0FB03h)
020A:8B7C  83 C6 15				add	si,15h
020A:8B7F  26: 3B 04				cmp	ax,es:[si]
020A:8B82  74 DF				je	loc_1412		; Jump if equal
020A:8B84  41					inc	cx
020A:8B85  EB DC				jmp	short loc_1412		; (8B63)
020A:8B87			loc_1413::
020A:8B87  89 0E 790F				mov	data_609,cx		; (020A:790F=0DAEBh)
020A:8B8B  3A 0E 79DB				cmp	cl,data_618		; (020A:79DB=0CEh)
020A:8B8F  77 49				ja	loc_1416		; Jump if above
020A:8B91  33 F6				xor	si,si			; Zero register
020A:8B93  BB 0006				mov	bx,6
020A:8B96			loc_1414::
020A:8B96  26: 8B 04				mov	ax,es:[si]
020A:8B99  3D FFFF				cmp	ax,0FFFFh
020A:8B9C  74 39				je	loc_1415		; Jump if equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 308

020A:8B9E  50					push	ax
020A:8B9F  8B 97 7912				mov	dx,data_611[bx]		; (020A:7912=7502h)
020A:8BA3  26: 89 54 11				mov	es:[si+11h],dx
020A:8BA7  B8 0002				mov	ax,2
020A:8BAA  E8 151F				call	sub_141			; (A0CC)
020A:8BAD  8B 97 7914				mov	dx,data_612[bx]		; (020A:7914=306h)
020A:8BB1  26: 89 54 13				mov	es:[si+13h],dx
020A:8BB5  B8 0001				mov	ax,1
020A:8BB8  E8 1511				call	sub_141			; (A0CC)
020A:8BBB  8B 97 7916				mov	dx,data_613[bx]		; (020A:7916=3FBh)
020A:8BBF  26: 89 54 0F				mov	es:[si+0Fh],dx
020A:8BC3  B8 0004				mov	ax,4
020A:8BC6  E8 1503				call	sub_141			; (A0CC)
020A:8BC9  58					pop	ax
020A:8BCA  83 C6 15				add	si,15h
020A:8BCD  26: 3B 04				cmp	ax,es:[si]
020A:8BD0  74 C4				je	loc_1414		; Jump if equal
020A:8BD2  83 C3 06				add	bx,6
020A:8BD5  EB BF				jmp	short loc_1414		; (8B96)
020A:8BD7			loc_1415::
020A:8BD7  E9 00B1				jmp	loc_1424		; (8C8B)
020A:8BDA			loc_1416::
020A:8BDA  32 FF				xor	bh,bh			; Zero register
020A:8BDC  8A 1E 79DB				mov	bl,data_618		; (020A:79DB=0CEh)
020A:8BE0  B8 FFFF				mov	ax,0FFFFh
020A:8BE3  F7 E3				mul	bx			; dx:ax = reg * ax
020A:8BE5  3B 16 790D				cmp	dx,data_608		; (020A:790D=0FB03h)
020A:8BE9  77 0E				ja	loc_1418		; Jump if above
020A:8BEB  72 06				jc	loc_1417		; Jump if carry Set
020A:8BED  3B 06 790B				cmp	ax,data_607		; (020A:790B=475h)
020A:8BF1  77 06				ja	loc_1418		; Jump if above
020A:8BF3			loc_1417::
020A:8BF3  B8 FFFF				mov	ax,0FFFFh
020A:8BF6  EB 10				jmp	short loc_1419		; (8C08)
020A:8BF8  90					nop
020A:8BF9			loc_1418::
020A:8BF9  32 FF				xor	bh,bh			; Zero register
020A:8BFB  8A 1E 79DB				mov	bl,data_618		; (020A:79DB=0CEh)
020A:8BFF  8B 16 790D				mov	dx,data_608		; (020A:790D=0FB03h)
020A:8C03  A1 790B				mov	ax,data_607		; (020A:790B=475h)
020A:8C06  F7 F3				div	bx			; ax,dx rem=dx:ax/reg
020A:8C08			loc_1419::
020A:8C08  8B E8				mov	bp,ax
020A:8C0A  33 C9				xor	cx,cx			; Zero register
020A:8C0C  33 D2				xor	dx,dx			; Zero register
020A:8C0E  FE C6				inc	dh
020A:8C10  33 F6				xor	si,si			; Zero register
020A:8C12  BF 0006				mov	di,6
020A:8C15			loc_1420::
020A:8C15  26: 8B 1C				mov	bx,es:[si]
020A:8C18  83 FB FF				cmp	bx,0FFFFh
020A:8C1B  74 6E				je	loc_1424		; Jump if equal
020A:8C1D  26: 8B 44 04				mov	ax,es:[si+4]
020A:8C21  26: 2B 44 02				sub	ax,es:[si+2]
020A:8C25  03 C8				add	cx,ax
020A:8C27  9C					pushf				; Push flags
020A:8C28  8B 85 7912				mov	ax,data_611[di]		; (020A:7912=7502h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 309

020A:8C2C  26: 89 44 11				mov	es:[si+11h],ax
020A:8C30  50					push	ax
020A:8C31  52					push	dx
020A:8C32  8B D0				mov	dx,ax
020A:8C34  B8 0002				mov	ax,2
020A:8C37  E8 1492				call	sub_141			; (A0CC)
020A:8C3A  5A					pop	dx
020A:8C3B  58					pop	ax
020A:8C3C  8B 85 7914				mov	ax,data_612[di]		; (020A:7914=306h)
020A:8C40  26: 89 44 13				mov	es:[si+13h],ax
020A:8C44  50					push	ax
020A:8C45  52					push	dx
020A:8C46  8B D0				mov	dx,ax
020A:8C48  B8 0001				mov	ax,1
020A:8C4B  E8 147E				call	sub_141			; (A0CC)
020A:8C4E  5A					pop	dx
020A:8C4F  58					pop	ax
020A:8C50  8B 85 7916				mov	ax,data_613[di]		; (020A:7916=3FBh)
020A:8C54  26: 89 44 0F				mov	es:[si+0Fh],ax
020A:8C58  50					push	ax
020A:8C59  52					push	dx
020A:8C5A  8B D0				mov	dx,ax
020A:8C5C  B8 0004				mov	ax,4
020A:8C5F  E8 146A				call	sub_141			; (A0CC)
020A:8C62  5A					pop	dx
020A:8C63  58					pop	ax
020A:8C64  83 C6 15				add	si,15h
020A:8C67  26: 3B 1C				cmp	bx,es:[si]
020A:8C6A  75 09				jne	loc_1421		; Jump if not equal
020A:8C6C  9D					popf				; Pop flags
020A:8C6D  73 1A				jnc	loc_1423		; Jump if carry=0
020A:8C6F  B9 FFFF				mov	cx,0FFFFh
020A:8C72  EB 15				jmp	short loc_1423		; (8C89)
020A:8C74  90					nop
020A:8C75			loc_1421::
020A:8C75  9D					popf				; Pop flags
020A:8C76  72 04				jc	loc_1422		; Jump if carry Set
020A:8C78  3B CD				cmp	cx,bp
020A:8C7A  72 0D				jb	loc_1423		; Jump if below
020A:8C7C			loc_1422::
020A:8C7C  33 C9				xor	cx,cx			; Zero register
020A:8C7E  3A 36 79DB				cmp	dh,data_618		; (020A:79DB=0CEh)
020A:8C82  73 05				jae	loc_1423		; Jump if above or =
020A:8C84  83 C7 06				add	di,6
020A:8C87  FE C6				inc	dh
020A:8C89			loc_1423::
020A:8C89  EB 8A				jmp	short loc_1420		; (8C15)
020A:8C8B			loc_1424::
020A:8C8B  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:8C90  9C					pushf				; Push flags
020A:8C91  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:8C96  5A					pop	dx
020A:8C97  8E DA				mov	ds,dx
020A:8C99  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:8C9E  5A					pop	dx
020A:8C9F  75 0A				jnz	loc_1425		; Jump if not zero
020A:8CA1  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 310

020A:8CA6  74 03				je	loc_1425		; Jump if equal
020A:8CA8  E8 0041				call	sub_132			; (8CEC)
020A:8CAB			loc_1425::
020A:8CAB  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:8CB0  9D					popf				; Pop flags
020A:8CB1  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:8CB6  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:8CBB  9C					pushf				; Push flags
020A:8CBC  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:8CC1  5A					pop	dx
020A:8CC2  8E C2				mov	es,dx
020A:8CC4  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:8CC9  5A					pop	dx
020A:8CCA  75 0A				jnz	loc_1426		; Jump if not zero
020A:8CCC  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:8CD1  74 03				je	loc_1426		; Jump if equal
020A:8CD3  E8 0016				call	sub_132			; (8CEC)
020A:8CD6			loc_1426::
020A:8CD6  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:8CDB  9D					popf				; Pop flags
020A:8CDC  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:8CE1  5D					pop	bp
020A:8CE2  5F					pop	di
020A:8CE3  5E					pop	si
020A:8CE4  5A					pop	dx
020A:8CE5  59					pop	cx
020A:8CE6  5B					pop	bx
020A:8CE7  58					pop	ax
020A:8CE8			loc_1427::
020A:8CE8  C3					retn
				sub_131		endp

020A:8CE9  87 DB				xchg	bx,bx
020A:8CEB  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_132		proc	near
020A:8CEC  2E: 39 16 38A3			cmp	cs:data_464,dx		; (020A:38A3=3201h)
020A:8CF1  74 19				je	loc_1428		; Jump if equal
020A:8CF3  2E: 89 16 38A3			mov	cs:data_464,dx		; (020A:38A3=3201h)
020A:8CF8  50					push	ax
020A:8CF9  B4 48				mov	ah,48h
020A:8CFB  CD 67				int	67h			; EMS Memory        ah=func 48h
										;  restore map context,dx=handle
020A:8CFD  80 FC 00				cmp	ah,0
020A:8D00  75 0B				jne	loc_1429		; Jump if not equal
020A:8D02  B4 47				mov	ah,47h
020A:8D04  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020A:8D06  80 FC 00				cmp	ah,0
020A:8D09  75 02				jne	loc_1429		; Jump if not equal
020A:8D0B  58					pop	ax
020A:8D0C			loc_1428::
020A:8D0C  C3					retn
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 311

020A:8D0D			loc_1429::
020A:8D0D  E8 FC65				call	sub_122			; (8975)
020A:8D10  BD 2629				mov	bp,2629h
020A:8D13  32 C0				xor	al,al			; Zero register
020A:8D15  86 C4				xchg	al,ah
020A:8D17  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:8D17  9A					db	9Ah
020A:8D18  021C 168F				dw	21Ch, 168Fh
020A:8D1C  E9 F7DD				jmp	loc_1337		; (84FC)
				sub_132		endp

020A:8D1F  90			data_625	db	90h

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_133		proc	near
020A:8D20  2E: 3E80		data_626	dw	3E80h
020A:8D23  A0			data_627	db	0A0h
020A:8D24  38 00				cmp	[bx+si],al
020A:8D26  75 0A				jne	loc_1430		; Jump if not equal
020A:8D28  50					push	ax
020A:8D29  B8 4F93				mov	ax,4F93h
020A:8D2C  8E C0				mov	es,ax
020A:8D2E  58					pop	ax
020A:8D2F  EB 60				jmp	short loc_1439		; (8D91)
020A:8D31  90					nop
020A:8D32			loc_1430::
020A:8D32  E8 FC58				call	sub_125			; (898D)
020A:8D35  26: 3B 1E 344A			cmp	bx,word ptr es:[344Ah]	; (4F93:344A=0FFFFh)
020A:8D3A  75 1C				jne	loc_1432		; Jump if not equal
020A:8D3C  2E: 83 3E 38B5 FF			cmp	cs:data_473,0FFFFh	; (020A:38B5=0EEA2h)
020A:8D42  74 14				je	loc_1432		; Jump if equal
020A:8D44  52					push	dx
020A:8D45  2E: 8B 16 38B5			mov	dx,cs:data_473		; (020A:38B5=0EEA2h)
020A:8D4A  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:8D4F  74 03				je	loc_1431		; Jump if equal
020A:8D51  E8 FF98				call	sub_132			; (8CEC)
020A:8D54			loc_1431::
020A:8D54  5A					pop	dx
020A:8D55  EB 35				jmp	short loc_1438		; (8D8C)
020A:8D57  90					nop
020A:8D58			loc_1432::
020A:8D58  E8 FC29				call	sub_124			; (8984)
020A:8D5B  56					push	si
020A:8D5C  33 F6				xor	si,si			; Zero register
020A:8D5E			loc_1433::
020A:8D5E  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:8D62  75 07				jne	loc_1434		; Jump if not equal
020A:8D64  26: 83 7C 02 FF			cmp	word ptr es:[si+2],0FFFFh
020A:8D69  74 0C				je	loc_1435		; Jump if equal
020A:8D6B			loc_1434::
020A:8D6B  26: 39 1C				cmp	es:[si],bx
020A:8D6E  77 07				ja	loc_1435		; Jump if above
020A:8D70  74 10				jz	loc_1437		; Jump if zero
020A:8D72  83 C6 15				add	si,15h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 312

020A:8D75  EB E7				jmp	short loc_1433		; (8D5E)
020A:8D77			loc_1435::
020A:8D77  83 FE 15				cmp	si,15h
020A:8D7A  73 03				jae	loc_1436		; Jump if above or =
020A:8D7C  BE 0015				mov	si,15h
020A:8D7F			loc_1436::
020A:8D7F  83 EE 15				sub	si,15h
020A:8D82			loc_1437::
020A:8D82  52					push	dx
020A:8D83  26: 8B 54 11				mov	dx,es:[si+11h]
020A:8D87  E8 FF62				call	sub_132			; (8CEC)
020A:8D8A  5A					pop	dx
020A:8D8B  5E					pop	si
020A:8D8C			loc_1438::
020A:8D8C  2E: 8E 06 38A1			mov	es,cs:data_463		; (020A:38A1=5C8Ah)
020A:8D91			loc_1439::
020A:8D91  C3					retn
				sub_133		endp

020A:8D92  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_134		proc	near
020A:8D94  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:8D9A  75 0A				jne	loc_1440		; Jump if not equal
020A:8D9C  50					push	ax
020A:8D9D  B8 5F93				mov	ax,5F93h
020A:8DA0  8E C0				mov	es,ax
020A:8DA2  58					pop	ax
020A:8DA3  EB 60				jmp	short loc_1449		; (8E05)
020A:8DA5  90					nop
020A:8DA6			loc_1440::
020A:8DA6  E8 FBE4				call	sub_125			; (898D)
020A:8DA9  26: 3B 1E 344A			cmp	bx,word ptr es:[344Ah]	; (5F93:344A=140h)
020A:8DAE  75 1C				jne	loc_1442		; Jump if not equal
020A:8DB0  2E: 83 3E 38B7 FF			cmp	cs:data_474,0FFFFh	; (020A:38B7=0F606h)
020A:8DB6  74 14				je	loc_1442		; Jump if equal
020A:8DB8  52					push	dx
020A:8DB9  2E: 8B 16 38B7			mov	dx,cs:data_474		; (020A:38B7=0F606h)
020A:8DBE  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:8DC3  74 03				je	loc_1441		; Jump if equal
020A:8DC5  E8 FF24				call	sub_132			; (8CEC)
020A:8DC8			loc_1441::
020A:8DC8  5A					pop	dx
020A:8DC9  EB 35				jmp	short loc_1448		; (8E00)
020A:8DCB  90					nop
020A:8DCC			loc_1442::
020A:8DCC  E8 FBB5				call	sub_124			; (8984)
020A:8DCF  56					push	si
020A:8DD0  33 F6				xor	si,si			; Zero register
020A:8DD2			loc_1443::
020A:8DD2  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:8DD6  75 07				jne	loc_1444		; Jump if not equal
020A:8DD8  26: 83 7C 02 FF			cmp	word ptr es:[si+2],0FFFFh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 313

020A:8DDD  74 0C				je	loc_1445		; Jump if equal
020A:8DDF			loc_1444::
020A:8DDF  26: 39 1C				cmp	es:[si],bx
020A:8DE2  77 07				ja	loc_1445		; Jump if above
020A:8DE4  74 10				jz	loc_1447		; Jump if zero
020A:8DE6  83 C6 15				add	si,15h
020A:8DE9  EB E7				jmp	short loc_1443		; (8DD2)
020A:8DEB			loc_1445::
020A:8DEB  83 FE 15				cmp	si,15h
020A:8DEE  73 03				jae	loc_1446		; Jump if above or =
020A:8DF0  BE 0015				mov	si,15h
020A:8DF3			loc_1446::
020A:8DF3  83 EE 15				sub	si,15h
020A:8DF6			loc_1447::
020A:8DF6  52					push	dx
020A:8DF7  26: 8B 54 13				mov	dx,es:[si+13h]
020A:8DFB  E8 FEEE				call	sub_132			; (8CEC)
020A:8DFE  5A					pop	dx
020A:8DFF  5E					pop	si
020A:8E00			loc_1448::
020A:8E00  2E: 8E 06 38A1			mov	es,cs:data_463		; (020A:38A1=5C8Ah)
020A:8E05			loc_1449::
020A:8E05  C3					retn
				sub_134		endp

020A:8E06  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_135		proc	near
020A:8E08  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:8E0E  75 0A				jne	loc_1450		; Jump if not equal
020A:8E10  50					push	ax
020A:8E11  B8 3F93				mov	ax,3F93h
020A:8E14  8E C0				mov	es,ax
020A:8E16  58					pop	ax
020A:8E17  EB 60				jmp	short loc_1459		; (8E79)
020A:8E19  90					nop
020A:8E1A			loc_1450::
020A:8E1A  E8 FB70				call	sub_125			; (898D)
020A:8E1D  26: 3B 1E 344A			cmp	bx,word ptr es:[344Ah]	; (3F93:344A=0FFFFh)
020A:8E22  75 1C				jne	loc_1452		; Jump if not equal
020A:8E24  2E: 83 3E 38B9 FF			cmp	cs:data_475,0FFFFh	; (020A:38B9=1A06h)
020A:8E2A  74 14				je	loc_1452		; Jump if equal
020A:8E2C  52					push	dx
020A:8E2D  2E: 8B 16 38B9			mov	dx,cs:data_475		; (020A:38B9=1A06h)
020A:8E32  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:8E37  74 03				je	loc_1451		; Jump if equal
020A:8E39  E8 FEB0				call	sub_132			; (8CEC)
020A:8E3C			loc_1451::
020A:8E3C  5A					pop	dx
020A:8E3D  EB 35				jmp	short loc_1458		; (8E74)
020A:8E3F  90					nop
020A:8E40			loc_1452::
020A:8E40  E8 FB41				call	sub_124			; (8984)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 314

020A:8E43  56					push	si
020A:8E44  33 F6				xor	si,si			; Zero register
020A:8E46			loc_1453::
020A:8E46  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:8E4A  75 07				jne	loc_1454		; Jump if not equal
020A:8E4C  26: 83 7C 02 FF			cmp	word ptr es:[si+2],0FFFFh
020A:8E51  74 0C				je	loc_1455		; Jump if equal
020A:8E53			loc_1454::
020A:8E53  26: 39 1C				cmp	es:[si],bx
020A:8E56  77 07				ja	loc_1455		; Jump if above
020A:8E58  74 10				jz	loc_1457		; Jump if zero
020A:8E5A  83 C6 15				add	si,15h
020A:8E5D  EB E7				jmp	short loc_1453		; (8E46)
020A:8E5F			loc_1455::
020A:8E5F  83 FE 15				cmp	si,15h
020A:8E62  73 03				jae	loc_1456		; Jump if above or =
020A:8E64  BE 0015				mov	si,15h
020A:8E67			loc_1456::
020A:8E67  83 EE 15				sub	si,15h
020A:8E6A			loc_1457::
020A:8E6A  52					push	dx
020A:8E6B  26: 8B 54 0F				mov	dx,es:[si+0Fh]
020A:8E6F  E8 FE7A				call	sub_132			; (8CEC)
020A:8E72  5A					pop	dx
020A:8E73  5E					pop	si
020A:8E74			loc_1458::
020A:8E74  2E: 8E 06 38A1			mov	es,cs:data_463		; (020A:38A1=5C8Ah)
020A:8E79			loc_1459::
020A:8E79  C3					retn
				sub_135		endp

							                        ;* No entry point to code
020A:8E7A  87 DB				xchg	bx,bx
020A:8E7C  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:8E82  75 0A				jne	loc_1460		; Jump if not equal
020A:8E84  50					push	ax
020A:8E85  B8 4F93				mov	ax,4F93h
020A:8E88  8E D8				mov	ds,ax
020A:8E8A  58					pop	ax
020A:8E8B  EB 5B				jmp	short loc_1469		; (8EE8)
020A:8E8D  90					nop
020A:8E8E			loc_1460::
020A:8E8E  E8 FAE4				call	sub_122			; (8975)
020A:8E91  3B 1E 344A				cmp	bx,word ptr ds:[344Ah]	; (4F93:344A=0FFFFh)
020A:8E95  75 1C				jne	loc_1462		; Jump if not equal
020A:8E97  2E: 83 3E 38B5 FF			cmp	cs:data_473,0FFFFh	; (020A:38B5=0EEA2h)
020A:8E9D  74 14				je	loc_1462		; Jump if equal
020A:8E9F  52					push	dx
020A:8EA0  2E: 8B 16 38B5			mov	dx,cs:data_473		; (020A:38B5=0EEA2h)
020A:8EA5  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:8EAA  74 03				je	loc_1461		; Jump if equal
020A:8EAC  E8 FE3D				call	sub_132			; (8CEC)
020A:8EAF			loc_1461::
020A:8EAF  5A					pop	dx
020A:8EB0  EB 31				jmp	short loc_1468		; (8EE3)
020A:8EB2  90					nop
020A:8EB3			loc_1462::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 315

020A:8EB3  E8 FAB6				call	sub_121			; (896C)
020A:8EB6  56					push	si
020A:8EB7  33 F6				xor	si,si			; Zero register
020A:8EB9			loc_1463::
020A:8EB9  83 3C FF				cmp	word ptr [si],0FFFFh
020A:8EBC  75 06				jne	loc_1464		; Jump if not equal
020A:8EBE  83 7C 02 FF				cmp	word ptr [si+2],0FFFFh
020A:8EC2  74 0B				je	loc_1465		; Jump if equal
020A:8EC4			loc_1464::
020A:8EC4  39 1C				cmp	[si],bx
020A:8EC6  77 07				ja	loc_1465		; Jump if above
020A:8EC8  74 10				jz	loc_1467		; Jump if zero
020A:8ECA  83 C6 15				add	si,15h
020A:8ECD  EB EA				jmp	short loc_1463		; (8EB9)
020A:8ECF			loc_1465::
020A:8ECF  83 FE 15				cmp	si,15h
020A:8ED2  73 03				jae	loc_1466		; Jump if above or =
020A:8ED4  BE 0015				mov	si,15h
020A:8ED7			loc_1466::
020A:8ED7  83 EE 15				sub	si,15h
020A:8EDA			loc_1467::
020A:8EDA  52					push	dx
020A:8EDB  8B 54 11				mov	dx,[si+11h]
020A:8EDE  E8 FE0B				call	sub_132			; (8CEC)
020A:8EE1  5A					pop	dx
020A:8EE2  5E					pop	si
020A:8EE3			loc_1468::
020A:8EE3  2E: 8E 06 38A1			mov	es,cs:data_463		; (020A:38A1=5C8Ah)
020A:8EE8			loc_1469::
020A:8EE8  C3					retn
							                        ;* No entry point to code
020A:8EE9  87 DB				xchg	bx,bx
020A:8EEB  90					nop
020A:8EEC  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:8EF2  75 0A				jne	loc_1470		; Jump if not equal
020A:8EF4  50					push	ax
020A:8EF5  B8 5F93				mov	ax,5F93h
020A:8EF8  8E D8				mov	ds,ax
020A:8EFA  58					pop	ax
020A:8EFB  EB 5B				jmp	short loc_1479		; (8F58)
020A:8EFD  90					nop
020A:8EFE			loc_1470::
020A:8EFE  E8 FA74				call	sub_122			; (8975)
020A:8F01  3B 1E 344A				cmp	bx,word ptr ds:[344Ah]	; (5F93:344A=140h)
020A:8F05  75 1C				jne	loc_1472		; Jump if not equal
020A:8F07  2E: 83 3E 38B7 FF			cmp	cs:data_474,0FFFFh	; (020A:38B7=0F606h)
020A:8F0D  74 14				je	loc_1472		; Jump if equal
020A:8F0F  52					push	dx
020A:8F10  2E: 8B 16 38B7			mov	dx,cs:data_474		; (020A:38B7=0F606h)
020A:8F15  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:8F1A  74 03				je	loc_1471		; Jump if equal
020A:8F1C  E8 FDCD				call	sub_132			; (8CEC)
020A:8F1F			loc_1471::
020A:8F1F  5A					pop	dx
020A:8F20  EB 31				jmp	short loc_1478		; (8F53)
020A:8F22  90					nop
020A:8F23			loc_1472::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 316

020A:8F23  E8 FA46				call	sub_121			; (896C)
020A:8F26  56					push	si
020A:8F27  33 F6				xor	si,si			; Zero register
020A:8F29			loc_1473::
020A:8F29  83 3C FF				cmp	word ptr [si],0FFFFh
020A:8F2C  75 06				jne	loc_1474		; Jump if not equal
020A:8F2E  83 7C 02 FF				cmp	word ptr [si+2],0FFFFh
020A:8F32  74 0B				je	loc_1475		; Jump if equal
020A:8F34			loc_1474::
020A:8F34  39 1C				cmp	[si],bx
020A:8F36  77 07				ja	loc_1475		; Jump if above
020A:8F38  74 10				jz	loc_1477		; Jump if zero
020A:8F3A  83 C6 15				add	si,15h
020A:8F3D  EB EA				jmp	short loc_1473		; (8F29)
020A:8F3F			loc_1475::
020A:8F3F  83 FE 15				cmp	si,15h
020A:8F42  73 03				jae	loc_1476		; Jump if above or =
020A:8F44  BE 0015				mov	si,15h
020A:8F47			loc_1476::
020A:8F47  83 EE 15				sub	si,15h
020A:8F4A			loc_1477::
020A:8F4A  52					push	dx
020A:8F4B  8B 54 13				mov	dx,[si+13h]
020A:8F4E  E8 FD9B				call	sub_132			; (8CEC)
020A:8F51  5A					pop	dx
020A:8F52  5E					pop	si
020A:8F53			loc_1478::
020A:8F53  2E: 8E 06 38A1			mov	es,cs:data_463		; (020A:38A1=5C8Ah)
020A:8F58			loc_1479::
020A:8F58  C3					retn
							                        ;* No entry point to code
020A:8F59  87 DB				xchg	bx,bx
020A:8F5B  90					nop
020A:8F5C  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:8F62  75 0A				jne	loc_1480		; Jump if not equal
020A:8F64  50					push	ax
020A:8F65  B8 3F93				mov	ax,3F93h
020A:8F68  8E D8				mov	ds,ax
020A:8F6A  58					pop	ax
020A:8F6B  EB 5B				jmp	short loc_1489		; (8FC8)
020A:8F6D  90					nop
020A:8F6E			loc_1480::
020A:8F6E  E8 FA04				call	sub_122			; (8975)
020A:8F71  3B 1E 344A				cmp	bx,word ptr ds:[344Ah]	; (3F93:344A=0FFFFh)
020A:8F75  75 1C				jne	loc_1482		; Jump if not equal
020A:8F77  2E: 83 3E 38B9 FF			cmp	cs:data_475,0FFFFh	; (020A:38B9=1A06h)
020A:8F7D  74 14				je	loc_1482		; Jump if equal
020A:8F7F  52					push	dx
020A:8F80  2E: 8B 16 38B9			mov	dx,cs:data_475		; (020A:38B9=1A06h)
020A:8F85  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:8F8A  74 03				je	loc_1481		; Jump if equal
020A:8F8C  E8 FD5D				call	sub_132			; (8CEC)
020A:8F8F			loc_1481::
020A:8F8F  5A					pop	dx
020A:8F90  EB 31				jmp	short loc_1488		; (8FC3)
020A:8F92  90					nop
020A:8F93			loc_1482::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 317

020A:8F93  E8 F9D6				call	sub_121			; (896C)
020A:8F96  56					push	si
020A:8F97  33 F6				xor	si,si			; Zero register
020A:8F99			loc_1483::
020A:8F99  83 3C FF				cmp	word ptr [si],0FFFFh
020A:8F9C  75 06				jne	loc_1484		; Jump if not equal
020A:8F9E  83 7C 02 FF				cmp	word ptr [si+2],0FFFFh
020A:8FA2  74 0B				je	loc_1485		; Jump if equal
020A:8FA4			loc_1484::
020A:8FA4  39 1C				cmp	[si],bx
020A:8FA6  77 07				ja	loc_1485		; Jump if above
020A:8FA8  74 10				jz	loc_1487		; Jump if zero
020A:8FAA  83 C6 15				add	si,15h
020A:8FAD  EB EA				jmp	short loc_1483		; (8F99)
020A:8FAF			loc_1485::
020A:8FAF  83 FE 15				cmp	si,15h
020A:8FB2  73 03				jae	loc_1486		; Jump if above or =
020A:8FB4  BE 0015				mov	si,15h
020A:8FB7			loc_1486::
020A:8FB7  83 EE 15				sub	si,15h
020A:8FBA			loc_1487::
020A:8FBA  52					push	dx
020A:8FBB  8B 54 0F				mov	dx,[si+0Fh]
020A:8FBE  E8 FD2B				call	sub_132			; (8CEC)
020A:8FC1  5A					pop	dx
020A:8FC2  5E					pop	si
020A:8FC3			loc_1488::
020A:8FC3  2E: 8E 06 38A1			mov	es,cs:data_463		; (020A:38A1=5C8Ah)
020A:8FC8			loc_1489::
020A:8FC8  C3					retn
020A:8FC9  87 DB				xchg	bx,bx
020A:8FCB  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_136		proc	near
020A:8FCC  FF D3				call	bx			;*
020A:8FCE  CB					retf
				sub_136		endp

							                        ;* No entry point to code
020A:8FCF  90					nop
020A:8FD0  FF D5				call	bp			;*
020A:8FD2  CB					retf
							                        ;* No entry point to code
020A:8FD3  90					nop
020A:8FD4  2E: A1 38A3				mov	ax,cs:data_464		; (020A:38A3=3201h)
020A:8FD8  CB					retf
							                        ;* No entry point to code
020A:8FD9  87 DB				xchg	bx,bx
020A:8FDB  90					nop
020A:8FDC  9C					pushf				; Push flags
020A:8FDD  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:8FE2  75 0C				jne	loc_1490		; Jump if not equal
020A:8FE4  2E: 3B 06 38A3			cmp	ax,cs:data_464		; (020A:38A3=3201h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 318

020A:8FE9  74 05				je	loc_1490		; Jump if equal
020A:8FEB  8B D0				mov	dx,ax
020A:8FED  E8 FCFC				call	sub_132			; (8CEC)
020A:8FF0			loc_1490::
020A:8FF0  9D					popf				; Pop flags
020A:8FF1  CB					retf
							                        ;* No entry point to code
020A:8FF2  87 DB				xchg	bx,bx
020A:8FF4  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:8FFA  74 1F				je	loc_1491		; Jump if equal
020A:8FFC  E8 FB19				call	sub_131			; (8B18)
020A:8FFF  2E: 80 3E 3E64 00			cmp	cs:data_486,0		; (020A:3E64=74h)
020A:9005  75 14				jne	loc_1491		; Jump if not equal
020A:9007  E8 D2DA				call	sub_80			; (62E4)
020A:900A  E8 FB0B				call	sub_131			; (8B18)
020A:900D  2E: 80 3E 3E64 00			cmp	cs:data_486,0		; (020A:3E64=74h)
020A:9013  75 06				jne	loc_1491		; Jump if not equal
020A:9015  BB 0002				mov	bx,2
020A:9018  E9 F418				jmp	loc_1331		; (8433)
020A:901B			loc_1491::
020A:901B  CB					retf
							                        ;* No entry point to code
020A:901C  53					push	bx
020A:901D  51					push	cx
020A:901E  52					push	dx
020A:901F  25 3FFF				and	ax,3FFFh
020A:9022  8B F8				mov	di,ax
020A:9024  57					push	di
020A:9025  B1 0C				mov	cl,0Ch
020A:9027  D3 EF				shr	di,cl			; Shift w/zeros fill
020A:9029  D1 E7				shl	di,1			; Shift w/zeros fill
020A:902B  03 3E 79DD				add	di,data_620		; (020A:79DD=7502h)
020A:902F  8B 95 7912				mov	dx,data_611[di]		; (020A:7912=7502h)
020A:9033  53					push	bx
020A:9034  BB 403C				mov	bx,403Ch
020A:9037  0E E8 FF91				callf	sub_136			; (8FCC)
020A:903B  5B					pop	bx
020A:903C  5F					pop	di
020A:903D  81 E7 0FFF				and	di,0FFFh
020A:9041  B1 04				mov	cl,4
020A:9043  D3 E7				shl	di,cl			; Shift w/zeros fill
020A:9045  5A					pop	dx
020A:9046  59					pop	cx
020A:9047  5B					pop	bx
020A:9048  2E: 8E 06 38A1			mov	es,cs:data_463		; (020A:38A1=5C8Ah)
020A:904D  C3					retn
020A:904E  00 00				add	[bx+si],al

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_137		proc	near
020A:9050  51					push	cx
020A:9051  52					push	dx
020A:9052  57					push	di
020A:9053  55					push	bp
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 319

020A:9054  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:9059  06					push	es
020A:905A  80 3E 4D49 01			cmp	data_533,1		; (020A:4D49=2Eh)
020A:905F  74 12				je	loc_1493		; Jump if equal
020A:9061  F7 06 4E22 0020			test	data_553,20h		; (020A:4E22=4788h)
020A:9067  75 07				jnz	loc_1492		; Jump if not zero
020A:9069  80 3E 4D49 02			cmp	data_533,2		; (020A:4D49=2Eh)
020A:906E  75 03				jne	loc_1493		; Jump if not equal
020A:9070			loc_1492::
020A:9070  E9 06A9				jmp	loc_1585		; (971C)
020A:9073			loc_1493::
020A:9073  A1 40F7				mov	ax,data_490		; (020A:40F7=3B4h)
020A:9076  A3 4D45				mov	data_532,ax		; (020A:4D45=200h)
020A:9079  A0 16AB				mov	al,data_217		; (020A:16AB=41h)
020A:907C  A2 4D44				mov	data_531,al		; (020A:4D44=0)
020A:907F  C6 06 16AB 00			mov	data_217,0		; (020A:16AB=41h)
020A:9084  80 3E 309E 4F			cmp	data_362,4Fh		; (020A:309E=55h) 'O'
020A:9089  74 6A				je	loc_1495		; Jump if equal
020A:908B  53					push	bx
020A:908C  52					push	dx
020A:908D  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:9092  06					push	es
020A:9093  E8 F8F7				call	sub_125			; (898D)
020A:9096  C6 06 47C3 00			mov	byte ptr ds:[47C3h],0	; (020A:47C3=4)
020A:909B  A1 344C				mov	ax,data_391		; (020A:344C=0)
020A:909E  8B 1E 344A				mov	bx,data_390		; (020A:344A=0)
020A:90A2  BA 0020				mov	dx,20h
020A:90A5  E8 E714				call	sub_111			; (77BC)
020A:90A8  83 F9 1D				cmp	cx,1Dh
020A:90AB  73 1B				jae	loc_1494		; Jump if above or =
020A:90AD  41					inc	cx
020A:90AE  80 E1 1F				and	cl,1Fh
020A:90B1  88 0E 47C3				mov	byte ptr ds:[47C3h],cl	; (020A:47C3=4)
020A:90B5  56					push	si
020A:90B6  89 1D				mov	[di],bx
020A:90B8  89 45 02				mov	[di+2],ax
020A:90BB  B9 0028				mov	cx,28h
020A:90BE  83 C7 04				add	di,4
020A:90C1  BE 35FA				mov	si,35FAh
020A:90C4  FC					cld				; Clear direction
020A:90C5  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:90C7  5E					pop	si
020A:90C8			loc_1494::
020A:90C8  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:90CD  9C					pushf				; Push flags
020A:90CE  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:90D3  5A					pop	dx
020A:90D4  8E C2				mov	es,dx
020A:90D6  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:90DB  755A			data_631	dw	755Ah			; Data table (indexed access)
020A:90DD  0A 2E 163B				or	ch,data_212		; (020A:163B=0)
020A:90E1  A3 7438				mov	word ptr ds:[7438h],ax	; (020A:7438=8A04h)
020A:90E4  03 E8				add	bp,ax
020A:90E6  04 FC				add	al,0FCh
020A:90E8  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:90ED  9D					popf				; Pop flags
020A:90EE  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 320

020A:90F3  5A					pop	dx
020A:90F4  5B					pop	bx
020A:90F5			loc_1495::
020A:90F5  C6 06 47BF 00			mov	data_514,0		; (020A:47BF=0F9h)
020A:90FA  C6 06 47C0 10			mov	data_515,10h		; (020A:47C0=0EBh)
020A:90FF  80 3E 309E 4F			cmp	data_362,4Fh		; (020A:309E=55h) 'O'
020A:9104  74 05				je	loc_1496		; Jump if equal
020A:9106  C6 06 47C0 12			mov	data_515,12h		; (020A:47C0=0EBh)
020A:910B			loc_1496::
020A:910B  F6 06 35EE 02			test	data_442,2		; (020A:35EE=75h)
020A:9110  74 0A				jz	loc_1497		; Jump if zero
020A:9112  80 0E 47C0 08			or	data_515,8		; (020A:47C0=0EBh)
020A:9117  B7 20				mov	bh,20h			; ' '
020A:9119  E9 0112				jmp	loc_1521		; (922E)
020A:911C			loc_1497::
020A:911C  F6 C7 10				test	bh,10h
020A:911F  74 05				jz	loc_1498		; Jump if zero
020A:9121  80 0E 47C0 01			or	data_515,1		; (020A:47C0=0EBh)
020A:9126			loc_1498::
020A:9126  33 FF				xor	di,di			; Zero register
020A:9128  26: 8A 44 01				mov	al,es:[si+1]
020A:912C  24 C7				and	al,0C7h
020A:912E  3C 06				cmp	al,6
020A:9130  75 03				jne	loc_1499		; Jump if not equal
020A:9132  E9 0098				jmp	loc_1512		; (91CD)
020A:9135			loc_1499::
020A:9135  24 07				and	al,7
020A:9137  A8 04				test	al,4
020A:9139  75 30				jnz	loc_1503		; Jump if not zero
020A:913B  A8 02				test	al,2
020A:913D  75 16				jnz	loc_1501		; Jump if not zero
020A:913F  F7 06 4E22 0010			test	data_553,10h		; (020A:4E22=4788h)
020A:9145  75 08				jnz	loc_1500		; Jump if not zero
020A:9147  81 3E 35FE 0180			cmp	word ptr ds:[35FEh],180h	; (020A:35FE=0EE9h)
020A:914D  72 20				jb	loc_1504		; Jump if below
020A:914F			loc_1500::
020A:914F  8B 3E 35FE				mov	di,word ptr ds:[35FEh]	; (020A:35FE=0EE9h)
020A:9153  EB 1A				jmp	short loc_1504		; (916F)
020A:9155			loc_1501::
020A:9155  F7 06 4E22 0010			test	data_553,10h		; (020A:4E22=4788h)
020A:915B  75 08				jnz	loc_1502		; Jump if not zero
020A:915D  81 3E 3612 0180			cmp	word ptr ds:[3612h],180h	; (020A:3612=3A10h)
020A:9163  72 0A				jb	loc_1504		; Jump if below
020A:9165			loc_1502::
020A:9165  8B 3E 3612				mov	di,word ptr ds:[3612h]	; (020A:3612=3A10h)
020A:9169  EB 04				jmp	short loc_1504		; (916F)
020A:916B			loc_1503::
020A:916B  3C 06				cmp	al,6
020A:916D  73 30				jae	loc_1508		; Jump if above or =
020A:916F			loc_1504::
020A:916F  A8 01				test	al,1
020A:9171  74 16				jz	loc_1506		; Jump if zero
020A:9173  F7 06 4E22 0010			test	data_553,10h		; (020A:4E22=4788h)
020A:9179  75 08				jnz	loc_1505		; Jump if not zero
020A:917B  81 3E 360E 0180			cmp	data_452,180h		; (020A:360E=3D83h)
020A:9181  72 4A				jb	loc_1512		; Jump if below
020A:9183			loc_1505::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 321

020A:9183  03 3E 360E				add	di,data_452		; (020A:360E=3D83h)
020A:9187  EB 44				jmp	short loc_1512		; (91CD)
020A:9189			loc_1506::
020A:9189  F7 06 4E22 0010			test	data_553,10h		; (020A:4E22=4788h)
020A:918F  75 08				jnz	loc_1507		; Jump if not zero
020A:9191  81 3E 360A 0180			cmp	data_451,180h		; (020A:360A=8DF8h)
020A:9197  72 34				jb	loc_1512		; Jump if below
020A:9199			loc_1507::
020A:9199  03 3E 360A				add	di,data_451		; (020A:360A=8DF8h)
020A:919D  EB 2E				jmp	short loc_1512		; (91CD)
020A:919F			loc_1508::
020A:919F  A8 01				test	al,1
020A:91A1  74 16				jz	loc_1510		; Jump if zero
020A:91A3  F7 06 4E22 0010			test	data_553,10h		; (020A:4E22=4788h)
020A:91A9  75 08				jnz	loc_1509		; Jump if not zero
020A:91AB  81 3E 35FE 0180			cmp	word ptr ds:[35FEh],180h	; (020A:35FE=0EE9h)
020A:91B1  72 1A				jb	loc_1512		; Jump if below
020A:91B3			loc_1509::
020A:91B3  03 3E 35FE				add	di,word ptr ds:[35FEh]	; (020A:35FE=0EE9h)
020A:91B7  EB 14				jmp	short loc_1512		; (91CD)
020A:91B9			loc_1510::
020A:91B9  F7 06 4E22 0010			test	data_553,10h		; (020A:4E22=4788h)
020A:91BF  75 08				jnz	loc_1511		; Jump if not zero
020A:91C1  81 3E 3612 0180			cmp	word ptr ds:[3612h],180h	; (020A:3612=3A10h)
020A:91C7  72 04				jb	loc_1512		; Jump if below
020A:91C9			loc_1511::
020A:91C9  03 3E 3612				add	di,word ptr ds:[3612h]	; (020A:3612=3A10h)
020A:91CD			loc_1512::
020A:91CD  80 FA 3D				cmp	dl,3Dh			; '='
020A:91D0  74 02				je	loc_1513		; Jump if equal
020A:91D2  EB 4C				jmp	short loc_1520		; (9220)
020A:91D4			loc_1513::
020A:91D4  F6 C7 10				test	bh,10h
020A:91D7  74 02				jz	loc_1514		; Jump if zero
020A:91D9  EB 5B				jmp	short loc_1523		; (9236)
020A:91DB			loc_1514::
020A:91DB  83 FF 40				cmp	di,40h
020A:91DE  73 02				jae	loc_1515		; Jump if above or =
020A:91E0  EB 59				jmp	short loc_1524		; (923B)
020A:91E2			loc_1515::
020A:91E2  83 FF FC				cmp	di,0FFFCh
020A:91E5  76 02				jbe	loc_1516		; Jump if below or =
020A:91E7  EB 52				jmp	short loc_1524		; (923B)
020A:91E9			loc_1516::
020A:91E9  06					push	es
020A:91EA  53					push	bx
020A:91EB  51					push	cx
020A:91EC  8E 06 40E9				mov	es,word ptr ds:[40E9h]	; (020A:40E9=4000h)
020A:91F0  B9 0019				mov	cx,19h
020A:91F3  26: 8B 05				mov	ax,es:[di]

020A:91F6			locloop_1517::
020A:91F6  8B D8				mov	bx,ax
020A:91F8  26: 2B 5D FE				sub	bx,es:[di-2]
020A:91FC  73 02				jnc	loc_1518		; Jump if carry=0
020A:91FE  F7 D3				not	bx
020A:9200			loc_1518::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 322

020A:9200  81 FB 0200				cmp	bx,200h
020A:9204  73 15				jae	loc_1519		; Jump if above or =
020A:9206  8B DF				mov	bx,di
020A:9208  4B					dec	bx
020A:9209  3B 1E 344C				cmp	bx,data_391		; (020A:344C=0)
020A:920D  74 0C				je	loc_1519		; Jump if equal
020A:920F  4B					dec	bx
020A:9210  3B 1E 344C				cmp	bx,data_391		; (020A:344C=0)
020A:9214  74 05				je	loc_1519		; Jump if equal
020A:9216  83 EF 02				sub	di,2
020A:9219  E2 DB				loop	locloop_1517		; Loop if cx > 0

020A:921B			loc_1519::
020A:921B  07					pop	es
020A:921C  5B					pop	bx
020A:921D  07					pop	es
020A:921E  EB 16				jmp	short loc_1523		; (9236)
020A:9220			loc_1520::
020A:9220  81 FF FE00				cmp	di,0FE00h
020A:9224  72 0A				jb	loc_1522		; Jump if below
020A:9226  81 3E 4D45 0080			cmp	data_532,80h		; (020A:4D45=200h)
020A:922C  72 02				jb	loc_1522		; Jump if below
020A:922E			loc_1521::
020A:922E  33 FF				xor	di,di			; Zero register
020A:9230			loc_1522::
020A:9230  03 3E 4D45				add	di,data_532		; (020A:4D45=200h)
020A:9234  72 F8				jc	loc_1521		; Jump if carry Set
020A:9236			loc_1523::
020A:9236  83 FF FC				cmp	di,0FFFCh
020A:9239  76 03				jbe	loc_1525		; Jump if below or =
020A:923B			loc_1524::
020A:923B  E9 045B				jmp	loc_1577		; (9699)
020A:923E			loc_1525::
020A:923E  A1 40E9				mov	ax,word ptr ds:[40E9h]	; (020A:40E9=4000h)
020A:9241  3D 0050				cmp	ax,50h
020A:9244  77 03				ja	loc_1526		; Jump if above
020A:9246  E9 0450				jmp	loc_1577		; (9699)
020A:9249			loc_1526::
020A:9249  A3 47B8				mov	word ptr ds:[47B8h],ax	; (020A:47B8=8102h)
020A:924C  A0 362B				mov	al,byte ptr ds:[362Bh]	; (020A:362B=25h)
020A:924F  A2 47BA				mov	byte ptr ds:[47BAh],al	; (020A:47BA=0FBh)
020A:9252  C6 06 362B 90			mov	byte ptr ds:[362Bh],90h	; (020A:362B=25h)
020A:9257  A1 361A				mov	ax,data_455		; (020A:361A=0F2EBh)
020A:925A  A3 47BB				mov	word ptr ds:[47BBh],ax	; (020A:47BB=8000h)
020A:925D  A1 3618				mov	ax,data_454		; (020A:3618=3D03h)
020A:9260  A3 47BD				mov	data_513,ax		; (020A:47BD=372h)
020A:9263  80 3E 4D49 01			cmp	data_533,1		; (020A:4D49=2Eh)
020A:9268  74 20				je	loc_1528		; Jump if equal
020A:926A  F6 C7 10				test	bh,10h
020A:926D  75 1B				jnz	loc_1528		; Jump if not zero
020A:926F  A1 344A				mov	ax,data_390		; (020A:344A=0)
020A:9272  3B 06 47B8				cmp	ax,word ptr ds:[47B8h]	; (020A:47B8=8102h)
020A:9276  75 12				jne	loc_1528		; Jump if not equal
020A:9278  8B C7				mov	ax,di
020A:927A  2B 06 344C				sub	ax,data_391		; (020A:344C=0)
020A:927E  73 02				jnc	loc_1527		; Jump if carry=0
020A:9280  F7 D0				not	ax
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 323

020A:9282			loc_1527::
020A:9282  3D 1500				cmp	ax,1500h
020A:9285  72 03				jb	loc_1528		; Jump if below
020A:9287  E9 040F				jmp	loc_1577		; (9699)
020A:928A			loc_1528::
020A:928A  53					push	bx
020A:928B  8B 1E 47B8				mov	bx,word ptr ds:[47B8h]	; (020A:47B8=8102h)
020A:928F  E8 FB02				call	sub_134			; (8D94)
020A:9292  8B C3				mov	ax,bx
020A:9294  5B					pop	bx
020A:9295  E8 04BC				call	sub_138			; (9754)
020A:9298  8B D0				mov	dx,ax
020A:929A  53					push	bx
020A:929B  8B 1E 47B8				mov	bx,word ptr ds:[47B8h]	; (020A:47B8=8102h)
020A:929F  E8 FA7E				call	sub_133			; (8D20)
020A:92A2  8B C3				mov	ax,bx
020A:92A4  5B					pop	bx
020A:92A5  E8 04AC				call	sub_138			; (9754)
020A:92A8  3B C2				cmp	ax,dx
020A:92AA  73 02				jae	loc_1529		; Jump if above or =
020A:92AC  8B D0				mov	dx,ax
020A:92AE			loc_1529::
020A:92AE  53					push	bx
020A:92AF  8B 1E 47B8				mov	bx,word ptr ds:[47B8h]	; (020A:47B8=8102h)
020A:92B3  E8 FB52				call	sub_135			; (8E08)
020A:92B6  8B C3				mov	ax,bx
020A:92B8  5B					pop	bx
020A:92B9  E8 0498				call	sub_138			; (9754)
020A:92BC  3B C2				cmp	ax,dx
020A:92BE  73 02				jae	loc_1530		; Jump if above or =
020A:92C0  8B D0				mov	dx,ax
020A:92C2			loc_1530::
020A:92C2  2B D7				sub	dx,di
020A:92C4  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:92C6  83 FA 00				cmp	dx,0
020A:92C9  75 03				jne	loc_1532		; Jump if not equal
020A:92CB			loc_1531::
020A:92CB  E9 03CB				jmp	loc_1577		; (9699)
020A:92CE			loc_1532::
020A:92CE  F6 06 35EE 02			test	data_442,2		; (020A:35EE=75h)
020A:92D3  75 05				jnz	loc_1533		; Jump if not zero
020A:92D5  F6 C7 10				test	bh,10h
020A:92D8  74 07				jz	loc_1534		; Jump if zero
020A:92DA			loc_1533::
020A:92DA  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:92DC  83 FA 00				cmp	dx,0
020A:92DF  74 EA				je	loc_1531		; Jump if equal
020A:92E1			loc_1534::
020A:92E1  80 3E 4D4A 00			cmp	data_534,0		; (020A:4D4A=8Ch)
020A:92E6  75 08				jne	loc_1535		; Jump if not equal
020A:92E8  83 FA 3C				cmp	dx,3Ch
020A:92EB  76 03				jbe	loc_1535		; Jump if below or =
020A:92ED  BA 003C				mov	dx,3Ch
020A:92F0			loc_1535::
020A:92F0  88 16 47C1				mov	data_516,dl		; (020A:47C1=16h)
020A:92F4			loc_1536::
020A:92F4  80 3E 4D4A 00			cmp	data_534,0		; (020A:4D4A=8Ch)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 324

020A:92F9  74 03				je	loc_1537		; Jump if equal
020A:92FB  E9 015B				jmp	loc_1551		; (9459)
020A:92FE			loc_1537::
020A:92FE  F6 C7 10				test	bh,10h
020A:9301  74 03				jz	loc_1538		; Jump if zero
020A:9303  E9 0143				jmp	loc_1550		; (9449)
020A:9306			loc_1538::
020A:9306  A1 47B8				mov	ax,word ptr ds:[47B8h]	; (020A:47B8=8102h)
020A:9309  3B 06 344A				cmp	ax,data_390		; (020A:344A=0)
020A:930D  75 03				jne	loc_1539		; Jump if not equal
020A:930F  E9 0087				jmp	loc_1543		; (9399)
020A:9312			loc_1539::
020A:9312  F6 06 35EE 02			test	data_442,2		; (020A:35EE=75h)
020A:9317  74 44				jz	loc_1541		; Jump if zero
020A:9319  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:931E  06					push	es
020A:931F  8E C0				mov	es,ax
020A:9321  26: 8B 45 02				mov	ax,es:[di+2]
020A:9325  26: 83 3D 00				cmp	word ptr es:[di],0
020A:9329  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:932E  9C					pushf				; Push flags
020A:932F  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:9334  5A					pop	dx
020A:9335  8E C2				mov	es,dx
020A:9337  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:933C  5A					pop	dx
020A:933D  75 0A				jnz	loc_1540		; Jump if not zero
020A:933F  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:9344  74 03				je	loc_1540		; Jump if equal
020A:9346  E8 F9A3				call	sub_132			; (8CEC)
020A:9349			loc_1540::
020A:9349  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:934E  9D					popf				; Pop flags
020A:934F  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:9354  74 64				jz	loc_1544		; Jump if zero
020A:9356  0B C0				or	ax,ax			; Zero ?
020A:9358  75 60				jnz	loc_1544		; Jump if not zero
020A:935A  E9 00FC				jmp	loc_1551		; (9459)
020A:935D			loc_1541::
020A:935D  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:9362  06					push	es
020A:9363  8E C0				mov	es,ax
020A:9365  26: 83 3D 00				cmp	word ptr es:[di],0
020A:9369  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:936E  9C					pushf				; Push flags
020A:936F  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:9374  5A					pop	dx
020A:9375  8E C2				mov	es,dx
020A:9377  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:937C  5A					pop	dx
020A:937D  75 0A				jnz	loc_1542		; Jump if not zero
020A:937F  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:9384  74 03				je	loc_1542		; Jump if equal
020A:9386  E8 F963				call	sub_132			; (8CEC)
020A:9389			loc_1542::
020A:9389  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:938E  9D					popf				; Pop flags
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 325

020A:938F  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:9394  74 24				jz	loc_1544		; Jump if zero
020A:9396  E9 00C0				jmp	loc_1551		; (9459)
020A:9399			loc_1543::
020A:9399  3B 3E 3058				cmp	di,data_344		; (020A:3058=7B1h)
020A:939D  72 1B				jb	loc_1544		; Jump if below
020A:939F  3B 3E 305A				cmp	di,data_345		; (020A:305A=83Ch)
020A:93A3  72 18				jb	loc_1545		; Jump if below
020A:93A5  80 FA 39				cmp	dl,39h			; '9'
020A:93A8  74 10				je	loc_1544		; Jump if equal
020A:93AA  8B 3E 4D45				mov	di,data_532		; (020A:4D45=200h)
020A:93AE  3B 3E 3058				cmp	di,data_344		; (020A:3058=7B1h)
020A:93B2  72 06				jb	loc_1544		; Jump if below
020A:93B4  3B 3E 305A				cmp	di,data_345		; (020A:305A=83Ch)
020A:93B8  76 03				jbe	loc_1545		; Jump if below or =
020A:93BA			loc_1544::
020A:93BA  E9 02D0				jmp	loc_1576		; (968D)
020A:93BD			loc_1545::
020A:93BD  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:93C2  06					push	es
020A:93C3  8E C0				mov	es,ax
020A:93C5  26: 8B 05				mov	ax,es:[di]
020A:93C8  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:93CD  9C					pushf				; Push flags
020A:93CE  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:93D3  5A					pop	dx
020A:93D4  8E C2				mov	es,dx
020A:93D6  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:93DB  5A					pop	dx
020A:93DC  75 0A				jnz	loc_1546		; Jump if not zero
020A:93DE  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:93E3  74 03				je	loc_1546		; Jump if equal
020A:93E5  E8 F904				call	sub_132			; (8CEC)
020A:93E8			loc_1546::
020A:93E8  2E: 36FF 0096	data_635	dw	36FFh, 96h
020A:93ED  9D					popf				; Pop flags
020A:93EE  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:93F3  0B C0				or	ax,ax			; Zero ?
020A:93F5  74 4F				jz	loc_1549		; Jump if zero
020A:93F7  2B C7				sub	ax,di
020A:93F9  73 02				jnc	loc_1547		; Jump if carry=0
020A:93FB  F7 D0				not	ax
020A:93FD			loc_1547::
020A:93FD  3D 4000				cmp	ax,4000h
020A:9400  73 44				jae	loc_1549		; Jump if above or =
020A:9402  F6 06 35EE 02			test	data_442,2		; (020A:35EE=75h)
020A:9407  74 50				jz	loc_1551		; Jump if zero
020A:9409  A1 47B8				mov	ax,word ptr ds:[47B8h]	; (020A:47B8=8102h)
020A:940C  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:9411  06					push	es
020A:9412  8E C0				mov	es,ax
020A:9414  26: 83 7D 02 00			cmp	word ptr es:[di+2],0
020A:9419  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:941E  9C					pushf				; Push flags
020A:941F  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:9424  5A					pop	dx
020A:9425  8E C2				mov	es,dx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 326

020A:9427  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:942C  5A					pop	dx
020A:942D  75 0A				jnz	loc_1548		; Jump if not zero
020A:942F  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:9434  74 03				je	loc_1548		; Jump if equal
020A:9436  E8 F8B3				call	sub_132			; (8CEC)
020A:9439			loc_1548::
020A:9439  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:943E  9D					popf				; Pop flags
020A:943F  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:9444  74 13				jz	loc_1551		; Jump if zero
020A:9446			loc_1549::
020A:9446  E9 0244				jmp	loc_1576		; (968D)
020A:9449			loc_1550::
020A:9449  A1 47B8				mov	ax,word ptr ds:[47B8h]	; (020A:47B8=8102h)
020A:944C  3D FFFF				cmp	ax,0FFFFh
020A:944F  74 F5				je	loc_1549		; Jump if equal
020A:9451  25 FFF0				and	ax,0FFF0h
020A:9454  3D FBA0				cmp	ax,0FBA0h
020A:9457  74 ED				je	loc_1549		; Jump if equal
020A:9459			loc_1551::
020A:9459  8B C7				mov	ax,di
020A:945B  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:945D  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:945F  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:9461  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:9463  03 06 47B8				add	ax,word ptr ds:[47B8h]	; (020A:47B8=8102h)
020A:9467  72 DD				jc	loc_1549		; Jump if carry Set
020A:9469  8B C7				mov	ax,di
020A:946B  32 DB				xor	bl,bl			; Zero register
020A:946D  80 3E 4D49 01			cmp	data_533,1		; (020A:4D49=2Eh)
020A:9472  74 0B				je	loc_1552		; Jump if equal
020A:9474  F6 06 35EE 02			test	data_442,2		; (020A:35EE=75h)
020A:9479  75 04				jnz	loc_1552		; Jump if not zero
020A:947B  26: 8A 5C 01				mov	bl,es:[si+1]
020A:947F			loc_1552::
020A:947F  BD 4702				mov	bp,4702h
020A:9482  E8 0DBB				call	sub_142			; (A240)
020A:9485  83 3E 30C9 00			cmp	data_369,0		; (020A:30C9=4C50h)
020A:948A  75 03				jne	loc_1553		; Jump if not equal
020A:948C  E9 01FE				jmp	loc_1576		; (968D)
020A:948F			loc_1553::
020A:948F  53					push	bx
020A:9490  57					push	di
020A:9491  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:9496  06					push	es
020A:9497  8B 1E 40E9				mov	bx,word ptr ds:[40E9h]	; (020A:40E9=4000h)
020A:949B  E8 F882				call	sub_133			; (8D20)
020A:949E  8B 3E 30C9				mov	di,data_369		; (020A:30C9=4C50h)
020A:94A2  26: 80 25 C0				and	byte ptr es:[di],0C0h
020A:94A6  A0 47C0				mov	al,data_515		; (020A:47C0=0EBh)
020A:94A9  26: 08 05				or	es:[di],al
020A:94AC  A8 01				test	al,1
020A:94AE  75 2A				jnz	loc_1555		; Jump if not zero
020A:94B0  83 EF 04				sub	di,4
020A:94B3  3B 1E 344A				cmp	bx,data_390		; (020A:344A=0)
020A:94B7  74 14				je	loc_1554		; Jump if equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 327

020A:94B9  26: F7 45 06 03FF			test	word ptr es:[di+6],3FFh
020A:94BF  75 19				jnz	loc_1555		; Jump if not zero
020A:94C1  A0 303F				mov	al,data_333		; (020A:303F=0Eh)
020A:94C4  26: 88 45 06				mov	es:[di+6],al
020A:94C8  26: 80 4D 07 04			or	byte ptr es:[di+7],4
020A:94CD			loc_1554::
020A:94CD  F6 06 35EE 02			test	data_442,2		; (020A:35EE=75h)
020A:94D2  74 06				jz	loc_1555		; Jump if zero
020A:94D4  26: C7 45 08 0004			mov	word ptr es:[di+8],4
020A:94DA			loc_1555::
020A:94DA  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:94DF  9C					pushf				; Push flags
020A:94E0  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:94E5  5A					pop	dx
020A:94E6  8E C2				mov	es,dx
020A:94E8  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:94ED  5A					pop	dx
020A:94EE  75 0A				jnz	loc_1556		; Jump if not zero
020A:94F0  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:94F5  74 03				je	loc_1556		; Jump if equal
020A:94F7  E8 F7F2				call	sub_132			; (8CEC)
020A:94FA			loc_1556::
020A:94FA  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:94FF  9D					popf				; Pop flags
020A:9500  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:9505  5F					pop	di
020A:9506  5B					pop	bx
020A:9507  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:950C  06					push	es
020A:950D  53					push	bx
020A:950E  A1 47B8				mov	ax,word ptr ds:[47B8h]	; (020A:47B8=8102h)
020A:9511  8E C0				mov	es,ax
020A:9513  A1 344A				mov	ax,data_390		; (020A:344A=0)
020A:9516  32 C9				xor	cl,cl			; Zero register
020A:9518  F6 C7 10				test	bh,10h
020A:951B  74 06				jz	loc_1557		; Jump if zero
020A:951D  26: 8B 45 02				mov	ax,es:[di+2]
020A:9521  B1 01				mov	cl,1
020A:9523			loc_1557::
020A:9523  8B D8				mov	bx,ax
020A:9525  83 FB FF				cmp	bx,0FFFFh
020A:9528  74 17				je	loc_1558		; Jump if equal
020A:952A  26: 8B 05				mov	ax,es:[di]
020A:952D  3D FFFC				cmp	ax,0FFFCh
020A:9530  73 0F				jae	loc_1558		; Jump if above or =
020A:9532  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:9534  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:9536  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:9538  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:953A  03 C3				add	ax,bx
020A:953C  26: 8B 05				mov	ax,es:[di]
020A:953F  73 04				jnc	loc_1559		; Jump if carry=0
020A:9541			loc_1558::
020A:9541  5B					pop	bx
020A:9542  E9 011D				jmp	loc_1574		; (9662)
020A:9545			loc_1559::
020A:9545  BD 4702				mov	bp,4702h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 328

020A:9548  E8 13A5				call	sub_143			; (A8F0)
020A:954B  80 3E 4E0A 01			cmp	data_541,1		; (020A:4E0A=8Bh)
020A:9550  74 07				je	loc_1560		; Jump if equal
020A:9552  80 3E 4E08 00			cmp	data_540,0		; (020A:4E08=0F3h)
020A:9557  74 07				je	loc_1561		; Jump if equal
020A:9559			loc_1560::
020A:9559  C6 06 4E08 00			mov	data_540,0		; (020A:4E08=0F3h)
020A:955E  EB E1				jmp	short loc_1558		; (9541)
020A:9560			loc_1561::
020A:9560  80 3E 309E 4F			cmp	data_362,4Fh		; (020A:309E=55h) 'O'
020A:9565  74 46				je	loc_1563		; Jump if equal
020A:9567  57					push	di
020A:9568  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:956D  06					push	es
020A:956E  E8 F823				call	sub_134			; (8D94)
020A:9571  8B 3E 4E0B				mov	di,data_542		; (020A:4E0B=261Eh)
020A:9575  26: 80 65 04 E0			and	byte ptr es:[di+4],0E0h
020A:957A  A0 47C3				mov	al,byte ptr ds:[47C3h]	; (020A:47C3=4)
020A:957D  26: 08 45 04				or	es:[di+4],al
020A:9581  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9586  9C					pushf				; Push flags
020A:9587  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:958C  5A					pop	dx
020A:958D  8E C2				mov	es,dx
020A:958F  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:9594  5A					pop	dx
020A:9595  75 0A				jnz	loc_1562		; Jump if not zero
020A:9597  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:959C  74 03				je	loc_1562		; Jump if equal
020A:959E  E8 F74B				call	sub_132			; (8CEC)
020A:95A1			loc_1562::
020A:95A1  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:95A6  9D					popf				; Pop flags
020A:95A7  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:95AC  5F					pop	di
020A:95AD			loc_1563::
020A:95AD  5B					pop	bx
020A:95AE  FE 06 47BF				inc	data_514		; (020A:47BF=0F9h)
020A:95B2  83 FF F8				cmp	di,0FFF8h
020A:95B5  77 21				ja	loc_1566		; Jump if above
020A:95B7  80 3E 4D4A 00			cmp	data_534,0		; (020A:4D4A=8Ch)
020A:95BC  74 1D				je	loc_1567		; Jump if equal
020A:95BE  FE 0E 4D4A				dec	data_534		; (020A:4D4A=8Ch)
020A:95C2  74 14				jz	loc_1566		; Jump if zero
020A:95C4  83 C7 02				add	di,2
020A:95C7  F6 06 35EE 02			test	data_442,2		; (020A:35EE=75h)
020A:95CC  75 05				jnz	loc_1564		; Jump if not zero
020A:95CE  F6 C7 10				test	bh,10h
020A:95D1  74 03				jz	loc_1565		; Jump if zero
020A:95D3			loc_1564::
020A:95D3  83 C7 02				add	di,2
020A:95D6			loc_1565::
020A:95D6  EB 4A				jmp	short loc_1572		; (9622)
020A:95D8			loc_1566::
020A:95D8  E9 0087				jmp	loc_1574		; (9662)
020A:95DB			loc_1567::
020A:95DB  A0 47C1				mov	al,data_516		; (020A:47C1=16h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 329

020A:95DE  38 06 47BF				cmp	data_514,al		; (020A:47BF=0F9h)
020A:95E2  72 02				jb	loc_1568		; Jump if below
020A:95E4  EB 7C				jmp	short loc_1574		; (9662)
020A:95E6			loc_1568::
020A:95E6  F6 06 35EE 02			test	data_442,2		; (020A:35EE=75h)
020A:95EB  74 09				jz	loc_1569		; Jump if zero
020A:95ED  26			data_636	db	26h
020A:95EE  83 7D 06 00				cmp	word ptr [di+6],0
020A:95F2  74 0E				je	loc_1570		; Jump if equal
020A:95F4  EB 6C				jmp	short loc_1574		; (9662)
020A:95F6			loc_1569::
020A:95F6  F6 C7 10				test	bh,10h
020A:95F9  74 0A				jz	loc_1571		; Jump if zero
020A:95FB  26: 83 7D 06 00			cmp	word ptr es:[di+6],0
020A:9600  74 60				je	loc_1574		; Jump if equal
020A:9602			loc_1570::
020A:9602  83 C7 02				add	di,2
020A:9605			loc_1571::
020A:9605  83 C7 02				add	di,2
020A:9608  26: 83 3D 00				cmp	word ptr es:[di],0
020A:960C  74 54				je	loc_1574		; Jump if equal
020A:960E  F6 C7 10				test	bh,10h
020A:9611  75 0F				jnz	loc_1572		; Jump if not zero
020A:9613  26: 8B 05				mov	ax,es:[di]
020A:9616  3B 06 3058				cmp	ax,data_344		; (020A:3058=7B1h)
020A:961A  72 46				jb	loc_1574		; Jump if below
020A:961C  3B 06 305A				cmp	ax,data_345		; (020A:305A=83Ch)
020A:9620  77 40				ja	loc_1574		; Jump if above
020A:9622			loc_1572::
020A:9622  A1 47BB				mov	ax,word ptr ds:[47BBh]	; (020A:47BB=8000h)
020A:9625  A3 361A				mov	data_455,ax		; (020A:361A=0F2EBh)
020A:9628  A1 47BD				mov	ax,data_513		; (020A:47BD=372h)
020A:962B  A3 3618				mov	data_454,ax		; (020A:3618=3D03h)
020A:962E  A1 47B8				mov	ax,word ptr ds:[47B8h]	; (020A:47B8=8102h)
020A:9631  A3 40E9				mov	word ptr ds:[40E9h],ax	; (020A:40E9=4000h)
020A:9634  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9639  9C					pushf				; Push flags
020A:963A  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:963F  5A					pop	dx
020A:9640  8E C2				mov	es,dx
020A:9642  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:9647  5A					pop	dx
020A:9648  75 0A				jnz	loc_1573		; Jump if not zero
020A:964A  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:964F  74 03				je	loc_1573		; Jump if equal
020A:9651  E8 F698				call	sub_132			; (8CEC)
020A:9654			loc_1573::
020A:9654  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:9659  9D					popf				; Pop flags
020A:965A  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:965F  E9 FC92				jmp	loc_1536		; (92F4)
020A:9662			loc_1574::
020A:9662  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9667  9C					pushf				; Push flags
020A:9668  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:966D  5A					pop	dx
020A:966E  8E C2				mov	es,dx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 330

020A:9670  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:9675  5A					pop	dx
020A:9676  75 0A				jnz	loc_1575		; Jump if not zero
020A:9678  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:967D  74 03				je	loc_1575		; Jump if equal
020A:967F  E8 F66A				call	sub_132			; (8CEC)
020A:9682			loc_1575::
020A:9682  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:9687  9D					popf				; Pop flags
020A:9688  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:968D			loc_1576::
020A:968D  A1 47B8				mov	ax,word ptr ds:[47B8h]	; (020A:47B8=8102h)
020A:9690  A3 40E9				mov	word ptr ds:[40E9h],ax	; (020A:40E9=4000h)
020A:9693  A0 47BA				mov	al,byte ptr ds:[47BAh]	; (020A:47BA=0FBh)
020A:9696  A2 362B				mov	byte ptr ds:[362Bh],al	; (020A:362B=25h)
020A:9699			loc_1577::
020A:9699  80 3E 47BF 00			cmp	data_514,0		; (020A:47BF=0F9h)
020A:969E  74 76				je	loc_1584		; Jump if equal
020A:96A0  BD 2DAB				mov	bp,2DABh
020A:96A3  80 3E 4D49 01			cmp	data_533,1		; (020A:4D49=2Eh)
020A:96A8  74 07				je	loc_1578		; Jump if equal
020A:96AA  3E: 80 7E 00 3B			cmp	byte ptr ds:[bp],3Bh	; ';'
020A:96AF  74 09				je	loc_1579		; Jump if equal
020A:96B1			loc_1578::
020A:96B1  3E: C6 46 00 3B			mov	byte ptr ds:[bp],3Bh	; ';'
020A:96B6  45					inc	bp
020A:96B7  45					inc	bp
020A:96B8  EB 08				jmp	short loc_1580		; (96C2)
020A:96BA			loc_1579::
020A:96BA  3E: C6 46 00 3B			mov	byte ptr ds:[bp],3Bh	; ';'
020A:96BF  BD 2DC0				mov	bp,2DC0h
020A:96C2			loc_1580::
020A:96C2  A0 47BF				mov	al,data_514		; (020A:47BF=0F9h)
020A:96C5  32 E4				xor	ah,ah			; Zero register
020A:96C7  B3 00				mov	bl,0
020A:96C9  9A 168F:0288		;*		call	far ptr sub_152		;*(168F:0288)
020A:96C9  9A					db	9Ah
020A:96CA  0288 168F				dw	288h, 168Fh
020A:96CE  45					inc	bp
020A:96CF  3E: C7 46 00 6E65			mov	word ptr ds:[bp],6E65h
020A:96D5  45					inc	bp
020A:96D6  45					inc	bp
020A:96D7  3E: C7 46 00 7274			mov	word ptr ds:[bp],7274h
020A:96DD  45					inc	bp
020A:96DE  45					inc	bp
020A:96DF  80 3E 47BF 01			cmp	data_514,1		; (020A:47BF=0F9h)
020A:96E4  74 0F				je	loc_1581		; Jump if equal
020A:96E6  3E: C7 46 00 6569			mov	word ptr ds:[bp],6569h
020A:96EC  45					inc	bp
020A:96ED  45					inc	bp
020A:96EE  3E: C6 46 00 73			mov	byte ptr ds:[bp],73h	; 's'
020A:96F3  EB 05				jmp	short loc_1582		; (96FA)
020A:96F5			loc_1581::
020A:96F5  3E: C6 46 00 79			mov	byte ptr ds:[bp],79h	; 'y'
020A:96FA			loc_1582::
020A:96FA  80 3E 4D49 01			cmp	data_533,1		; (020A:4D49=2Eh)
020A:96FF  75 15				jne	loc_1584		; Jump if not equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 331

020A:9701  45					inc	bp
020A:9702  B9 40C2				mov	cx,40C2h
020A:9705  81 E9 40BB				sub	cx,40BBh
020A:9709  BF 40BB				mov	di,40BBh

020A:970C			locloop_1583::
020A:970C  8A 05				mov	al,[di]
020A:970E  3E: 88 46 00				mov	ds:[bp],al
020A:9712  47					inc	di
020A:9713  45					inc	bp
020A:9714  E2 F6				loop	locloop_1583		; Loop if cx > 0

020A:9716			loc_1584::
020A:9716  A0 4D44				mov	al,data_531		; (020A:4D44=0)
020A:9719  A2 16AB				mov	data_217,al		; (020A:16AB=41h)
020A:971C			loc_1585::
020A:971C  C6 06 35DE 01			mov	data_432,1		; (020A:35DE=0FEh)
020A:9721  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9726  9C					pushf				; Push flags
020A:9727  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:972C  5A					pop	dx
020A:972D  8E C2				mov	es,dx
020A:972F  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:9734  5A					pop	dx
020A:9735  75 0A				jnz	loc_1586		; Jump if not zero
020A:9737  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:973C  74 03				je	loc_1586		; Jump if equal
020A:973E  E8 F5AB				call	sub_132			; (8CEC)
020A:9741			loc_1586::
020A:9741  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:9746  9D					popf				; Pop flags
020A:9747  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:974C  5D					pop	bp
020A:974D  5F					pop	di
020A:974E  5A					pop	dx
020A:974F  59					pop	cx
020A:9750  C3					retn
				sub_137		endp

020A:9751  87 DB				xchg	bx,bx
020A:9753  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_138		proc	near
020A:9754  53					push	bx
020A:9755  52					push	dx
020A:9756  57					push	di
020A:9757  8B CF				mov	cx,di
020A:9759  BF 0008				mov	di,8
020A:975C			loc_1587::
020A:975C  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:9761  72 02				jb	loc_1588		; Jump if below
020A:9763  EB 69				jmp	short loc_1596		; (97CE)
020A:9765			loc_1588::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 332

020A:9765  26: 8A 55 05				mov	dl,es:[di+5]
020A:9769  80 E2 0C				and	dl,0Ch
020A:976C  80 FA 04				cmp	dl,4
020A:976F  75 56				jne	loc_1595		; Jump if not equal
020A:9771  26: 8A 75 04				mov	dh,es:[di+4]
020A:9775  80 E6 36				and	dh,36h			; '6'
020A:9778  80 FE 10				cmp	dh,10h
020A:977B  74 07				je	loc_1589		; Jump if equal
020A:977D  80 FE 12				cmp	dh,12h
020A:9780  74 0B				je	loc_1590		; Jump if equal
020A:9782  EB 12				jmp	short loc_1591		; (9796)
020A:9784			loc_1589::
020A:9784  80 3E 309E 4F			cmp	data_362,4Fh		; (020A:309E=55h) 'O'
020A:9789  74 6C				je	loc_1599		; Jump if equal
020A:978B  EB 3A				jmp	short loc_1595		; (97C7)
020A:978D			loc_1590::
020A:978D  80 3E 309E 4F			cmp	data_362,4Fh		; (020A:309E=55h) 'O'
020A:9792  75 63				jne	loc_1599		; Jump if not equal
020A:9794  EB 31				jmp	short loc_1595		; (97C7)
020A:9796			loc_1591::
020A:9796  26: 8A 75 04				mov	dh,es:[di+4]
020A:979A  80 E6 3F				and	dh,3Fh			; '?'
020A:979D  F6 06 35EE 02			test	data_442,2		; (020A:35EE=75h)
020A:97A2  75 13				jnz	loc_1592		; Jump if not zero
020A:97A4  F6 06 47C0 01			test	data_515,1		; (020A:47C0=0EBh)
020A:97A9  74 11				jz	loc_1593		; Jump if zero
020A:97AB  26: 83 7D 08 04			cmp	word ptr es:[di+8],4
020A:97B0  75 15				jne	loc_1595		; Jump if not equal
020A:97B2  80 FE 02				cmp	dh,2
020A:97B5  74 08				je	loc_1594		; Jump if equal
020A:97B7			loc_1592::
020A:97B7  80 FE 04				cmp	dh,4
020A:97BA  EB 03				jmp	short loc_1594		; (97BF)
020A:97BC			loc_1593::
020A:97BC  80 FE 02				cmp	dh,2
020A:97BF			loc_1594::
020A:97BF  75 06				jne	loc_1595		; Jump if not equal
020A:97C1  26: 39 4D 02				cmp	es:[di+2],cx
020A:97C5  74 30				je	loc_1599		; Jump if equal
020A:97C7			loc_1595::
020A:97C7  26: 39 05				cmp	es:[di],ax
020A:97CA  72 2B				jb	loc_1599		; Jump if below
020A:97CC  74 05				jz	loc_1597		; Jump if zero
020A:97CE			loc_1596::
020A:97CE  B8 FFFF				mov	ax,0FFFFh
020A:97D1  EB 40				jmp	short loc_1601		; (9813)
020A:97D3			loc_1597::
020A:97D3  26: 39 4D 02				cmp	es:[di+2],cx
020A:97D7  72 1E				jb	loc_1599		; Jump if below
020A:97D9  80 FA 00				cmp	dl,0
020A:97DC  75 13				jne	loc_1598		; Jump if not equal
020A:97DE  26: 8A 5D 04				mov	bl,es:[di+4]
020A:97E2  80 E3 5F				and	bl,5Fh			; '_'
020A:97E5  80 FB 5F				cmp	bl,5Fh			; '_'
020A:97E8  75 07				jne	loc_1598		; Jump if not equal
020A:97EA  26: F6 45 05 03			test	byte ptr es:[di+5],3
020A:97EF  74 06				jz	loc_1599		; Jump if zero
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 333

020A:97F1			loc_1598::
020A:97F1  26: 8B 45 02				mov	ax,es:[di+2]
020A:97F5  EB 1C				jmp	short loc_1601		; (9813)
020A:97F7			loc_1599::
020A:97F7  50					push	ax
020A:97F8  26: 8A 45 05				mov	al,es:[di+5]
020A:97FC  25 000F				and	ax,0Fh
020A:97FF  53					push	bx
020A:9800  BB 40C2				mov	bx,40C2h
020A:9803  D7					xlat				; al=[al+[bx]] table
020A:9804  5B					pop	bx
020A:9805  0A C0				or	al,al			; Zero ?
020A:9807  75 04				jnz	loc_1600		; Jump if not zero
020A:9809  26: 8A 45 06				mov	al,es:[di+6]
020A:980D			loc_1600::
020A:980D  03 F8				add	di,ax
020A:980F  58					pop	ax
020A:9810  E9 FF49				jmp	loc_1587		; (975C)
020A:9813			loc_1601::
020A:9813  5F					pop	di
020A:9814  5A					pop	dx
020A:9815  5B					pop	bx
020A:9816  C3					retn
				sub_138		endp

							                        ;* No entry point to code
020A:9817  90					nop
020A:9818  56					push	si
020A:9819  57					push	di
020A:981A  51					push	cx
020A:981B  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:9820  06					push	es
020A:9821  26: 8A 45 04				mov	al,es:[di+4]
020A:9825  24 1F				and	al,1Fh
020A:9827  3C 1F				cmp	al,1Fh
020A:9829  74 17				je	loc_1602		; Jump if equal
020A:982B  FE C8				dec	al
020A:982D  B4 2C				mov	ah,2Ch			; ','
020A:982F  F6 E4				mul	ah			; ax = reg * al
020A:9831  BE 47C8				mov	si,47C8h
020A:9834  03 F0				add	si,ax
020A:9836  BF 35FA				mov	di,35FAh
020A:9839  B9 0028				mov	cx,28h
020A:983C  E8 F14E				call	sub_125			; (898D)
020A:983F  FC					cld				; Clear direction
020A:9840  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:9842			loc_1602::
020A:9842  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9847  9C					pushf				; Push flags
020A:9848  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:984D  5A					pop	dx
020A:984E  8E C2				mov	es,dx
020A:9850  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:9855  5A					pop	dx
020A:9856  75 0A				jnz	loc_1603		; Jump if not zero
020A:9858  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:985D  74 03				je	loc_1603		; Jump if equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 334

020A:985F  E8 F48A				call	sub_132			; (8CEC)
020A:9862			loc_1603::
020A:9862  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:9867  9D					popf				; Pop flags
020A:9868  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:986D  59					pop	cx
020A:986E  5F					pop	di
020A:986F  5E					pop	si
020A:9870  C3					retn
							                        ;* No entry point to code
020A:9871  87 DB				xchg	bx,bx
020A:9873  90					nop
020A:9874  F7 06 4E22 0040			test	data_553,40h		; (020A:4E22=4788h)
020A:987A  75 34				jnz	loc_1606		; Jump if not zero
020A:987C  26: 80 7C 01 21			cmp	byte ptr es:[si+1],21h	; '!'
020A:9881  74 25				je	loc_1605		; Jump if equal
020A:9883  8026			data_637	dw	8026h			; Data table (indexed access)
020A:9885  7C 01				jl	loc_1604		; Jump if <
020A:9887  20 75 26				and	[di+26h],dh
020A:988A  80 3E 327F 08			cmp	byte ptr data_380,8	; (020A:327F='uineIntel')
020A:988F  75 1F				jne	loc_1606		; Jump if not equal
020A:9891  26: 83 7C 04 01			cmp	word ptr es:[si+4],1
020A:9896  75 18				jne	loc_1606		; Jump if not equal
020A:9898  26: 83 7C 02 43			cmp	word ptr es:[si+2],43h
020A:989D  74 14				je	loc_1607		; Jump if equal
020A:989F  26: 83 7C 02 45			cmp	word ptr es:[si+2],45h
020A:98A4  75 0A				jne	loc_1606		; Jump if not equal
020A:98A6  EB 0B				jmp	short loc_1607		; (98B3)
020A:98A8			loc_1605::
020A:98A8  A1 35FA				mov	ax,data_446		; (020A:35FA=0A72h)
020A:98AB  80 FC 25				cmp	ah,25h			; '%'
020A:98AE  74 03				je	loc_1607		; Jump if equal
020A:98B0			loc_1606::
020A:98B0  E9 0188				jmp	loc_1625		; (9A3B)
020A:98B3			loc_1607::
020A:98B3  53					push	bx
020A:98B4  51					push	cx
020A:98B5  52					push	dx
020A:98B6  57					push	di
020A:98B7  56					push	si
020A:98B8  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:98BD  06					push	es
020A:98BE  8B 1E 361A				mov	bx,data_455		; (020A:361A=0F2EBh)
020A:98C2  26: 80 7C 01 20			cmp	byte ptr es:[si+1],20h	; ' '
020A:98C7  75 12				jne	loc_1608		; Jump if not equal
020A:98C9  8B 1E 3602				mov	bx,word ptr ds:[3602h]	; (020A:3602=0E801h)
020A:98CD  A1 3608				mov	ax,data_450		; (020A:3608=9DEBh)
020A:98D0  3D 0006				cmp	ax,6
020A:98D3  77 06				ja	loc_1608		; Jump if above
020A:98D5  B1 0C				mov	cl,0Ch
020A:98D7  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:98D9  03 D8				add	bx,ax
020A:98DB			loc_1608::
020A:98DB  A1 3606				mov	ax,data_449		; (020A:3606=4646h)
020A:98DE  3D 0000				cmp	ax,0
020A:98E1  75 15				jne	loc_1611		; Jump if not equal
020A:98E3  83 FB 00				cmp	bx,0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 335

020A:98E6  75 03				jne	loc_1610		; Jump if not equal
020A:98E8			loc_1609::
020A:98E8  E9 0120				jmp	loc_1623		; (9A0B)
020A:98EB			loc_1610::
020A:98EB  3B 1E 3033				cmp	bx,data_326		; (020A:3033=0)
020A:98EF  75 07				jne	loc_1611		; Jump if not equal
020A:98F1  80 3E 327F 05			cmp	byte ptr data_380,5	; (020A:327F='uineIntel')
020A:98F6  74 F0				je	loc_1609		; Jump if equal
020A:98F8			loc_1611::
020A:98F8  89 1E 40F9				mov	data_491,bx		; (020A:40F9=0C4C4h)
020A:98FC  A3 40FB				mov	data_492,ax		; (020A:40FB=8016h)
020A:98FF  BF 40F9				mov	di,40F9h
020A:9902  E8 F088				call	sub_125			; (898D)
020A:9905  E8 2980				call	$+2983h
020A:9908  72 03				jc	loc_1612		; Jump if carry Set
020A:990A  E9 00FE				jmp	loc_1623		; (9A0B)
020A:990D			loc_1612::
020A:990D  A1 3606				mov	ax,data_449		; (020A:3606=4646h)
020A:9910  BA 0001				mov	dx,1
020A:9913  E8 DEA6				call	sub_111			; (77BC)
020A:9916  72 05				jc	loc_1614		; Jump if carry Set
020A:9918  EB 44				jmp	short loc_1615		; (995E)
020A:991A			loc_1613::
020A:991A  E9 00EE				jmp	loc_1623		; (9A0B)
020A:991D			loc_1614::
020A:991D  26: 80 4D 05 30			or	byte ptr es:[di+5],30h	; '0'
020A:9922  80 3E 2B36 04			cmp	data_285,4		; (020A:2B36=0ADh)
020A:9927  72 F1				jb	loc_1613		; Jump if below
020A:9929  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:992E  9A 168F:55E4		;*		call	far ptr sub_197		;*(168F:55E4)
020A:992E  9A					db	9Ah
020A:992F  55E4 168F				dw	55E4h, 168Fh
020A:9933  72 E5				jc	loc_1613		; Jump if carry Set
020A:9935  57					push	di
020A:9936  8B F7				mov	si,di
020A:9938  BF 532E				mov	di,532Eh
020A:993B  B9 007F				mov	cx,7Fh
020A:993E  8C C0				mov	ax,es
020A:9940  1E					push	ds
020A:9941  07					pop	es
020A:9942  8E D8				mov	ds,ax
020A:9944  FC					cld				; Clear direction
020A:9945  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:9947  8C C0				mov	ax,es
020A:9949  1E					push	ds
020A:994A  07					pop	es
020A:994B  8E D8				mov	ds,ax
020A:994D  5E					pop	si
020A:994E  E8 0667				call	sub_140			; (9FB8)
020A:9951  BF 532E				mov	di,532Eh
020A:9954  80 65 05 FC				and	byte ptr [di+5],0FCh
020A:9958  80 4D 05 02				or	byte ptr [di+5],2
020A:995C  EB 49				jmp	short loc_1620		; (99A7)
020A:995E			loc_1615::
020A:995E  3D FFF0				cmp	ax,0FFF0h
020A:9961  74 1F				je	loc_1618		; Jump if equal
020A:9963  8E			data_640	db	8Eh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 336

020A:9964  C3			data_641	db	0C3h
020A:9965  8B F0				mov	si,ax
020A:9967  26: 83 3C 00				cmp	word ptr es:[si],0
020A:996B  74 12				je	loc_1617		; Jump if equal
020A:996D  B9 000A				mov	cx,0Ah

020A:9970			locloop_1616::
020A:9970  26: 80 3C 20				cmp	byte ptr es:[si],20h	; ' '
020A:9974  72 09				jb	loc_1617		; Jump if below
020A:9976  26: 80 3C 7E				cmp	byte ptr es:[si],7Eh	; '~'
020A:997A  77 03				ja	loc_1617		; Jump if above
020A:997C  46					inc	si
020A:997D  E2 F1				loop	locloop_1616		; Loop if cx > 0

020A:997F			loc_1617::
020A:997F  E9 0089				jmp	loc_1623		; (9A0B)
020A:9982			loc_1618::
020A:9982  BF 532E				mov	di,532Eh
020A:9985  89 1D				mov	[di],bx
020A:9987  89 45 02				mov	[di+2],ax
020A:998A  B0 40				mov	al,40h			; '@'
020A:998C  80 3E 2B3B 06			cmp	data_289,6		; (020A:2B3B=0A0h)
020A:9991  72 09				jb	loc_1619		; Jump if below
020A:9993  80 3E 2B36 04			cmp	data_285,4		; (020A:2B36=0ADh)
020A:9998  73 02				jae	loc_1619		; Jump if above or =
020A:999A  B0 00				mov	al,0
020A:999C			loc_1619::
020A:999C  88 45 04				mov	[di+4],al
020A:999F  C6 45 05 32				mov	byte ptr [di+5],32h	; '2'
020A:99A3  C6 45 06 00				mov	byte ptr [di+6],0
020A:99A7			loc_1620::
020A:99A7  A1 35FA				mov	ax,data_446		; (020A:35FA=0A72h)
020A:99AA  BD 3B5C				mov	bp,3B5Ch
020A:99AD  9A 168F:00D4		;*		call	far ptr sub_146		;*(168F:00D4)
020A:99AD  9A					db	9Ah
020A:99AE  00D4 168F				dw	0D4h, 168Fh
020A:99B2  BD 3B58				mov	bp,3B58h
020A:99B5  83 C7 07				add	di,7
020A:99B8  B9 3B67				mov	cx,3B67h
020A:99BB  81 E9 3B58				sub	cx,3B58h
020A:99BF  9A 168F:44C0		;*		call	far ptr sub_192		;*(168F:44C0)
020A:99BF  9A					db	9Ah
020A:99C0  44C0 168F				dw	44C0h, 168Fh
020A:99C4  3C 00				cmp	al,0
020A:99C6  74 1B				je	locloop_1621		; Jump if equal
020A:99C8  55					push	bp
020A:99C9  53					push	bx
020A:99CA  BD 3B63				mov	bp,3B63h
020A:99CD  3E: C6 46 00 5F			mov	byte ptr ds:[bp],5Fh	; '_'
020A:99D2  45					inc	bp
020A:99D3  32 E4				xor	ah,ah			; Zero register
020A:99D5  33 DB				xor	bx,bx			; Zero register
020A:99D7  9A 168F:0288		;*		call	far ptr sub_152		;*(168F:0288)
020A:99D7  9A					db	9Ah
020A:99D8  0288 168F				dw	288h, 168Fh
020A:99DC  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:99E1  5B					pop	bx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 337

020A:99E2  5D					pop	bp

020A:99E3			locloop_1621::
020A:99E3  3E: 8A 46 00				mov	al,ds:[bp]
020A:99E7  88			data_644	db	88h
020A:99E8  05 4745				add	ax,4745h
020A:99EB  E2 F6				loop	locloop_1621		; Loop if cx > 0

020A:99ED  E8 03E0				call	sub_139			; (9DD0)
020A:99F0  BD 3B63				mov	bp,3B63h
020A:99F3  3E: C6 46 00 72			mov	byte ptr ds:[bp],72h	; 'r'
020A:99F8  45					inc	bp
020A:99F9  3E: C6 46 00 79			mov	byte ptr ds:[bp],79h	; 'y'
020A:99FE  45					inc	bp
020A:99FF			loc_1622::
020A:99FF  3E: 46C6 2000	data_645	dw	46C6h, 2000h		; Data table (indexed access)
020A:9A04  45					inc	bp
020A:9A05  81 FD 3B67				cmp	bp,3B67h
020A:9A09  72 F4				jb	loc_1622		; Jump if below
020A:9A0B			loc_1623::
020A:9A0B  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9A10  9C					pushf				; Push flags
020A:9A11  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:9A16  5A					pop	dx
020A:9A17  8E C2				mov	es,dx
020A:9A19  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:9A1E  5A					pop	dx
020A:9A1F  75 0A				jnz	loc_1624		; Jump if not zero
020A:9A21  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:9A26  74 03				je	loc_1624		; Jump if equal
020A:9A28  E8 F2C1				call	sub_132			; (8CEC)
020A:9A2B			loc_1624::
020A:9A2B  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:9A30  9D					popf				; Pop flags
020A:9A31  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:9A36  5E					pop	si
020A:9A37  5F					pop	di
020A:9A38  5A					pop	dx
020A:9A39  59					pop	cx
020A:9A3A  5B					pop	bx
020A:9A3B			loc_1625::
020A:9A3B  C3					retn
							                        ;* No entry point to code
020A:9A3C  8B F7				mov	si,di
020A:9A3E  E8 0577				call	sub_140			; (9FB8)
020A:9A41  8B 1E 344A				mov	bx,data_390		; (020A:344A=0)
020A:9A45  BA 0001				mov	dx,1
020A:9A48  A8 02				test	al,2
020A:9A4A  75 03				jnz	loc_1626		; Jump if not zero
020A:9A4C  BA 0004				mov	dx,4
020A:9A4F			loc_1626::
020A:9A4F  06					push	es
020A:9A50  8E 06 344A				mov	es,data_390		; (020A:344A=0)
020A:9A54  8B 3E 344C				mov	di,data_391		; (020A:344C=0)
020A:9A58  A8 01				test	al,1
020A:9A5A  74 04				jz	loc_1627		; Jump if zero
020A:9A5C  26: 8B 5D 02				mov	bx,es:[di+2]
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 338

020A:9A60			loc_1627::
020A:9A60  26: 8B 05				mov	ax,es:[di]
020A:9A63  07					pop	es
020A:9A64  E8 DD55				call	sub_111			; (77BC)
020A:9A67  73 0F				jnc	loc_1628		; Jump if carry=0
020A:9A69  8B F7				mov	si,di
020A:9A6B  E8 054A				call	sub_140			; (9FB8)
020A:9A6E  A1 344C				mov	ax,data_391		; (020A:344C=0)
020A:9A71  40					inc	ax
020A:9A72  A3 4E89				mov	data_560,ax		; (020A:4E89=0CFBh)
020A:9A75  A3 4E8B				mov	data_561,ax		; (020A:4E8B=0D77h)
020A:9A78			loc_1628::
020A:9A78  C3					retn
							                        ;* No entry point to code
020A:9A79  50					push	ax
020A:9A7A  4E					dec	si
020A:9A7B  5D					pop	bp
020A:9A7C  4E					dec	si
020A:9A7D  6A					db	6Ah
020A:9A7E  4E					dec	si
020A:9A7F  79 4E				jns	loc_1630		; Jump if not sign
020A:9A81  88 4E B2				mov	[bp-4Eh],cl
020A:9A84  4E					dec	si
020A:9A85  D7					xlat				; al=[al+[bx]] table
020A:9A86  4E					dec	si
020A:9A87  0F			;*		pop	cs			; Dangerous-8088 only
020A:9A87  0F					db	0Fh
020A:9A88  4F					dec	di
020A:9A89  41					inc	cx
020A:9A8A  4F					dec	di
020A:9A8B  41					inc	cx
020A:9A8C  4F					dec	di
020A:9A8D  41					inc	cx
020A:9A8E  4F					dec	di
020A:9A8F  4F					dec	di
020A:9A90  4F					dec	di
020A:9A91  E9 E950		;*		jmp	loc_1327		;*(83E4)
020A:9A91  E9 50 E9				db	0E9h, 50h,0E9h
020A:9A94  50					push	ax
020A:9A95  E9 E950		;*		jmp	loc_1328		;*(83E8)
020A:9A95  E9 50 E9				db	0E9h, 50h,0E9h
020A:9A98  50					push	ax
020A:9A99  6B					db	6Bh
020A:9A9A  4F					dec	di
020A:9A9B  6B					db	6Bh
020A:9A9C  4F					dec	di
020A:9A9D  6B					db	6Bh
020A:9A9E  4F					dec	di
020A:9A9F  6B					db	6Bh
020A:9AA0  4F					dec	di
020A:9AA1  E9 E950		;*		jmp	loc_1329		;*(83F4)
020A:9AA1  E9 50 E9				db	0E9h, 50h,0E9h
							                        ;* No entry point to code
020A:9AA4  50					push	ax
020A:9AA5  1E					push	ds
020A:9AA6  50					push	ax
020A:9AA7  26					db	26h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 339

020A:9AA8  50					push	ax
020A:9AA9  41					inc	cx
020A:9AAA  50					push	ax
020A:9AAB  49					dec	cx
020A:9AAC  50					push	ax
020A:9AAD  51					push	cx
020A:9AAE  50					push	ax
020A:9AAF  90					nop
020A:9AB0  50					push	ax
020A:9AB1  53					push	bx
020A:9AB2  57					push	di
020A:9AB3  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:9AB8  06					push	es
020A:9AB9  26: 8A 45 05				mov	al,es:[di+5]
020A:9ABD  24 0F				and	al,0Fh
020A:9ABF  75 03				jnz	loc_1629		; Jump if not zero
020A:9AC1  E9 02D5				jmp	loc_1654		; (9D99)
020A:9AC4			loc_1629::
020A:9AC4  B0			data_647	db	0B0h
020A:9AC5  262E			data_648	dw	262Eh
020A:9AC7  7D80			data_649	dw	7D80h
020A:9AC9  08 3F				or	[bx],bh
020A:9ACB  74 0C				jz	loc_1631		; Jump if zero
020A:9ACD  B0 FA				mov	al,0FAh
020A:9ACF			loc_1630::
020A:9ACF  F7 06 4E24 0080			test	data_554,80h		; (020A:4E24=885Ah)
020A:9AD5  74 02				jz	loc_1631		; Jump if zero
020A:9AD7  B0 2C				mov	al,2Ch			; ','
020A:9AD9			loc_1631::
020A:9AD9  A2 2D25				mov	byte ptr data_313,al	; (020A:2D25='ings\irina')
020A:9ADC  80 3E 35E3 00			cmp	data_435,0		; (020A:35E3=46h)
020A:9AE1  74 03				je	loc_1632		; Jump if equal
020A:9AE3  A2 2D3A				mov	byte ptr data_314,al	; (020A:2D3A='R=\\IRINA-3C83CD')
020A:9AE6			loc_1632::
020A:9AE6  26: 8A 45 09				mov	al,es:[di+9]
020A:9AEA  3C 20				cmp	al,20h			; ' '
020A:9AEC  76 03				jbe	loc_1633		; Jump if below or =
020A:9AEE  E9 0234				jmp	loc_1646		; (9D25)
020A:9AF1			loc_1633::
020A:9AF1  8A D8				mov	bl,al
020A:9AF3  32 FF				xor	bh,bh			; Zero register
020A:9AF5  D1 E3				shl	bx,1			; Shift w/zeros fill
020A:9AF7  81 C3 4DC9				add	bx,4DC9h
020A:9AFB  2E: 8B 1F				mov	bx,cs:[bx]
020A:9AFE  FF E3				jmp	bx			;*
							                        ;* No entry point to code
020A:9B00  C6 06 3459 00			mov	data_398,0		; (020A:3459=43h)
020A:9B05  C6 06 345C 01			mov	byte ptr ds:[345Ch],1	; (020A:345C=57h)
020A:9B0A  E9 028C				jmp	loc_1654		; (9D99)
							                        ;* No entry point to code
020A:9B0D  C6 06 3459 05			mov	data_398,5		; (020A:3459=43h)
020A:9B12  C6 06 5709 04			mov	byte ptr ds:[5709h],4	; (020A:5709=47h)
020A:9B17  E9 027F				jmp	loc_1654		; (9D99)
							                        ;* No entry point to code
020A:9B1A  F6 06 35A0 05			test	data_423,5		; (020A:35A0=8Bh)
020A:9B1F  74 05				jz	loc_1634		; Jump if zero
020A:9B21  C6 06 4D4C 01			mov	data_536,1		; (020A:4D4C=90h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 340

020A:9B26			loc_1634::
020A:9B26  E9 0270				jmp	loc_1654		; (9D99)
							                        ;* No entry point to code
020A:9B29  9A 168F:3A47		;*		call	far ptr sub_183		;*(168F:3A47)
020A:9B29  9A					db	9Ah
020A:9B2A  3A47 168F				dw	3A47h, 168Fh
020A:9B2E  B0 03				mov	al,3
020A:9B30  9A 168F:2280		;*		call	far ptr sub_166		;*(168F:2280)
020A:9B30  9A					db	9Ah
020A:9B31  2280 168F				dw	2280h, 168Fh
020A:9B35  E9 0261				jmp	loc_1654		; (9D99)
							                        ;* No entry point to code
020A:9B38  C6 06 3459 00			mov	data_398,0		; (020A:3459=43h)
020A:9B3D  C6 06 345C 01			mov	byte ptr ds:[345Ch],1	; (020A:345C=57h)
020A:9B42  F6 06 35EE 04			test	data_442,4		; (020A:35EE=75h)
020A:9B47  74 16				jz	loc_1635		; Jump if zero
020A:9B49  80 26 35EE CF			and	data_442,0CFh		; (020A:35EE=75h)
020A:9B4E  80 26 35EE FC			and	data_442,0FCh		; (020A:35EE=75h)
020A:9B53  80 26 35EE FB			and	data_442,0FBh		; (020A:35EE=75h)
020A:9B58  B0 42				mov	al,42h			; 'B'
020A:9B5A  9A 168F:2280		;*		call	far ptr sub_166		;*(168F:2280)
020A:9B5A  9A					db	9Ah
020A:9B5B  2280 168F				dw	2280h, 168Fh
020A:9B5F			loc_1635::
020A:9B5F  E9 0237				jmp	loc_1654		; (9D99)
020A:9B62  C6 06 3459 00			mov	data_398,0		; (020A:3459=43h)
020A:9B67  C6 06 345C 01			mov	byte ptr ds:[345Ch],1	; (020A:345C=57h)
020A:9B6C  F6 06 35EE 04			test	data_442,4		; (020A:35EE=75h)
020A:9B71  75 11				jnz	loc_1636		; Jump if not zero
020A:9B73  80 0E 35EE 04			or	data_442,4		; (020A:35EE=75h)
020A:9B78  80 0E 35EE 03			or	data_442,3		; (020A:35EE=75h)
020A:9B7D  B0 41				mov	al,41h			; 'A'
020A:9B7F  9A 168F:2280		;*		call	far ptr sub_166		;*(168F:2280)
020A:9B7F  9A					db	9Ah
020A:9B80  2280 168F				dw	2280h, 168Fh
020A:9B84			loc_1636::
020A:9B84  E9 0212				jmp	loc_1654		; (9D99)
							                        ;* No entry point to code
020A:9B87  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:9B8B  09 06 4E22				or	data_553,ax		; (020A:4E22=4788h)
020A:9B8F  26: 8A 45 0C				mov	al,es:[di+0Ch]
020A:9B93  32 E4				xor	ah,ah			; Zero register
020A:9B95  09 06 4E24				or	data_554,ax		; (020A:4E24=885Ah)
020A:9B99  26: 8B 45 0D				mov	ax,es:[di+0Dh]
020A:9B9D  21 06 4E22				and	data_553,ax		; (020A:4E22=4788h)
020A:9BA1  26: 8A 45 0F				mov	al,es:[di+0Fh]
020A:9BA5  B4 FF				mov	ah,0FFh
020A:9BA7  21 06 4E24				and	data_554,ax		; (020A:4E24=885Ah)
020A:9BAB  B0 00				mov	al,0
020A:9BAD  F7 06 4E22 0002			test	data_553,2		; (020A:4E22=4788h)
020A:9BB3  74 02				jz	loc_1637		; Jump if zero
020A:9BB5  B0 01				mov	al,1
020A:9BB7			loc_1637::
020A:9BB7  9A 168F:45B8		;*		call	far ptr sub_194		;*(168F:45B8)
020A:9BB7  9A					db	9Ah
020A:9BB8  45B8 168F				dw	45B8h, 168Fh
020A:9BBC  E9 01DA				jmp	loc_1654		; (9D99)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 341

							                        ;* No entry point to code
020A:9BBF  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:9BC3  A3 361A				mov	data_455,ax		; (020A:361A=0F2EBh)
020A:9BC6  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:9BCA  A3 3618				mov	data_454,ax		; (020A:3618=3D03h)
020A:9BCD  26: 8B 45 0E				mov	ax,es:[di+0Eh]
020A:9BD1  A3 35FA				mov	data_446,ax		; (020A:35FA=0A72h)
020A:9BD4  26: 8B 45 10				mov	ax,es:[di+10h]
020A:9BD8  A3 35FE				mov	word ptr ds:[35FEh],ax	; (020A:35FE=0EE9h)
020A:9BDB  26: 8B 45 12				mov	ax,es:[di+12h]
020A:9BDF  A3 360A				mov	data_451,ax		; (020A:360A=8DF8h)
020A:9BE2  26: 8B 45 14				mov	ax,es:[di+14h]
020A:9BE6  A3 360E				mov	data_452,ax		; (020A:360E=3D83h)
020A:9BE9  C6 06 35DD 05			mov	data_431,5		; (020A:35DD=0)
020A:9BEE  E9 01A8				jmp	loc_1654		; (9D99)
							                        ;* No entry point to code
020A:9BF1  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:9BF5  89 1E 4E02				mov	data_537,bx		; (020A:4E02=38BFh)
020A:9BF9  A2 4E04				mov	data_538,al		; (020A:4E04=1)
020A:9BFC  E9 019A				jmp	loc_1654		; (9D99)
							                        ;* No entry point to code
020A:9BFF  F7 06 4E22 4000			test	data_553,4000h		; (020A:4E22=4788h)
020A:9C05  75 0C				jnz	loc_1638		; Jump if not zero
020A:9C07  81 0E 4E22 4000			or	data_553,4000h		; (020A:4E22=4788h)
020A:9C0D  C7 06 4E20 BFFF			mov	data_552,0BFFFh		; (020A:4E20=5847h)
020A:9C13			loc_1638::
020A:9C13  C6 06 345D 00			mov	data_400,0		; (020A:345D=49h)
020A:9C18  E9 017E				jmp	loc_1654		; (9D99)
							                        ;* No entry point to code
020A:9C1B  FF 36 40F7				push	data_490		; (020A:40F7=3B4h)
020A:9C1F  FF 36 40E9				push	word ptr ds:[40E9h]	; (020A:40E9=4000h)
020A:9C23  FF 36 30C9				push	data_369		; (020A:30C9=4C50h)
020A:9C27  C6 06 4D49 01			mov	data_533,1		; (020A:4D49=2Eh)
020A:9C2C  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:9C30  A3 40F7				mov	data_490,ax		; (020A:40F7=3B4h)
020A:9C33  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:9C37  A3 40E9				mov	word ptr ds:[40E9h],ax	; (020A:40E9=4000h)
020A:9C3A  26: 8A 45 0E				mov	al,es:[di+0Eh]
020A:9C3E  A2 4D4A				mov	data_534,al		; (020A:4D4A=8Ch)
020A:9C41  26: 8A 45 09				mov	al,es:[di+9]
020A:9C45  B7 20				mov	bh,20h			; ' '
020A:9C47  A8 01				test	al,1
020A:9C49  74 03				jz	loc_1639		; Jump if zero
020A:9C4B  80 CF 10				or	bh,10h
020A:9C4E			loc_1639::
020A:9C4E  C6 06 309E 00			mov	data_362,0		; (020A:309E=55h)
020A:9C53  3C 11				cmp	al,11h
020A:9C55  77 05				ja	loc_1640		; Jump if above
020A:9C57  C6 06 309E 4F			mov	data_362,4Fh		; (020A:309E=55h) 'O'
020A:9C5C			loc_1640::
020A:9C5C  B2 00				mov	dl,0
020A:9C5E  E8 ED2C				call	sub_125			; (898D)
020A:9C61  BE 4D46				mov	si,4D46h
020A:9C64  E8 F3E9				call	sub_137			; (9050)
020A:9C67  C6 06 4D49 02			mov	data_533,2		; (020A:4D49=2Eh)
020A:9C6C  C6 06 4D4A 00			mov	data_534,0		; (020A:4D4A=8Ch)
020A:9C71  C6 06 309E 00			mov	data_362,0		; (020A:309E=55h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 342

020A:9C76  8F 06 30C9				pop	data_369		; (020A:30C9=4C50h)
020A:9C7A  8F 06 40E9				pop	word ptr ds:[40E9h]	; (020A:40E9=4000h)
020A:9C7E  8F 06 40F7				pop	data_490		; (020A:40F7=3B4h)
020A:9C82  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9C87  9C					pushf				; Push flags
020A:9C88  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:9C8D  5A					pop	dx
020A:9C8E  8E C2				mov	es,dx
020A:9C90  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:9C95  5A					pop	dx
020A:9C96  75 0A				jnz	loc_1641		; Jump if not zero
020A:9C98  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:9C9D  74 03				je	loc_1641		; Jump if equal
020A:9C9F  E8 F04A				call	sub_132			; (8CEC)
020A:9CA2			loc_1641::
020A:9CA2  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:9CA7  9D					popf				; Pop flags
020A:9CA8  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:9CAD  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:9CB2  06					push	es
020A:9CB3  BA 0001				mov	dx,1
020A:9CB6  26: 8A 45 09				mov	al,es:[di+9]
020A:9CBA  3C 11				cmp	al,11h
020A:9CBC  77 03				ja	loc_1642		; Jump if above
020A:9CBE  BA 0004				mov	dx,4
020A:9CC1			loc_1642::
020A:9CC1  A1 344C				mov	ax,data_391		; (020A:344C=0)
020A:9CC4  8B 1E 344A				mov	bx,data_390		; (020A:344A=0)
020A:9CC8  E8 DAF1				call	sub_111			; (77BC)
020A:9CCB  E9 00CB				jmp	loc_1654		; (9D99)
020A:9CCE  9A 168F:3BC0		;*		call	far ptr sub_185		;*(168F:3BC0)
020A:9CCE  9A					db	9Ah
020A:9CCF  3BC0 168F				dw	3BC0h, 168Fh
020A:9CD3  E9			data_655	db	0E9h
020A:9CD4  C3					retn
							                        ;* No entry point to code
020A:9CD5  00 80 3C3E				add	byte ptr ds:[3C3Eh][bx+si],al	; (020A:3C3E=0ECh)
020A:9CD9  2B 01				sub	ax,[bx+di]
020A:9CDB  75 11				jnz	loc_1643		; Jump if not zero
020A:9CDD  26: 8A 45 06				mov	al,es:[di+6]
020A:9CE1  B4 13				mov	ah,13h
020A:9CE3  BB 0007				mov	bx,7
020A:9CE6  BE 43A3				mov	si,43A3h
020A:9CE9  9A 168F:42AC		;*		call	far ptr sub_191		;*(168F:42AC)
020A:9CE9  9A					db	9Ah
020A:9CEA  42AC 168F				dw	42ACh, 168Fh
020A:9CEE			loc_1643::
020A:9CEE  E9 00A8				jmp	loc_1654		; (9D99)
							                        ;* No entry point to code
020A:9CF1  9A 168F:5614		;*		call	far ptr sub_198		;*(168F:5614)
020A:9CF1  9A					db	9Ah
020A:9CF2  5614 168F				dw	5614h, 168Fh
020A:9CF6  E9 00A1				jmp	loc_1655		; (9D9A)
							                        ;* No entry point to code
020A:9CF9  C7 06 2CCA 0000			mov	data_312,0		; (020A:2CCA=4300h)
020A:9CFF  EB 06				jmp	short loc_1644		; (9D07)
							                        ;* No entry point to code
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 343

020A:9D01  C7 06 2CCA FFFF			mov	data_312,0FFFFh		; (020A:2CCA=4300h)
020A:9D07			loc_1644::
020A:9D07  80 3E 2B37 02			cmp	data_286,2		; (020A:2B37=0EBh)
020A:9D0C  75 05				jne	loc_1645		; Jump if not equal
020A:9D0E  26: 80 4D 04 80			or	byte ptr es:[di+4],80h
020A:9D13			loc_1645::
020A:9D13  C6 06 4E17 01			mov	data_548,1		; (020A:4E17=88h)
020A:9D18  BD 2DAB				mov	bp,2DABh
020A:9D1B  BE 4061				mov	si,4061h
020A:9D1E  9A 168F:4160		;*		call	far ptr sub_189		;*(168F:4160)
020A:9D1E  9A					db	9Ah
020A:9D1F  4160 168F				dw	4160h, 168Fh
020A:9D23  EB 74				jmp	short loc_1654		; (9D99)
020A:9D25			loc_1646::
020A:9D25  3C 40				cmp	al,40h			; '@'
020A:9D27  72 14				jb	loc_1647		; Jump if below
020A:9D29  3C 44				cmp	al,44h			; 'D'
020A:9D2B  76 12				jbe	loc_1648		; Jump if below or =
020A:9D2D  3C 80				cmp	al,80h
020A:9D2F  72 0C				jb	loc_1647		; Jump if below
020A:9D31  3C 8C				cmp	al,8Ch
020A:9D33  76 1F				jbe	loc_1650		; Jump if below or =
020A:9D35  3C 90				cmp	al,90h
020A:9D37  72 04				jb	loc_1647		; Jump if below
020A:9D39  3C 96				cmp	al,96h
020A:9D3B  76 42				jbe	loc_1653		; Jump if below or =
020A:9D3D			loc_1647::
020A:9D3D  EB 5A				jmp	short loc_1654		; (9D99)
020A:9D3F			loc_1648::
020A:9D3F  F7 06 4E22 4000			test	data_553,4000h		; (020A:4E22=4788h)
020A:9D45  75 0B				jnz	loc_1649		; Jump if not zero
020A:9D47  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:9D4B  89 1E 345E				mov	data_401,bx		; (020A:345E=444Eh)
020A:9D4F  A2 345D				mov	data_400,al		; (020A:345D=49h)
020A:9D52			loc_1649::
020A:9D52  EB 45				jmp	short loc_1654		; (9D99)
020A:9D54			loc_1650::
020A:9D54  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:9D58  BE 35FA				mov	si,35FAh
020A:9D5B  24 0F				and	al,0Fh
020A:9D5D  3C 07				cmp	al,7
020A:9D5F  72 12				jb	loc_1651		; Jump if below
020A:9D61  BE 3616				mov	si,3616h
020A:9D64  2C 07				sub	al,7
020A:9D66  74 0D				jz	loc_1652		; Jump if zero
020A:9D68  3C 02				cmp	al,2
020A:9D6A  77 09				ja	loc_1652		; Jump if above
020A:9D6C  C6 06 35DD 03			mov	data_431,3		; (020A:35DD=0)
020A:9D71  EB 02				jmp	short loc_1652		; (9D75)
020A:9D73			loc_1651::
020A:9D73  D0 E0				shl	al,1			; Shift w/zeros fill
020A:9D75			loc_1652::
020A:9D75  D0 E0				shl	al,1			; Shift w/zeros fill
020A:9D77  32 E4				xor	ah,ah			; Zero register
020A:9D79  03 F0				add	si,ax
020A:9D7B  89 1C				mov	[si],bx
020A:9D7D  EB 1A				jmp	short loc_1654		; (9D99)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 344

020A:9D7F			loc_1653::
020A:9D7F  2C 90				sub	al,90h
020A:9D81  32 E4				xor	ah,ah			; Zero register
020A:9D83  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:9D85  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:9D87  BE 35FA				mov	si,35FAh
020A:9D8A  03 F0				add	si,ax
020A:9D8C  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:9D90  89 1C				mov	[si],bx
020A:9D92  26: 8B 5D 0C				mov	bx,es:[di+0Ch]
020A:9D96  89 5C 02				mov	[si+2],bx
020A:9D99			loc_1654::
020A:9D99  F8					clc				; Clear carry flag
020A:9D9A			loc_1655::
020A:9D9A  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9D9F  9C					pushf				; Push flags
020A:9DA0  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:9DA5  5A					pop	dx
020A:9DA6  8E C2				mov	es,dx
020A:9DA8  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:9DAD  5A					pop	dx
020A:9DAE  75 0A				jnz	loc_1656		; Jump if not zero
020A:9DB0  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:9DB5  74 03				je	loc_1656		; Jump if equal
020A:9DB7  E8 EF32				call	sub_132			; (8CEC)
020A:9DBA			loc_1656::
020A:9DBA  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:9DBF  9D					popf				; Pop flags
020A:9DC0  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:9DC5  5F					pop	di
020A:9DC6  5B					pop	bx
020A:9DC7  58					pop	ax
020A:9DC8  C3					retn
020A:9DC9  0007[00]				db	7 dup (0)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_139		proc	near
020A:9DD0  50					push	ax
020A:9DD1  53					push	bx
020A:9DD2  51					push	cx
020A:9DD3  52					push	dx
020A:9DD4  56					push	si
020A:9DD5  57					push	di
020A:9DD6  55					push	bp
020A:9DD7  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:9DDC  1E					push	ds
020A:9DDD  E8 EB95				call	sub_122			; (8975)
020A:9DE0  BD 40C2				mov	bp,40C2h
020A:9DE3  BE 532E				mov	si,532Eh
020A:9DE6  8B 1C				mov	bx,[si]
020A:9DE8  8A 44 05				mov	al,[si+5]
020A:9DEB  24 0C				and	al,0Ch
020A:9DED  3C 08				cmp	al,8
020A:9DEF  74 53				je	loc_1661		; Jump if equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 345

020A:9DF1  3C 04				cmp	al,4
020A:9DF3  74 0A				je	loc_1657		; Jump if equal
020A:9DF5  3C 00				cmp	al,0
020A:9DF7  74 15				je	loc_1658		; Jump if equal
020A:9DF9  BB 0001				mov	bx,1
020A:9DFC  E9 E609				jmp	loc_1330		; (8408)
020A:9DFF			loc_1657::
020A:9DFF  E8 EF1E				call	sub_133			; (8D20)
020A:9E02  83 06 3084 01			add	data_350,1		; (020A:3084=4F43h)
020A:9E07  83 16 3086 00			adc	data_351,0		; (020A:3086=4Dh)
020A:9E0C  EB 45				jmp	short loc_1662		; (9E53)
020A:9E0E			loc_1658::
020A:9E0E  80 7C 04 5F				cmp	byte ptr [si+4],5Fh	; '_'
020A:9E12  75 21				jne	loc_1660		; Jump if not equal
020A:9E14  80 7C 05 00				cmp	byte ptr [si+5],0
020A:9E18  74 0C				je	loc_1659		; Jump if equal
020A:9E1A  80 7C 09 14				cmp	byte ptr [si+9],14h
020A:9E1E  74 06				je	loc_1659		; Jump if equal
020A:9E20  80 7C 09 15				cmp	byte ptr [si+9],15h
020A:9E24  75 0F				jne	loc_1660		; Jump if not equal
020A:9E26			loc_1659::
020A:9E26  E8 EB6D				call	sub_127			; (8996)
020A:9E29  83 06 3098 01			add	data_360,1		; (020A:3098=3A43h)
020A:9E2E  83 16 309A 00			adc	data_361,0		; (020A:309A=445Ch)
020A:9E33  EB 1E				jmp	short loc_1662		; (9E53)
020A:9E35			loc_1660::
020A:9E35  E8 EF5C				call	sub_134			; (8D94)
020A:9E38  83 06 3088 01			add	data_352,1		; (020A:3088=4C41h)
020A:9E3D  83 16 308A 00			adc	data_353,0		; (020A:308A=554Ch)
020A:9E42  EB 0F				jmp	short loc_1662		; (9E53)
020A:9E44			loc_1661::
020A:9E44  E8 EFC1				call	sub_135			; (8E08)
020A:9E47  83 06 308C 01			add	data_354,1		; (020A:308C=4553h)
020A:9E4C  83 16 308E 00			adc	data_355,0		; (020A:308E=5352h)
020A:9E51  EB 00				jmp	short loc_1662		; (9E53)
020A:9E53			loc_1662::
020A:9E53  2E: A1 38A3				mov	ax,cs:data_464		; (020A:38A3=3201h)
020A:9E57  9A 168F:0A90		;*		call	far ptr sub_164		;*(168F:0A90)
020A:9E57  9A					db	9Ah
020A:9E58  0A90 168F				dw	0A90h, 168Fh
020A:9E5C  BF 0008				mov	di,8
020A:9E5F  8B 1C				mov	bx,[si]
020A:9E61  8B 44 02				mov	ax,[si+2]
020A:9E64  26: 8B 0E 0002			mov	cx,word ptr es:[2]	; (020A:0002=10h)
020A:9E69  3B CB				cmp	cx,bx
020A:9E6B  77 10				ja	loc_1664		; Jump if above
020A:9E6D  72 09				jc	loc_1663		; Jump if carry Set
020A:9E6F  26: 8B 0E 0004			mov	cx,word ptr es:[4]	; (020A:0004=808h)
020A:9E74  3B C8				cmp	cx,ax
020A:9E76  77 05				ja	loc_1664		; Jump if above
020A:9E78			loc_1663::
020A:9E78  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (020A:0006=3)
020A:9E7D			loc_1664::
020A:9E7D  8B 1C				mov	bx,[si]
020A:9E7F  8B 44 02				mov	ax,[si+2]
020A:9E82  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:9E87  72 02				jb	loc_1665		; Jump if below
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 346

020A:9E89  EB 43				jmp	short loc_1671		; (9ECE)
020A:9E8B			loc_1665::
020A:9E8B  26: 39 1D				cmp	es:[di],bx
020A:9E8E  73 19				jae	loc_1667		; Jump if above or =
020A:9E90  BB 40C2				mov	bx,40C2h
020A:9E93  26: 8A 45 05				mov	al,es:[di+5]
020A:9E97  25 000F				and	ax,0Fh
020A:9E9A  D7					xlat				; al=[al+[bx]] table
020A:9E9B  0A C0				or	al,al			; Zero ?
020A:9E9D  75 04				jnz	loc_1666		; Jump if not zero
020A:9E9F  26: 8A 45 06				mov	al,es:[di+6]
020A:9EA3			loc_1666::
020A:9EA3  8B C8				mov	cx,ax
020A:9EA5  03 F9				add	di,cx
020A:9EA7  EB D4				jmp	short loc_1664		; (9E7D)
020A:9EA9			loc_1667::
020A:9EA9  74 02				jz	loc_1668		; Jump if zero
020A:9EAB  EB 21				jmp	short loc_1671		; (9ECE)
020A:9EAD			loc_1668::
020A:9EAD  26: 39 45 02				cmp	es:[di+2],ax
020A:9EB1  72 02				jb	loc_1669		; Jump if below
020A:9EB3  EB 19				jmp	short loc_1671		; (9ECE)
020A:9EB5			loc_1669::
020A:9EB5  BB 40C2				mov	bx,40C2h
020A:9EB8  26: 8A 45 05				mov	al,es:[di+5]
020A:9EBC  25 000F				and	ax,0Fh
020A:9EBF  D7					xlat				; al=[al+[bx]] table
020A:9EC0  0A C0				or	al,al			; Zero ?
020A:9EC2  75 04				jnz	loc_1670		; Jump if not zero
020A:9EC4  26: 8A 45 06				mov	al,es:[di+6]
020A:9EC8			loc_1670::
020A:9EC8  8B C8				mov	cx,ax
020A:9ECA  03 F9				add	di,cx
020A:9ECC  EB AF				jmp	short loc_1664		; (9E7D)
020A:9ECE			loc_1671::
020A:9ECE  BB 40C2				mov	bx,40C2h
020A:9ED1  8A 44 05				mov	al,[si+5]
020A:9ED4  25 000F				and	ax,0Fh
020A:9ED7  D7					xlat				; al=[al+[bx]] table
020A:9ED8  0A C0				or	al,al			; Zero ?
020A:9EDA  75 03				jnz	loc_1672		; Jump if not zero
020A:9EDC  8A 44 06				mov	al,[si+6]
020A:9EDF			loc_1672::
020A:9EDF  8B C8				mov	cx,ax
020A:9EE1  26: A1 0000				mov	ax,word ptr es:[0]	; (020A:0000=1828h)
020A:9EE5  03 C1				add	ax,cx
020A:9EE7  73 03				jnc	loc_1673		; Jump if carry=0
020A:9EE9  E9 E432				jmp	loc_1320		; (831E)
020A:9EEC			loc_1673::
020A:9EEC  BE 532E				mov	si,532Eh
020A:9EEF  8B 04				mov	ax,[si]
020A:9EF1  3B 06 344A				cmp	ax,data_390		; (020A:344A=0)
020A:9EF5  75 41				jne	loc_1677		; Jump if not equal
020A:9EF7  8B 44 02				mov	ax,[si+2]
020A:9EFA  3B 06 344C				cmp	ax,data_391		; (020A:344C=0)
020A:9EFE  76 38				jbe	loc_1677		; Jump if below or =
020A:9F00  8A 5C 05				mov	bl,[si+5]
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 347

020A:9F03  80 E3 0C				and	bl,0Ch
020A:9F06  80 FB 08				cmp	bl,8
020A:9F09  74 0C				je	loc_1674		; Jump if equal
020A:9F0B  80 FB 04				cmp	bl,4
020A:9F0E  74 12				je	loc_1675		; Jump if equal
020A:9F10  80 FB 00				cmp	bl,0
020A:9F13  74 18				je	loc_1676		; Jump if equal
020A:9F15  EB 21				jmp	short loc_1677		; (9F38)
020A:9F17			loc_1674::
020A:9F17  3B 06 4E8B				cmp	ax,data_561		; (020A:4E8B=0D77h)
020A:9F1B  73 1B				jae	loc_1677		; Jump if above or =
020A:9F1D  A3 4E8B				mov	data_561,ax		; (020A:4E8B=0D77h)
020A:9F20  EB 16				jmp	short loc_1677		; (9F38)
020A:9F22			loc_1675::
020A:9F22  3B 06 4E87				cmp	ax,data_559		; (020A:4E87=8358h)
020A:9F26  73 10				jae	loc_1677		; Jump if above or =
020A:9F28  A3 4E87				mov	data_559,ax		; (020A:4E87=8358h)
020A:9F2B  EB 0B				jmp	short loc_1677		; (9F38)
020A:9F2D			loc_1676::
020A:9F2D  3B 06 4E89				cmp	ax,data_560		; (020A:4E89=0CFBh)
020A:9F31  73 05				jae	loc_1677		; Jump if above or =
020A:9F33  A3 4E89				mov	data_560,ax		; (020A:4E89=0CFBh)
020A:9F36  EB 00				jmp	short loc_1677		; (9F38)
020A:9F38			loc_1677::
020A:9F38  57					push	di
020A:9F39  51					push	cx
020A:9F3A  1E					push	ds
020A:9F3B  06					push	es
020A:9F3C  1F					pop	ds
020A:9F3D  26: 8B 36 0000			mov	si,word ptr es:[0]	; (020A:0000=1828h)
020A:9F42  4E					dec	si
020A:9F43  8B C6				mov	ax,si
020A:9F45  2B C7				sub	ax,di
020A:9F47  40					inc	ax
020A:9F48  26: 01 0E 0000			add	word ptr es:[0],cx	; (020A:0000=1828h)
020A:9F4D  73 03				jnc	loc_1678		; Jump if carry=0
020A:9F4F  E9 E3CC				jmp	loc_1320		; (831E)
020A:9F52			loc_1678::
020A:9F52  8B FE				mov	di,si
020A:9F54  03 F9				add	di,cx
020A:9F56  8B C8				mov	cx,ax
020A:9F58  FD					std				; Set direction flag
020A:9F59  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:9F5B  1F					pop	ds
020A:9F5C  59					pop	cx
020A:9F5D  5F					pop	di
020A:9F5E  BE 532E				mov	si,532Eh
020A:9F61  8B 04				mov	ax,[si]
020A:9F63  26: A3 0002				mov	word ptr es:[2],ax	; (020A:0002=10h)
020A:9F67  8B 44 02				mov	ax,[si+2]
020A:9F6A  26: A3 0004				mov	word ptr es:[4],ax	; (020A:0004=808h)
020A:9F6E  26: 89 3E 0006			mov	word ptr es:[6],di	; (020A:0006=3)
020A:9F73  FC					cld				; Clear direction
020A:9F74  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:9F76  B9 0050				mov	cx,50h
020A:9F79  33 C0				xor	ax,ax			; Zero register
020A:9F7B  BF 532E				mov	di,532Eh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 348

020A:9F7E  06					push	es
020A:9F7F  1E					push	ds
020A:9F80  07					pop	es
020A:9F81  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:9F83  07					pop	es
020A:9F84  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:9F89  9C					pushf				; Push flags
020A:9F8A  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:9F8F  5A					pop	dx
020A:9F90  8E DA				mov	ds,dx
020A:9F92  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:9F97  5A					pop	dx
020A:9F98  75 0A				jnz	loc_1679		; Jump if not zero
020A:9F9A  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:9F9F  74 03				je	loc_1679		; Jump if equal
020A:9FA1  E8 ED48				call	sub_132			; (8CEC)
020A:9FA4			loc_1679::
020A:9FA4  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:9FA9  9D					popf				; Pop flags
020A:9FAA  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:9FAF  5D					pop	bp
020A:9FB0  5F					pop	di
020A:9FB1  5E					pop	si
020A:9FB2  5A					pop	dx
020A:9FB3  59					pop	cx
020A:9FB4  5B					pop	bx
020A:9FB5  58					pop	ax
020A:9FB6  C3					retn
				sub_139		endp

020A:9FB7  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_140		proc	near
020A:9FB8  E8 C955				call	sub_81			; (6910)
020A:9FBB  50					push	ax
020A:9FBC  53					push	bx
020A:9FBD  51					push	cx
020A:9FBE  52					push	dx
020A:9FBF  56					push	si
020A:9FC0  57					push	di
020A:9FC1  55					push	bp
020A:9FC2  26: 8A 44 05				mov	al,es:[si+5]
020A:9FC6  24 0C				and	al,0Ch
020A:9FC8  3C 08				cmp	al,8
020A:9FCA  74 26				je	loc_1682		; Jump if equal
020A:9FCC  3C 04				cmp	al,4
020A:9FCE  74 0A				je	loc_1680		; Jump if equal
020A:9FD0  3C 00				cmp	al,0
020A:9FD2  74 12				je	loc_1681		; Jump if equal
020A:9FD4  BB 0002				mov	bx,2
020A:9FD7  E9 E42E				jmp	loc_1330		; (8408)
020A:9FDA			loc_1680::
020A:9FDA  83 2E 3084 01			sub	data_350,1		; (020A:3084=4F43h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 349

020A:9FDF  83 1E 3086 00			sbb	data_351,0		; (020A:3086=4Dh)
020A:9FE4  EB 18				jmp	short loc_1683		; (9FFE)
020A:9FE6			loc_1681::
020A:9FE6  83 2E 3088 01			sub	data_352,1		; (020A:3088=4C41h)
020A:9FEB  83 1E 308A 00			sbb	data_353,0		; (020A:308A=554Ch)
020A:9FF0  EB 0C				jmp	short loc_1683		; (9FFE)
020A:9FF2			loc_1682::
020A:9FF2  83 2E 308C 01			sub	data_354,1		; (020A:308C=4553h)
020A:9FF7  83 1E 308E 00			sbb	data_355,0		; (020A:308E=5352h)
020A:9FFC  EB 00				jmp	short loc_1683		; (9FFE)
020A:9FFE			loc_1683::
020A:9FFE  BB 40C2				mov	bx,40C2h
020A:A001  26: 8A 44 05				mov	al,es:[si+5]
020A:A005  25 000F				and	ax,0Fh
020A:A008  0AD7			data_660	dw	0AD7h
020A:A00A  C0					db	0C0h
020A:A00B  75 04				jnz	loc_1684		; Jump if not zero
020A:A00D  26: 8A 44 06				mov	al,es:[si+6]
020A:A011			loc_1684::
020A:A011  8B C8				mov	cx,ax
020A:A013  26: 8B 04				mov	ax,es:[si]
020A:A016  3B 06 344A				cmp	ax,data_390		; (020A:344A=0)
020A:A01A  75 71				jne	loc_1691		; Jump if not equal
020A:A01C  26: 8B 44 02				mov	ax,es:[si+2]
020A:A020  26: 8A 5C 05				mov	bl,es:[si+5]
020A:A024  80 E3 0C				and	bl,0Ch
020A:A027  80 FB 08				cmp	bl,8
020A:A02A  74 0C				je	loc_1685		; Jump if equal
020A:A02C  80 FB 04				cmp	bl,4
020A:A02F  74 24				je	loc_1687		; Jump if equal
020A:A031  80 FB 00				cmp	bl,0
020A:A034  74 3C				je	loc_1689		; Jump if equal
020A:A036  EB 55				jmp	short loc_1691		; (A08D)
020A:A038			loc_1685::
020A:A038  3B 06 4E8B				cmp	ax,data_561		; (020A:4E8B=0D77h)
020A:A03C  75			data_661	db	75h
020A:A03D  4F					dec	di
020A:A03E  8B D9				mov	bx,cx
020A:A040  26: 8B 00				mov	ax,es:[bx+si]
020A:A043  3B 06 344A				cmp	ax,data_390		; (020A:344A=0)
020A:A047  26: 8B 40 02				mov	ax,es:[bx+si+2]
020A:A04B  75 03				jnz	loc_1686		; Jump if not zero
020A:A04D  B8 FFFF				mov	ax,0FFFFh
020A:A050			loc_1686::
020A:A050  A3 4E8B				mov	data_561,ax		; (020A:4E8B=0D77h)
020A:A053  EB 38				jmp	short loc_1691		; (A08D)
020A:A055			loc_1687::
020A:A055  3B 06 4E87				cmp	ax,data_559		; (020A:4E87=8358h)
020A:A059  75 32				jne	loc_1691		; Jump if not equal
020A:A05B  8B D9				mov	bx,cx
020A:A05D  26: 8B 00				mov	ax,es:[bx+si]
020A:A060  3B 06 344A				cmp	ax,data_390		; (020A:344A=0)
020A:A064  26: 8B 40 02				mov	ax,es:[bx+si+2]
020A:A068  75 03				jnz	loc_1688		; Jump if not zero
020A:A06A  B8 FFFF				mov	ax,0FFFFh
020A:A06D			loc_1688::
020A:A06D  A3 4E87				mov	data_559,ax		; (020A:4E87=8358h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 350

020A:A070  EB 1B				jmp	short loc_1691		; (A08D)
020A:A072			loc_1689::
020A:A072  3B 06 4E89				cmp	ax,data_560		; (020A:4E89=0CFBh)
020A:A076  75 15				jne	loc_1691		; Jump if not equal
020A:A078  8B D9				mov	bx,cx
020A:A07A  26: 8B 00				mov	ax,es:[bx+si]
020A:A07D  3B 06 344A				cmp	ax,data_390		; (020A:344A=0)
020A:A081  26: 8B 40 02				mov	ax,es:[bx+si+2]
020A:A085  75 03				jnz	loc_1690		; Jump if not zero
020A:A087  B8 FFFF				mov	ax,0FFFFh
020A:A08A			loc_1690::
020A:A08A  A3 4E89				mov	data_560,ax		; (020A:4E89=0CFBh)
020A:A08D			loc_1691::
020A:A08D  8B FE				mov	di,si
020A:A08F  03 F1				add	si,cx
020A:A091  26: 8B 04				mov	ax,es:[si]
020A:A094  26: A3 0002				mov	word ptr es:[2],ax	; (020A:0002=10h)
020A:A098  26: 8B 44 02				mov	ax,es:[si+2]
020A:A09C  26: A3 0004				mov	word ptr es:[4],ax	; (020A:0004=808h)
020A:A0A0  26: 89 3E 0006			mov	word ptr es:[6],di	; (020A:0006=3)
020A:A0A5  8B C1				mov	ax,cx
020A:A0A7  26: 8B 0E 0000			mov	cx,word ptr es:[0]	; (020A:0000=1828h)
020A:A0AC  2B CE				sub	cx,si
020A:A0AE  1E					push	ds
020A:A0AF  06					push	es
020A:A0B0  1F					pop	ds
020A:A0B1  FC					cld				; Clear direction
020A:A0B2  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A0B4  1F					pop	ds
020A:A0B5  26: 29 06 0000			sub	word ptr es:[0],ax	; (020A:0000=1828h)
020A:A0BA  73 06				jnc	loc_1692		; Jump if carry=0
020A:A0BC  BB 0002				mov	bx,2
020A:A0BF  E9 E346				jmp	loc_1330		; (8408)
020A:A0C2			loc_1692::
020A:A0C2  5D					pop	bp
020A:A0C3  5F					pop	di
020A:A0C4  5E					pop	si
020A:A0C5  5A					pop	dx
020A:A0C6  59					pop	cx
020A:A0C7  5B					pop	bx
020A:A0C8  58					pop	ax
020A:A0C9  C3					retn
				sub_140		endp

020A:A0CA  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_141		proc	near
020A:A0CC  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:A0D1  06					push	es
020A:A0D2  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:A0D7  1E					push	ds
020A:A0D8  56					push	si
020A:A0D9  57					push	di
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 351

020A:A0DA  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=0)
020A:A0E0  2475			data_664	dw	2475h
020A:A0E2  E8 E890				call	sub_122			; (8975)
020A:A0E5  A9 0002				test	ax,2
020A:A0E8  74 05				jz	loc_1693		; Jump if zero
020A:A0EA  E8 EC33				call	sub_133			; (8D20)
020A:A0ED  EB 1F				jmp	short loc_1696		; (A10E)
020A:A0EF			loc_1693::
020A:A0EF  A9 0001				test	ax,1
020A:A0F2  74 05				jz	loc_1694		; Jump if zero
020A:A0F4  E8 EC9D				call	sub_134			; (8D94)
020A:A0F7  EB 15				jmp	short loc_1696		; (A10E)
020A:A0F9			loc_1694::
020A:A0F9  A9 0004				test	ax,4
020A:A0FC  74 05				jz	loc_1695		; Jump if zero
020A:A0FE  E8 ED07				call	sub_135			; (8E08)
020A:A101  EB 0B				jmp	short loc_1696		; (A10E)
020A:A103			loc_1695::
020A:A103  E9 00BD				jmp	loc_1702		; (A1C3)
							                        ;* No entry point to code
020A:A106  E8 EBE3				call	sub_132			; (8CEC)
020A:A109  2E: 8E 06 38A1			mov	es,cs:data_463		; (020A:38A1=5C8Ah)
020A:A10E			loc_1696::
020A:A10E  BF 0008				mov	di,8
020A:A111  26: C7 05 FFFF			mov	word ptr es:[di],0FFFFh
020A:A116  26: C7 45 02 FFFF			mov	word ptr es:[di+2],0FFFFh
020A:A11C  26: C6 45 04 00			mov	byte ptr es:[di+4],0
020A:A121  26: C6 45 06 00			mov	byte ptr es:[di+6],0
020A:A126  A9 0002				test	ax,2
020A:A129  75 0D				jnz	loc_1697		; Jump if not zero
020A:A12B  A9 0001				test	ax,1
020A:A12E  75 2A				jnz	loc_1699		; Jump if not zero
020A:A130  A9 0004				test	ax,4
020A:A133  75 55				jnz	loc_1701		; Jump if not zero
020A:A135  E9 008B				jmp	loc_1702		; (A1C3)
020A:A138			loc_1697::
020A:A138  26: C6 45 05 04			mov	byte ptr es:[di+5],4
020A:A13D  26: C7 06 0000 0012			mov	word ptr es:[0],12h	; (5C8A:0000=0FFFFh)
020A:A144  BE 78CB				mov	si,78CBh
020A:A147  57					push	di
020A:A148  BF FFF0				mov	di,0FFF0h
020A:A14B  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020A:A14F  75 06				jne	loc_1698		; Jump if not equal
020A:A151  B9 000C				mov	cx,0Ch
020A:A154  FC					cld				; Clear direction
020A:A155  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A157			loc_1698::
020A:A157  5F					pop	di
020A:A158  EB 69				jmp	short loc_1702		; (A1C3)
020A:A15A			loc_1699::
020A:A15A  26: C6 45 05 00			mov	byte ptr es:[di+5],0
020A:A15F  26: C7 06 0000 000F			mov	word ptr es:[0],0Fh	; (5C8A:0000=0FFFFh)
020A:A166  1E					push	ds
020A:A167  E8 E80B				call	sub_122			; (8975)
020A:A16A  8B 36 2B42				mov	si,data_294		; (020A:2B42=0A4A5h)
020A:A16E  1F					pop	ds
020A:A16F  26: 01 36 0000			add	word ptr es:[0],si	; (5C8A:0000=0FFFFh)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 352

020A:A174  BE 78EB				mov	si,78EBh
020A:A177  57					push	di
020A:A178  BF FFF0				mov	di,0FFF0h
020A:A17B  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020A:A17F  75 06				jne	loc_1700		; Jump if not equal
020A:A181  B9 000C				mov	cx,0Ch
020A:A184  FC					cld				; Clear direction
020A:A185  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A187			loc_1700::
020A:A187  5F					pop	di
020A:A188  EB 39				jmp	short loc_1702		; (A1C3)
020A:A18A			loc_1701::
020A:A18A  26: C6 45 05 08			mov	byte ptr es:[di+5],8
020A:A18F  51					push	cx
020A:A190  B9 0029				mov	cx,29h
020A:A193  33 C0				xor	ax,ax			; Zero register
020A:A195  BF 0011				mov	di,11h
020A:A198  FC					cld				; Clear direction
020A:A199  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:A19B  59					pop	cx
020A:A19C  26: C7 06 0000 0043			mov	word ptr es:[0],43h	; (5C8A:0000=0FFFFh)
020A:A1A3  1E					push	ds
020A:A1A4  E8 E7CE				call	sub_122			; (8975)
020A:A1A7  8B 36 2B42				mov	si,data_294		; (020A:2B42=0A4A5h)
020A:A1AB  1F					pop	ds
020A:A1AC  26: 01 36 0000			add	word ptr es:[0],si	; (5C8A:0000=0FFFFh)
020A:A1B1  BE 78DB				mov	si,78DBh
020A:A1B4  BF FFF0				mov	di,0FFF0h
020A:A1B7  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020A:A1BB  75 06				jne	loc_1702		; Jump if not equal
020A:A1BD  B9 000C				mov	cx,0Ch
020A:A1C0  FC					cld				; Clear direction
020A:A1C1  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A1C3			loc_1702::
020A:A1C3  26: C7 06 0002 FFFF			mov	word ptr es:[2],0FFFFh	; (5C8A:0002=0FFFFh)
020A:A1CA  26: C7 06 0004 FFFF			mov	word ptr es:[4],0FFFFh	; (5C8A:0004=0FFFFh)
020A:A1D1  26: C7 06 0006 0008			mov	word ptr es:[6],8	; (5C8A:0006=0FFFFh)
020A:A1D8  5F					pop	di
020A:A1D9  5E					pop	si
020A:A1DA  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A1DF  9C					pushf				; Push flags
020A:A1E0  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:A1E5  5A					pop	dx
020A:A1E6  8E DA				mov	ds,dx
020A:A1E8  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:A1ED  5A					pop	dx
020A:A1EE  75 0A				jnz	loc_1703		; Jump if not zero
020A:A1F0  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:A1F5  74 03				je	loc_1703		; Jump if equal
020A:A1F7  E8 EAF2				call	sub_132			; (8CEC)
020A:A1FA			loc_1703::
020A:A1FA  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:A1FF  9D					popf				; Pop flags
020A:A200  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A205  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A20A  9C					pushf				; Push flags
020A:A20B  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 353

020A:A210  5A					pop	dx
020A:A211  8E C2				mov	es,dx
020A:A213  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:A218  5A					pop	dx
020A:A219  75 0A				jnz	loc_1704		; Jump if not zero
020A:A21B  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:A220  74			data_667	db	74h
020A:A221  03 E8				add	bp,ax
020A:A223  C7					db	0C7h
020A:A224  EA 9636:FF2E		;*		jmp	far ptr loc_1998	;*(9636:FF2E)
020A:A224  EA					db	0EAh
020A:A225  FF2E 9636				dw	0FF2Eh, 9636h
020A:A229  00 9D 8B2E				add	data_622[di],bl		; (020A:8B2E=75h)
020A:A22D  16			data_668	db	16h
020A:A22E  92					xchg	dx,ax
020A:A22F  00 C3				add	bl,al
020A:A231  000F[00]				db	15 dup (0)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_142::
020A:A240  53					push	bx
020A:A241  52					push	dx
020A:A242  56					push	si
020A:A243  57					push	di
020A:A244  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:A249  06					push	es
020A:A24A  C6 06 4E0A 00			mov	data_541,0		; (020A:4E0A=8Bh)
020A:A24F  F6 C7 20				test	bh,20h			; ' '
020A:A252  74 3C				jz	loc_1707		; Jump if zero
020A:A254  F6 06 35EE 02			test	data_442,2		; (020A:35EE=75h)
020A:A259  75 35				jnz	loc_1707		; Jump if not zero
020A:A25B  0A DB				or	bl,bl			; Zero ?
020A:A25D  74 0A				jz	loc_1705		; Jump if zero
020A:A25F  8A CB				mov	cl,bl
020A:A261  80 E1 C7				and	cl,0C7h
020A:A264  80			data_670	db	80h
020A:A265  F9					stc				; Set carry flag
020A:A266  06					push	es
020A:A267  75 27				jnz	loc_1707		; Jump if not zero
020A:A269			loc_1705::
020A:A269  3D FFFD				cmp	ax,0FFFDh
020A:A26C  72 07				jb	loc_1706		; Jump if below
020A:A26E  C6 06 362E 00			mov	byte ptr ds:[362Eh],0	; (020A:362E=6)
020A:A273  EB 1B				jmp	short loc_1707		; (A290)
020A:A275			loc_1706::
020A:A275  F7 06 4E22 0008			test	data_553,8		; (020A:4E22=4788h)
020A:A27B  75 13				jnz	loc_1707		; Jump if not zero
020A:A27D  80 3E 4E16 01			cmp	byte ptr ds:[4E16h],1	; (020A:4E16=46h)
020A:A282  75 0C				jne	loc_1707		; Jump if not equal
020A:A284  80 3E 362E 0F			cmp	byte ptr ds:[362Eh],0Fh	; (020A:362E=6)
020A:A289  77 05				ja	loc_1707		; Jump if above
020A:A28B  80 0E 4E16 80			or	byte ptr ds:[4E16h],80h	; (020A:4E16=46h)
020A:A290			loc_1707::
020A:A290  8A 0E 362B				mov	cl,byte ptr ds:[362Bh]	; (020A:362B=25h)
020A:A294  C6 06 3633 00			mov	data_461,0		; (020A:3633=8Ah)
020A:A299  9A 168F:4104		;*		call	far ptr sub_188		;*(168F:4104)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 354

020A:A299  9A					db	9Ah
020A:A29A  4104 168F				dw	4104h, 168Fh
020A:A29E  73 14				jnc	loc_1708		; Jump if carry=0
020A:A2A0  8B 16 3620				mov	dx,data_458		; (020A:3620=0A57h)
020A:A2A4  89 16 40E9				mov	word ptr ds:[40E9h],dx	; (020A:40E9=4000h)
020A:A2A8  F6 06 35F0 08			test	data_443,8		; (020A:35F0=8Bh)
020A:A2AD  75 05				jnz	loc_1708		; Jump if not zero
020A:A2AF  C6 06 3633 01			mov	data_461,1		; (020A:3633=8Ah)
020A:A2B4			loc_1708::
020A:A2B4  80 F9 90				cmp	cl,90h
020A:A2B7  75 19				jne	loc_1710		; Jump if not equal
020A:A2B9  8B 16 40E9				mov	dx,word ptr ds:[40E9h]	; (020A:40E9=4000h)
020A:A2BD  3B 16 361A				cmp	dx,data_455		; (020A:361A=0F2EBh)
020A:A2C1  75 0D				jne	loc_1709		; Jump if not equal
020A:A2C3  9A 168F:3B60		;*		call	far ptr sub_184		;*(168F:3B60)
020A:A2C3  9A					db	9Ah
020A:A2C4  3B60 168F				dw	3B60h, 168Fh
020A:A2C8  89 16 361A				mov	data_455,dx		; (020A:361A=0F2EBh)
020A:A2CC  89 16 40E9				mov	word ptr ds:[40E9h],dx	; (020A:40E9=4000h)
020A:A2D0			loc_1709::
020A:A2D0  EB 68				jmp	short loc_1717		; (A33A)
020A:A2D2			loc_1710::
020A:A2D2  80 F9 26				cmp	cl,26h			; '&'
020A:A2D5  75 0F				jne	loc_1711		; Jump if not equal
020A:A2D7  8B 16 3618				mov	dx,data_454		; (020A:3618=3D03h)
020A:A2DB  9A 168F:3B60		;*		call	far ptr sub_184		;*(168F:3B60)
020A:A2DB  9A					db	9Ah
020A:A2DC  3B60 168F				dw	3B60h, 168Fh
020A:A2E0  89 16 3618				mov	data_454,dx		; (020A:3618=3D03h)
020A:A2E4  EB 50				jmp	short loc_1716		; (A336)
020A:A2E6			loc_1711::
020A:A2E6  80 F9 2E				cmp	cl,2Eh			; '.'
020A:A2E9  75 06				jne	loc_1712		; Jump if not equal
020A:A2EB  8B 16 3052				mov	dx,data_341		; (020A:3052=3506h)
020A:A2EF  EB 45				jmp	short loc_1716		; (A336)
020A:A2F1			loc_1712::
020A:A2F1  80 F9 36				cmp	cl,36h			; '6'
020A:A2F4  75 06				jne	loc_1713		; Jump if not equal
020A:A2F6  8B 16 3620				mov	dx,data_458		; (020A:3620=0A57h)
020A:A2FA  EB 3A				jmp	short loc_1716		; (A336)
020A:A2FC			loc_1713::
020A:A2FC  80 F9 64				cmp	cl,64h			; 'd'
020A:A2FF  75 0F				jne	loc_1714		; Jump if not equal
020A:A301  8B 16 361C				mov	dx,data_456		; (020A:361C=458Bh)
020A:A305  9A 168F:3B60		;*		call	far ptr sub_184		;*(168F:3B60)
020A:A305  9A					db	9Ah
020A:A306  3B60 168F				dw	3B60h, 168Fh
020A:A30A  89 16 361C				mov	data_456,dx		; (020A:361C=458Bh)
020A:A30E  EB 26				jmp	short loc_1716		; (A336)
020A:A310			loc_1714::
020A:A310  80 F9 65				cmp	cl,65h			; 'e'
020A:A313  75 0F				jne	loc_1715		; Jump if not equal
020A:A315  8B 16 361E				mov	dx,data_457		; (020A:361E=0E805h)
020A:A319  9A 168F:3B60		;*		call	far ptr sub_184		;*(168F:3B60)
020A:A319  9A					db	9Ah
020A:A31A  3B60 168F				dw	3B60h, 168Fh
020A:A31E  89 16 361E				mov	data_457,dx		; (020A:361E=0E805h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 355

020A:A322  EB 12				jmp	short loc_1716		; (A336)
020A:A324			loc_1715::
020A:A324  80 F9 3E				cmp	cl,3Eh			; '>'
020A:A327  75 11				jne	loc_1717		; Jump if not equal
020A:A329  8B 16 361A				mov	dx,data_455		; (020A:361A=0F2EBh)
020A:A32D  9A 168F:3B60		;*		call	far ptr sub_184		;*(168F:3B60)
020A:A32D  9A					db	9Ah
020A:A32E  3B60 168F				dw	3B60h, 168Fh
020A:A332  89 16 361A				mov	data_455,dx		; (020A:361A=0F2EBh)
020A:A336			loc_1716::
020A:A336  89 16 40E9				mov	word ptr ds:[40E9h],dx	; (020A:40E9=4000h)
020A:A33A			loc_1717::
020A:A33A  83 3E 3450 FF			cmp	word ptr data_393,0FFFFh	; (020A:3450=2028h)
020A:A33F  74 19				je	loc_1720		; Jump if equal
020A:A341  8B 16 3450				mov	dx,word ptr data_393	; (020A:3450=2028h)
020A:A345  80 3E 327F 08			cmp	byte ptr data_380,8	; (020A:327F='uineIntel')
020A:A34A  75 06				jne	loc_1718		; Jump if not equal
020A:A34C  03 16 3050				add	dx,data_340		; (020A:3050=0C54Dh)
020A:A350  EB 04				jmp	short loc_1719		; (A356)
020A:A352			loc_1718::
020A:A352  03 16 40E9				add	dx,word ptr ds:[40E9h]	; (020A:40E9=4000h)
020A:A356			loc_1719::
020A:A356  89 16 40E9				mov	word ptr ds:[40E9h],dx	; (020A:40E9=4000h)
020A:A35A			loc_1720::
020A:A35A  A3 40F7				mov	data_490,ax		; (020A:40F7=3B4h)
020A:A35D  0B C0				or	ax,ax			; Zero ?
020A:A35F  75 3B				jnz	loc_1723		; Jump if not zero
020A:A361  8A D3				mov	dl,bl
020A:A363  80 E2 C7				and	dl,0C7h
020A:A366  80 FA 46				cmp	dl,46h			; 'F'
020A:A369  75 31				jne	loc_1723		; Jump if not equal
020A:A36B  C6 06 306F 02			mov	byte ptr data_349,2	; (020A:306F='OWS\SYSTEM32\COM')
020A:A370  F6 06 3458 80			test	data_397,80h		; (020A:3458=2Ch)
020A:A375  75 0A				jnz	loc_1721		; Jump if not zero
020A:A377  F6 C7 C0				test	bh,0C0h
020A:A37A  74 05				jz	loc_1721		; Jump if zero
020A:A37C  9A 168F:0924		;*		call	far ptr sub_162		;*(168F:0924)
020A:A37C  9A					db	9Ah
020A:A37D  0924 168F				dw	924h, 168Fh
020A:A381			loc_1721::
020A:A381  80 3E 303E 01			cmp	data_332,1		; (020A:303E=8Fh)
020A:A386  75 0C				jne	loc_1722		; Jump if not equal
020A:A388  F6 06 35F0 08			test	data_443,8		; (020A:35F0=8Bh)
020A:A38D  74 05				jz	loc_1722		; Jump if zero
020A:A38F  9A 168F:4188		;*		call	far ptr sub_190		;*(168F:4188)
020A:A38F  9A					db	9Ah
020A:A390  4188 168F				dw	4188h, 168Fh
020A:A394			loc_1722::
020A:A394  80 26 4E10 FB			and	data_545,0FBh		; (020A:4E10=12h)
020A:A399  E9 0521				jmp	loc_1789		; (A8BD)
020A:A39C			loc_1723::
020A:A39C  C6 06 4E07 00			mov	byte ptr ds:[4E07h],0	; (020A:4E07=0)
020A:A3A1  F6 C3 38				test	bl,38h			; '8'
020A:A3A4  74 2B				jz	loc_1726		; Jump if zero
020A:A3A6  F6 06 35EE 02			test	data_442,2		; (020A:35EE=75h)
020A:A3AB  75 24				jnz	loc_1726		; Jump if not zero
020A:A3AD  8A D3				mov	dl,bl
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 356

020A:A3AF  80 E2 C7				and	dl,0C7h
020A:A3B2  80 FA 06				cmp	dl,6
020A:A3B5  74 1A				je	loc_1726		; Jump if equal
020A:A3B7  80 3E 14FA 00			cmp	data_207,0		; (020A:14FA=0)
020A:A3BC  75 07				jne	loc_1724		; Jump if not equal
020A:A3BE  80 3E 3633 01			cmp	data_461,1		; (020A:3633=8Ah)
020A:A3C3  74 07				je	loc_1725		; Jump if equal
020A:A3C5			loc_1724::
020A:A3C5  F6 06 4E0F 02			test	data_544,2		; (020A:4E0F=9)
020A:A3CA  74 05				jz	loc_1726		; Jump if zero
020A:A3CC			loc_1725::
020A:A3CC  C6 06 4E07 01			mov	byte ptr ds:[4E07h],1	; (020A:4E07=0)
020A:A3D1			loc_1726::
020A:A3D1  53					push	bx
020A:A3D2  8B 1E 40E9				mov	bx,word ptr ds:[40E9h]	; (020A:40E9=4000h)
020A:A3D6  80 3E 2B3C 01			cmp	data_290,1		; (020A:2B3C=0ADh)
020A:A3DB  74 08				je	loc_1727		; Jump if equal
020A:A3DD  F7 06 4E22 0008			test	data_553,8		; (020A:4E22=4788h)
020A:A3E3  74 03				jz	loc_1728		; Jump if zero
020A:A3E5			loc_1727::
020A:A3E5  E9 0088				jmp	loc_1733		; (A470)
020A:A3E8			loc_1728::
020A:A3E8  50					push	ax
020A:A3E9  A1 3037				mov	ax,data_328		; (020A:3037=0Eh)
020A:A3EC  3D 0000				cmp	ax,0
020A:A3EF  75 03				jne	loc_1729		; Jump if not equal
020A:A3F1  E8 E5B7				call	sub_130			; (89AB)
020A:A3F4			loc_1729::
020A:A3F4  3B D8				cmp	bx,ax
020A:A3F6  72 73				jb	loc_1732		; Jump if below
020A:A3F8  8C C8				mov	ax,cs
020A:A3FA  03 06 2B3D				add	ax,data_291		; (020A:2B3D=0EBADh)
020A:A3FE  8B 16 40F7				mov	dx,data_490		; (020A:40F7=3B4h)
020A:A402  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:A404  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:A406  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:A408  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:A40A  03 D3				add	dx,bx
020A:A40C  72 5D				jc	loc_1732		; Jump if carry Set
020A:A40E  3B D0				cmp	dx,ax
020A:A410  77 59				ja	loc_1732		; Jump if above
020A:A412  F6 06 4E16 80			test	byte ptr ds:[4E16h],80h	; (020A:4E16=46h)
020A:A417  74 52				jz	loc_1732		; Jump if zero
020A:A419  5E					pop	si
020A:A41A  56					push	si
020A:A41B  8E C3				mov	es,bx
020A:A41D  B1 19				mov	cl,19h
020A:A41F  26: 83		data_676	db	83h
020A:A421  3C 00				cmp	al,0
020A:A423  74 08				je	loc_1730		; Jump if equal
020A:A425  FE C1				inc	cl
020A:A427  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:A42B  75 3E				jne	loc_1732		; Jump if not equal
020A:A42D			loc_1730::
020A:A42D  C6 06 362E 01			mov	byte ptr ds:[362Eh],1	; (020A:362E=6)
020A:A432  57					push	di
020A:A433  51					push	cx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 357

020A:A434  8C C0				mov	ax,es
020A:A436  8B DE				mov	bx,si
020A:A438  BA 0001				mov	dx,1
020A:A43B  C6 06 4D4B 01			mov	data_535,1		; (020A:4D4B=6)
020A:A440  E8 D379				call	sub_111			; (77BC)
020A:A443  C6 06 4D4B 00			mov	data_535,0		; (020A:4D4B=6)
020A:A448  59					pop	cx
020A:A449  72 1F				jc	loc_1731		; Jump if carry Set
020A:A44B  BF 532E				mov	di,532Eh
020A:A44E  89 05				mov	[di],ax
020A:A450  89 5D 02				mov	[di+2],bx
020A:A453  C6 45 04 5F				mov	byte ptr [di+4],5Fh	; '_'
020A:A457  C6 45 05 02				mov	byte ptr [di+5],2
020A:A45B  C6 45 06 00				mov	byte ptr [di+6],0
020A:A45F  88 4D 09				mov	[di+9],cl
020A:A462  C7 45 07 203F			mov	word ptr [di+7],203Fh
020A:A467  E8 F966				call	sub_139			; (9DD0)
020A:A46A			loc_1731::
020A:A46A  5F					pop	di
020A:A46B			loc_1732::
020A:A46B  58					pop	ax
020A:A46C  8B 1E 40E9				mov	bx,word ptr ds:[40E9h]	; (020A:40E9=4000h)
020A:A470			loc_1733::
020A:A470  C6 06 4E16 00			mov	byte ptr ds:[4E16h],0	; (020A:4E16=46h)
020A:A475  F6 06 56C2 02			test	data_588,2		; (020A:56C2=0C6h)
020A:A47A  74 34				jz	loc_1735		; Jump if zero
020A:A47C  5B					pop	bx
020A:A47D  80 26 56C2 FD			and	data_588,0FDh		; (020A:56C2=0C6h)
020A:A482  C7 06 30C9 0000			mov	data_369,0		; (020A:30C9=4C50h)
020A:A488  C6 06 4E07 00			mov	byte ptr ds:[4E07h],0	; (020A:4E07=0)
020A:A48D  80			data_677	db	80h
020A:A48E  3E					db	3Eh
020A:A48F  3C 2B				cmp	al,2Bh			; '+'
020A:A491  7501 9A19		data_678	dw	7501h, 9A19h
020A:A495  24 09				and	al,9
020A:A497  8F					db	8Fh
020A:A498  16					push	ss
020A:A499  F6 06 35F0 08			test	data_443,8		; (020A:35F0=8Bh)
020A:A49E  74 05				jz	loc_1734		; Jump if zero
020A:A4A0  9A 168F:4188		;*		call	far ptr sub_190		;*(168F:4188)
020A:A4A0  9A					db	9Ah
020A:A4A1  4188 168F				dw	4188h, 168Fh
020A:A4A5			loc_1734::
020A:A4A5  C3BE			data_679	dw	0C3BEh			; Data table (indexed access)
020A:A4A7  56					push	si
020A:A4A8  9A 168F:4160		;*		call	far ptr sub_189		;*(168F:4160)
020A:A4A8  9A					db	9Ah
020A:A4A9  4160 168F				dw	4160h, 168Fh
020A:A4AD  E9			data_680	db	0E9h
020A:A4AE  040D			data_681	dw	40Dh
020A:A4B0			loc_1735::
020A:A4B0  BA 0002				mov	dx,2
020A:A4B3  E8 D306				call	sub_111			; (77BC)
020A:A4B6  9C					pushf				; Push flags
020A:A4B7  80 3E 4E07 00			cmp	byte ptr ds:[4E07h],0	; (020A:4E07=0)
020A:A4BC  74 3B				je	loc_1739		; Jump if equal
020A:A4BE  9D					popf				; Pop flags
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 358

020A:A4BF  9C					pushf				; Push flags
020A:A4C0  73 0E				jnc	loc_1736		; Jump if carry=0
020A:A4C2  26: F6 45 07 20			test	byte ptr es:[di+7],20h	; ' '
020A:A4C7  74 07				jz	loc_1736		; Jump if zero
020A:A4C9  C6 06 4E07 00			mov	byte ptr ds:[4E07h],0	; (020A:4E07=0)
020A:A4CE  EB 29				jmp	short loc_1739		; (A4F9)
020A:A4D0			loc_1736::
020A:A4D0  9D					popf				; Pop flags
020A:A4D1  5B					pop	bx
020A:A4D2  F6 06 3458 80			test	data_397,80h		; (020A:3458=2Ch)
020A:A4D7  75 05				jnz	loc_1737		; Jump if not zero
020A:A4D9  9A 168F:0924		;*		call	far ptr sub_162		;*(168F:0924)
020A:A4D9  9A					db	9Ah
020A:A4DA  0924 168F				dw	924h, 168Fh
020A:A4DE			loc_1737::
020A:A4DE  80 3E 303E 01			cmp	data_332,1		; (020A:303E=8Fh)
020A:A4E3  75 0C				jne	loc_1738		; Jump if not equal
020A:A4E5  F6 06 35F0 08			test	data_443,8		; (020A:35F0=8Bh)
020A:A4EA  74 05				jz	loc_1738		; Jump if zero
020A:A4EC  9A 168F:4188		;*		call	far ptr sub_190		;*(168F:4188)
020A:A4EC  9A					db	9Ah
020A:A4ED  4188 168F				dw	4188h, 168Fh
020A:A4F1			loc_1738::
020A:A4F1  80 26 4E10 FB			and	data_545,0FBh		; (020A:4E10=12h)
020A:A4F6  E9 03C4				jmp	loc_1789		; (A8BD)
020A:A4F9			loc_1739::
020A:A4F9  80 3E 2B37 02			cmp	data_286,2		; (020A:2B37=0EBh)
020A:A4FE  75 0D				jne	loc_1740		; Jump if not equal
020A:A500  F6 06 4E7F 04			test	data_557,4		; (020A:4E7F=0A4h)
020A:A505  74 06				jz	loc_1740		; Jump if zero
020A:A507  BA 0002				mov	dx,2
020A:A50A  E8 18A7				call	$+18AAh
020A:A50D			loc_1740::
020A:A50D  9D					popf				; Pop flags
020A:A50E  5B					pop	bx
020A:A50F  72 03				jc	loc_1741		; Jump if carry Set
020A:A511  E9 011A				jmp	loc_1757		; (A62E)
020A:A514			loc_1741::
020A:A514  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:A519  75 09				jnz	loc_1742		; Jump if not zero
020A:A51B  80 3E 3465 04			cmp	byte ptr ds:[3465h],4	; (020A:3465=79h)
020A:A520  74 07				je	loc_1743		; Jump if equal
020A:A522  EB 0A				jmp	short loc_1744		; (A52E)
020A:A524			loc_1742::
020A:A524  C6 06 4E0A 01			mov	data_541,1		; (020A:4E0A=8Bh)
020A:A529			loc_1743::
020A:A529  C6 06 306F 02			mov	byte ptr data_349,2	; (020A:306F='OWS\SYSTEM32\COM')
020A:A52E			loc_1744::
020A:A52E  80 3E 2B3C 01			cmp	data_290,1		; (020A:2B3C=0ADh)
020A:A533  75 26				jne	loc_1746		; Jump if not equal
020A:A535  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:A53A  75 1F				jnz	loc_1746		; Jump if not zero
020A:A53C  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:A541  74 15				jz	loc_1745		; Jump if zero
020A:A543  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:A548  75 11				jnz	loc_1746		; Jump if not zero
020A:A54A  80 3E 2B3B 04			cmp	data_289,4		; (020A:2B3B=0A0h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 359

020A:A54F  76 0A				jbe	loc_1746		; Jump if below or =
020A:A551  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020A:A556  75 03				jnz	loc_1746		; Jump if not zero
020A:A558			loc_1745::
020A:A558  E9 0159				jmp	loc_1764		; (A6B4)
020A:A55B			loc_1746::
020A:A55B  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:A560  75 25				jnz	loc_1748		; Jump if not zero
020A:A562  80 3E 3465 02			cmp	byte ptr ds:[3465h],2	; (020A:3465=79h)
020A:A567  72 1E				jb	loc_1748		; Jump if below
020A:A569  80 3E 3465 03			cmp	byte ptr ds:[3465h],3	; (020A:3465=79h)
020A:A56E  77 0F				ja	loc_1747		; Jump if above
020A:A570  BE 37E1				mov	si,37E1h
020A:A573  9A 168F:4160		;*		call	far ptr sub_189		;*(168F:4160)
020A:A573  9A					db	9Ah
020A:A574  4160 168F				dw	4160h, 168Fh
020A:A578  C6 06 4E11 00			mov	data_546,0		; (020A:4E11=88h)
020A:A57D  EB 08				jmp	short loc_1748		; (A587)
020A:A57F			loc_1747::
020A:A57F  BE 37E9				mov	si,37E9h
020A:A582  9A 168F:4160		;*		call	far ptr sub_189		;*(168F:4160)
020A:A582  9A					db	9Ah
020A:A583  4160 168F				dw	4160h, 168Fh
020A:A587			loc_1748::
020A:A587  26: F6 45 07 10			test	byte ptr es:[di+7],10h
020A:A58C  74 6F				jz	loc_1755		; Jump if zero
020A:A58E  26: 8A 65 04				mov	ah,es:[di+4]
020A:A592  80 E4 3F				and	ah,3Fh			; '?'
020A:A595  8A C7				mov	al,bh
020A:A597  24 F0				and	al,0F0h
020A:A599  A8 20				test	al,20h			; ' '
020A:A59B  74 4E				jz	loc_1753		; Jump if zero
020A:A59D  F6 C4 10				test	ah,10h
020A:A5A0  75 58				jnz	loc_1754		; Jump if not zero
020A:A5A2  26			data_682	db	26h
020A:A5A3  8B 4D 08				mov	cx,[di+8]
020A:A5A6  83 F9 0A				cmp	cx,0Ah
020A:A5A9  73 4F				jae	loc_1754		; Jump if above or =
020A:A5AB  3C			data_683	db	3Ch
020A:A5AC  F0			data_684	db	0F0h
020A:A5AD  75 08				jnz	loc_1749		; Jump if not zero
020A:A5AF  26: C7 45 08 0008			mov	word ptr es:[di+8],8
020A:A5B5  EB 28				jmp	short loc_1752		; (A5DF)
020A:A5B7			loc_1749::
020A:A5B7  83 F9 08				cmp	cx,8
020A:A5BA  73 3E				jae	loc_1754		; Jump if above or =
020A:A5BC  3C E0				cmp	al,0E0h
020A:A5BE  75 08				jne	loc_1750		; Jump if not equal
020A:A5C0  26: C7 45 08 0006			mov	word ptr es:[di+8],6
020A:A5C6  EB 17				jmp	short loc_1752		; (A5DF)
020A:A5C8			loc_1750::
020A:A5C8  83 F9 04				cmp	cx,4
020A:A5CB  73 2D				jae	loc_1754		; Jump if above or =
020A:A5CD  3C B0				cmp	al,0B0h
020A:A5CF  75 08				jne	loc_1751		; Jump if not equal
020A:A5D1  26: C7 45 08 0004			mov	word ptr es:[di+8],4
020A:A5D7  EB 06				jmp	short loc_1752		; (A5DF)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 360

020A:A5D9			loc_1751::
020A:A5D9  26: C7 45 08 0002			mov	word ptr es:[di+8],2
020A:A5DF			loc_1752::
020A:A5DF  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020A:A5E4  26: 80 4D 04 02			or	byte ptr es:[di+4],2
020A:A5E9  EB 0F				jmp	short loc_1754		; (A5FA)
020A:A5EB			loc_1753::
020A:A5EB  80 FC 01				cmp	ah,1
020A:A5EE  75 0A				jne	loc_1754		; Jump if not equal
020A:A5F0  3C 50				cmp	al,50h			; 'P'
020A:A5F2  75 06				jne	loc_1754		; Jump if not equal
020A:A5F4  26: C7 45 08 000A			mov	word ptr es:[di+8],0Ah
020A:A5FA			loc_1754::
020A:A5FA  E9 0140				jmp	loc_1770		; (A73D)
020A:A5FD			loc_1755::
020A:A5FD  F6 C7 20				test	bh,20h			; ' '
020A:A600  75 F8				jnz	loc_1754		; Jump if not zero
020A:A602  26: 8A 4D 04				mov	cl,es:[di+4]
020A:A606  80 E1 3F				and	cl,3Fh			; '?'
020A:A609  80 F9 21				cmp	cl,21h			; '!'
020A:A60C  75 1D				jne	loc_1756		; Jump if not equal
020A:A60E  9A 168F:55E4		;*		call	far ptr sub_197		;*(168F:55E4)
020A:A60E  9A					db	9Ah
020A:A60F  55E4 168F				dw	55E4h, 168Fh
020A:A613  72 16				jc	loc_1756		; Jump if carry Set
020A:A615  26: 83 7D 08 02			cmp	word ptr es:[di+8],2
020A:A61A  72 0F				jb	loc_1756		; Jump if below
020A:A61C  26: 83 65 08 FE			and	word ptr es:[di+8],0FFFEh
020A:A621  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020A:A626  26: 80 4D 04 22			or	byte ptr es:[di+4],22h	; '"'
020A:A62B			loc_1756::
020A:A62B  E9 010F				jmp	loc_1770		; (A73D)
020A:A62E			loc_1757::
020A:A62E  BF 532E				mov	di,532Eh
020A:A631  A1 40E9				mov	ax,word ptr ds:[40E9h]	; (020A:40E9=4000h)
020A:A634  89 05				mov	[di],ax
020A:A636  A1 40F7				mov	ax,data_490		; (020A:40F7=3B4h)
020A:A639  89 45 02				mov	[di+2],ax
020A:A63C  C6 45 04 01				mov	byte ptr [di+4],1
020A:A640  C6 45 05 04				mov	byte ptr [di+5],4
020A:A644  80 3E 15D0 01			cmp	data_211,1		; (020A:15D0=0)
020A:A649  77 04				ja	loc_1758		; Jump if above
020A:A64B  80 4D 05 01				or	byte ptr [di+5],1
020A:A64F			loc_1758::
020A:A64F  C7 45 08 0001			mov	word ptr [di+8],1
020A:A654  C7 45 06 0000			mov	word ptr [di+6],0
020A:A659  80 4D 07 10				or	byte ptr [di+7],10h
020A:A65D  F6 C7 20				test	bh,20h			; ' '
020A:A660  74 3D				jz	loc_1763		; Jump if zero
020A:A662  C7 45 08 0002			mov	word ptr [di+8],2
020A:A667  C6 45 04 02				mov	byte ptr [di+4],2
020A:A66B  F6 06 35EE 01			test	data_442,1		; (020A:35EE=75h)
020A:A670  75 24				jnz	loc_1761		; Jump if not zero
020A:A672  F6 C7 10				test	bh,10h
020A:A675  74 28				jz	loc_1763		; Jump if zero
020A:A677  06					push	es
020A:A678  8E 06 40F5				mov	es,word ptr ds:[40F5h]	; (020A:40F5=97h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 361

020A:A67C  8B 36 40F7				mov	si,data_490		; (020A:40F7=3B4h)
020A:A680  83 FE FC				cmp	si,0FFFCh
020A:A683  77 0D				ja	loc_1759		; Jump if above
020A:A685  26: 83 3C 00				cmp	word ptr es:[si],0
020A:A689  75 07				jne	loc_1759		; Jump if not equal
020A:A68B  26: 83 7C 02 00			cmp	word ptr es:[si+2],0
020A:A690  74 03				je	loc_1760		; Jump if equal
020A:A692			loc_1759::
020A:A692  07					pop	es
020A:A693  EB 05				jmp	short loc_1762		; (A69A)
020A:A695			loc_1760::
020A:A695  07					pop	es
020A:A696			loc_1761::
020A:A696  C6 45 04 04				mov	byte ptr [di+4],4
020A:A69A			loc_1762::
020A:A69A  C7 45 08 0004			mov	word ptr [di+8],4
020A:A69F			loc_1763::
020A:A69F  E8 F72E				call	sub_139			; (9DD0)
020A:A6A2  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (020A:0006=3)
020A:A6A7  E8 C996				call	sub_95			; (7040)
020A:A6AA  80 3E 2B3C 01			cmp	data_290,1		; (020A:2B3C=0ADh)
020A:A6AF  74 03				je	loc_1764		; Jump if equal
020A:A6B1  E9 01C2				jmp	loc_1787		; (A876)
020A:A6B4			loc_1764::
020A:A6B4  C6 06 4E0A 01			mov	data_541,1		; (020A:4E0A=8Bh)
020A:A6B9  C6 06 306F 02			mov	byte ptr data_349,2	; (020A:306F='OWS\SYSTEM32\COM')
020A:A6BE  80 0E 4E10 10			or	data_545,10h		; (020A:4E10=12h)
020A:A6C3  80 26 4E10 BF			and	data_545,0BFh		; (020A:4E10=12h)
020A:A6C8  26: 80 65 07 EF			and	byte ptr es:[di+7],0EFh
020A:A6CD  80 3E 3465 02			cmp	byte ptr ds:[3465h],2	; (020A:3465=79h)
020A:A6D2  74 07				je	loc_1765		; Jump if equal
020A:A6D4  80 3E 3465 04			cmp	byte ptr ds:[3465h],4	; (020A:3465=79h)
020A:A6D9  75 11				jne	loc_1766		; Jump if not equal
020A:A6DB			loc_1765::
020A:A6DB  53					push	bx
020A:A6DC  A1 40FD				mov	ax,data_493		; (020A:40FD=9726h)
020A:A6DF  26: 8B 5D 02				mov	bx,es:[di+2]
020A:A6E3  9A 168F:039C		;*		call	far ptr sub_153		;*(168F:039C)
020A:A6E3  9A					db	9Ah
020A:A6E4  039C 168F				dw	39Ch, 168Fh
020A:A6E8  5B					pop	bx
020A:A6E9  E9 0187				jmp	loc_1786		; (A873)
020A:A6EC			loc_1766::
020A:A6EC  9A 168F:0924		;*		call	far ptr sub_162		;*(168F:0924)
020A:A6EC  9A					db	9Ah
020A:A6ED  0924 168F				dw	924h, 168Fh
020A:A6F1  F6 06 35F0 08			test	data_443,8		; (020A:35F0=8Bh)
020A:A6F6  74 07				jz	loc_1767		; Jump if zero
020A:A6F8  9A 168F:4188		;*		call	far ptr sub_190		;*(168F:4188)
020A:A6F8  9A					db	9Ah
020A:A6F9  4188 168F				dw	4188h, 168Fh
020A:A6FD  EB 21				jmp	short loc_1769		; (A720)
020A:A6FF			loc_1767::
020A:A6FF  B0 53				mov	al,53h			; 'S'
020A:A701  9A 168F:4104		;*		call	far ptr sub_188		;*(168F:4104)
020A:A701  9A					db	9Ah
020A:A702  4104 168F				dw	4104h, 168Fh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 362

020A:A706  72 02				jc	loc_1768		; Jump if carry Set
020A:A708  B0 44				mov	al,44h			; 'D'
020A:A70A			loc_1768::
020A:A70A  0A 06 35DF				or	al,data_433		; (020A:35DF=6)
020A:A70E  3E: 88 46 00				mov	ds:[bp],al
020A:A712  45					inc	bp
020A:A713  B8 3A53				mov	ax,3A53h
020A:A716  0A 06 35DF				or	al,data_433		; (020A:35DF=6)
020A:A71A  3E: 89 46 00				mov	ds:[bp],ax
020A:A71E  45					inc	bp
020A:A71F  45					inc	bp
020A:A720			loc_1769::
020A:A720  3E			data_686	db	3Eh
020A:A721  C6 46 00 5B				mov	byte ptr [bp],5Bh	; '['
020A:A725  45					inc	bp
020A:A726  53					push	bx
020A:A727  A1 40FD				mov	ax,data_493		; (020A:40FD=9726h)
020A:A72A  26: 8B 5D 02				mov	bx,es:[di+2]
020A:A72E  9A 168F:039C		;*		call	far ptr sub_153		;*(168F:039C)
020A:A72E  9A					db	9Ah
020A:A72F  039C 168F				dw	39Ch, 168Fh
020A:A733  5B					pop	bx
020A:A734  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:A739  45					inc	bp
020A:A73A  E9 0136				jmp	loc_1786		; (A873)
020A:A73D			loc_1770::
020A:A73D  80 3E 2B3C 01			cmp	data_290,1		; (020A:2B3C=0ADh)
020A:A742  75 32				jne	loc_1773		; Jump if not equal
020A:A744  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:A749  75 2B				jnz	loc_1773		; Jump if not zero
020A:A74B  26: F6 45 05 40			test	byte ptr es:[di+5],40h	; '@'
020A:A750  75 24				jnz	loc_1773		; Jump if not zero
020A:A752  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:A757  75 1D				jnz	loc_1773		; Jump if not zero
020A:A759  26: 8B 05				mov	ax,es:[di]
020A:A75C  3B 06 344A				cmp	ax,data_390		; (020A:344A=0)
020A:A760  72 11				jb	loc_1772		; Jump if below
020A:A762  77 0A				ja	loc_1771		; Jump if above
020A:A764  26: 8B 45 02				mov	ax,es:[di+2]
020A:A768  3B 06 344C				cmp	ax,data_391		; (020A:344C=0)
020A:A76C  72 05				jb	loc_1772		; Jump if below
020A:A76E			loc_1771::
020A:A76E  E8 1B17				call	$+1B1Ah
020A:A771  72 03				jc	loc_1773		; Jump if carry Set
020A:A773			loc_1772::
020A:A773  E9 FF3E				jmp	loc_1764		; (A6B4)
020A:A776			loc_1773::
020A:A776  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:A77B  75 5E				jnz	loc_1780		; Jump if not zero
020A:A77D  F6 06 3458 40			test	data_397,40h		; (020A:3458=2Ch) '@'
020A:A782  74 07				jz	loc_1774		; Jump if zero
020A:A784  26: F6 45 05 40			test	byte ptr es:[di+5],40h	; '@'
020A:A789  74 50				jz	loc_1780		; Jump if zero
020A:A78B			loc_1774::
020A:A78B  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:A790  74 0B				jz	loc_1776		; Jump if zero
020A:A792  F6 06 3458 80			test	data_397,80h		; (020A:3458=2Ch)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 363

020A:A797  75 02				jnz	loc_1775		; Jump if not zero
020A:A799  EB 40				jmp	short loc_1780		; (A7DB)
020A:A79B			loc_1775::
020A:A79B  EB 43				jmp	short loc_1781		; (A7E0)
020A:A79D			loc_1776::
020A:A79D  F6 C7 C0				test	bh,0C0h
020A:A7A0  74 3E				jz	loc_1781		; Jump if zero
020A:A7A2  26			data_687	db	26h			; Data table (indexed access)
020A:A7A3  8A 45 04				mov	al,[di+4]
020A:A7A6  24 3F				and	al,3Fh			; '?'
020A:A7A8  8A E7				mov	ah,bh
020A:A7AA  80 E4 F0				and	ah,0F0h
020A:A7AD  80 FC 40				cmp	ah,40h			; '@'
020A:A7B0  75 0A				jne	loc_1777		; Jump if not equal
020A:A7B2  3C 01				cmp	al,1
020A:A7B4  74 2A				je	loc_1781		; Jump if equal
020A:A7B6  3C 21				cmp	al,21h			; '!'
020A:A7B8  74 26				je	loc_1781		; Jump if equal
020A:A7BA  EB 1F				jmp	short loc_1780		; (A7DB)
020A:A7BC			loc_1777::
020A:A7BC  80 FC A0				cmp	ah,0A0h
020A:A7BF  75 11				jne	loc_1778		; Jump if not equal
020A:A7C1  F6 06 35EE 01			test	data_442,1		; (020A:35EE=75h)
020A:A7C6  75 0F				jnz	loc_1779		; Jump if not zero
020A:A7C8  3C 02				cmp	al,2
020A:A7CA  74 14				je	loc_1781		; Jump if equal
020A:A7CC  3C 22				cmp	al,22h			; '"'
020A:A7CE  74 10				je	loc_1781		; Jump if equal
020A:A7D0  EB 09				jmp	short loc_1780		; (A7DB)
020A:A7D2			loc_1778::
020A:A7D2  80 FC B0				cmp	ah,0B0h
020A:A7D5  75 04				jne	loc_1780		; Jump if not equal
020A:A7D7			loc_1779::
020A:A7D7  3C 04				cmp	al,4
020A:A7D9  74 05				je	loc_1781		; Jump if equal
020A:A7DB			loc_1780::
020A:A7DB  9A 168F:0924		;*		call	far ptr sub_162		;*(168F:0924)
020A:A7DB  9A					db	9Ah
020A:A7DC  0924 168F				dw	924h, 168Fh
020A:A7E0			loc_1781::
020A:A7E0  80 3E 303E 01			cmp	data_332,1		; (020A:303E=8Fh)
020A:A7E5  75 3B				jne	loc_1783		; Jump if not equal
020A:A7E7  F6 06 35F0 08			test	data_443,8		; (020A:35F0=8Bh)
020A:A7EC  74 07				jz	loc_1782		; Jump if zero
020A:A7EE  9A 168F:4188		;*		call	far ptr sub_190		;*(168F:4188)
020A:A7EE  9A					db	9Ah
020A:A7EF  4188 168F				dw	4188h, 168Fh
020A:A7F3  EB 2D				jmp	short loc_1783		; (A822)
020A:A7F5			loc_1782::
020A:A7F5  80 3E 303B 01			cmp	data_330,1		; (020A:303B=0Eh)
020A:A7FA  74 26				je	loc_1783		; Jump if equal
020A:A7FC  80 3E 3465 00			cmp	byte ptr ds:[3465h],0	; (020A:3465=79h)
020A:A801  75 5C				jne	loc_1785		; Jump if not equal
020A:A803  9A 168F:4104		;*		call	far ptr sub_188		;*(168F:4104)
020A:A803  9A					db	9Ah
020A:A804  4104 168F				dw	4104h, 168Fh
020A:A808  73 18				jnc	loc_1783		; Jump if carry=0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 364

020A:A80A  B0 53				mov	al,53h			; 'S'
020A:A80C  0A 06 35DF				or	al,data_433		; (020A:35DF=6)
020A:A810  3E: 88 46 00				mov	ds:[bp],al
020A:A814  45					inc	bp
020A:A815  3E: 88 46 00				mov	ds:[bp],al
020A:A819  45					inc	bp
020A:A81A  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:A81F  45					inc	bp
020A:A820  EB			data_688	db	0EBh
020A:A821  3D 3E80				cmp	ax,3E80h
020A:A824  65					db	65h
020A:A825  34 00				xor	al,0
020A:A827  75 36				jnz	loc_1785		; Jump if not zero
020A:A829  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:A82E  74 2F				jz	loc_1785		; Jump if zero
020A:A830  80 3E 362B 90			cmp	byte ptr ds:[362Bh],90h	; (020A:362B=25h)
020A:A835  75 28				jne	loc_1785		; Jump if not equal
020A:A837  80 3E 2B3C 01			cmp	data_290,1		; (020A:2B3C=0ADh)
020A:A83C  75 21				jne	loc_1785		; Jump if not equal
020A:A83E  B0 53				mov	al,53h			; 'S'
020A:A840  9A 168F:4104		;*		call	far ptr sub_188		;*(168F:4104)
020A:A840  9A					db	9Ah
020A:A841  4104 168F				dw	4104h, 168Fh
020A:A845  72 02				jc	loc_1784		; Jump if carry Set
020A:A847  B0 44				mov	al,44h			; 'D'
020A:A849			loc_1784::
020A:A849  0A 06 35DF				or	al,data_433		; (020A:35DF=6)
020A:A84D  3E: 88 46 00				mov	ds:[bp],al
020A:A851  45					inc	bp
020A:A852  B8 3A53				mov	ax,3A53h
020A:A855  0A 06 35DF				or	al,data_433		; (020A:35DF=6)
020A:A859  3E: 89 46 00				mov	ds:[bp],ax
020A:A85D  45					inc	bp
020A:A85E  45					inc	bp
020A:A85F			loc_1785::
020A:A85F  80 3E 2B3C 01			cmp	data_290,1		; (020A:2B3C=0ADh)
020A:A864  75 10				jne	loc_1787		; Jump if not equal
020A:A866  B9 000A				mov	cx,0Ah
020A:A869  9A 168F:2D70		;*		call	far ptr sub_178		;*(168F:2D70)
020A:A869  9A					db	9Ah
020A:A86A  2D70 168F				dw	2D70h, 168Fh
020A:A86E  80 26 4E10 BF			and	data_545,0BFh		; (020A:4E10=12h)
020A:A873			loc_1786::
020A:A873  E8 D4C6				call	sub_113			; (7D3C)
020A:A876			loc_1787::
020A:A876  89 3E 30C9				mov	data_369,di		; (020A:30C9=4C50h)
020A:A87A  83 06 30C9 04			add	data_369,4		; (020A:30C9=4C50h)
020A:A87F  80 3E 2B3B 06			cmp	data_289,6		; (020A:2B3B=0A0h)
020A:A884  72 07				jb	loc_1788		; Jump if below
020A:A886  80 3E 2B36 04			cmp	data_285,4		; (020A:2B36=0ADh)
020A:A88B  72 30				jb	loc_1789		; Jump if below
020A:A88D			loc_1788::
020A:A88D  A1 347A				mov	ax,word ptr data_413	; (020A:347A=0)
020A:A890  A3 347E				mov	data_415,ax		; (020A:347E=0)
020A:A893  A1 347C				mov	ax,data_414		; (020A:347C=0)
020A:A896  A3 3480				mov	data_416,ax		; (020A:3480=0)
020A:A899  A1 3476				mov	ax,data_411		; (020A:3476=5953h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 365

020A:A89C  A3 347A				mov	word ptr data_413,ax	; (020A:347A=0)
020A:A89F  A1 3478				mov	ax,data_412		; (020A:3478=0D53h)
020A:A8A2  A3			data_689	db	0A3h
020A:A8A3  7C			data_690	db	7Ch
020A:A8A4  34 A1				xor	al,0A1h
020A:A8A6  F5					cmc				; Complement carry
020A:A8A7  40					inc	ax
020A:A8A8  A3 3476				mov	data_411,ax		; (020A:3476=5953h)
020A:A8AB  A1 40F7				mov	ax,data_490		; (020A:40F7=3B4h)
020A:A8AE  A3 3478				mov	data_412,ax		; (020A:3478=0D53h)
020A:A8B1  80 3E 2B3C 01			cmp	data_290,1		; (020A:2B3C=0ADh)
020A:A8B6  74 05				je	loc_1789		; Jump if equal
020A:A8B8  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:A8BD			loc_1789::
020A:A8BD  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A8C2  9C					pushf				; Push flags
020A:A8C3  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:A8C8  5A					pop	dx
020A:A8C9  8E C2				mov	es,dx
020A:A8CB  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:A8D0  5A					pop	dx
020A:A8D1  75 0A				jnz	loc_1790		; Jump if not zero
020A:A8D3  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:A8D8  74 03				je	loc_1790		; Jump if equal
020A:A8DA  E8 E40F				call	sub_132			; (8CEC)
020A:A8DD			loc_1790::
020A:A8DD  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:A8E2  9D					popf				; Pop flags
020A:A8E3  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A8E8  5F					pop	di
020A:A8E9  5A5E C35B		data_695	dw	5A5Eh, 0C35Bh
020A:A8ED  87 DB				xchg	bx,bx
020A:A8EF  90					nop

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_143::
020A:A8F0  50					push	ax
020A:A8F1  52					push	dx
020A:A8F2  56					push	si
020A:A8F3  57					push	di
020A:A8F4  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:A8F9  06					push	es
020A:A8FA  51					push	cx
020A:A8FB  C6 06 4E0A 00			mov	data_541,0		; (020A:4E0A=8Bh)
020A:A900  80 3E 309E 4F			cmp	data_362,4Fh		; (020A:309E=55h) 'O'
020A:A905  74 05				je	loc_1791		; Jump if equal
020A:A907  BA 0001				mov	dx,1
020A:A90A  EB 03				jmp	short loc_1792		; (A90F)
020A:A90C			loc_1791::
020A:A90C  BA 0004				mov	dx,4
020A:A90F			loc_1792::
020A:A90F  BF 0000				mov	di,0
020A:A912  80 3E 2B37 02			cmp	data_286,2		; (020A:2B37=0EBh)
020A:A917  75 37				jne	loc_1796		; Jump if not equal
020A:A919  83 FA 04				cmp	dx,4
020A:A91C  74 28				je	loc_1794		; Jump if equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 366

020A:A91E  F6 06 4E7F 02			test	data_557,2		; (020A:4E7F=0A4h)
020A:A923  74 2B				jz	loc_1796		; Jump if zero
020A:A925  F6 06 4E7F 80			test	data_557,80h		; (020A:4E7F=0A4h)
020A:A92A  74 21				jz	loc_1795		; Jump if zero
020A:A92C  3B 1E 344A				cmp	bx,data_390		; (020A:344A=0)
020A:A930  75 1B				jne	loc_1795		; Jump if not equal
020A:A932  52					push	dx
020A:A933  8B 16 344C				mov	dx,data_391		; (020A:344C=0)
020A:A937  2B D0				sub	dx,ax
020A:A939  73 02				jnc	loc_1793		; Jump if carry=0
020A:A93B  F7 D2				not	dx
020A:A93D			loc_1793::
020A:A93D  81 FA 0080				cmp	dx,80h
020A:A941  5A					pop	dx
020A:A942  72 0C				jc	loc_1796		; Jump if carry Set
020A:A944  EB 07				jmp	short loc_1795		; (A94D)
020A:A946			loc_1794::
020A:A946  F6 06 4E7F 01			test	data_557,1		; (020A:4E7F=0A4h)
020A:A94B  74 03				jz	loc_1796		; Jump if zero
020A:A94D			loc_1795::
020A:A94D  E8 1464				call	$+1467h
020A:A950			loc_1796::
020A:A950  E8 CE69				call	sub_111			; (77BC)
020A:A953  73 03				jnc	loc_1797		; Jump if carry=0
020A:A955  E9 0145				jmp	loc_1814		; (AA9D)
020A:A958			loc_1797::
020A:A958  83 FB 00				cmp	bx,0
020A:A95B  75 08				jne	loc_1798		; Jump if not equal
020A:A95D  3D 03FF				cmp	ax,3FFh
020A:A960  77 03				ja	loc_1798		; Jump if above
020A:A962  E9 009B				jmp	loc_1805		; (AA00)
020A:A965			loc_1798::
020A:A965  83 3E 30BE 00			cmp	data_368,0		; (020A:30BE=317Eh)
020A:A96A  75 50				jne	loc_1802		; Jump if not equal
020A:A96C  06					push	es
020A:A96D  57					push	di
020A:A96E  50					push	ax
020A:A96F  8E 06 344A				mov	es,data_390		; (020A:344A=0)
020A:A973  8B 3E 344C				mov	di,data_391		; (020A:344C=0)
020A:A977  26: 80 3D EB				cmp	byte ptr es:[di],0EBh
020A:A97B  74 12				je	loc_1799		; Jump if equal
020A:A97D  26: 80 3D E3				cmp	byte ptr es:[di],0E3h
020A:A981  74 0C				je	loc_1799		; Jump if equal
020A:A983  26: 80 3D 70				cmp	byte ptr es:[di],70h	; 'p'
020A:A987  72 30				jb	loc_1801		; Jump if below
020A:A989  26: 80 3D 7F				cmp	byte ptr es:[di],7Fh
020A:A98D  77 2A				ja	loc_1801		; Jump if above
020A:A98F			loc_1799::
020A:A98F  F6 06 35EE 02			test	data_442,2		; (020A:35EE=75h)
020A:A994  75 23				jnz	loc_1801		; Jump if not zero
020A:A996  2B 06 344C				sub	ax,data_391		; (020A:344C=0)
020A:A99A  3D 0003				cmp	ax,3
020A:A99D  77 1A				ja	loc_1801		; Jump if above
020A:A99F  3D 0002				cmp	ax,2
020A:A9A2  74 0B				je	loc_1800		; Jump if equal
020A:A9A4  72 13				jc	loc_1801		; Jump if carry Set
020A:A9A6  26: 80 7D 02 90			cmp	byte ptr es:[di+2],90h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 367

020A:A9AB  74 02				je	loc_1800		; Jump if equal
020A:A9AD  EB 0A				jmp	short loc_1801		; (A9B9)
020A:A9AF			loc_1800::
020A:A9AF  C6 06 309E F5			mov	data_362,0F5h		; (020A:309E=55h)
020A:A9B4  58					pop	ax
020A:A9B5  5F					pop	di
020A:A9B6  07					pop	es
020A:A9B7  EB 47				jmp	short loc_1805		; (AA00)
020A:A9B9			loc_1801::
020A:A9B9  58					pop	ax
020A:A9BA  5F					pop	di
020A:A9BB  07					pop	es
020A:A9BC			loc_1802::
020A:A9BC  80 3E 2B3C 01			cmp	data_290,1		; (020A:2B3C=0ADh)
020A:A9C1  74 3D				je	loc_1805		; Jump if equal
020A:A9C3  BF 532E				mov	di,532Eh
020A:A9C6  A1 40F5				mov	ax,word ptr ds:[40F5h]	; (020A:40F5=97h)
020A:A9C9  89 05				mov	[di],ax
020A:A9CB  A1 40F7				mov	ax,data_490		; (020A:40F7=3B4h)
020A:A9CE  89 45 02				mov	[di+2],ax
020A:A9D1  32 C9				xor	cl,cl			; Zero register
020A:A9D3  80 3E 309E 4F			cmp	data_362,4Fh		; (020A:309E=55h) 'O'
020A:A9D8  74 03				je	loc_1803		; Jump if equal
020A:A9DA  E9 0097				jmp	loc_1811		; (AA74)
020A:A9DD			loc_1803::
020A:A9DD  C6 45 04 00				mov	byte ptr [di+4],0
020A:A9E1  C6 45 05 08				mov	byte ptr [di+5],8
020A:A9E5  80 3E 15D0 01			cmp	data_211,1		; (020A:15D0=0)
020A:A9EA  77 04				ja	loc_1804		; Jump if above
020A:A9EC  C6 45 05 09				mov	byte ptr [di+5],9
020A:A9F0			loc_1804::
020A:A9F0  C6 45 06 00				mov	byte ptr [di+6],0
020A:A9F4  C6 45 32 00				mov	byte ptr [di+32h],0
020A:A9F8  C7 45 07 0000			mov	word ptr [di+7],0
020A:A9FD  E9 008B				jmp	loc_1813		; (AA8B)
020A:AA00			loc_1805::
020A:AA00  A1 40F7				mov	ax,data_490		; (020A:40F7=3B4h)
020A:AA03  2B 06 344C				sub	ax,data_391		; (020A:344C=0)
020A:AA07  A3 35F4				mov	data_444,ax		; (020A:35F4=448Ah)
020A:AA0A  C7 06 35F6 0000			mov	data_445,0		; (020A:35F6=0E801h)
020A:AA10  3E: C6 46 00 24			mov	byte ptr ds:[bp],24h	; '$'
020A:AA15  45					inc	bp
020A:AA16  9A 168F:5964		;*		call	far ptr sub_200		;*(168F:5964)
020A:AA16  9A					db	9Ah
020A:AA17  5964 168F				dw	5964h, 168Fh
020A:AA1B  C6 06 4E0A 01			mov	data_541,1		; (020A:4E0A=8Bh)
020A:AA20  A1 40F7				mov	ax,data_490		; (020A:40F7=3B4h)
020A:AA23  2B 06 3056				sub	ax,data_343		; (020A:3056=0BB1Bh)
020A:AA27  3D 000F				cmp	ax,0Fh
020A:AA2A  77 02				ja	loc_1806		; Jump if above
020A:AA2C  EB 04				jmp	short loc_1807		; (AA32)
020A:AA2E			loc_1806::
020A:AA2E  59					pop	cx
020A:AA2F  E9 0294				jmp	loc_1839		; (ACC6)
020A:AA32			loc_1807::
020A:AA32  80 3E 309E 4F			cmp	data_362,4Fh		; (020A:309E=55h) 'O'
020A:AA37  74 37				je	loc_1810		; Jump if equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 368

020A:AA39  A1 344A				mov	ax,data_390		; (020A:344A=0)
020A:AA3C  3B 06 40F5				cmp	ax,word ptr ds:[40F5h]	; (020A:40F5=97h)
020A:AA40  75 2E				jne	loc_1810		; Jump if not equal
020A:AA42  A1 40F7				mov	ax,data_490		; (020A:40F7=3B4h)
020A:AA45  3D 0010				cmp	ax,10h
020A:AA48  76 03				jbe	loc_1808		; Jump if below or =
020A:AA4A  2D 0010				sub	ax,10h
020A:AA4D			loc_1808::
020A:AA4D  3B 06 3056				cmp	ax,data_343		; (020A:3056=0BB1Bh)
020A:AA51  73 1D				jae	loc_1810		; Jump if above or =
020A:AA53  A1 40F7				mov	ax,data_490		; (020A:40F7=3B4h)
020A:AA56  3B 06 35A1				cmp	ax,data_424		; (020A:35A1=0E736h)
020A:AA5A  76 14				jbe	loc_1810		; Jump if below or =
020A:AA5C  3D 0280				cmp	ax,280h
020A:AA5F  76 0C				jbe	loc_1809		; Jump if below or =
020A:AA61  2D 0280				sub	ax,280h
020A:AA64  3B 06 344C				cmp	ax,data_391		; (020A:344C=0)
020A:AA68  77 06				ja	loc_1810		; Jump if above
020A:AA6A  A1 40F7				mov	ax,data_490		; (020A:40F7=3B4h)
020A:AA6D			loc_1809::
020A:AA6D  A3 35A1				mov	data_424,ax		; (020A:35A1=0E736h)
020A:AA70			loc_1810::
020A:AA70  59					pop	cx
020A:AA71  E9 0252				jmp	loc_1839		; (ACC6)
020A:AA74			loc_1811::
020A:AA74  C6 45 04 00				mov	byte ptr [di+4],0
020A:AA78  C6 45 05 00				mov	byte ptr [di+5],0
020A:AA7C  80 3E 15D0 01			cmp	data_211,1		; (020A:15D0=0)
020A:AA81  77 04				ja	loc_1812		; Jump if above
020A:AA83  C6 45 05 01				mov	byte ptr [di+5],1
020A:AA87			loc_1812::
020A:AA87  C6 45 06 00				mov	byte ptr [di+6],0
020A:AA8B			loc_1813::
020A:AA8B  E8 F342				call	sub_139			; (9DD0)
020A:AA8E  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (3201:0006=9C48h)
020A:AA93  89 3E 4E0D				mov	data_543,di		; (020A:4E0D=0A013h)
020A:AA97  E8 C5A6				call	sub_95			; (7040)
020A:AA9A  E9 00AA				jmp	loc_1821		; (AB47)
020A:AA9D			loc_1814::
020A:AA9D  89 3E 4E0D				mov	data_543,di		; (020A:4E0D=0A013h)
020A:AAA1  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:AAA6  75 21				jnz	loc_1815		; Jump if not zero
020A:AAA8  80 3E 2B3C 01			cmp	data_290,1		; (020A:2B3C=0ADh)
020A:AAAD  75 24				jne	loc_1816		; Jump if not equal
020A:AAAF  26: F6 45 05 40			test	byte ptr es:[di+5],40h	; '@'
020A:AAB4  75 1D				jnz	loc_1816		; Jump if not zero
020A:AAB6  A1 344A				mov	ax,data_390		; (020A:344A=0)
020A:AAB9  26: 3B 05				cmp	ax,es:[di]
020A:AABC  77 0B				ja	loc_1815		; Jump if above
020A:AABE  72 13				jc	loc_1816		; Jump if carry Set
020A:AAC0  A1 344C				mov	ax,data_391		; (020A:344C=0)
020A:AAC3  26: 3B 45 02				cmp	ax,es:[di+2]
020A:AAC7  76 0A				jbe	loc_1816		; Jump if below or =
020A:AAC9			loc_1815::
020A:AAC9  C6 06 35DE 01			mov	data_432,1		; (020A:35DE=0FEh)
020A:AACE  C6 06 4E08 01			mov	data_540,1		; (020A:4E08=0F3h)
020A:AAD3			loc_1816::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 369

020A:AAD3  B9 003B				mov	cx,3Bh
020A:AAD6  80 3E 309E 4F			cmp	data_362,4Fh		; (020A:309E=55h) 'O'
020A:AADB  74 3A				je	loc_1819		; Jump if equal
020A:AADD  B9 0007				mov	cx,7
020A:AAE0  A1 344A				mov	ax,data_390		; (020A:344A=0)
020A:AAE3  3B 06 40F5				cmp	ax,word ptr ds:[40F5h]	; (020A:40F5=97h)
020A:AAE7  75 2E				jne	loc_1819		; Jump if not equal
020A:AAE9  A1 40F7				mov	ax,data_490		; (020A:40F7=3B4h)
020A:AAEC  3D 0010				cmp	ax,10h
020A:AAEF  76 03				jbe	loc_1817		; Jump if below or =
020A:AAF1  2D 0010				sub	ax,10h
020A:AAF4			loc_1817::
020A:AAF4  3B 06 3056				cmp	ax,data_343		; (020A:3056=0BB1Bh)
020A:AAF8  73 1D				jae	loc_1819		; Jump if above or =
020A:AAFA  A1 40F7				mov	ax,data_490		; (020A:40F7=3B4h)
020A:AAFD  3B 06 35A1				cmp	ax,data_424		; (020A:35A1=0E736h)
020A:AB01  76 14				jbe	loc_1819		; Jump if below or =
020A:AB03  3D 0280				cmp	ax,280h
020A:AB06  76 0C				jbe	loc_1818		; Jump if below or =
020A:AB08  2D 0280				sub	ax,280h
020A:AB0B  3B 06 344C				cmp	ax,data_391		; (020A:344C=0)
020A:AB0F  77 06				ja	loc_1819		; Jump if above
020A:AB11  A1 40F7				mov	ax,data_490		; (020A:40F7=3B4h)
020A:AB14			loc_1818::
020A:AB14  A3 35A1				mov	data_424,ax		; (020A:35A1=0E736h)
020A:AB17			loc_1819::
020A:AB17  80 3E 2B3C 01			cmp	data_290,1		; (020A:2B3C=0ADh)
020A:AB1C  75 29				jne	loc_1821		; Jump if not equal
020A:AB1E  9A 168F:2D70		;*		call	far ptr sub_178		;*(168F:2D70)
020A:AB1E  9A					db	9Ah
020A:AB1F  2D70 168F				dw	2D70h, 168Fh
020A:AB23  81 FD 2D1B				cmp	bp,2D1Bh
020A:AB27  72 1E				jb	loc_1821		; Jump if below
020A:AB29  81 FD 2DD4				cmp	bp,2DD4h
020A:AB2D  73 18				jae	loc_1821		; Jump if above or =
020A:AB2F  80 3E 2DAD 28			cmp	data_318,28h		; (020A:2DAD=65h) '('
020A:AB34  74 11				je	loc_1821		; Jump if equal
020A:AB36  F6 06 15D0 02			test	data_211,2		; (020A:15D0=0)
020A:AB3B  74 07				jz	loc_1820		; Jump if zero
020A:AB3D  9A 168F:55E4		;*		call	far ptr sub_197		;*(168F:55E4)
020A:AB3D  9A					db	9Ah
020A:AB3E  55E4 168F				dw	55E4h, 168Fh
020A:AB42  73 03				jnc	loc_1821		; Jump if carry=0
020A:AB44			loc_1820::
020A:AB44  E8 108D				call	$+1090h
020A:AB47			loc_1821::
020A:AB47  80 3E 309E 4F			cmp	data_362,4Fh		; (020A:309E=55h) 'O'
020A:AB4C  74 03				je	loc_1822		; Jump if equal
020A:AB4E  E9 0102				jmp	loc_1833		; (AC53)
020A:AB51			loc_1822::
020A:AB51  59					pop	cx
020A:AB52  51					push	cx
020A:AB53  F6 C1 02				test	cl,2
020A:AB56  74 0E				jz	loc_1824		; Jump if zero
020A:AB58  26: 8A 45 04				mov	al,es:[di+4]
020A:AB5C  24 07				and	al,7
020A:AB5E  74 03				jz	loc_1823		; Jump if zero
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 370

020A:AB60  E9 00F0				jmp	loc_1833		; (AC53)
020A:AB63			loc_1823::
020A:AB63  E9 00A7				jmp	loc_1829		; (AC0D)
020A:AB66			loc_1824::
020A:AB66  26: F6 45 04 18			test	byte ptr es:[di+4],18h
020A:AB6B  75 12				jnz	loc_1826		; Jump if not zero
020A:AB6D  F7 06 4E22 0400			test	data_553,400h		; (020A:4E22=4788h)
020A:AB73  75 07				jnz	loc_1825		; Jump if not zero
020A:AB75  80 3E 327F 01			cmp	byte ptr data_380,1	; (020A:327F='uineIntel')
020A:AB7A  75 03				jne	loc_1826		; Jump if not equal
020A:AB7C			loc_1825::
020A:AB7C  E9 008E				jmp	loc_1829		; (AC0D)
020A:AB7F			loc_1826::
020A:AB7F  26: 8B 05				mov	ax,es:[di]
020A:AB82  A3 3466				mov	data_403,ax		; (020A:3466=7473h)
020A:AB85  26: 8B 45 02				mov	ax,es:[di+2]
020A:AB89  A3 3468				mov	data_404,ax		; (020A:3468=6D65h)
020A:AB8C  80 0E 3459 02			or	data_398,2		; (020A:3459=43h)
020A:AB91  C7 06 3484 FFFF			mov	data_417,0FFFFh		; (020A:3484=0)
020A:AB97  26: 8A 45 32				mov	al,es:[di+32h]
020A:AB9B  24 38				and	al,38h			; '8'
020A:AB9D  3C 38				cmp	al,38h			; '8'
020A:AB9F  75 6C				jne	loc_1829		; Jump if not equal
020A:ABA1  26			data_700	db	26h
020A:ABA2  F6 45 05 20				test	byte ptr [di+5],20h	; ' '
020A:ABA6  74 05				jz	loc_1827		; Jump if zero
020A:ABA8  C6			data_701	db	0C6h
020A:ABA9  06			data_702	db	6
020A:ABAA  D7					xlat				; al=[al+[bx]] table
020A:ABAB  53					push	bx
020A:ABAC  01 C6				add	si,ax
020A:ABAE  06					push	es
020A:ABAF  59					pop	cx
020A:ABB0  34 05				xor	al,5
020A:ABB2  80 3E 2B3C 01			cmp	data_290,1		; (020A:2B3C=0ADh)
020A:ABB7  75 54				jne	loc_1829		; Jump if not equal
020A:ABB9  C6 06 5709 86			mov	byte ptr ds:[5709h],86h	; (020A:5709=47h)
020A:ABBE  51					push	cx
020A:ABBF  57					push	di
020A:ABC0  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:ABC5  06					push	es
020A:ABC6  E8 DDC4				call	sub_125			; (898D)
020A:ABC9  55					push	bp
020A:ABCA  E8 D37B				call	sub_114			; (7F48)
020A:ABCD  8B FD				mov	di,bp
020A:ABCF  5D					pop	bp
020A:ABD0  BE 40A3				mov	si,40A3h
020A:ABD3  B9 40BB				mov	cx,40BBh
020A:ABD6  81 E9 40A1				sub	cx,40A1h
020A:ABDA  83 E9 02				sub	cx,2
020A:ABDD  FC					cld				; Clear direction
020A:ABDE  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:ABE0  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:ABE5  9C					pushf				; Push flags
020A:ABE6  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:ABEB  5A					pop	dx
020A:ABEC  8E C2				mov	es,dx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 371

020A:ABEE  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:ABF3  5A					pop	dx
020A:ABF4  75 0A				jnz	loc_1828		; Jump if not zero
020A:ABF6  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:ABFB  74 03				je	loc_1828		; Jump if equal
020A:ABFD  E8 E0EC				call	sub_132			; (8CEC)
020A:AC00			loc_1828::
020A:AC00  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:AC05  9D					popf				; Pop flags
020A:AC06  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:AC0B  5F					pop	di
020A:AC0C  59					pop	cx
020A:AC0D			loc_1829::
020A:AC0D  26: 8A 45 04				mov	al,es:[di+4]
020A:AC11  A8 01				test	al,1
020A:AC13  74 04				jz	loc_1830		; Jump if zero
020A:AC15  A8 02				test	al,2
020A:AC17  75 14				jnz	loc_1831		; Jump if not zero
020A:AC19			loc_1830::
020A:AC19  0C 03				or	al,3
020A:AC1B  26: 88 45 04				mov	es:[di+4],al
020A:AC1F  57					push	di
020A:AC20  83 C7 09				add	di,9
020A:AC23  BE 35FA				mov	si,35FAh
020A:AC26  B9 0029				mov	cx,29h
020A:AC29  FC					cld				; Clear direction
020A:AC2A  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:AC2C  5F					pop	di
020A:AC2D			loc_1831::
020A:AC2D  26: 8A 45 32				mov	al,es:[di+32h]
020A:AC31  A8 80				test	al,80h
020A:AC33  74 0D				jz	loc_1832		; Jump if zero
020A:AC35  26: 8B 4D 33				mov	cx,es:[di+33h]
020A:AC39  C6 06 35DD 01			mov	data_431,1		; (020A:35DD=0)
020A:AC3E  89 0E 361A				mov	data_455,cx		; (020A:361A=0F2EBh)
020A:AC42			loc_1832::
020A:AC42  A8 40				test	al,40h			; '@'
020A:AC44  74 0D				jz	loc_1833		; Jump if zero
020A:AC46  26: 8B 4D 35				mov	cx,es:[di+35h]
020A:AC4A  C6 06 35DD 01			mov	data_431,1		; (020A:35DD=0)
020A:AC4F  89 0E 3618				mov	data_454,cx		; (020A:3618=3D03h)
020A:AC53			loc_1833::
020A:AC53  80 3E 2B3B 06			cmp	data_289,6		; (020A:2B3B=0A0h)
020A:AC58  72 07				jb	loc_1834		; Jump if below
020A:AC5A  80 3E 2B36 04			cmp	data_285,4		; (020A:2B36=0ADh)
020A:AC5F  72 13				jb	loc_1836		; Jump if below
020A:AC61			loc_1834::
020A:AC61  80 3E 309E 4F			cmp	data_362,4Fh		; (020A:309E=55h) 'O'
020A:AC66  74 07				je	loc_1835		; Jump if equal
020A:AC68  26: F6 45 04 20			test	byte ptr es:[di+4],20h	; ' '
020A:AC6D  75 05				jnz	loc_1836		; Jump if not zero
020A:AC6F			loc_1835::
020A:AC6F  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:AC74			loc_1836::
020A:AC74  59					pop	cx
020A:AC75  80 3E 309E 4F			cmp	data_362,4Fh		; (020A:309E=55h) 'O'
020A:AC7A  75 0C				jne	loc_1837		; Jump if not equal
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 372

020A:AC7C  F6 C1 01				test	cl,1
020A:AC7F  74 45				jz	loc_1839		; Jump if zero
020A:AC81  26: 80 4D 04 80			or	byte ptr es:[di+4],80h
020A:AC86  EB 3E				jmp	short loc_1839		; (ACC6)
020A:AC88			loc_1837::
020A:AC88  F6 C1 04				test	cl,4
020A:AC8B  75 18				jnz	loc_1838		; Jump if not zero
020A:AC8D  A1 346E				mov	ax,data_407		; (020A:346E=5945h)
020A:AC90  A3 3472				mov	data_409,ax		; (020A:3472=5241h)
020A:AC93  A1 3470				mov	ax,data_408		; (020A:3470=4F42h)
020A:AC96  A3 3474				mov	data_410,ax		; (020A:3474=2E44h)
020A:AC99  A1 346A				mov	ax,data_405		; (020A:346A=3233h)
020A:AC9C  A3 346E				mov	data_407,ax		; (020A:346E=5945h)
020A:AC9F  A1 346C				mov	ax,data_406		; (020A:346C=4B5Ch)
020A:ACA2  A3 3470				mov	data_408,ax		; (020A:3470=4F42h)
020A:ACA5			loc_1838::
020A:ACA5  A1 40F5				mov	ax,word ptr ds:[40F5h]	; (020A:40F5=97h)
020A:ACA8  A3 346A				mov	data_405,ax		; (020A:346A=3233h)
020A:ACAB  A1 40F7				mov	ax,data_490		; (020A:40F7=3B4h)
020A:ACAE  A3 346C				mov	data_406,ax		; (020A:346C=4B5Ch)
020A:ACB1  89 3E 4E0B				mov	data_542,di		; (020A:4E0B=261Eh)
020A:ACB5  F6 C1 08				test	cl,8
020A:ACB8  74 0C				jz	loc_1839		; Jump if zero
020A:ACBA  9A 168F:55E4		;*		call	far ptr sub_197		;*(168F:55E4)
020A:ACBA  9A					db	9Ah
020A:ACBB  55E4 168F				dw	55E4h, 168Fh
020A:ACBF  72 05				jc	loc_1839		; Jump if carry Set
020A:ACC1  26: C6 45 06 FF			mov	byte ptr es:[di+6],0FFh
020A:ACC6			loc_1839::
020A:ACC6  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:ACCB  9C					pushf				; Push flags
020A:ACCC  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:ACD1  5A					pop	dx
020A:ACD2  8E C2				mov	es,dx
020A:ACD4  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:ACD9  5A					pop	dx
020A:ACDA  75 0A				jnz	loc_1840		; Jump if not zero
020A:ACDC  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:ACE1  74 03				je	loc_1840		; Jump if equal
020A:ACE3  E8			data_705	db	0E8h			; Data table (indexed access)
020A:ACE4  06					push	es
020A:ACE5  E0 2E				loopnz	locloop_1841		; Loop if zf=0, cx>0

020A:ACE7  FF 36 0096				push	word ptr ds:[96h]	; (020A:0096=0)
020A:ACEB  9D					popf				; Pop flags
020A:ACEC  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:ACF1  5F					pop	di
020A:ACF2  5E					pop	si
020A:ACF3  5A					pop	dx
020A:ACF4  58					pop	ax
020A:ACF5  C3					retn
020A:ACF6  000E[00]				db	14 dup (0)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_144::
020A:AD04  B4 04				mov	ah,4
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 373

020A:AD06  E8 C2E3				call	sub_94			; (6FEC)
020A:AD09  E8 BF50				call	sub_84			; (6C5C)
020A:AD0C  E8 DC7E				call	sub_125			; (898D)
020A:AD0F  E8 DC99				call	sub_130			; (89AB)
020A:AD12  A3 3037				mov	word ptr ds:[3037h],ax	; (9A19:3037=0E0AAh)

020A:AD15			locloop_1841::
020A:AD15  E8 15E0				call	$+15E3h
020A:AD18  A1 2CC8				mov	ax,word ptr ds:[2CC8h]	; (9A19:2CC8=0E0E2h)
020A:AD1B  3D 0000				cmp	ax,0
020A:AD1E  75 0D				jne	loc_1842		; Jump if not equal
020A:AD20  83			data_707	db	83h
020A:AD21  3E					db	3Eh
020A:AD22  C6					db	0C6h
020A:AD23  2C 00				sub	al,0
020A:AD25  75 06				jnz	loc_1842		; Jump if not zero
020A:AD27  B8 0002				mov	ax,2
020A:AD2A  E9 0D33				jmp	loc_1987		; (BA60)
020A:AD2D			loc_1842::
020A:AD2D  83 3E 2BEB 00			cmp	word ptr ds:[2BEBh],0	; (9A19:2BEB=20A2h)
020A:AD32  75 07				jne	loc_1843		; Jump if not equal
020A:AD34  83 3E 2BED 00			cmp	word ptr ds:[2BEDh],0	; (9A19:2BED=0A0AAh)
020A:AD39  74 0E				je	loc_1844		; Jump if equal
020A:AD3B			loc_1843::
020A:AD3B  A1 2BEB				mov	ax,word ptr ds:[2BEBh]	; (9A19:2BEB=20A2h)
020A:AD3E  A3 2CC8				mov	word ptr ds:[2CC8h],ax	; (9A19:2CC8=0E0E2h)
020A:AD41  A1 2BED				mov	ax,word ptr ds:[2BEDh]	; (9A19:2BED=0A0AAh)
020A:AD44  A3 2CC6				mov	word ptr ds:[2CC6h],ax	; (9A19:2CC6=0A5ACh)
020A:AD47  EB 2F				jmp	short loc_1847		; (AD78)
020A:AD49			loc_1844::
020A:AD49  83 3E 2BE7 00			cmp	word ptr ds:[2BE7h],0	; (9A19:2BE7=0A3AEh)
020A:AD4E  75 07				jne	loc_1845		; Jump if not equal
020A:AD50  83 3E 2BE9 00			cmp	word ptr ds:[2BE9h],0	; (9A19:2BE9=20AEh)
020A:AD55  74 21				je	loc_1847		; Jump if equal
020A:AD57			loc_1845::
020A:AD57  A1 2CC6				mov	ax,word ptr ds:[2CC6h]	; (9A19:2CC6=0A5ACh)
020A:AD5A  2B 06 2BE9				sub	ax,word ptr ds:[2BE9h]	; (9A19:2BE9=20AEh)
020A:AD5E  A3 2CC6				mov	word ptr ds:[2CC6h],ax	; (9A19:2CC6=0A5ACh)
020A:AD61  A1 2CC8				mov	ax,word ptr ds:[2CC8h]	; (9A19:2CC8=0E0E2h)
020A:AD64  73 01				jnc	loc_1846		; Jump if carry=0
020A:AD66  48					dec	ax
020A:AD67			loc_1846::
020A:AD67  2B 06 2BE7				sub	ax,word ptr ds:[2BE7h]	; (9A19:2BE7=0A3AEh)
020A:AD6B  A3 2CC8				mov	word ptr ds:[2CC8h],ax	; (9A19:2CC8=0E0E2h)
020A:AD6E  73 08				jnc	loc_1847		; Jump if carry=0
020A:AD70  C6 06 1DD8 43			mov	byte ptr ds:[1DD8h],43h	; (9A19:1DD8=1Fh) 'C'
020A:AD75  E9 0149				jmp	loc_1864		; (AEC1)
020A:AD78			loc_1847::
020A:AD78  A1 2CC8				mov	ax,word ptr ds:[2CC8h]	; (9A19:2CC8=0E0E2h)
020A:AD7B  8B D8				mov	bx,ax
020A:AD7D  83 E3 F0				and	bx,0FFF0h
020A:AD80  C6 06 1DD8 41			mov	byte ptr ds:[1DD8h],41h	; (9A19:1DD8=1Fh) 'A'
020A:AD85  74 03				jz	loc_1848		; Jump if zero
020A:AD87  E9 00D5				jmp	loc_1857		; (AE5F)
020A:AD8A			loc_1848::
020A:AD8A  B1 0C				mov	cl,0Ch
020A:AD8C  D3 E0				shl	ax,cl			; Shift w/zeros fill
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 374

020A:AD8E  8B 1E 2CC6				mov	bx,word ptr ds:[2CC6h]	; (9A19:2CC6=0A5ACh)
020A:AD92  B1 04				mov	cl,4
020A:AD94  D3 EB				shr	bx,cl			; Shift w/zeros fill
020A:AD96  03 D8				add	bx,ax
020A:AD98  43					inc	bx
020A:AD99  43					inc	bx
020A:AD9A  83 FB 01				cmp	bx,1
020A:AD9D  C6 06 1DD8 42			mov	byte ptr ds:[1DD8h],42h	; (9A19:1DD8=1Fh) 'B'
020A:ADA2  76 28				jbe	loc_1851		; Jump if below or =
020A:ADA4  8B D3				mov	dx,bx
020A:ADA6  BB 0008				mov	bx,8
020A:ADA9  33 C0				xor	ax,ax			; Zero register
020A:ADAB  33 C9				xor	cx,cx			; Zero register
020A:ADAD			loc_1849::
020A:ADAD  03 8F 2BED				add	cx,word ptr ds:[2BEDh][bx]	; (9A19:2BED=0A0AAh)
020A:ADB1  73 01				jnc	loc_1850		; Jump if carry=0
020A:ADB3  40					inc	ax
020A:ADB4			loc_1850::
020A:ADB4  03 87 2BEB				add	ax,word ptr ds:[2BEBh][bx]	; (9A19:2BEB=20A2h)
020A:ADB8  83 C3 08				add	bx,8
020A:ADBB  83 FB 20				cmp	bx,20h
020A:ADBE  76 ED				jbe	loc_1849		; Jump if below or =
020A:ADC0  8B D8				mov	bx,ax
020A:ADC2  83 E3 F0				and	bx,0FFF0h
020A:ADC5  C6 06 1DD8 49			mov	byte ptr ds:[1DD8h],49h	; (9A19:1DD8=1Fh) 'I'
020A:ADCA  74 03				jz	loc_1852		; Jump if zero
020A:ADCC			loc_1851::
020A:ADCC  E9 0090				jmp	loc_1857		; (AE5F)
020A:ADCF			loc_1852::
020A:ADCF  8B D9				mov	bx,cx
020A:ADD1  B1 0C				mov	cl,0Ch
020A:ADD3  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:ADD5  B1 04				mov	cl,4
020A:ADD7  D3 EB				shr	bx,cl			; Shift w/zeros fill
020A:ADD9  03 D8				add	bx,ax
020A:ADDB  72 EF				jc	loc_1851		; Jump if carry Set
020A:ADDD  43					inc	bx
020A:ADDE  0B DB				or	bx,bx			; Zero ?
020A:ADE0  C6 06 1DD8 4A			mov	byte ptr ds:[1DD8h],4Ah	; (9A19:1DD8=1Fh) 'J'
020A:ADE5  74 78				jz	loc_1857		; Jump if zero
020A:ADE7  03 D3				add	dx,bx
020A:ADE9  72 74				jc	loc_1857		; Jump if carry Set
020A:ADEB  E8 DBBD				call	sub_130			; (89AB)
020A:ADEE  8C C9				mov	cx,cs
020A:ADF0  2B C1				sub	ax,cx
020A:ADF2  8B 0E 2B3D				mov	cx,word ptr ds:[2B3Dh]	; (9A19:2B3D=0A9A0h)
020A:ADF6  2B C8				sub	cx,ax
020A:ADF8  72 31				jc	loc_1854		; Jump if carry Set
020A:ADFA  83 E9 20				sub	cx,20h
020A:ADFD  72 2C				jc	loc_1854		; Jump if carry Set
020A:ADFF  3B CA				cmp	cx,dx
020A:AE01  76 5C				jbe	loc_1857		; Jump if below or =
020A:AE03  83 3E 3035 00			cmp	word ptr ds:[3035h],0	; (9A19:3035=0ED20h)
020A:AE08  74 23				je	loc_1855		; Jump if equal
020A:AE0A  BB FFFF				mov	bx,0FFFFh
020A:AE0D  E8 DB98				call	sub_129			; (89A8)
020A:AE10  05 1000				add	ax,1000h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 375

020A:AE13  3B 06 3035				cmp	ax,word ptr ds:[3035h]	; (9A19:3035=0ED20h)
020A:AE17  76 0B				jbe	loc_1853		; Jump if below or =
020A:AE19  2B 06 3035				sub	ax,word ptr ds:[3035h]	; (9A19:3035=0ED20h)
020A:AE1D  B1 04				mov	cl,4
020A:AE1F  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:AE21  2B D8				sub	bx,ax
020A:AE23  4B					dec	bx
020A:AE24			loc_1853::
020A:AE24  89 1E 4E82				mov	word ptr ds:[4E82h],bx	; (9A19:4E82=0B48Ch)
020A:AE28  E9 009C				jmp	loc_1865		; (AEC7)
020A:AE2B			loc_1854::
020A:AE2B  EB 5D				jmp	short loc_1859		; (AE8A)
020A:AE2D			loc_1855::
020A:AE2D  B8 FFFF				mov	ax,0FFFFh
020A:AE30  2D 2C44				sub	ax,2C44h
020A:AE33  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:AE35  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:AE37  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:AE39  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:AE3B  2B CA				sub	cx,dx
020A:AE3D  3B C8				cmp	cx,ax
020A:AE3F  73 02				jae	loc_1856		; Jump if above or =
020A:AE41  8B C1				mov	ax,cx
020A:AE43			loc_1856::
020A:AE43  01 06 3037				add	word ptr ds:[3037h],ax	; (9A19:3037=0E0AAh)
020A:AE47  E8 DB5E				call	sub_129			; (89A8)
020A:AE4A  8B D8				mov	bx,ax
020A:AE4C  A1 3037				mov	ax,word ptr ds:[3037h]	; (9A19:3037=0E0AAh)
020A:AE4F  2B C3				sub	ax,bx
020A:AE51  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:AE53  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:AE55  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:AE57  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:AE59  48					dec	ax
020A:AE5A  A3 4E82				mov	word ptr ds:[4E82h],ax	; (9A19:4E82=0B48Ch)
020A:AE5D  EB 68				jmp	short loc_1865		; (AEC7)
020A:AE5F			loc_1857::
020A:AE5F  E8 DB49				call	sub_130			; (89AB)
020A:AE62  8C C9				mov	cx,cs
020A:AE64  2B C1				sub	ax,cx
020A:AE66  8B 0E 2B3D				mov	cx,word ptr ds:[2B3Dh]	; (9A19:2B3D=0A9A0h)
020A:AE6A  2B C8				sub	cx,ax
020A:AE6C  8B D1				mov	dx,cx
020A:AE6E  B1 04				mov	cl,4
020A:AE70  D3 C2				rol	dx,cl			; Rotate
020A:AE72  8B CA				mov	cx,dx
020A:AE74  83 E1 0F				and	cx,0Fh
020A:AE77  83 E2 F0				and	dx,0FFF0h
020A:AE7A  A1 2CC8				mov	ax,word ptr ds:[2CC8h]	; (9A19:2CC8=0E0E2h)
020A:AE7D  8B 1E 2CC6				mov	bx,word ptr ds:[2CC6h]	; (9A19:2CC6=0A5ACh)
020A:AE81  2B DA				sub	bx,dx
020A:AE83  73 01				jnc	loc_1858		; Jump if carry=0
020A:AE85  48					dec	ax
020A:AE86			loc_1858::
020A:AE86  2B C1				sub	ax,cx
020A:AE88  EB 07				jmp	short loc_1860		; (AE91)
020A:AE8A			loc_1859::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 376

020A:AE8A  A1 2CC8				mov	ax,word ptr ds:[2CC8h]	; (9A19:2CC8=0E0E2h)
020A:AE8D  8B 1E 2CC6				mov	bx,word ptr ds:[2CC6h]	; (9A19:2CC6=0A5ACh)
020A:AE91			loc_1860::
020A:AE91  BE 0008				mov	si,8
020A:AE94			loc_1861::
020A:AE94  03 9C 2BED				add	bx,word ptr ds:[2BEDh][si]	; (9A19:2BED=0A0AAh)
020A:AE98  73 01				jnc	loc_1862		; Jump if carry=0
020A:AE9A  40					inc	ax
020A:AE9B			loc_1862::
020A:AE9B  03 84 2BEB				add	ax,word ptr ds:[2BEBh][si]	; (9A19:2BEB=20A2h)
020A:AE9F  83 C6 08				add	si,8
020A:AEA2  83 FE 20				cmp	si,20h
020A:AEA5  76 ED				jbe	loc_1861		; Jump if below or =
020A:AEA7  B9 000A				mov	cx,0Ah

020A:AEAA			locloop_1863::
020A:AEAA  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:AEAC  D1 DB				rcr	bx,1			; Rotate thru carry
020A:AEAE  E2 FA				loop	locloop_1863		; Loop if cx > 0

020A:AEB0  3D 0000				cmp	ax,0
020A:AEB3  75 0C				jne	loc_1864		; Jump if not equal
020A:AEB5  8B C3				mov	ax,bx
020A:AEB7  B3 01				mov	bl,1
020A:AEB9  BD 1DBA				mov	bp,1DBAh
020A:AEBC  9A 168F:0288		;*		call	far ptr sub_152		;*(168F:0288)
020A:AEBC  9A					db	9Ah
020A:AEBD  0288 168F				dw	288h, 168Fh
020A:AEC1			loc_1864::
020A:AEC1  B8 0008				mov	ax,8
020A:AEC4  E9 0B99				jmp	loc_1987		; (BA60)
020A:AEC7			loc_1865::
020A:AEC7  8B 1E 2B3D				mov	bx,word ptr ds:[2B3Dh]	; (9A19:2B3D=0A9A0h)
020A:AECB  8E 06 5618				mov	es,word ptr ds:[5618h]	; (9A19:5618=0)
020A:AECF  B4 4A				mov	ah,4Ah
020A:AED1  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change memory allocation
										;   bx=bytes/16, es=mem segment
020A:AED3  73 07				jnc	loc_1866		; Jump if carry=0
020A:AED5  C6 06 1DD8 44			mov	byte ptr ds:[1DD8h],44h	; (9A19:1DD8=1Fh) 'D'
020A:AEDA  EB E5				jmp	short loc_1864		; (AEC1)
020A:AEDC			loc_1866::
020A:AEDC  8C C8				mov	ax,cs
020A:AEDE  03 06 2B3D				add	ax,word ptr ds:[2B3Dh]	; (9A19:2B3D=0A9A0h)
020A:AEE2  2D			data_714	db	2Dh
020A:AEE3  10 00				adc	[bx+si],al
020A:AEE5  8B D0				mov	dx,ax
020A:AEE7  A1 3037				mov	ax,word ptr ds:[3037h]	; (9A19:3037=0E0AAh)
020A:AEEA  8E C0				mov	es,ax
020A:AEEC  2B D0				sub	dx,ax
020A:AEEE			loc_1867::
020A:AEEE  8B C2				mov	ax,dx
020A:AEF0  25 F000				and	ax,0F000h
020A:AEF3  74 17				jz	loc_1868		; Jump if zero
020A:AEF5  81 EA 1000				sub	dx,1000h
020A:AEF9  B9 8000				mov	cx,8000h
020A:AEFC  33 FF				xor	di,di			; Zero register
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 377

020A:AEFE  33 C0				xor	ax,ax			; Zero register
020A:AF00  FC					cld				; Clear direction
020A:AF01  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:AF03  8C C0				mov	ax,es
020A:AF05  05 1000				add	ax,1000h
020A:AF08  8E C0				mov	es,ax
020A:AF0A  EB E2				jmp	short loc_1867		; (AEEE)
020A:AF0C			loc_1868::
020A:AF0C  B1 03				mov	cl,3
020A:AF0E  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:AF10  8B CA				mov	cx,dx
020A:AF12  33 FF				xor	di,di			; Zero register
020A:AF14  33 C0				xor	ax,ax			; Zero register
020A:AF16  FC					cld				; Clear direction
020A:AF17  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:AF19  C7 06 2B39 0040			mov	word ptr ds:[2B39h],40h	; (9A19:2B39=0AEAAh)
020A:AF1F  9A 168F:2C58		;*		call	far ptr sub_177		;*(168F:2C58)
020A:AF1F  9A					db	9Ah
020A:AF20  2C58 168F				dw	2C58h, 168Fh
020A:AF24  E8 DA66				call	sub_125			; (898D)
020A:AF27  A1 3037				mov	ax,word ptr ds:[3037h]	; (9A19:3037=0E0AAh)
020A:AF2A  A3 3039				mov	word ptr ds:[3039h],ax	; (9A19:3039=0ADA0h)
020A:AF2D  05 0010				add	ax,10h
020A:AF30  A3 2BE2				mov	word ptr ds:[2BE2h],ax	; (9A19:2BE2=0A7ECh)
020A:AF33  A3 2BE4				mov	word ptr ds:[2BE4h],ax	; (9A19:2BE4=0A5E3h)
020A:AF36  80 3E 327E 03			cmp	byte ptr ds:[327Eh],3	; (9A19:327E=20h)
020A:AF3B  75 1F				jne	loc_1870		; Jump if not equal
020A:AF3D  80 3E 2BE6 00			cmp	byte ptr ds:[2BE6h],0	; (9A19:2BE6=0ACh)
020A:AF42  75 02				jne	loc_1869		; Jump if not equal
020A:AF44  EB 1F				jmp	short loc_1871		; (AF65)
020A:AF46			loc_1869::
020A:AF46  C6 06 327E 07			mov	byte ptr ds:[327Eh],7	; (9A19:327E=20h)
020A:AF4B  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (9A19:327F=20h)
020A:AF50  73 0A				jae	loc_1870		; Jump if above or =
020A:AF52  C6 06 327F 07			mov	byte ptr ds:[327Fh],7	; (9A19:327F=20h)
020A:AF57  9A 168F:2B70		;*		call	far ptr sub_175		;*(168F:2B70)
020A:AF57  9A					db	9Ah
020A:AF58  2B70 168F				dw	2B70h, 168Fh
020A:AF5C			loc_1870::
020A:AF5C  9A 168F:3CC0		;*		call	far ptr sub_187		;*(168F:3CC0)
020A:AF5C  9A					db	9Ah
020A:AF5D  3CC0 168F				dw	3CC0h, 168Fh
020A:AF61  72 38				jc	loc_1872		; Jump if carry Set
020A:AF63  EB 39				jmp	short loc_1873		; (AF9E)
020A:AF65			loc_1871::
020A:AF65  FA					cli				; Disable interrupts
020A:AF66  2E: 8C 16 6052			mov	word ptr cs:[6052h],ss	; (020A:6052=4AD3h)
020A:AF6B  2E: 89 26 6050			mov	word ptr cs:[6050h],sp	; (020A:6050=8B47h)
020A:AF70  BC 00C8				mov	sp,0C8h
020A:AF73  FB					sti				; Enable interrupts
020A:AF74  BA 31F0				mov	dx,31F0h
020A:AF77  BB 2BE2				mov	bx,2BE2h
020A:AF7A  B0 03				mov	al,3
020A:AF7C  B4 4B				mov	ah,4Bh
020A:AF7E  CD 21				int	21h			; DOS Services  ah=function 4Bh
										;  load ovrly @ds:dx,parm @es:bx
										;   all regs & ss:sp destroyed
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 378

020A:AF80  FA					cli				; Disable interrupts
020A:AF81  2E: 8E 16 6052			mov	ss,word ptr cs:[6052h]	; (020A:6052=4AD3h)
020A:AF86  2E: 8B 26 6050			mov	sp,word ptr cs:[6050h]	; (020A:6050=8B47h)
020A:AF8B  FB					sti				; Enable interrupts
020A:AF8C  9C					pushf				; Push flags
020A:AF8D  E8 D9FD				call	sub_125			; (898D)
020A:AF90  E8 D9E2				call	sub_122			; (8975)
020A:AF93  9D					popf				; Pop flags
020A:AF94  73 08				jnc	loc_1873		; Jump if carry=0
020A:AF96  C6 06 1DD8 45			mov	byte ptr ds:[1DD8h],45h	; (9A19:1DD8=1Fh) 'E'
020A:AF9B			loc_1872::
020A:AF9B  E9 0AC2				jmp	loc_1987		; (BA60)
020A:AF9E			loc_1873::
020A:AF9E  C7 06 2B39 0041			mov	word ptr ds:[2B39h],41h	; (9A19:2B39=0AEAAh)
020A:AFA4  9A 168F:2C58		;*		call	far ptr sub_177		;*(168F:2C58)
020A:AFA4  9A					db	9Ah
020A:AFA5  2C58 168F				dw	2C58h, 168Fh
020A:AFA9  C6 06 5613 01			mov	byte ptr ds:[5613h],1	; (9A19:5613=0)
020A:AFAE  A1 3037				mov	ax,word ptr ds:[3037h]	; (9A19:3037=0E0AAh)
020A:AFB1  05 0010				add	ax,10h
020A:AFB4  A3 3033				mov	word ptr ds:[3033h],ax	; (9A19:3033=0AEA3h)
020A:AFB7  80 3E 3031 03			cmp	byte ptr ds:[3031h],3	; (9A19:3031=0A4h)
020A:AFBC  74 21				je	loc_1874		; Jump if equal
020A:AFBE  80 3E 3040 00			cmp	byte ptr ds:[3040h],0	; (9A19:3040=20h)
020A:AFC3  74 1D				je	loc_1875		; Jump if equal
020A:AFC5  E8 D9BC				call	sub_124			; (8984)
020A:AFC8  C6 06 3040 00			mov	byte ptr ds:[3040h],0	; (9A19:3040=20h)
020A:AFCD  C6 06 303B 00			mov	byte ptr ds:[303Bh],0	; (9A19:303B=0A0h)
020A:AFD2  BF 0000				mov	di,0
020A:AFD5  B9 1482				mov	cx,1482h
020A:AFD8  B0 FF				mov	al,0FFh
020A:AFDA  FC					cld				; Clear direction
020A:AFDB  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:AFDD  EB 03				jmp	short loc_1875		; (AFE2)
020A:AFDF			loc_1874::
020A:AFDF  E9 0944				jmp	loc_1972		; (B926)
020A:AFE2			loc_1875::
020A:AFE2  BB 0000				mov	bx,0
020A:AFE5  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (9A19:327F=20h)
020A:AFEA  74 0D				je	loc_1877		; Jump if equal
020A:AFEC  80 3E 327E 03			cmp	byte ptr ds:[327Eh],3	; (9A19:327E=20h)
020A:AFF1  75 03				jne	loc_1876		; Jump if not equal
020A:AFF3  E9 038F				jmp	loc_1921		; (B385)
020A:AFF6			loc_1876::
020A:AFF6  E9 0237				jmp	loc_1910		; (B230)
020A:AFF9			loc_1877::
020A:AFF9  C7 06 3039 0000			mov	word ptr ds:[3039h],0	; (9A19:3039=0ADA0h)
020A:AFFF  E8 D98E				call	sub_126			; (8990)
020A:B002  BE 0BC3				mov	si,0BC3h
020A:B005  26: 8B 6C 40				mov	bp,es:[si+40h]
020A:B009  03 EE				add	bp,si
020A:B00B  BF 0000				mov	di,0
020A:B00E  26: 8B 54 44				mov	dx,es:[si+44h]
020A:B012  0B D2				or	dx,dx			; Zero ?
020A:B014  75 03				jnz	loc_1878		; Jump if not zero
020A:B016  E9 010E				jmp	loc_1898		; (B127)
020A:B019			loc_1878::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 379

020A:B019  81 FA 00FA				cmp	dx,0FAh
020A:B01D  76 02				jbe	loc_1879		; Jump if below or =
020A:B01F  B2 FA				mov	dl,0FAh
020A:B021			loc_1879::
020A:B021  88 16 56BF				mov	byte ptr ds:[56BFh],dl	; (9A19:56BF=0)
020A:B025  8B C2				mov	ax,dx
020A:B027  26: 2B 44 18				sub	ax,es:[si+18h]
020A:B02B  40					inc	ax
020A:B02C  A2 56C1				mov	byte ptr ds:[56C1h],al	; (9A19:56C1=0)
020A:B02F  26: 8B 44 1C				mov	ax,es:[si+1Ch]
020A:B033  A3 56B5				mov	word ptr ds:[56B5h],ax	; (9A19:56B5=0)
020A:B036  26: 8B 44 28				mov	ax,es:[si+28h]
020A:B03A  33 C9				xor	cx,cx			; Zero register
020A:B03C			loc_1880::
020A:B03C  D1 C0				rol	ax,1			; Rotate
020A:B03E  FE C1				inc	cl
020A:B040  A9 8000				test	ax,8000h
020A:B043  74 F7				jz	loc_1880		; Jump if zero

020A:B045			locloop_1881::
020A:B045  D1 C8				ror	ax,1			; Rotate
020A:B047  0D 8000				or	ax,8000h
020A:B04A  E2 F9				loop	locloop_1881		; Loop if cx > 0

020A:B04C  A3 56B7				mov	word ptr ds:[56B7h],ax	; (9A19:56B7=0)
020A:B04F  33 C0				xor	ax,ax			; Zero register
020A:B051  33 DB				xor	bx,bx			; Zero register
020A:B053  EB 1E				jmp	short loc_1885		; (B073)
020A:B055			loc_1882::
020A:B055  26: 8B 46 EA				mov	ax,es:[bp-16h]
020A:B059  26: 8B 5E E8				mov	bx,es:[bp-18h]
020A:B05D  23 1E 56B7				and	bx,word ptr ds:[56B7h]	; (9A19:56B7=0)
020A:B061  26: 03 5C 28				add	bx,es:[si+28h]
020A:B065  73 01				jnc	loc_1883		; Jump if carry=0
020A:B067  40					inc	ax
020A:B068			loc_1883::
020A:B068  03 1E 56BD				add	bx,word ptr ds:[56BDh]	; (9A19:56BD=0)
020A:B06C  73 01				jnc	loc_1884		; Jump if carry=0
020A:B06E  40					inc	ax
020A:B06F			loc_1884::
020A:B06F  03 06 56BB				add	ax,word ptr ds:[56BBh]	; (9A19:56BB=0)
020A:B073			loc_1885::
020A:B073  A3 56BB				mov	word ptr ds:[56BBh],ax	; (9A19:56BB=0)
020A:B076  89 1E 56BD				mov	word ptr ds:[56BDh],bx	; (9A19:56BD=0)
020A:B07A  26: 3B 5E 04				cmp	bx,es:[bp+4]
020A:B07E  75 06				jne	loc_1886		; Jump if not equal
020A:B080  26: 3B 46 06				cmp	ax,es:[bp+6]
020A:B084  74 05				je	loc_1887		; Jump if equal
020A:B086			loc_1886::
020A:B086  C6 06 56C0 01			mov	byte ptr ds:[56C0h],1	; (9A19:56C0=0)
020A:B08B			loc_1887::
020A:B08B  8B D3				mov	dx,bx
020A:B08D  26: 8B 5E 00				mov	bx,es:[bp]
020A:B091  26: 8B 4E 02				mov	cx,es:[bp+2]
020A:B095  03 DA				add	bx,dx
020A:B097  73 01				jnc	loc_1888		; Jump if carry=0
020A:B099  41					inc	cx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 380

020A:B09A			loc_1888::
020A:B09A  03 C8				add	cx,ax
020A:B09C			loc_1889::
020A:B09C  3B C8				cmp	cx,ax
020A:B09E  74 15				je	loc_1891		; Jump if equal
020A:B0A0  53					push	bx
020A:B0A1  51					push	cx
020A:B0A2  BB FFFF				mov	bx,0FFFFh
020A:B0A5  9A 168F:3C04		;*		call	far ptr sub_186		;*(168F:3C04)
020A:B0A5  9A					db	9Ah
020A:B0A6  3C04 168F				dw	3C04h, 168Fh
020A:B0AA  72 07				jc	loc_1890		; Jump if carry Set
020A:B0AC  59					pop	cx
020A:B0AD  5B					pop	bx
020A:B0AE  40					inc	ax
020A:B0AF  33 D2				xor	dx,dx			; Zero register
020A:B0B1  EB E9				jmp	short loc_1889		; (B09C)
020A:B0B3			loc_1890::
020A:B0B3  EB 72				jmp	short loc_1898		; (B127)
020A:B0B5			loc_1891::
020A:B0B5  83 FB 00				cmp	bx,0
020A:B0B8  74 61				je	loc_1897		; Jump if equal
020A:B0BA  80 3E 56BF 01			cmp	byte ptr ds:[56BFh],1	; (9A19:56BF=0)
020A:B0BF  74 02				je	loc_1892		; Jump if equal
020A:B0C1  EB 51				jmp	short loc_1896		; (B114)
020A:B0C3			loc_1892::
020A:B0C3  53					push	bx
020A:B0C4  26: 8B 9C 0088			mov	bx,word ptr es:[88h][si]	; (F0AA:0088=2029h)
020A:B0C9  26: 8B 8C 008A			mov	cx,word ptr es:[8Ah][si]	; (F0AA:008A=414Ch)
020A:B0CE  26: 2B 9C 0080			sub	bx,word ptr es:[80h][si]	; (F0AA:0080=2D44h)
020A:B0D3  73 01				jnc	loc_1893		; Jump if carry=0
020A:B0D5  49					dec	cx
020A:B0D6			loc_1893::
020A:B0D6  26: 2B 8C 0082			sub	cx,word ptr es:[82h][si]	; (F0AA:0082=4F52h)
020A:B0DB  2B DA				sub	bx,dx
020A:B0DD  73 01				jnc	loc_1894		; Jump if carry=0
020A:B0DF  49					dec	cx
020A:B0E0			loc_1894::
020A:B0E0  2B C8				sub	cx,ax
020A:B0E2  75 2F				jnz	loc_1895		; Jump if not zero
020A:B0E4  26: 03 9C 008C			add	bx,word ptr es:[8Ch][si]	; (F0AA:008C=0A4Eh)
020A:B0E9  72 28				jc	loc_1895		; Jump if carry Set
020A:B0EB  8B CB				mov	cx,bx
020A:B0ED  26: 2B 8C 008C			sub	cx,word ptr es:[8Ch][si]	; (F0AA:008C=0A4Eh)
020A:B0F2  41					inc	cx
020A:B0F3  89 0E 302B				mov	word ptr ds:[302Bh],cx	; (9A19:302B=0EFA8h)
020A:B0F7  50					push	ax
020A:B0F8  B1 0C				mov	cl,0Ch
020A:B0FA  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:B0FC  03 06 3033				add	ax,word ptr ds:[3033h]	; (9A19:3033=0AEA3h)
020A:B100  A3 302D				mov	word ptr ds:[302Dh],ax	; (9A19:302D=0AA20h)
020A:B103  58					pop	ax
020A:B104  03 DA				add	bx,dx
020A:B106  72 0B				jc	loc_1895		; Jump if carry Set
020A:B108  8B CB				mov	cx,bx
020A:B10A  5B					pop	bx
020A:B10B  3B CB				cmp	cx,bx
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 381

020A:B10D  76 05				jbe	loc_1896		; Jump if below or =
020A:B10F  8B D9				mov	bx,cx
020A:B111  EB 01				jmp	short loc_1896		; (B114)
020A:B113			loc_1895::
020A:B113  5B					pop	bx
020A:B114			loc_1896::
020A:B114  9A 168F:3C04		;*		call	far ptr sub_186		;*(168F:3C04)
020A:B114  9A					db	9Ah
020A:B115  3C04 168F				dw	3C04h, 168Fh
020A:B119  72 0C				jc	loc_1898		; Jump if carry Set
020A:B11B			loc_1897::
020A:B11B  83 C5 18				add	bp,18h
020A:B11E  FE 0E 56BF				dec	byte ptr ds:[56BFh]	; (9A19:56BF=0)
020A:B122  74 03				jz	loc_1898		; Jump if zero
020A:B124  E9 FF2E				jmp	loc_1882		; (B055)
020A:B127			loc_1898::
020A:B127  A3 3066				mov	word ptr ds:[3066h],ax	; (9A19:3066=20A2h)
020A:B12A  80 3E 56C0 01			cmp	byte ptr ds:[56C0h],1	; (9A19:56C0=0)
020A:B12F  75 09				jne	loc_1899		; Jump if not equal
020A:B131  B4 42				mov	ah,42h			; 'B'
020A:B133  B0 04				mov	al,4
020A:B135  9A 168F:57A4		;*		call	far ptr sub_199		;*(168F:57A4)
020A:B135  9A					db	9Ah
020A:B136  57A4 168F				dw	57A4h, 168Fh
020A:B13A			loc_1899::
020A:B13A  E8 D853				call	sub_126			; (8990)
020A:B13D  BE 0BC3				mov	si,0BC3h
020A:B140  26: 8B 6C 40				mov	bp,es:[si+40h]
020A:B144  03 EE				add	bp,si
020A:B146  26: 8B 7C 68				mov	di,es:[si+68h]
020A:B14A  03 FE				add	di,si
020A:B14C  26: 8B 54 44				mov	dx,es:[si+44h]
020A:B150  80 FA 01				cmp	dl,1
020A:B153  77 03				ja	loc_1900		; Jump if above
020A:B155  E9 00B8				jmp	loc_1908		; (B210)
020A:B158			loc_1900::
020A:B158  C7 06 56B7 0000			mov	word ptr ds:[56B7h],0	; (9A19:56B7=0)
020A:B15E  26: 8B 5E 10				mov	bx,es:[bp+10h]
020A:B162  8A F3				mov	dh,bl
020A:B164  0A F6				or	dh,dh			; Zero ?
020A:B166  75 03				jnz	loc_1901		; Jump if not zero
020A:B168  E9 009F				jmp	loc_1907		; (B20A)
020A:B16B			loc_1901::
020A:B16B  26: 8B 1D				mov	bx,es:[di]
020A:B16E  26: 03 5C 6C				add	bx,es:[si+6Ch]
020A:B172  03 DE				add	bx,si
020A:B174  83 C7 04				add	di,4
020A:B177  26: 8B 0D				mov	cx,es:[di]
020A:B17A  26: 03 4C 6C				add	cx,es:[si+6Ch]
020A:B17E  03 CE				add	cx,si
020A:B180  89 0E 56B9				mov	word ptr ds:[56B9h],cx	; (9A19:56B9=0)
020A:B184  3B D9				cmp	bx,cx
020A:B186  72 02				jb	loc_1902		; Jump if below
020A:B188  EB 6A				jmp	short loc_1905		; (B1F4)
020A:B18A			loc_1902::
020A:B18A  26: 8A 0F				mov	cl,es:[bx]
020A:B18D  F6 C1 20				test	cl,20h			; ' '
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 382

020A:B190  75 4E				jnz	loc_1903		; Jump if not zero
020A:B192  80 E1 0F				and	cl,0Fh
020A:B195  80 F9 08				cmp	cl,8
020A:B198  75 51				jne	loc_1904		; Jump if not equal
020A:B19A  55					push	bp
020A:B19B  26: 8A 4F 04				mov	cl,es:[bx+4]
020A:B19F  FE C9				dec	cl
020A:B1A1  B0 18				mov	al,18h
020A:B1A3  F6 E1				mul	cl			; ax = reg * al
020A:B1A5  26: 8B 6C 40				mov	bp,es:[si+40h]
020A:B1A9  03 EE				add	bp,si
020A:B1AB  03 E8				add	bp,ax
020A:B1AD  26: 8B 46 04				mov	ax,es:[bp+4]
020A:B1B1  26: 03 47 05				add	ax,es:[bx+5]
020A:B1B5  5D					pop	bp
020A:B1B6  26: 8B 4E 04				mov	cx,es:[bp+4]
020A:B1BA  26: 03 4F 02				add	cx,es:[bx+2]
020A:B1BE  03 0E 56B7				add	cx,word ptr ds:[56B7h]	; (9A19:56B7=0)
020A:B1C2  83 C1 04				add	cx,4
020A:B1C5  2B C1				sub	ax,cx
020A:B1C7  83 E9 04				sub	cx,4
020A:B1CA  53					push	bx
020A:B1CB  52					push	dx
020A:B1CC  06					push	es
020A:B1CD  8B D9				mov	bx,cx
020A:B1CF  8E 06 3033				mov	es,word ptr ds:[3033h]	; (9A19:3033=0AEA3h)
020A:B1D3  99					cwd				; Word to double word
020A:B1D4  26: 89 07				mov	es:[bx],ax
020A:B1D7  26: 89 57 02				mov	es:[bx+2],dx
020A:B1DB  07					pop	es
020A:B1DC  5A					pop	dx
020A:B1DD  5B					pop	bx
020A:B1DE  EB 0B				jmp	short loc_1904		; (B1EB)
020A:B1E0			loc_1903::
020A:B1E0  26: 8A 47 02				mov	al,es:[bx+2]
020A:B1E4  32 E4				xor	ah,ah			; Zero register
020A:B1E6  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:B1E8  03 D8				add	bx,ax
020A:B1EA  4B					dec	bx
020A:B1EB			loc_1904::
020A:B1EB  83 C3 07				add	bx,7
020A:B1EE  3B 1E 56B9				cmp	bx,word ptr ds:[56B9h]	; (9A19:56B9=0)
020A:B1F2  72 96				jb	loc_1902		; Jump if below
020A:B1F4			loc_1905::
020A:B1F4  26: 8B 44 28				mov	ax,es:[si+28h]
020A:B1F8  01 06 56B7				add	word ptr ds:[56B7h],ax	; (9A19:56B7=0)
020A:B1FC  FE CE				dec	dh
020A:B1FE  74 03				jz	loc_1906		; Jump if zero
020A:B200  E9 FF68				jmp	loc_1901		; (B16B)
020A:B203			loc_1906::
020A:B203  FE CA				dec	dl
020A:B205  80 FA 01				cmp	dl,1
020A:B208  76 06				jbe	loc_1908		; Jump if below or =
020A:B20A			loc_1907::
020A:B20A  83 C5 18				add	bp,18h
020A:B20D  E9 FF48				jmp	loc_1900		; (B158)
020A:B210			loc_1908::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 383

020A:B210  A0 30A0				mov	al,byte ptr ds:[30A0h]	; (9A19:30A0=0ADh)
020A:B213  3C 28				cmp	al,28h			; '('
020A:B215  74 16				je	loc_1909		; Jump if equal
020A:B217  3C 48				cmp	al,48h			; 'H'
020A:B219  74 12				je	loc_1909		; Jump if equal
020A:B21B  C6 06 30A0 28			mov	byte ptr ds:[30A0h],28h	; (9A19:30A0=0ADh) '('
020A:B220  B6 01				mov	dh,1
020A:B222  E8 BC63				call	sub_91			; (6E88)
020A:B225  A0 35E4				mov	al,byte ptr ds:[35E4h]	; (9A19:35E4=0AAh)
020A:B228  9A 168F:09D8		;*		call	far ptr sub_163		;*(168F:09D8)
020A:B228  9A					db	9Ah
020A:B229  09D8 168F				dw	9D8h, 168Fh
020A:B22D			loc_1909::
020A:B22D  E9 06F6				jmp	loc_1972		; (B926)
020A:B230			loc_1910::
020A:B230  BB 0000				mov	bx,0
020A:B233  E8 D75A				call	sub_126			; (8990)
020A:B236  26: 80 3E 0BC3 E9			cmp	byte ptr es:[0BC3h],0E9h	; (F0AA:0BC3=51h)
020A:B23C  75 25				jne	loc_1911		; Jump if not equal
020A:B23E  BE 46F1				mov	si,46F1h
020A:B241  BF 0BC6				mov	di,0BC6h
020A:B244  B9 4700				mov	cx,4700h
020A:B247  81 E9 46F1				sub	cx,46F1h
020A:B24B  FC					cld				; Clear direction
020A:B24C  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020A:B24E  83 F9 00				cmp	cx,0
020A:B251  75 10				jne	loc_1911		; Jump if not equal
020A:B253  B4 2D				mov	ah,2Dh			; '-'
020A:B255  B0 04				mov	al,4
020A:B257  9A 168F:57A4		;*		call	far ptr sub_199		;*(168F:57A4)
020A:B257  9A					db	9Ah
020A:B258  57A4 168F				dw	57A4h, 168Fh
020A:B25C  C6 06 4700 01			mov	byte ptr ds:[4700h],1	; (9A19:4700=0F9h)
020A:B261  EB 24				jmp	short loc_1912		; (B287)
020A:B263			loc_1911::
020A:B263  26: 81 3E 0BF3 4B50			cmp	word ptr es:[0BF3h],4B50h	; (F0AA:0BF3=1)
020A:B26A  75 1B				jne	loc_1912		; Jump if not equal
020A:B26C  26: 81 3E 0BF5 494C			cmp	word ptr es:[0BF5h],494Ch	; (F0AA:0BF5=2EBh)
020A:B273  75 12				jne	loc_1912		; Jump if not equal
020A:B275  26: 81 3E 0BF7 4554			cmp	word ptr es:[0BF7h],4554h	; (F0AA:0BF7=0C031h)
020A:B27C  75 09				jne	loc_1912		; Jump if not equal
020A:B27E  B4 44				mov	ah,44h			; 'D'
020A:B280  B0 04				mov	al,4
020A:B282  9A 168F:57A4		;*		call	far ptr sub_199		;*(168F:57A4)
020A:B282  9A					db	9Ah
020A:B283  57A4 168F				dw	57A4h, 168Fh
020A:B287			loc_1912::
020A:B287  C7 06 302B 0000			mov	word ptr ds:[302Bh],0	; (9A19:302B=0EFA8h)
020A:B28D  80 3E 327F 02			cmp	byte ptr ds:[327Fh],2	; (9A19:327F=20h)
020A:B292  74 0E				je	loc_1913		; Jump if equal
020A:B294  80 3E 327F 04			cmp	byte ptr ds:[327Fh],4	; (9A19:327F=20h)
020A:B299  74 07				je	loc_1913		; Jump if equal
020A:B29B  80 3E 327F 05			cmp	byte ptr ds:[327Fh],5	; (9A19:327F=20h)
020A:B2A0  75 17				jne	loc_1914		; Jump if not equal
020A:B2A2			loc_1913::
020A:B2A2  9A 168F:4548		;*		call	far ptr sub_193		;*(168F:4548)
020A:B2A2  9A					db	9Ah
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 384

020A:B2A3  4548 168F				dw	4548h, 168Fh
020A:B2A7  73 10				jnc	loc_1914		; Jump if carry=0
020A:B2A9  C6 06 327F 05			mov	byte ptr ds:[327Fh],5	; (9A19:327F=20h)
020A:B2AE  9A 168F:2B70		;*		call	far ptr sub_175		;*(168F:2B70)
020A:B2AE  9A					db	9Ah
020A:B2AF  2B70 168F				dw	2B70h, 168Fh
020A:B2B3  C7 06 302B 000A			mov	word ptr ds:[302Bh],0Ah	; (9A19:302B=0EFA8h)
020A:B2B9			loc_1914::
020A:B2B9  A1 3033				mov	ax,word ptr ds:[3033h]	; (9A19:3033=0AEA3h)
020A:B2BC  C7 06 3039 0000			mov	word ptr ds:[3039h],0	; (9A19:3039=0ADA0h)
020A:B2C2  80 3E 327F 02			cmp	byte ptr ds:[327Fh],2	; (9A19:327F=20h)
020A:B2C7  75 09				jne	loc_1915		; Jump if not equal
020A:B2C9  2D 0010				sub	ax,10h
020A:B2CC  A3 3033				mov	word ptr ds:[3033h],ax	; (9A19:3033=0AEA3h)
020A:B2CF  A3 3039				mov	word ptr ds:[3039h],ax	; (9A19:3039=0ADA0h)
020A:B2D2			loc_1915::
020A:B2D2  E8 D6AF				call	sub_124			; (8984)
020A:B2D5  26: 89 07				mov	es:[bx],ax
020A:B2D8  26: 89 47 06				mov	es:[bx+6],ax
020A:B2DC  26: 89 47 08				mov	es:[bx+8],ax
020A:B2E0  26: C6 47 0E 00			mov	byte ptr es:[bx+0Eh],0
020A:B2E5  26: C7 47 0C 0000			mov	word ptr es:[bx+0Ch],0
020A:B2EB  A3 3066				mov	word ptr ds:[3066h],ax	; (9A19:3066=20A2h)
020A:B2EE  33 C0				xor	ax,ax			; Zero register
020A:B2F0  8B 0E 2CC8				mov	cx,word ptr ds:[2CC8h]	; (9A19:2CC8=0E0E2h)
020A:B2F4  8B 16 2CC6				mov	dx,word ptr ds:[2CC6h]	; (9A19:2CC6=0A5ACh)
020A:B2F8  80 3E 327F 02			cmp	byte ptr ds:[327Fh],2	; (9A19:327F=20h)
020A:B2FD  75 32				jne	loc_1918		; Jump if not equal
020A:B2FF  B8 0100				mov	ax,100h
020A:B302  C7 06 302B 0100			mov	word ptr ds:[302Bh],100h	; (9A19:302B=0EFA8h)
020A:B308  26: 89 47 02				mov	es:[bx+2],ax
020A:B30C  83 F9 00				cmp	cx,0
020A:B30F  75 06				jne	loc_1916		; Jump if not equal
020A:B311  81 FA FEFF				cmp	dx,0FEFFh
020A:B315  72 06				jb	loc_1917		; Jump if below
020A:B317			loc_1916::
020A:B317  B8 0030				mov	ax,30h
020A:B31A  E9 0743				jmp	loc_1987		; (BA60)
020A:B31D			loc_1917::
020A:B31D  03 C2				add	ax,dx
020A:B31F  48					dec	ax
020A:B320  26: 89 47 04				mov	es:[bx+4],ax
020A:B324  26: C7 47 0A 0000			mov	word ptr es:[bx+0Ah],0
020A:B32A  FE 06 3040				inc	byte ptr ds:[3040h]	; (9A19:3040=20h)
020A:B32E  E9 05F5				jmp	loc_1972		; (B926)
020A:B331			loc_1918::
020A:B331  26: 89 47 02				mov	es:[bx+2],ax
020A:B335  83 F9 00				cmp	cx,0
020A:B338  75 17				jne	loc_1920		; Jump if not equal
020A:B33A  83 FA 01				cmp	dx,1
020A:B33D  76 0F				jbe	loc_1919		; Jump if below or =
020A:B33F  4A					dec	dx
020A:B340  26: 89 57 04				mov	es:[bx+4],dx
020A:B344  26: C7 47 0A 0000			mov	word ptr es:[bx+0Ah],0
020A:B34A  FE 06 3040				inc	byte ptr ds:[3040h]	; (9A19:3040=20h)
020A:B34E			loc_1919::
020A:B34E  E9 05D5				jmp	loc_1972		; (B926)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 385

020A:B351			loc_1920::
020A:B351  26: C7 47 04 FFFF			mov	word ptr es:[bx+4],0FFFFh
020A:B357  26: C7 47 0A 0000			mov	word ptr es:[bx+0Ah],0
020A:B35D  FE 06 3040				inc	byte ptr ds:[3040h]	; (9A19:3040=20h)
020A:B361  49					dec	cx
020A:B362  26: 8B 07				mov	ax,es:[bx]
020A:B365  83 C3 15				add	bx,15h
020A:B368  05 1000				add	ax,1000h
020A:B36B  26: 89 07				mov	es:[bx],ax
020A:B36E  26: 89 47 06				mov	es:[bx+6],ax
020A:B372  26: 89 47 08				mov	es:[bx+8],ax
020A:B376  26: C6 47 0E 00			mov	byte ptr es:[bx+0Eh],0
020A:B37B  26: C7 47 0C 0000			mov	word ptr es:[bx+0Ch],0
020A:B381  33 C0				xor	ax,ax			; Zero register
020A:B383  EB AC				jmp	short loc_1918		; (B331)
				sub_141		endp

020A:B385			loc_1921::
020A:B385  C7 06 2B39 0042			mov	word ptr ds:[2B39h],42h	; (9A19:2B39=0AEAAh)
020A:B38B  9A 168F:2C58		;*		call	far ptr sub_177		;*(168F:2C58)
020A:B38B  9A					db	9Ah
020A:B38C  2C58 168F				dw	2C58h, 168Fh
020A:B390  8B FB				mov	di,bx
020A:B392  C7 06 302B 0000			mov	word ptr ds:[302Bh],0	; (9A19:302B=0EFA8h)
020A:B398  9A 168F:4548		;*		call	far ptr sub_193		;*(168F:4548)
020A:B398  9A					db	9Ah
020A:B399  4548 168F				dw	4548h, 168Fh
020A:B39D  73 0F				jnc	loc_1922		; Jump if carry=0
020A:B39F  C6 06 327F 05			mov	byte ptr ds:[327Fh],5	; (9A19:327F=20h)
020A:B3A4  C6 06 1504 01			mov	byte ptr ds:[1504h],1	; (9A19:1504=2)
020A:B3A9  9A 168F:2B70		;*		call	far ptr sub_175		;*(168F:2B70)
020A:B3A9  9A					db	9Ah
020A:B3AA  2B70 168F				dw	2B70h, 168Fh
020A:B3AE			loc_1922::
020A:B3AE  E8 D5DF				call	sub_126			; (8990)
020A:B3B1  26: 81 3E 0BC3 5A4D			cmp	word ptr es:[0BC3h],5A4Dh	; (F0AA:0BC3=5251h)
020A:B3B8  74 06				je	loc_1923		; Jump if equal
020A:B3BA  B8 0014				mov	ax,14h
020A:B3BD  E9 06A0				jmp	loc_1987		; (BA60)
020A:B3C0			loc_1923::
020A:B3C0  33 C0				xor	ax,ax			; Zero register
020A:B3C2  26: 39 06 0BC9			cmp	word ptr es:[0BC9h],ax	; (F0AA:0BC9=0C28Bh)
020A:B3C7  75 76				jne	loc_1929		; Jump if not equal
020A:B3C9  26: 39 06 0BCD			cmp	word ptr es:[0BCDh],ax	; (F0AA:0BCD=10EAh)
020A:B3CE  74 6F				je	loc_1929		; Jump if equal
020A:B3D0  26: 81 3E 0BD7 0100			cmp	word ptr es:[0BD7h],100h	; (F0AA:0BD7=0E2C1h)
020A:B3D7  77 07				ja	loc_1924		; Jump if above
020A:B3D9  26: 39 06 0BD9			cmp	word ptr es:[0BD9h],ax	; (F0AA:0BD9=8B10h)
020A:B3DE  74 5F				je	loc_1929		; Jump if equal
020A:B3E0			loc_1924::
020A:B3E0  26: 8B 1E 0BD7			mov	bx,word ptr es:[0BD7h]	; (F0AA:0BD7=0E2C1h)
020A:B3E5  83 FB 01				cmp	bx,1
020A:B3E8  74 55				je	loc_1929		; Jump if equal
020A:B3EA  A1 3033				mov	ax,word ptr ds:[3033h]	; (9A19:3033=0AEA3h)
020A:B3ED  26: 03 06 0BD9			add	ax,word ptr es:[0BD9h]	; (F0AA:0BD9=8B10h)
020A:B3F2  06					push	es
020A:B3F3  8E C0				mov	es,ax
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 386

020A:B3F5  26: 81 7F FE 4252			cmp	word ptr es:[bx-2],4252h
020A:B3FB  07					pop	es
020A:B3FC  74 38				jz	loc_1928		; Jump if zero
020A:B3FE  83 FB 10				cmp	bx,10h
020A:B401  75 18				jne	loc_1926		; Jump if not equal
020A:B403  06					push	es
020A:B404  8E C0				mov	es,ax
020A:B406  26: 81 3E 00C8 2EFB			cmp	word ptr es:[0C8h],2EFBh	; (39B3:00C8=0A0F7h)
020A:B40D  75 07				jne	loc_1925		; Jump if not equal
020A:B40F  26: 81 3E 00CA 2FFF			cmp	word ptr es:[0CAh],2FFFh	; (39B3:00CA=4481h)
020A:B416			loc_1925::
020A:B416  07					pop	es
020A:B417  75 26				jnz	loc_1929		; Jump if not zero
020A:B419  EB 1B				jmp	short loc_1928		; (B436)
020A:B41B			loc_1926::
020A:B41B  83 FB 0E				cmp	bx,0Eh
020A:B41E  75 1F				jne	loc_1929		; Jump if not equal
020A:B420  06					push	es
020A:B421  8E C0				mov	es,ax
020A:B423  26: 81 3E 0154 2EFB			cmp	word ptr es:[154h],2EFBh	; (39B3:0154=0F7h)
020A:B42A  75 07				jne	loc_1927		; Jump if not equal
020A:B42C  26: 81 3E 0156 2FFF			cmp	word ptr es:[156h],2FFFh	; (39B3:0156=0)
020A:B433			loc_1927::
020A:B433  07					pop	es
020A:B434  75 09				jnz	loc_1929		; Jump if not zero
020A:B436			loc_1928::
020A:B436  B4 21				mov	ah,21h			; '!'
020A:B438  B0 04				mov	al,4
020A:B43A  9A 168F:57A4		;*		call	far ptr sub_199		;*(168F:57A4)
020A:B43A  9A					db	9Ah
020A:B43B  57A4 168F				dw	57A4h, 168Fh
020A:B43F			loc_1929::
020A:B43F  26: 83 3E 0BC9 00			cmp	word ptr es:[0BC9h],0	; (F0AA:0BC9=0C28Bh)
020A:B445  75 42				jne	loc_1930		; Jump if not equal
020A:B447  26: 83 3E 0BD1 F0			cmp	word ptr es:[0BD1h],0FFF0h	; (F0AA:0BD1=0D189h)
020A:B44D  75 3A				jne	loc_1930		; Jump if not equal
020A:B44F  26: 83 3E 0BD3 FE			cmp	word ptr es:[0BD3h],0FFFEh	; (F0AA:0BD3=0F280h)
020A:B455  72 32				jb	loc_1930		; Jump if below
020A:B457  26: 81 3E 0BD7 0100			cmp	word ptr es:[0BD7h],100h	; (F0AA:0BD7=0E2C1h)
020A:B45E  75 29				jne	loc_1930		; Jump if not equal
020A:B460  26: 83 3E 0BD9 F0			cmp	word ptr es:[0BD9h],0FFF0h	; (F0AA:0BD9=8B10h)
020A:B466  75 21				jne	loc_1930		; Jump if not equal
020A:B468  83 3E 2CC8 00			cmp	word ptr ds:[2CC8h],0	; (9A19:2CC8=0E0E2h)
020A:B46D  75 1A				jne	loc_1930		; Jump if not equal
020A:B46F  81 3E 2CC6 FE00			cmp	word ptr ds:[2CC6h],0FE00h	; (9A19:2CC6=0A5ACh)
020A:B475  73 12				jae	loc_1930		; Jump if above or =
020A:B477  C6 06 327E 02			mov	byte ptr ds:[327Eh],2	; (9A19:327E=20h)
020A:B47C  C6 06 327F 02			mov	byte ptr ds:[327Fh],2	; (9A19:327F=20h)
020A:B481  9A 168F:2B70		;*		call	far ptr sub_175		;*(168F:2B70)
020A:B481  9A					db	9Ah
020A:B482  2B70 168F				dw	2B70h, 168Fh
020A:B486  E9 FDA7				jmp	loc_1910		; (B230)
020A:B489			loc_1930::
020A:B489  C7 06 2B39 0043			mov	word ptr ds:[2B39h],43h	; (9A19:2B39=0AEAAh)
020A:B48F  9A 168F:2C58		;*		call	far ptr sub_177		;*(168F:2C58)
020A:B48F  9A					db	9Ah
020A:B490  2C58 168F				dw	2C58h, 168Fh
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 387

020A:B494  26: A1 0BC9				mov	ax,word ptr es:[0BC9h]	; (F0AA:0BC9=0C28Bh)
020A:B498  A3 4395				mov	word ptr ds:[4395h],ax	; (9A19:4395=7465h)
020A:B49B  3D 2243				cmp	ax,2243h
020A:B49E  76 03				jbe	loc_1931		; Jump if below or =
020A:B4A0  B8 2243				mov	ax,2243h
020A:B4A3			loc_1931::
020A:B4A3  A3 4397				mov	word ptr ds:[4397h],ax	; (9A19:4397=2029h)
020A:B4A6  26: A1 0BD1				mov	ax,word ptr es:[0BD1h]	; (F0AA:0BD1=0D189h)
020A:B4AA  26: 8B 1E 0BD3			mov	bx,word ptr es:[0BD3h]	; (F0AA:0BD3=0F280h)
020A:B4AF  E8 D4D2				call	sub_124			; (8984)
020A:B4B2  0B C0				or	ax,ax			; Zero ?
020A:B4B4  75 04				jnz	loc_1932		; Jump if not zero
020A:B4B6  0B DB				or	bx,bx			; Zero ?
020A:B4B8  74 40				jz	loc_1935		; Jump if zero
020A:B4BA			loc_1932::
020A:B4BA  C6 06 303B 01			mov	byte ptr ds:[303Bh],1	; (9A19:303B=0A0h)
020A:B4BF  3D FFF0				cmp	ax,0FFF0h
020A:B4C2  75 05				jne	loc_1933		; Jump if not equal
020A:B4C4  A1 3039				mov	ax,word ptr ds:[3039h]	; (9A19:3039=0ADA0h)
020A:B4C7  EB 04				jmp	short loc_1934		; (B4CD)
020A:B4C9			loc_1933::
020A:B4C9  03 06 3033				add	ax,word ptr ds:[3033h]	; (9A19:3033=0AEA3h)
020A:B4CD			loc_1934::
020A:B4CD  26: 89 05				mov	es:[di],ax
020A:B4D0  A3 303C				mov	word ptr ds:[303Ch],ax	; (9A19:303C=0D2Eh)
020A:B4D3  A3 3066				mov	word ptr ds:[3066h],ax	; (9A19:3066=20A2h)
020A:B4D6  26: C7 45 02 0000			mov	word ptr es:[di+2],0
020A:B4DC  4B					dec	bx
020A:B4DD  26: 89 5D 04				mov	es:[di+4],bx
020A:B4E1  89 1E 3064				mov	word ptr ds:[3064h],bx	; (9A19:3064=20A2h)
020A:B4E5  26: C7 45 0A 0003			mov	word ptr es:[di+0Ah],3
020A:B4EB  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:B4F0  26: C7 45 0C 0000			mov	word ptr es:[di+0Ch],0
020A:B4F6  FE 06 3040				inc	byte ptr ds:[3040h]	; (9A19:3040=20h)
020A:B4FA			loc_1935::
020A:B4FA  A1 3033				mov	ax,word ptr ds:[3033h]	; (9A19:3033=0AEA3h)
020A:B4FD  80 3E 303B 01			cmp	byte ptr ds:[303Bh],1	; (9A19:303B=0A0h)
020A:B502  75 08				jne	loc_1936		; Jump if not equal
020A:B504  26: 3B 05				cmp	ax,es:[di]
020A:B507  74 29				je	loc_1937		; Jump if equal
020A:B509  83 C7 15				add	di,15h
020A:B50C			loc_1936::
020A:B50C  26: 89 45 06				mov	es:[di+6],ax
020A:B510  26: 89 45 08				mov	es:[di+8],ax
020A:B514  26: 89 05				mov	es:[di],ax
020A:B517  26: C7 45 02 0000			mov	word ptr es:[di+2],0
020A:B51D  26: C7 45 0A 0000			mov	word ptr es:[di+0Ah],0
020A:B523  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:B528  26: C7 45 0C 0000			mov	word ptr es:[di+0Ch],0
020A:B52E  FE 06 3040				inc	byte ptr ds:[3040h]	; (9A19:3040=20h)
020A:B532			loc_1937::
020A:B532  A1 3033				mov	ax,word ptr ds:[3033h]	; (9A19:3033=0AEA3h)
020A:B535  8B D8				mov	bx,ax
020A:B537  E8 D456				call	sub_126			; (8990)
020A:B53A  26: 03 1E 0BD9			add	bx,word ptr es:[0BD9h]	; (F0AA:0BD9=8B10h)
020A:B53F  33 C0				xor	ax,ax			; Zero register
020A:B541  BA 0010				mov	dx,10h
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 388

020A:B544  E8 C275				call	sub_111			; (77BC)
020A:B547  72 28				jc	loc_1938		; Jump if carry Set
020A:B549  26: 89 1D				mov	es:[di],bx
020A:B54C  33 C0				xor	ax,ax			; Zero register
020A:B54E  26: 89 45 02				mov	es:[di+2],ax
020A:B552  26: 89 45 04				mov	es:[di+4],ax
020A:B556  26: 89 45 0A				mov	es:[di+0Ah],ax
020A:B55A  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:B55F  26: C7 45 0C 0000			mov	word ptr es:[di+0Ch],0
020A:B565  26: 89 5D 06				mov	es:[di+6],bx
020A:B569  26: 89 5D 08				mov	es:[di+8],bx
020A:B56D  FE 06 3040				inc	byte ptr ds:[3040h]	; (9A19:3040=20h)
020A:B571			loc_1938::
020A:B571  C7 06 2B39 0044			mov	word ptr ds:[2B39h],44h	; (9A19:2B39=0AEAAh)
020A:B577  9A 168F:2C58		;*		call	far ptr sub_177		;*(168F:2C58)
020A:B577  9A					db	9Ah
020A:B578  2C58 168F				dw	2C58h, 168Fh
020A:B57C  E8 D411				call	sub_126			; (8990)
020A:B57F  26: 8B 2E 0BDB			mov	bp,word ptr es:[0BDBh]	; (F0AA:0BDB=66D0h)
020A:B584  81 C5 0BC3				add	bp,0BC3h
020A:B588  26: 8B 36 0BC7			mov	si,word ptr es:[0BC7h]	; (F0AA:0BC7=5A66h)
020A:B58D  B1 05				mov	cl,5
020A:B58F  D3 E6				shl	si,cl			; Shift w/zeros fill
020A:B591  26: A1 0BC5				mov	ax,word ptr es:[0BC5h]	; (F0AA:0BC5=9C66h)
020A:B595  B1 04				mov	cl,4
020A:B597  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:B599  03 F0				add	si,ax
020A:B59B  83 EE 1F				sub	si,1Fh
020A:B59E  26: 2B 36 0BCB			sub	si,word ptr es:[0BCBh]	; (F0AA:0BCB=0C166h)
020A:B5A3  03 36 3033				add	si,word ptr ds:[3033h]	; (9A19:3033=0AEA3h)
020A:B5A7			loc_1939::
020A:B5A7  83 3E 4395 00			cmp	word ptr ds:[4395h],0	; (9A19:4395=7465h)
020A:B5AC  75 03				jne	loc_1940		; Jump if not equal
020A:B5AE  E9 009B				jmp	loc_1946		; (B64C)
020A:B5B1			loc_1940::
020A:B5B1  E8 D3DC				call	sub_126			; (8990)
020A:B5B4  26: 8B 5E 00				mov	bx,es:[bp]
020A:B5B8  A1 3033				mov	ax,word ptr ds:[3033h]	; (9A19:3033=0AEA3h)
020A:B5BB  26: 03 46 02				add	ax,es:[bp+2]
020A:B5BF  8E C0				mov	es,ax
020A:B5C1  26: 8B 1F				mov	bx,es:[bx]
020A:B5C4  3B DE				cmp	bx,si
020A:B5C6  72 02				jb	loc_1941		; Jump if below
020A:B5C8  EB 37				jmp	short loc_1942		; (B601)
020A:B5CA			loc_1941::
020A:B5CA  33 C0				xor	ax,ax			; Zero register
020A:B5CC  BA 0010				mov	dx,10h
020A:B5CF  E8 C1EA				call	sub_111			; (77BC)
020A:B5D2  72 2D				jc	loc_1942		; Jump if carry Set
020A:B5D4  26: 89 1D				mov	es:[di],bx
020A:B5D7  26: 89 45 02				mov	es:[di+2],ax
020A:B5DB  26: 89 45 04				mov	es:[di+4],ax
020A:B5DF  26: 89 5D 06				mov	es:[di+6],bx
020A:B5E3  26: 89 5D 08				mov	es:[di+8],bx
020A:B5E7  26: 89 45 0A				mov	es:[di+0Ah],ax
020A:B5EB  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:B5F0  26: C7 45 0C 0000			mov	word ptr es:[di+0Ch],0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 389

020A:B5F6  FE 06 3040				inc	byte ptr ds:[3040h]	; (9A19:3040=20h)
020A:B5FA  80 3E 3040 FA			cmp	byte ptr ds:[3040h],0FAh	; (9A19:3040=20h)
020A:B5FF  73 4B				jae	loc_1946		; Jump if above or =
020A:B601			loc_1942::
020A:B601  83 C5 04				add	bp,4
020A:B604  81 FD 2C40				cmp	bp,2C40h
020A:B608  72 3B				jb	loc_1945		; Jump if below
020A:B60A  BB 2C43				mov	bx,2C43h
020A:B60D  2B DD				sub	bx,bp
020A:B60F  0B DB				or	bx,bx			; Zero ?
020A:B611  74 10				jz	loc_1943		; Jump if zero
020A:B613  B9 FFFF				mov	cx,0FFFFh
020A:B616  33 D2				xor	dx,dx			; Zero register
020A:B618  2B D3				sub	dx,bx
020A:B61A  B8 4201				mov	ax,4201h
020A:B61D  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (9A19:4152=4C52h)
020A:B621  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, bx=file handle
										;   al=method, cx,dx=offset
020A:B623			loc_1943::
020A:B623  B9 2C43				mov	cx,2C43h
020A:B626  81 E9 0C43				sub	cx,0C43h
020A:B62A  BA 0C43				mov	dx,0C43h
020A:B62D  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (9A19:4152=4C52h)
020A:B631  E8 D344				call	sub_123			; (8978)
020A:B634  B4 3F				mov	ah,3Fh
020A:B636  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, bx=file handle
										;   cx=bytes to ds:dx buffer
020A:B638  E8 D33A				call	sub_122			; (8975)
020A:B63B  73 05				jnc	loc_1944		; Jump if carry=0
020A:B63D  B3 0E				mov	bl,0Eh
020A:B63F  E9 041E				jmp	loc_1987		; (BA60)
020A:B642			loc_1944::
020A:B642  BD 0C43				mov	bp,0C43h
020A:B645			loc_1945::
020A:B645  FF 0E 4395				dec	word ptr ds:[4395h]	; (9A19:4395=7465h)
020A:B649  E9 FF5B				jmp	loc_1939		; (B5A7)
020A:B64C			loc_1946::
020A:B64C  C7 06 2B39 0045			mov	word ptr ds:[2B39h],45h	; (9A19:2B39=0AEAAh)
020A:B652  9A 168F:2C58		;*		call	far ptr sub_177		;*(168F:2C58)
020A:B652  9A					db	9Ah
020A:B653  2C58 168F				dw	2C58h, 168Fh
020A:B657  E8 8A46		;*		call	sub_37			;*(40A0)
020A:B657  E8 46 8A				db	0E8h, 46h, 8Ah
020A:B65A  BA 0015				mov	dx,15h
020A:B65D  8B C2				mov	ax,dx
020A:B65F  8A 1E 3040				mov	bl,byte ptr ds:[3040h]	; (9A19:3040=20h)
020A:B663  FE CB				dec	bl
020A:B665  F6 E3				mul	bl			; ax = reg * al
020A:B667  05 0000				add	ax,0
020A:B66A  8B D8				mov	bx,ax
020A:B66C  26: 8B 47 0A				mov	ax,es:[bx+0Ah]
020A:B670  24 03				and	al,3
020A:B672  3C 03				cmp	al,3
020A:B674  75 32				jne	loc_1948		; Jump if not equal
020A:B676  80 3E 3040 01			cmp	byte ptr ds:[3040h],1	; (9A19:3040=20h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 390

020A:B67B  74 03				je	loc_1947		; Jump if equal
020A:B67D  E9 008B				jmp	loc_1951		; (B70B)
020A:B680			loc_1947::
020A:B680  50					push	ax
020A:B681  55					push	bp
020A:B682  C6 06 2BE1 01			mov	byte ptr ds:[2BE1h],1	; (9A19:2BE1=0ABh)
020A:B687  26: 8B 47 04				mov	ax,es:[bx+4]
020A:B68B  40					inc	ax
020A:B68C  53					push	bx
020A:B68D  BD 69E1				mov	bp,69E1h
020A:B690  9A 168F:021C		;*		call	far ptr sub_149		;*(168F:021C)
020A:B690  9A					db	9Ah
020A:B691  021C 168F				dw	21Ch, 168Fh
020A:B695  5B					pop	bx
020A:B696  5D					pop	bp
020A:B697  58					pop	ax
020A:B698  26: C6 47 0A 00			mov	byte ptr es:[bx+0Ah],0
020A:B69D  26: 8B 3F				mov	di,es:[bx]
020A:B6A0  26: 89 7F 06				mov	es:[bx+6],di
020A:B6A4  26: 89 7F 08				mov	es:[bx+8],di
020A:B6A8			loc_1948::
020A:B6A8  F6 C4 80				test	ah,80h
020A:B6AB  75 5E				jnz	loc_1951		; Jump if not zero
020A:B6AD  53					push	bx
020A:B6AE  E8 D2DF				call	sub_126			; (8990)
020A:B6B1  26: A1 0BC7				mov	ax,word ptr es:[0BC7h]	; (37F5:0BC7=0E000h)
020A:B6B5  B1 05				mov	cl,5
020A:B6B7  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:B6B9  26: 2B 06 0BCB			sub	ax,word ptr es:[0BCBh]	; (37F5:0BCB=0CCh)
020A:B6BE  E8 D2C3				call	sub_124			; (8984)
020A:B6C1  26: 2B 07				sub	ax,es:[bx]
020A:B6C4  03 06 3033				add	ax,word ptr ds:[3033h]	; (9A19:3033=0AEA3h)
020A:B6C8  2D 0020				sub	ax,20h
020A:B6CB  E8 D2C2				call	sub_126			; (8990)
020A:B6CE  26: 8B 1E 0BC5			mov	bx,word ptr es:[0BC5h]	; (37F5:0BC5=246Bh)
020A:B6D3  B1 04				mov	cl,4
020A:B6D5  D3 EB				shr	bx,cl			; Shift w/zeros fill
020A:B6D7  03 C3				add	ax,bx
020A:B6D9  A9 F000				test	ax,0F000h
020A:B6DC  74 05				jz	loc_1949		; Jump if zero
020A:B6DE  B8 FFFF				mov	ax,0FFFFh
020A:B6E1  EB 20				jmp	short loc_1950		; (B703)
020A:B6E3			loc_1949::
020A:B6E3  B1 04				mov	cl,4
020A:B6E5  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:B6E7  26: 8B 1E 0BC5			mov	bx,word ptr es:[0BC5h]	; (37F5:0BC5=246Bh)
020A:B6EC  83 E3 0F				and	bx,0Fh
020A:B6EF  03 C3				add	ax,bx
020A:B6F1  48					dec	ax
020A:B6F2  3D FFFF				cmp	ax,0FFFFh
020A:B6F5  75 0C				jne	loc_1950		; Jump if not equal
020A:B6F7  40					inc	ax
020A:B6F8  5B					pop	bx
020A:B6F9  53					push	bx
020A:B6FA  E8 D287				call	sub_124			; (8984)
020A:B6FD  26: 81 4F 0A 4000			or	word ptr es:[bx+0Ah],4000h
020A:B703			loc_1950::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 391

020A:B703  5B					pop	bx
020A:B704  E8 D27D				call	sub_124			; (8984)
020A:B707  26: 89 47 04				mov	es:[bx+4],ax
020A:B70B			loc_1951::
020A:B70B  26: 8B 07				mov	ax,es:[bx]
020A:B70E  81 FB 0000				cmp	bx,0
020A:B712  74 2B				je	loc_1954		; Jump if equal
020A:B714  2B DA				sub	bx,dx
020A:B716  26: 8B 4F 0A				mov	cx,es:[bx+0Ah]
020A:B71A  80 E1 03				and	cl,3
020A:B71D  80 F9 03				cmp	cl,3
020A:B720  74 E9				je	loc_1951		; Jump if equal
020A:B722  F6 C5 80				test	ch,80h
020A:B725  75 E4				jnz	loc_1951		; Jump if not zero
020A:B727  26: 2B 07				sub	ax,es:[bx]
020A:B72A  F6 C4 F0				test	ah,0F0h
020A:B72D  75 07				jnz	loc_1952		; Jump if not zero
020A:B72F  B1 04				mov	cl,4
020A:B731  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:B733  48					dec	ax
020A:B734  EB 03				jmp	short loc_1953		; (B739)
020A:B736			loc_1952::
020A:B736  B8 FFFF				mov	ax,0FFFFh
020A:B739			loc_1953::
020A:B739  26: 89 47 04				mov	es:[bx+4],ax
020A:B73D  EB CC				jmp	short loc_1951		; (B70B)
020A:B73F			loc_1954::
020A:B73F  80 3E 3040 01			cmp	byte ptr ds:[3040h],1	; (9A19:3040=20h)
020A:B744  74 07				je	loc_1955		; Jump if equal
020A:B746  80 3E 3040 FA			cmp	byte ptr ds:[3040h],0FAh	; (9A19:3040=20h)
020A:B74B  72 03				jb	loc_1956		; Jump if below
020A:B74D			loc_1955::
020A:B74D  E9 0084				jmp	loc_1960		; (B7D4)
020A:B750			loc_1956::
020A:B750  BF 0000				mov	di,0
020A:B753  BB 0015				mov	bx,15h
020A:B756  8A 16 3040				mov	dl,byte ptr ds:[3040h]	; (9A19:3040=20h)
020A:B75A			loc_1957::
020A:B75A  FE CA				dec	dl
020A:B75C  80 FA 01				cmp	dl,1
020A:B75F  72 73				jb	loc_1960		; Jump if below
020A:B761  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:B765  24 03				and	al,3
020A:B767  3C 03				cmp	al,3
020A:B769  75 65				jne	loc_1959		; Jump if not equal
020A:B76B  26: 8B 45 04				mov	ax,es:[di+4]
020A:B76F  B1 04				mov	cl,4
020A:B771  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:B773  26: F7 45 04 000F			test	word ptr es:[di+4],0Fh
020A:B779  74 01				jz	loc_1958		; Jump if zero
020A:B77B  40					inc	ax
020A:B77C			loc_1958::
020A:B77C  26: 03 05				add	ax,es:[di]
020A:B77F  26: 3B 01				cmp	ax,es:[bx+di]
020A:B782  73 50				jae	loc_1960		; Jump if above or =
020A:B784  50					push	ax
020A:B785  26: 8B 11				mov	dx,es:[bx+di]
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 392

020A:B788  2B D0				sub	dx,ax
020A:B78A  B1 04				mov	cl,4
020A:B78C  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:B78E  4A					dec	dx
020A:B78F  8B C3				mov	ax,bx
020A:B791  8A 0E 3040				mov	cl,byte ptr ds:[3040h]	; (9A19:3040=20h)
020A:B795  FE C9				dec	cl
020A:B797  F6 E1				mul	cl			; ax = reg * al
020A:B799  05 0000				add	ax,0
020A:B79C  8B F8				mov	di,ax
020A:B79E  03 FB				add	di,bx
020A:B7A0  58					pop	ax
020A:B7A1  26: 89 05				mov	es:[di],ax
020A:B7A4  26: C7 45 02 0000			mov	word ptr es:[di+2],0
020A:B7AA  26: 89 55 04				mov	es:[di+4],dx
020A:B7AE  26: 89 45 06				mov	es:[di+6],ax
020A:B7B2  26: 89 45 08				mov	es:[di+8],ax
020A:B7B6  26: C7 45 0A 0000			mov	word ptr es:[di+0Ah],0
020A:B7BC  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:B7C1  26: C7 45 0C 0000			mov	word ptr es:[di+0Ch],0
020A:B7C7  FE 06 3040				inc	byte ptr ds:[3040h]	; (9A19:3040=20h)
020A:B7CB  E8 88D2		;*		call	sub_37			;*(40A0)
020A:B7CB  E8 D2 88				db	0E8h,0D2h, 88h
020A:B7CE  EB 04				jmp	short loc_1960		; (B7D4)
020A:B7D0			loc_1959::
020A:B7D0  03 FB				add	di,bx
020A:B7D2  EB 86				jmp	short loc_1957		; (B75A)
020A:B7D4			loc_1960::
020A:B7D4  E8 D1B9				call	sub_126			; (8990)
020A:B7D7  A1 3033				mov	ax,word ptr ds:[3033h]	; (9A19:3033=0AEA3h)
020A:B7DA  8B D8				mov	bx,ax
020A:B7DC  26: 03 1E 0BD9			add	bx,word ptr es:[0BD9h]	; (37F5:0BD9=0)
020A:B7E1  26: A1 0BD7				mov	ax,word ptr es:[0BD7h]	; (37F5:0BD7=2020h)
020A:B7E5  89 1E 304C				mov	word ptr ds:[304Ch],bx	; (9A19:304C=8220h)
020A:B7E9  A3 304E				mov	word ptr ds:[304Eh],ax	; (9A19:304E=0A2EBh)
020A:B7EC  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:B7F1  06					push	es
020A:B7F2  E8 D18F				call	sub_124			; (8984)
020A:B7F5  33 C0				xor	ax,ax			; Zero register
020A:B7F7  BA 0010				mov	dx,10h
020A:B7FA  E8 BFBF				call	sub_111			; (77BC)
020A:B7FD  73 14				jnc	loc_1961		; Jump if carry=0
020A:B7FF  26: 8B 45 04				mov	ax,es:[di+4]
020A:B803  3B 06 304E				cmp	ax,word ptr ds:[304Eh]	; (9A19:304E=0A2EBh)
020A:B807  77 0A				ja	loc_1961		; Jump if above
020A:B809  A1 304E				mov	ax,word ptr ds:[304Eh]	; (9A19:304E=0A2EBh)
020A:B80C  05 0002				add	ax,2
020A:B80F  26: 89 45 04				mov	es:[di+4],ax
020A:B813			loc_1961::
020A:B813  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B818  9C					pushf				; Push flags
020A:B819  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B81E  5A					pop	dx
020A:B81F  8E C2				mov	es,dx
020A:B821  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:B826  5A					pop	dx
020A:B827  75 0A				jnz	loc_1962		; Jump if not zero
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 393

020A:B829  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:B82E  74 03				je	loc_1962		; Jump if equal
020A:B830  E8 D4B9				call	sub_132			; (8CEC)
020A:B833			loc_1962::
020A:B833  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B838  9D					popf				; Pop flags
020A:B839  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B83E  F7 06 35E9 0001			test	word ptr ds:[35E9h],1	; (9A19:35E9=8D20h)
020A:B844  74 03				jz	loc_1963		; Jump if zero
020A:B846  E9 00DD				jmp	loc_1972		; (B926)
020A:B849			loc_1963::
020A:B849  E8 D144				call	sub_126			; (8990)
020A:B84C  33 C9				xor	cx,cx			; Zero register
020A:B84E  26: 8B 16 0BDB			mov	dx,word ptr es:[0BDBh]	; (37F5:0BDB=200h)
020A:B853  B8 4200				mov	ax,4200h
020A:B856  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (9A19:4152=4C52h)
020A:B85A  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, bx=file handle
										;   al=method, cx,dx=offset
020A:B85C			loc_1964::
020A:B85C  BD 0C43				mov	bp,0C43h
020A:B85F  B9 2C43				mov	cx,2C43h
020A:B862  81 E9 0C43				sub	cx,0C43h
020A:B866  BA 0C43				mov	dx,0C43h
020A:B869  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (9A19:4152=4C52h)
020A:B86D  E8 D108				call	sub_123			; (8978)
020A:B870  B4 3F				mov	ah,3Fh
020A:B872  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, bx=file handle
										;   cx=bytes to ds:dx buffer
020A:B874  E8 D0FE				call	sub_122			; (8975)
020A:B877  73 05				jnc	loc_1965		; Jump if carry=0
020A:B879  B3 0E				mov	bl,0Eh
020A:B87B  E9 01E2				jmp	loc_1987		; (BA60)
020A:B87E			loc_1965::
020A:B87E  83 3E 4397 00			cmp	word ptr ds:[4397h],0	; (9A19:4397=2029h)
020A:B883  75 03				jne	loc_1966		; Jump if not equal
020A:B885  E9 009E				jmp	loc_1972		; (B926)
020A:B888			loc_1966::
020A:B888  E8 D105				call	sub_126			; (8990)
020A:B88B  26: 8B 5E 00				mov	bx,es:[bp]
020A:B88F  A1 3033				mov	ax,word ptr ds:[3033h]	; (9A19:3033=0AEA3h)
020A:B892  26: 03 46 02				add	ax,es:[bp+2]
020A:B896  9A 168F:6B84		;*		call	far ptr sub_201		;*(168F:6B84)
020A:B896  9A					db	9Ah
020A:B897  6B84 168F				dw	6B84h, 168Fh
020A:B89B  A3 4399				mov	word ptr ds:[4399h],ax	; (9A19:4399=2020h)
020A:B89E  89 1E 439B				mov	word ptr ds:[439Bh],bx	; (9A19:439B=2020h)
020A:B8A2  E8 D0DF				call	sub_124			; (8984)
020A:B8A5  B9 0015				mov	cx,15h
020A:B8A8  BF 0000				mov	di,0
020A:B8AB			loc_1967::
020A:B8AB  26: 8B 05				mov	ax,es:[di]
020A:B8AE  3D FFFF				cmp	ax,0FFFFh
020A:B8B1  74 60				je	loc_1970		; Jump if equal
020A:B8B3  26: 8B 5D 02				mov	bx,es:[di+2]
020A:B8B7  9A 168F:6B84		;*		call	far ptr sub_201		;*(168F:6B84)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 394

020A:B8B7  9A					db	9Ah
020A:B8B8  6B84 168F				dw	6B84h, 168Fh
020A:B8BC  39 06 4399				cmp	word ptr ds:[4399h],ax	; (9A19:4399=2020h)
020A:B8C0  72 51				jb	loc_1970		; Jump if below
020A:B8C2  77 06				ja	loc_1968		; Jump if above
020A:B8C4  39 1E 439B				cmp	word ptr ds:[439Bh],bx	; (9A19:439B=2020h)
020A:B8C8  72 49				jb	loc_1970		; Jump if below
020A:B8CA			loc_1968::
020A:B8CA  26: 8B 05				mov	ax,es:[di]
020A:B8CD  26: 8B 5D 04				mov	bx,es:[di+4]
020A:B8D1  9A 168F:6B84		;*		call	far ptr sub_201		;*(168F:6B84)
020A:B8D1  9A					db	9Ah
020A:B8D2  6B84 168F				dw	6B84h, 168Fh
020A:B8D6  2B 1E 439B				sub	bx,word ptr ds:[439Bh]	; (9A19:439B=2020h)
020A:B8DA  1B 06 4399				sbb	ax,word ptr ds:[4399h]	; (9A19:4399=2020h)
020A:B8DE  73 05				jnc	loc_1969		; Jump if carry=0
020A:B8E0  83 C7 15				add	di,15h
020A:B8E3  EB C6				jmp	short loc_1967		; (B8AB)
020A:B8E5			loc_1969::
020A:B8E5  26: 8B 05				mov	ax,es:[di]
020A:B8E8  26: 8B 5D 02				mov	bx,es:[di+2]
020A:B8EC  9A 168F:6B84		;*		call	far ptr sub_201		;*(168F:6B84)
020A:B8EC  9A					db	9Ah
020A:B8ED  6B84 168F				dw	6B84h, 168Fh
020A:B8F1  8B C3				mov	ax,bx
020A:B8F3  8B 1E 439B				mov	bx,word ptr ds:[439Bh]	; (9A19:439B=2020h)
020A:B8F7  2B D8				sub	bx,ax
020A:B8F9  26: 8B 0D				mov	cx,es:[di]
020A:B8FC  BE 532E				mov	si,532Eh
020A:B8FF  89 0C				mov	[si],cx
020A:B901  89 5C 02				mov	[si+2],bx
020A:B904  C6 44 04 5F				mov	byte ptr [si+4],5Fh	; '_'
020A:B908  C6 44 05 00				mov	byte ptr [si+5],0
020A:B90C  C6 44 06 00				mov	byte ptr [si+6],0
020A:B910  E8 E4BD				call	sub_139			; (9DD0)
020A:B913			loc_1970::
020A:B913  FF 0E 4397				dec	word ptr ds:[4397h]	; (9A19:4397=2029h)
020A:B917  83 C5 04				add	bp,4
020A:B91A  81 FD 2C43				cmp	bp,2C43h
020A:B91E  72 03				jb	loc_1971		; Jump if below
020A:B920  E9 FF39				jmp	loc_1964		; (B85C)
020A:B923			loc_1971::
020A:B923  E9 FF58				jmp	loc_1965		; (B87E)
020A:B926			loc_1972::
020A:B926  BB 0000				mov	bx,0
020A:B929  32 ED				xor	ch,ch			; Zero register
020A:B92B  8A 0E 3040				mov	cl,byte ptr ds:[3040h]	; (9A19:3040=20h)
020A:B92F  B8 0015				mov	ax,15h
020A:B932  E8 D04F				call	sub_124			; (8984)

020A:B935			locloop_1973::
020A:B935  26: 80 67 0B 7F			and	byte ptr es:[bx+0Bh],7Fh
020A:B93A  26: 80 4F 0B 1E			or	byte ptr es:[bx+0Bh],1Eh
020A:B93F  03 D8				add	bx,ax
020A:B941  E2 F2				loop	locloop_1973		; Loop if cx > 0

020A:B943  80 3E 3031 03			cmp	byte ptr ds:[3031h],3	; (9A19:3031=0A4h)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 395

020A:B948  75 03				jne	loc_1974		; Jump if not equal
020A:B94A  E9 00A3				jmp	loc_1983		; (B9F0)
020A:B94D			loc_1974::
020A:B94D  A1 3033				mov	ax,word ptr ds:[3033h]	; (9A19:3033=0AEA3h)
020A:B950  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (9A19:327F=20h)
020A:B955  75 0D				jne	loc_1976		; Jump if not equal
020A:B957  83 3E 302D 00			cmp	word ptr ds:[302Dh],0	; (9A19:302D=0AA20h)
020A:B95C  75 03				jne	loc_1975		; Jump if not equal
020A:B95E  E9 008C				jmp	loc_1982		; (B9ED)
020A:B961			loc_1975::
020A:B961  A1 302D				mov	ax,word ptr ds:[302Dh]	; (9A19:302D=0AA20h)
020A:B964			loc_1976::
020A:B964  8E C0				mov	es,ax
020A:B966  8B 36 302B				mov	si,word ptr ds:[302Bh]	; (9A19:302B=0EFA8h)
020A:B96A  26: 8A 04				mov	al,es:[si]
020A:B96D  3C EB				cmp	al,0EBh
020A:B96F  74 0C				je	loc_1978		; Jump if equal
020A:B971  3C EA				cmp	al,0EAh
020A:B973  74 07				je	loc_1977		; Jump if equal
020A:B975  3C E9				cmp	al,0E9h
020A:B977  75 07				jne	loc_1979		; Jump if not equal
020A:B979  83 C6 02				add	si,2
020A:B97C			loc_1977::
020A:B97C  46					inc	si
020A:B97D			loc_1978::
020A:B97D  83 C6 02				add	si,2
020A:B980			loc_1979::
020A:B980  81 FE 0100				cmp	si,100h
020A:B984  75 01				jne	loc_1980		; Jump if not equal
020A:B986  46					inc	si
020A:B987			loc_1980::
020A:B987  E8 B9E6				call	sub_101			; (7370)
020A:B98A  E8 D000				call	sub_125			; (898D)
020A:B98D  80 FB 08				cmp	bl,8
020A:B990  76 5E				jbe	loc_1983		; Jump if below or =
020A:B992  8B F7				mov	si,di
020A:B994  BF 0378				mov	di,378h
020A:B997  32 ED				xor	ch,ch			; Zero register
020A:B999  8A CB				mov	cl,bl
020A:B99B  FC					cld				; Clear direction
020A:B99C  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:B99E  B1 22				mov	cl,22h			; '"'
020A:B9A0  2A CB				sub	cl,bl
020A:B9A2  B0 20				mov	al,20h			; ' '
020A:B9A4  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:B9A6  A1 3033				mov	ax,word ptr ds:[3033h]	; (9A19:3033=0AEA3h)
020A:B9A9  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (9A19:327F=20h)
020A:B9AE  75 03				jne	loc_1981		; Jump if not equal
020A:B9B0  A1 302D				mov	ax,word ptr ds:[302Dh]	; (9A19:302D=0AA20h)
020A:B9B3			loc_1981::
020A:B9B3  8E C0				mov	es,ax
020A:B9B5  8B 3E 302B				mov	di,word ptr ds:[302Bh]	; (9A19:302B=0EFA8h)
020A:B9B9  B0 2E				mov	al,2Eh			; '.'
020A:B9BB  B9 003C				mov	cx,3Ch
020A:B9BE  FC					cld				; Clear direction
020A:B9BF  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:B9C1  E3 2A				jcxz	loc_1982		; Jump if cx=0
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 396

020A:B9C3  26: 8B 05				mov	ax,es:[di]
020A:B9C6  2C 30				sub	al,30h			; '0'
020A:B9C8  3C 09				cmp	al,9
020A:B9CA  77 21				ja	loc_1982		; Jump if above
020A:B9CC  80 EC 30				sub	ah,30h			; '0'
020A:B9CF  80 FC 09				cmp	ah,9
020A:B9D2  77 19				ja	loc_1982		; Jump if above
020A:B9D4  83 EF 02				sub	di,2
020A:B9D7  26: 8A 05				mov	al,es:[di]
020A:B9DA  2C 30				sub	al,30h			; '0'
020A:B9DC  3C 09				cmp	al,9
020A:B9DE  77 0D				ja	loc_1982		; Jump if above
020A:B9E0  26: 8B 05				mov	ax,es:[di]
020A:B9E3  A3 60B2				mov	word ptr ds:[60B2h],ax	; (9A19:60B2=187Eh)
020A:B9E6  26: 8B 45 02				mov	ax,es:[di+2]
020A:B9EA  A3 60B4				mov	word ptr ds:[60B4h],ax	; (9A19:60B4=7E18h)
020A:B9ED			loc_1982::
020A:B9ED  E8 CF9D				call	sub_125			; (898D)
020A:B9F0			loc_1983::
020A:B9F0  B4 3D				mov	ah,3Dh			; '='
020A:B9F2  B0 00				mov	al,0
020A:B9F4  BA 31F0				mov	dx,31F0h
020A:B9F7  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:B9F9  72 31				jc	loc_1984		; Jump if carry Set
020A:B9FB  8B D8				mov	bx,ax
020A:B9FD  A3 4152				mov	word ptr ds:[4152h],ax	; (9A19:4152=4C52h)
020A:BA00  B4 57				mov	ah,57h			; 'W'
020A:BA02  32 C0				xor	al,al			; Zero register
020A:BA04  CD 21				int	21h			; DOS Services  ah=function 57h
										;  get file date+time, bx=handle
										;   returns cx=time, dx=date
020A:BA06  72 24				jc	loc_1984		; Jump if carry Set
020A:BA08  89 16 341E				mov	word ptr ds:[341Eh],dx	; (9A19:341E=0E8E0h)
020A:BA0C  83 26 341E 1F			and	word ptr ds:[341Eh],1Fh	; (9A19:341E=0E8E0h)
020A:BA11  B1 05				mov	cl,5
020A:BA13  D3 EA				shr	dx,cl			; Shift w/zeros fill
020A:BA15  89 16 3420				mov	word ptr ds:[3420h],dx	; (9A19:3420=0ADA5h)
020A:BA19  83 26 3420 0F			and	word ptr ds:[3420h],0Fh	; (9A19:3420=0ADA5h)
020A:BA1E  B1 04				mov	cl,4
020A:BA20  D3 EA				shr	dx,cl			; Shift w/zeros fill
020A:BA22  83 E2 3F				and	dx,3Fh
020A:BA25  83 C2 50				add	dx,50h
020A:BA28  89 16 3422				mov	word ptr ds:[3422h],dx	; (9A19:3422=0A5A8h)
020A:BA2C			loc_1984::
020A:BA2C  80 3E 4394 00			cmp	byte ptr ds:[4394h],0	; (9A19:4394=73h)
020A:BA31  74 15				je	loc_1986		; Jump if equal
020A:BA33  A0 2B3B				mov	al,byte ptr ds:[2B3Bh]	; (9A19:2B3B=20h)
020A:BA36  3C 04				cmp	al,4
020A:BA38  77 0B				ja	loc_1985		; Jump if above
020A:BA3A  B0 04				mov	al,4
020A:BA3C  80 3E 327F 01			cmp	byte ptr ds:[327Fh],1	; (9A19:327F=20h)
020A:BA41  76 02				jbe	loc_1985		; Jump if below or =
020A:BA43  B0 0A				mov	al,0Ah
020A:BA45			loc_1985::
020A:BA45  E8 BD24				call	sub_110			; (776C)
020A:BA48			loc_1986::
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 397

020A:BA48  C6 06 1DD8 20			mov	byte ptr ds:[1DD8h],20h	; (9A19:1DD8=1Fh) ' '
020A:BA4D  E8 C624				call	sub_116			; (8074)
020A:BA50  E8 B88D				call	sub_99			; (72E0)
020A:BA53  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (9A19:4152=4C52h)
020A:BA57  E8 0172				call	$+175h
020A:BA5A  E8 110F				call	$+1112h
020A:BA5D  F8					clc				; Clear carry flag
020A:BA5E  EB 0B				jmp	short loc_1988		; (BA6B)
020A:BA60			loc_1987::
020A:BA60  E8 CF12				call	sub_122			; (8975)
020A:BA63  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (9A19:4152=4C52h)
020A:BA67  E8 0162				call	$+165h
020A:BA6A  F9					stc				; Set carry flag
020A:BA6B			loc_1988::
020A:BA6B  C3					retn
							                        ;* No entry point to code
020A:BA6C  51					push	cx
020A:BA6D  57					push	di
020A:BA6E  8B FE				mov	di,si
020A:BA70  B9 0032				mov	cx,32h
020A:BA73  03 F1				add	si,cx
020A:BA75  B0 00				mov	al,0
020A:BA77  FC					cld				; Clear direction
020A:BA78  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:BA7A  A0 3030				mov	al,data_323		; (020A:3030=0)
020A:BA7D  26: 88 44 FB				mov	es:[si-5],al
020A:BA81  C6 06 3030 00			mov	data_323,0		; (020A:3030=0)
020A:BA86  5F					pop	di
020A:BA87  59					pop	cx
020A:BA88  C3					retn
							                        ;* No entry point to code
020A:BA89  87 DB				xchg	bx,bx
020A:BA8B  90					nop
020A:BA8C  51					push	cx
020A:BA8D  57					push	di
020A:BA8E  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:BA93  06					push	es
020A:BA94  E8 CEF6				call	sub_125			; (898D)
020A:BA97  BF 4637				mov	di,4637h
020A:BA9A  B9 46F0				mov	cx,46F0h
020A:BA9D  81 E9 4637				sub	cx,4637h
020A:BAA1  B0 20				mov	al,20h			; ' '
020A:BAA3  FC					cld				; Clear direction
020A:BAA4  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:BAA6  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:BAAB  9C					pushf				; Push flags
020A:BAAC  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:BAB1  5A					pop	dx
020A:BAB2  8E C2				mov	es,dx
020A:BAB4  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:BAB9  5A					pop	dx
020A:BABA  75 0A				jnz	loc_1989		; Jump if not zero
020A:BABC  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:BAC1  74 03				je	loc_1989		; Jump if equal
020A:BAC3  E8 D226				call	sub_132			; (8CEC)
020A:BAC6			loc_1989::
020A:BAC6  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 398

020A:BACB  9D					popf				; Pop flags
020A:BACC  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:BAD1  5F					pop	di
020A:BAD2  59					pop	cx
020A:BAD3  C3					retn
							                        ;* No entry point to code
020A:BAD4  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:BAD9  06					push	es
020A:BADA  E8 CEB0				call	sub_125			; (898D)
020A:BADD  BF 6359				mov	di,6359h
020A:BAE0  B9 638B				mov	cx,638Bh
020A:BAE3  81 E9 6359				sub	cx,6359h
020A:BAE7  49					dec	cx
020A:BAE8  B0 20				mov	al,20h			; ' '
020A:BAEA  FC					cld				; Clear direction
020A:BAEB  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:BAED  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:BAF2  9C					pushf				; Push flags
020A:BAF3  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:BAF8  5A					pop	dx
020A:BAF9  8E C2				mov	es,dx
020A:BAFB  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:BB00  5A					pop	dx
020A:BB01  75 0A				jnz	loc_1990		; Jump if not zero
020A:BB03  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:BB08  74 03				je	loc_1990		; Jump if equal
020A:BB0A  E8 D1DF				call	sub_132			; (8CEC)
020A:BB0D			loc_1990::
020A:BB0D  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:BB12  9D					popf				; Pop flags
020A:BB13  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:BB18  C3					retn
							                        ;* No entry point to code
020A:BB19  87 DB				xchg	bx,bx
020A:BB1B  90					nop
020A:BB1C  51					push	cx
020A:BB1D  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:BB22  06					push	es
020A:BB23  E8 CE67				call	sub_125			; (898D)
020A:BB26  BF 63A4				mov	di,63A4h
020A:BB29  B9 63D6				mov	cx,63D6h
020A:BB2C  81 E9 63A4				sub	cx,63A4h
020A:BB30  49					dec	cx
020A:BB31  B0 20				mov	al,20h			; ' '
020A:BB33  FC					cld				; Clear direction
020A:BB34  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:BB36  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:BB3B  9C					pushf				; Push flags
020A:BB3C  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:BB41  5A					pop	dx
020A:BB42  8E C2				mov	es,dx
020A:BB44  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:BB49  5A					pop	dx
020A:BB4A  75 0A				jnz	loc_1991		; Jump if not zero
020A:BB4C  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:BB51  74 03				je	loc_1991		; Jump if equal
020A:BB53  E8 D196				call	sub_132			; (8CEC)
           temp.lst				Sourcer	v5.10    1-Sep-21  11:31 am   Page 399

020A:BB56			loc_1991::
020A:BB56  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:BB5B  9D					popf				; Pop flags
020A:BB5C  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:BB61  59					pop	cx
020A:BB62  C3					retn
							                        ;* No entry point to code
020A:BB63  90					nop
020A:BB64  80 3E 2B3C 01			cmp	data_290,1		; (020A:2B3C=0ADh)
020A:BB69  75 59		;*		jne	loc_1993		;*Jump if not equal
020A:BB69  75 59				db	 75h, 59h
020A:BB6B  52					push	dx
020A:BB6C  56					push	si
020A:BB6D  57					push	di
020A:BB6E  2E: FF 36 38A3			push	cs:data_464		; (020A:38A3=3201h)
020A:BB73  06					push	es
020A:BB74  BA 34E8				mov	dx,34E8h
020A:BB77  9A 168F:233C		;*		call	far ptr sub_167		;*(168F:233C)
020A:BB77  9A					db	9Ah
020A:BB78  233C 168F				dw	233Ch, 168Fh
020A:BB7C  E8 CE0E				call	sub_125			; (898D)
020A:BB7F  BF 34E8				mov	di,34E8h
020A:BB82  B0 20				mov	al,20h			; ' '
020A:BB84  B9 35A0				mov	cx,35A0h
020A:BB87  81 E9 34E8				sub	cx,34E8h
020A:BB8B  FC					cld				; Clear direction
020A:BB8C  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:BB8E  B8 0003				mov	ax,3
020A:BB91  9A 168F:2280		;*		call	far ptr sub_166		;*(168F:2280)
020A:BB91  9A					db	9Ah
020A:BB92  2280 168F				dw	2280h, 168Fh
020A:BB96  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:BB9B  9C					pushf				; Push flags
020A:BB9C  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:BBA1  5A					pop	dx
020A:BBA2  8E C2				mov	es,dx
020A:BBA4  2E: 3B 16 38A1			cmp	dx,cs:data_463		; (020A:38A1=5C8Ah)
020A:BBA9  5A					pop	dx
020A:BBAA  75 0A				jnz	loc_1992		; Jump if not zero
020A:BBAC  2E: 3B 16 38A3			cmp	dx,cs:data_464		; (020A:38A3=3201h)
020A:BBB1  74 03				je	loc_1992		; Jump if equal
020A:BBB3  E8 D136				call	sub_132			; (8CEC)
020A:BBB6			loc_1992::
020A:BBB6  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:BBBB  9D					popf				; Pop flags

