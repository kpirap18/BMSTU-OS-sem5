
 1 - какую программу мы написали? 
 - программу 0 уровня привелении в ЗР 
 
 
 
 2 - что пришлось создать в этой программе? 
 - 2 таблицы 
  Табл. дескр. прер. и табл. дескр. сегментов
  GDT и IDT 
 
 
 
 3 - Где явно установлен соответсвующий уровень привелегий? 
 - из-за того, что мы используем таблицы IDT и GDT
 
 
 
 Привелегии и приоритеты - разные вещи
 привелегии это 4 кольца защиты
 приоритеты - тэто приоритет процессов потоков 9которые назначаются и может быть пересчитан)
 
 Процессы выстариваются в очередь в соответствии с их приоритеттами
 
 
 
 
 4 - Какие сегменты мы описали в глобальной таблицы, и почему, для чего? - сегменты памяти
  - сегменты памяти ( 16б сегмент кода
						32б сегмент кода
						32б сегмент аднных (4Гб)
						32б сегмент данных
						32б сегмент стека
						16б сегмент видеобуффера)
 
 
 5 - Охариктиризовать дескриптор сегмента доп памяти, который мы описали?
 - на листке
 
 
 
 6 - Почему таблица дескрипторов прерываний имеет такую структуру?
  -  !!! От 0 до 31 - это исключения (внутренние внутренние прерывания).
     Дескрипторы в таблице прерываний должны быть расположены по порядку 
     Их векторов. Поэтому мы их все тут по порядку прописываем.
	 описаны шлюзы - 8Fh - ловушки 8Eh - прерывание 
 
	 ; Исключение общей защиты.
     ; Выделеяем отдельно, чтобы в дальнейшем смогли его отдельно обработать, 
     ; T.к. там нужно еще учитывать код ошибки.
	 
	 ; 10001110 - Eh - шлюз прерываний - служит для обработки прерывания.
     int08 idescr <0,code32s,0,10001110b,0> 
     int09 idescr <0,code32s,0,10001110b,0>
 
 
 7 - Что вы написали для исключений? 
 - обработчик 13 исключения (заглушки)
 - обработчик дргуих исключений
 
 8 - Как адресуются аппаратные прерывания в ЗР? 
 - Контроллер прерывания получает сигнал о прерывании и 
 формирует вектор прерывания, который содержит селектор из ТДП.
Взяв знаение из регистра IDTR значение базового адреса ТДП. 
В нём по селектору находим

По этому дискриптору мы находим дескриптор который уже 
и содержит селектор, смещение и аттрибуты

По селектору выбираем дискриптор из ТГД, берём оттуда
 базовый адрес сегмента и прибавляем егок смещению

Получаем линейный адрес обработчика прерывания


 
 9 - Когда вызывается обработчик прерываний от клавиатуры, а когда от системног таймера?
 - от клавиатуры, когда нажимаем на клавишу, и когда отжимаем, от таймера 18.2 рада в секунду
 
 
 10 - Какие действия необходимо выполнить для корректного возвращения в РР?
 1. Устанавливаем флаг перех. в рр
 2. Запрещаем маскируемые прерывания
 3. Переходим в реальный
 4. Через команду far jmp, заданную прямо кодом, обновляем значение 
	в теневом регистре, связанном с CS
 5. Обновляем остальные теневые регистры значениями
 6. Возвращаем маски контроллерам прерываний, возращаем значение базового 
	вектора прерывания (8, не 32)
 7. Возвращаем базовый линейный адрес таблице векторов прерываний
 8. Разрешаем немаскируемые
 9. Разрешаем маскируемые
 10. Печатаем сообщение с помощью функций Dos
 11. Выходим через функцию DOS 
 
 
 11 - Теневые регистры - что это и для чего они включены в процессор? 
 какую инфу содержат?
 - 
 
 12 - Линия А20? Что произойдет , если мы при переходе в ЗР забудем открыть линию А20? - не будут доступны МБ памяти с номерами 1 3 5...
 
 
 13  - ЧТо произойдет, если при возвращении в РР забудем закрыть линию А20? - нам будут доступны Мб с номерами 1 3 5...
 
 
 
 
 
 